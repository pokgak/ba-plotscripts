<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:44.046" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:44.617" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:44.625" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:45.628" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:44.615" endtime="20201112 12:25:45.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.635" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:45.632" endtime="20201112 12:25:45.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:44.614" endtime="20201112 12:25:45.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:45.641" endtime="20201112 12:25:45.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.638" endtime="20201112 12:25:45.827"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.841" endtime="20201112 12:25:45.861"></status>
</kw>
<msg timestamp="20201112 12:25:45.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.840" endtime="20201112 12:25:45.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.863" endtime="20201112 12:25:45.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:45.865" endtime="20201112 12:25:45.868"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:45.837" endtime="20201112 12:25:45.869"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:45.834" endtime="20201112 12:25:45.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.833" endtime="20201112 12:25:45.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:45.874" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:45.873" endtime="20201112 12:25:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.871" endtime="20201112 12:25:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.832" endtime="20201112 12:25:45.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.831" endtime="20201112 12:25:45.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.876" endtime="20201112 12:25:45.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.830" endtime="20201112 12:25:45.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.879" endtime="20201112 12:25:45.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.828" endtime="20201112 12:25:45.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:44.612" endtime="20201112 12:25:45.881"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:45.888" endtime="20201112 12:25:45.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.886" endtime="20201112 12:25:45.908"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.923" endtime="20201112 12:25:45.941"></status>
</kw>
<msg timestamp="20201112 12:25:45.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.922" endtime="20201112 12:25:45.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.943" endtime="20201112 12:25:45.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.947" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:45.945" endtime="20201112 12:25:45.948"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:45.919" endtime="20201112 12:25:45.948"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:45.916" endtime="20201112 12:25:45.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.914" endtime="20201112 12:25:45.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:45.953" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:45.952" endtime="20201112 12:25:45.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.950" endtime="20201112 12:25:45.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.913" endtime="20201112 12:25:45.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.913" endtime="20201112 12:25:45.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.955" endtime="20201112 12:25:45.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.910" endtime="20201112 12:25:45.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.909" endtime="20201112 12:25:45.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.885" endtime="20201112 12:25:45.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.965" endtime="20201112 12:25:45.979"></status>
</kw>
<msg timestamp="20201112 12:25:45.979" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.964" endtime="20201112 12:25:45.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.982" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:45.980" endtime="20201112 12:25:45.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:45.983" endtime="20201112 12:25:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.961" endtime="20201112 12:25:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.959" endtime="20201112 12:25:45.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.990" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:25:45.989" endtime="20201112 12:25:45.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:45.993" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:25:45.992" endtime="20201112 12:25:45.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:45.987" endtime="20201112 12:25:45.993"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:45.882" endtime="20201112 12:25:45.994" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:44.158" endtime="20201112 12:25:45.997"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:46.054" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:46.062" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:47.035" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:46.052" endtime="20201112 12:25:47.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.039" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:47.037" endtime="20201112 12:25:47.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:46.051" endtime="20201112 12:25:47.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:47.042" endtime="20201112 12:25:47.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.041" endtime="20201112 12:25:47.314"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.326" endtime="20201112 12:25:47.349"></status>
</kw>
<msg timestamp="20201112 12:25:47.349" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.325" endtime="20201112 12:25:47.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.350" endtime="20201112 12:25:47.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.355" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:47.353" endtime="20201112 12:25:47.356"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:47.322" endtime="20201112 12:25:47.356"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:47.320" endtime="20201112 12:25:47.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.319" endtime="20201112 12:25:47.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:47.361" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:47.360" endtime="20201112 12:25:47.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.358" endtime="20201112 12:25:47.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.318" endtime="20201112 12:25:47.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.317" endtime="20201112 12:25:47.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.363" endtime="20201112 12:25:47.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.316" endtime="20201112 12:25:47.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.366" endtime="20201112 12:25:47.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.315" endtime="20201112 12:25:47.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:46.049" endtime="20201112 12:25:47.368"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:47.374" endtime="20201112 12:25:47.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.373" endtime="20201112 12:25:47.394"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.408" endtime="20201112 12:25:47.427"></status>
</kw>
<msg timestamp="20201112 12:25:47.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.407" endtime="20201112 12:25:47.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.429" endtime="20201112 12:25:47.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:47.432" endtime="20201112 12:25:47.434"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:47.404" endtime="20201112 12:25:47.435"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:47.402" endtime="20201112 12:25:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.400" endtime="20201112 12:25:47.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:47.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:47.439" endtime="20201112 12:25:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.436" endtime="20201112 12:25:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.399" endtime="20201112 12:25:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.399" endtime="20201112 12:25:47.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.441" endtime="20201112 12:25:47.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.397" endtime="20201112 12:25:47.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.395" endtime="20201112 12:25:47.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.371" endtime="20201112 12:25:47.444"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:25:47.447" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.455" endtime="20201112 12:25:47.470"></status>
</kw>
<msg timestamp="20201112 12:25:47.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.453" endtime="20201112 12:25:47.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.471" endtime="20201112 12:25:47.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.474" endtime="20201112 12:25:47.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.450" endtime="20201112 12:25:47.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.449" endtime="20201112 12:25:47.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.483" endtime="20201112 12:25:47.756"></status>
</kw>
<msg timestamp="20201112 12:25:47.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:47.482" endtime="20201112 12:25:47.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069454542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:47.759" endtime="20201112 12:25:47.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.764" endtime="20201112 12:25:47.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.479" endtime="20201112 12:25:47.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.477" endtime="20201112 12:25:47.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.771" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:47.770" endtime="20201112 12:25:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.775" level="INFO">VALUE: [{'time': 0.069449139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069454542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.069458514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.069462556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999995771e-06, 'source_diff': 4.041999999995771e-06}, {'time': 0.069466083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.069469306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2229999999966452e-06, 'source_diff': 3.2229999999966452e-06}, {'time': 0.069475236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.069480458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.069482875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.069489111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.069493819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999992163e-06, 'source_diff': 4.707999999992163e-06}, {'time': 0.069498861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.069504764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.069507931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.069511778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.069517833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0550000000048065e-06, 'source_diff': 6.0550000000048065e-06}, {'time': 0.069523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652999999994357e-06, 'source_diff': 5.652999999994357e-06}, {'time': 0.069526111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000060947e-06, 'source_diff': 2.6250000000060947e-06}, {'time': 0.069529389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999954512e-06, 'source_diff': 3.2779999999954512e-06}, {'time': 0.069535347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.069539528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1810000000058745e-06, 'source_diff': 4.1810000000058745e-06}, {'time': 0.069544292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7639999999904425e-06, 'source_diff': 4.7639999999904425e-06}, {'time': 0.069546708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4160000000050808e-06, 'source_diff': 2.4160000000050808e-06}, {'time': 0.06955175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.069556486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.069559264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.777999999994951e-06, 'source_diff': 2.777999999994951e-06}, {'time': 0.069561681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.069565708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0270000000036665e-06, 'source_diff': 4.0270000000036665e-06}, {'time': 0.069569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.235999999990803e-06, 'source_diff': 4.235999999990803e-06}, {'time': 0.069576222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.069581444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2220000000130495e-06, 'source_diff': 5.2220000000130495e-06}, {'time': 0.069584306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8619999999923706e-06, 'source_diff': 2.8619999999923706e-06}, {'time': 0.069590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.069592625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4580000000107294e-06, 'source_diff': 2.4580000000107294e-06}, {'time': 0.069598486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.069603833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.069609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999912626e-06, 'source_diff': 6.0279999999912626e-06}, {'time': 0.069613417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.069619194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.069622222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.069627597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.069631486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.889000000006915e-06, 'source_diff': 3.889000000006915e-06}, {'time': 0.069634972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.069639958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.069646, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.069651708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000007041e-06, 'source_diff': 5.708000000007041e-06}, {'time': 0.069656458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.069660278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}, {'time': 0.069664319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.069668611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:47.772" endtime="20201112 12:25:47.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.767" endtime="20201112 12:25:47.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:47.791" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:47.777" endtime="20201112 12:25:47.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.795" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:47.794" endtime="20201112 12:25:47.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.798" level="INFO">VALUE: {'eventdiff': [0, 5.403000000001046e-06, 3.9720000000048605e-06, 4.041999999995771e-06, 3.5270000000031665e-06, 3.2229999999966452e-06, 5.930000000001212e-06, 5.221999999999172e-06, 2.4170000000045544e-06, 6.236000000006681e-06, 4.707999999992163e-06, 5.041999999996771e-06, 5.903000000001546e-06, 3.1669999999983656e-06, 3.847000000001266e-06, 6.0550000000048065e-06, 5.652999999994357e-06, 2.6250000000060947e-06, 3.2779999999954512e-06, 5.958000000000352e-06, 4.1810000000058745e-06, 4.7639999999904425e-06, 2.4160000000050808e-06, 5.041999999996771e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.4170000000045544e-06, 4.0270000000036665e-06, 4.235999999990803e-06, 6.2779999999984515e-06, 5.2220000000130495e-06, 2.8619999999923706e-06, 5.860999999995897e-06, 2.4580000000107294e-06, 5.860999999995897e-06, 5.347000000002766e-06, 6.0279999999912626e-06, 3.55600000000178e-06, 5.776999999998478e-06, 3.02800000000214e-06, 5.375000000001906e-06, 3.889000000006915e-06, 3.4859999999969915e-06, 4.985999999998492e-06, 6.041999999997771e-06, 5.708000000007041e-06, 4.7499999999978115e-06, 3.8200000000016e-06, 4.0409999999962976e-06, 4.29200000000296e-06], 'time': [0.069449139, 0.069454542, 0.069458514, 0.069462556, 0.069466083, 0.069469306, 0.069475236, 0.069480458, 0.069482875, 0.069489111, 0.069493819, 0.069498861, 0.069504764, 0.069507931, 0.069511778, 0.069517833, 0.069523486, 0.069526111, 0.069529389, 0.069535347, 0.069539528, 0.069544292, 0.069546708, 0.06955175, 0.069556486, 0.069559264, 0.069561681, 0.069565708, 0.069569944, 0.069576222, 0.069581444, 0.069584306, 0.069590167, 0.069592625, 0.069598486, 0.069603833, 0.069609861, 0.069613417, 0.069619194, 0.069622222, 0.069627597, 0.069631486, 0.069634972, 0.069639958, 0.069646, 0.069651708, 0.069656458, 0.069660278, 0.069664319, 0.069668611], 'sourcesource_diff': [0, 5.403000000001046e-06, 3.9720000000048605e-06, 4.041999999995771e-06, 3.5270000000031665e-06, 3.2229999999966452e-06, 5.930000000001212e-06, 5.221999999999172e-06, 2.4170000000045544e-06, 6.236000000006681e-06, 4.707999999992163e-06, 5.041999999996771e-06, 5.903000000001546e-06, 3.1669999999983656e-06, 3.847000000001266e-06, 6.0550000000048065e-06, 5.652999999994357e-06, 2.6250000000060947e-06, 3.2779999999954512e-06, 5.958000000000352e-06, 4.1810000000058745e-06, 4.7639999999904425e-06, 2.4160000000050808e-06, 5.041999999996771e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.4170000000045544e-06, 4.0270000000036665e-06, 4.235999999990803e-06, 6.2779999999984515e-06, 5.2220000000130495e-06, 2.8619999999923706e-06, 5.860999999995897e-06, 2.4580000000107294e-06, 5.860999999995897e-06, 5.347000000002766e-06, 6.0279999999912626e-06, 3.55600000000178e-06, 5.776999999998478e-06, 3.02800000000214e-06, 5.375000000001906e-06, 3.889000000006915e-06, 3.4859999999969915e-06, 4.985999999998492e-06, 6.041999999997771e-06, 5.708000000007041e-06, 4.7499999999978115e-06, 3.8200000000016e-06, 4.0409999999962976e-06, 4.29200000000296e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:47.796" endtime="20201112 12:25:47.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.792" endtime="20201112 12:25:47.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:47.803" level="INFO">${RESULT} = [{'time': 0.069454542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.069462556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:47.800" endtime="20201112 12:25:47.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:47.811" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:47.804" endtime="20201112 12:25:47.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.815" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:47.814" endtime="20201112 12:25:47.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.818" level="INFO">VALUE: [5.403000000001046e-06, 4.041999999995771e-06, 3.2229999999966452e-06, 5.221999999999172e-06, 6.236000000006681e-06, 5.041999999996771e-06, 3.1669999999983656e-06, 6.0550000000048065e-06, 2.6250000000060947e-06, 5.958000000000352e-06, 4.7639999999904425e-06, 5.041999999996771e-06, 2.777999999994951e-06, 4.0270000000036665e-06, 6.2779999999984515e-06, 2.8619999999923706e-06, 2.4580000000107294e-06, 5.347000000002766e-06, 3.55600000000178e-06, 3.02800000000214e-06, 3.889000000006915e-06, 4.985999999998492e-06, 5.708000000007041e-06, 3.8200000000016e-06, 4.29200000000296e-06]</msg>
<status status="PASS" starttime="20201112 12:25:47.816" endtime="20201112 12:25:47.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.812" endtime="20201112 12:25:47.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.821" endtime="20201112 12:25:47.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:47.825" endtime="20201112 12:25:47.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.823" endtime="20201112 12:25:47.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.819" endtime="20201112 12:25:47.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.447" endtime="20201112 12:25:47.845"></status>
</kw>
<msg timestamp="20201112 12:25:47.846" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.854" endtime="20201112 12:25:47.867"></status>
</kw>
<msg timestamp="20201112 12:25:47.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.852" endtime="20201112 12:25:47.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:47.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:47.869" endtime="20201112 12:25:47.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.871" endtime="20201112 12:25:47.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.849" endtime="20201112 12:25:47.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.847" endtime="20201112 12:25:47.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:47.881" endtime="20201112 12:25:48.151"></status>
</kw>
<msg timestamp="20201112 12:25:48.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:25:47.879" endtime="20201112 12:25:48.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:25:48.154" endtime="20201112 12:25:48.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.159" endtime="20201112 12:25:48.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.876" endtime="20201112 12:25:48.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.875" endtime="20201112 12:25:48.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.167" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:48.165" endtime="20201112 12:25:48.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.170" level="INFO">VALUE: [{'time': 0.017988264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017999292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.01800175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.01800725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018010389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.018012806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018016847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.0180195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018023167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.018029333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.018032375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018036972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018042264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018048111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018053611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.018056681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.018061917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018065639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018068861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.018073486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018078875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.018081542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018087264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.01808975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.018096028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018101319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.018103806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4869999999989345e-06, 'source_diff': 2.4869999999989345e-06}, {'time': 0.018106514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.01811275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.018118889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.018124542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018129083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018131431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018136903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.01813975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018144903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018157125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018162028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018165944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.018173639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018178514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018183792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018186514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018192542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018195347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018201347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:48.168" endtime="20201112 12:25:48.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.163" endtime="20201112 12:25:48.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:48.185" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:48.172" endtime="20201112 12:25:48.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.190" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:48.189" endtime="20201112 12:25:48.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.193" level="INFO">VALUE: {'eventdiff': [0, 5.235999999998742e-06, 5.792000000000991e-06, 2.458000000000321e-06, 5.499999999998562e-06, 3.139000000002695e-06, 2.4169999999976155e-06, 4.040999999999767e-06, 2.653000000001765e-06, 3.6669999999988656e-06, 6.166000000001892e-06, 3.0419999999982406e-06, 4.596999999998547e-06, 5.292000000000491e-06, 5.846999999999797e-06, 5.500000000002031e-06, 3.07000000000085e-06, 5.235999999998742e-06, 3.722000000001141e-06, 3.2219999999971716e-06, 4.625000000001156e-06, 5.389000000001476e-06, 2.6669999999978655e-06, 5.721999999999672e-06, 2.4860000000029303e-06, 6.2779999999984515e-06, 5.291000000001017e-06, 2.4869999999989345e-06, 2.708000000000571e-06, 6.235999999999742e-06, 2.583000000000446e-06, 3.5559999999983105e-06, 5.653000000001296e-06, 4.541000000000267e-06, 2.3479999999992396e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.153000000000796e-06, 6.194000000001032e-06, 6.0279999999982015e-06, 4.903000000000546e-06, 3.915999999999642e-06, 2.7090000000000447e-06, 4.985999999998492e-06, 4.875000000001406e-06, 5.278000000000921e-06, 2.722000000000141e-06, 6.0279999999982015e-06, 2.8050000000015562e-06, 5.999999999999062e-06], 'time': [0.017988264, 0.0179935, 0.017999292, 0.01800175, 0.01800725, 0.018010389, 0.018012806, 0.018016847, 0.0180195, 0.018023167, 0.018029333, 0.018032375, 0.018036972, 0.018042264, 0.018048111, 0.018053611, 0.018056681, 0.018061917, 0.018065639, 0.018068861, 0.018073486, 0.018078875, 0.018081542, 0.018087264, 0.01808975, 0.018096028, 0.018101319, 0.018103806, 0.018106514, 0.01811275, 0.018115333, 0.018118889, 0.018124542, 0.018129083, 0.018131431, 0.018136903, 0.01813975, 0.018144903, 0.018151097, 0.018157125, 0.018162028, 0.018165944, 0.018168653, 0.018173639, 0.018178514, 0.018183792, 0.018186514, 0.018192542, 0.018195347, 0.018201347], 'sourcesource_diff': [0, 5.235999999998742e-06, 5.792000000000991e-06, 2.458000000000321e-06, 5.499999999998562e-06, 3.139000000002695e-06, 2.4169999999976155e-06, 4.040999999999767e-06, 2.653000000001765e-06, 3.6669999999988656e-06, 6.166000000001892e-06, 3.0419999999982406e-06, 4.596999999998547e-06, 5.292000000000491e-06, 5.846999999999797e-06, 5.500000000002031e-06, 3.07000000000085e-06, 5.235999999998742e-06, 3.722000000001141e-06, 3.2219999999971716e-06, 4.625000000001156e-06, 5.389000000001476e-06, 2.6669999999978655e-06, 5.721999999999672e-06, 2.4860000000029303e-06, 6.2779999999984515e-06, 5.291000000001017e-06, 2.4869999999989345e-06, 2.708000000000571e-06, 6.235999999999742e-06, 2.583000000000446e-06, 3.5559999999983105e-06, 5.653000000001296e-06, 4.541000000000267e-06, 2.3479999999992396e-06, 5.471999999999422e-06, 2.847000000000266e-06, 5.153000000000796e-06, 6.194000000001032e-06, 6.0279999999982015e-06, 4.903000000000546e-06, 3.915999999999642e-06, 2.7090000000000447e-06, 4.985999999998492e-06, 4.875000000001406e-06, 5.278000000000921e-06, 2.722000000000141e-06, 6.0279999999982015e-06, 2.8050000000015562e-06, 5.999999999999062e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:48.191" endtime="20201112 12:25:48.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.187" endtime="20201112 12:25:48.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:48.197" level="INFO">${RESULT} = [{'time': 0.0179935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.01800175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:25:48.195" endtime="20201112 12:25:48.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:48.207" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:48.199" endtime="20201112 12:25:48.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.212" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:48.211" endtime="20201112 12:25:48.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.214" level="INFO">VALUE: [5.235999999998742e-06, 2.458000000000321e-06, 3.139000000002695e-06, 4.040999999999767e-06, 3.6669999999988656e-06, 3.0419999999982406e-06, 5.292000000000491e-06, 5.500000000002031e-06, 5.235999999998742e-06, 3.2219999999971716e-06, 5.389000000001476e-06, 5.721999999999672e-06, 6.2779999999984515e-06, 2.4869999999989345e-06, 6.235999999999742e-06, 3.5559999999983105e-06, 4.541000000000267e-06, 5.471999999999422e-06, 5.153000000000796e-06, 6.0279999999982015e-06, 3.915999999999642e-06, 4.985999999998492e-06, 5.278000000000921e-06, 6.0279999999982015e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201112 12:25:48.213" endtime="20201112 12:25:48.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.208" endtime="20201112 12:25:48.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.217" endtime="20201112 12:25:48.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:48.221" endtime="20201112 12:25:48.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.219" endtime="20201112 12:25:48.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.216" endtime="20201112 12:25:48.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.846" endtime="20201112 12:25:48.242"></status>
</kw>
<msg timestamp="20201112 12:25:48.242" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.250" endtime="20201112 12:25:48.265"></status>
</kw>
<msg timestamp="20201112 12:25:48.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.249" endtime="20201112 12:25:48.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.267" endtime="20201112 12:25:48.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.269" endtime="20201112 12:25:48.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.246" endtime="20201112 12:25:48.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.244" endtime="20201112 12:25:48.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.280" endtime="20201112 12:25:48.548"></status>
</kw>
<msg timestamp="20201112 12:25:48.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:48.278" endtime="20201112 12:25:48.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018031694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:48.551" endtime="20201112 12:25:48.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.557" endtime="20201112 12:25:48.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.274" endtime="20201112 12:25:48.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.272" endtime="20201112 12:25:48.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.563" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:48.562" endtime="20201112 12:25:48.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.567" level="INFO">VALUE: [{'time': 0.018031694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018040778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018045056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018049806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018055278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018058736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018064153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.0180665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018072722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018075833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018079875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018085653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018089819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018093042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018098458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018101611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018106653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018109444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018114542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.018119764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018124681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018134264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018145958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018150444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.0181565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.018160194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.018164931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736999999997715e-06, 'source_diff': 4.736999999997715e-06}, {'time': 0.018168653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018174556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018179167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018181694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.018184125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.018187653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.01819225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018198472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018203847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018207931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018212583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018217375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.018227389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018231681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018234847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.018238333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018241, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018247139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018251181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:48.564" endtime="20201112 12:25:48.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.560" endtime="20201112 12:25:48.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:48.583" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:48.570" endtime="20201112 12:25:48.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.587" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:48.586" endtime="20201112 12:25:48.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.590" level="INFO">VALUE: {'eventdiff': [0, 5.042000000000241e-06, 4.041999999999241e-06, 4.277999999999921e-06, 4.750000000001281e-06, 5.471999999999422e-06, 3.4579999999978517e-06, 5.417000000000616e-06, 2.346999999999766e-06, 6.222000000000172e-06, 3.111000000000086e-06, 4.041999999999241e-06, 5.778000000001421e-06, 4.165999999999892e-06, 3.2230000000001147e-06, 5.416000000001142e-06, 3.1529999999987957e-06, 5.042000000000241e-06, 2.790999999998517e-06, 5.09800000000199e-06, 5.221999999999172e-06, 4.917000000000116e-06, 4.346999999998297e-06, 5.236000000002211e-06, 5.6529999999978264e-06, 6.041000000001767e-06, 4.486000000001461e-06, 6.055999999997341e-06, 3.6940000000020012e-06, 4.736999999997715e-06, 3.722000000001141e-06, 5.903000000001546e-06, 4.610999999998117e-06, 2.5270000000021664e-06, 2.4309999999971854e-06, 3.52800000000264e-06, 4.596999999998547e-06, 6.222000000000172e-06, 5.374999999998437e-06, 4.08400000000142e-06, 4.652000000000822e-06, 4.791999999999991e-06, 4.193999999999032e-06, 5.820000000000131e-06, 4.291999999999491e-06, 3.165999999998892e-06, 3.486000000000461e-06, 2.667000000001335e-06, 6.1389999999987566e-06, 4.041999999999241e-06], 'time': [0.018031694, 0.018036736, 0.018040778, 0.018045056, 0.018049806, 0.018055278, 0.018058736, 0.018064153, 0.0180665, 0.018072722, 0.018075833, 0.018079875, 0.018085653, 0.018089819, 0.018093042, 0.018098458, 0.018101611, 0.018106653, 0.018109444, 0.018114542, 0.018119764, 0.018124681, 0.018129028, 0.018134264, 0.018139917, 0.018145958, 0.018150444, 0.0181565, 0.018160194, 0.018164931, 0.018168653, 0.018174556, 0.018179167, 0.018181694, 0.018184125, 0.018187653, 0.01819225, 0.018198472, 0.018203847, 0.018207931, 0.018212583, 0.018217375, 0.018221569, 0.018227389, 0.018231681, 0.018234847, 0.018238333, 0.018241, 0.018247139, 0.018251181], 'sourcesource_diff': [0, 5.042000000000241e-06, 4.041999999999241e-06, 4.277999999999921e-06, 4.750000000001281e-06, 5.471999999999422e-06, 3.4579999999978517e-06, 5.417000000000616e-06, 2.346999999999766e-06, 6.222000000000172e-06, 3.111000000000086e-06, 4.041999999999241e-06, 5.778000000001421e-06, 4.165999999999892e-06, 3.2230000000001147e-06, 5.416000000001142e-06, 3.1529999999987957e-06, 5.042000000000241e-06, 2.790999999998517e-06, 5.09800000000199e-06, 5.221999999999172e-06, 4.917000000000116e-06, 4.346999999998297e-06, 5.236000000002211e-06, 5.6529999999978264e-06, 6.041000000001767e-06, 4.486000000001461e-06, 6.055999999997341e-06, 3.6940000000020012e-06, 4.736999999997715e-06, 3.722000000001141e-06, 5.903000000001546e-06, 4.610999999998117e-06, 2.5270000000021664e-06, 2.4309999999971854e-06, 3.52800000000264e-06, 4.596999999998547e-06, 6.222000000000172e-06, 5.374999999998437e-06, 4.08400000000142e-06, 4.652000000000822e-06, 4.791999999999991e-06, 4.193999999999032e-06, 5.820000000000131e-06, 4.291999999999491e-06, 3.165999999998892e-06, 3.486000000000461e-06, 2.667000000001335e-06, 6.1389999999987566e-06, 4.041999999999241e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:48.588" endtime="20201112 12:25:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.584" endtime="20201112 12:25:48.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:48.595" level="INFO">${RESULT} = [{'time': 0.018036736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018045056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:48.592" endtime="20201112 12:25:48.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:48.603" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:48.596" endtime="20201112 12:25:48.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.607" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:48.606" endtime="20201112 12:25:48.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.610" level="INFO">VALUE: [5.042000000000241e-06, 4.277999999999921e-06, 5.471999999999422e-06, 5.417000000000616e-06, 6.222000000000172e-06, 4.041999999999241e-06, 4.165999999999892e-06, 5.416000000001142e-06, 5.042000000000241e-06, 5.09800000000199e-06, 4.917000000000116e-06, 5.236000000002211e-06, 6.041000000001767e-06, 6.055999999997341e-06, 4.736999999997715e-06, 5.903000000001546e-06, 2.5270000000021664e-06, 3.52800000000264e-06, 6.222000000000172e-06, 4.08400000000142e-06, 4.791999999999991e-06, 5.820000000000131e-06, 3.165999999998892e-06, 2.667000000001335e-06, 4.041999999999241e-06]</msg>
<status status="PASS" starttime="20201112 12:25:48.608" endtime="20201112 12:25:48.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.604" endtime="20201112 12:25:48.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.613" endtime="20201112 12:25:48.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:48.617" endtime="20201112 12:25:48.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.615" endtime="20201112 12:25:48.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.612" endtime="20201112 12:25:48.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.243" endtime="20201112 12:25:48.638"></status>
</kw>
<msg timestamp="20201112 12:25:48.638" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.646" endtime="20201112 12:25:48.662"></status>
</kw>
<msg timestamp="20201112 12:25:48.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.644" endtime="20201112 12:25:48.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:48.663" endtime="20201112 12:25:48.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.666" endtime="20201112 12:25:48.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.642" endtime="20201112 12:25:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.640" endtime="20201112 12:25:48.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.675" endtime="20201112 12:25:48.943"></status>
</kw>
<msg timestamp="20201112 12:25:48.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018932431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018936764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:48.674" endtime="20201112 12:25:48.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018932431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018936764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:48.946" endtime="20201112 12:25:48.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:48.952" endtime="20201112 12:25:48.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.671" endtime="20201112 12:25:48.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.669" endtime="20201112 12:25:48.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.958" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:48.957" endtime="20201112 12:25:48.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.962" level="INFO">VALUE: [{'time': 0.018932431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018936764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018939986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018946153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018949625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018955167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.018961139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018965431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018971694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.018974917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018979306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018982083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.776999999998947e-06, 'source_diff': 2.776999999998947e-06}, {'time': 0.018988389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.018993097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018995944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.019001056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11199999999809e-06, 'source_diff': 5.11199999999809e-06}, {'time': 0.019003903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.01900925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019015486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.019020361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.019023361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.019029333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019034333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.019040222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019045583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.019049736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019052458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.019054958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.019058917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.959000000001295e-06, 'source_diff': 3.959000000001295e-06}, {'time': 0.019062583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.019066167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5839999999974503e-06, 'source_diff': 3.5839999999974503e-06}, {'time': 0.019072236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.019077125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.019079542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.019082583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.019085694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.019091347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.01909725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.019101542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019104389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.019109528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019114153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6249999999976865e-06, 'source_diff': 4.6249999999976865e-06}, {'time': 0.019119694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.019122667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.019126778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.019132375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.019135292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.019140764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019145361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.019147917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:48.959" endtime="20201112 12:25:48.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.955" endtime="20201112 12:25:48.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:48.978" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:48.965" endtime="20201112 12:25:48.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.982" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:48.981" endtime="20201112 12:25:48.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:48.985" level="INFO">VALUE: {'eventdiff': [0, 4.332999999998727e-06, 3.222000000000641e-06, 6.167000000001366e-06, 3.472000000000891e-06, 5.541999999997271e-06, 5.971999999999922e-06, 4.29200000000296e-06, 6.262999999999408e-06, 3.2230000000001147e-06, 4.389000000000476e-06, 2.776999999998947e-06, 6.306000000001061e-06, 4.707999999999102e-06, 2.847000000000266e-06, 5.11199999999809e-06, 2.847000000000266e-06, 5.346999999999297e-06, 6.236000000003211e-06, 4.8749999999979365e-06, 2.999999999999531e-06, 5.971999999999922e-06, 5.000000000001531e-06, 5.8889999999985065e-06, 5.361000000002336e-06, 4.152999999999796e-06, 2.722000000000141e-06, 2.4999999999990308e-06, 3.959000000001295e-06, 3.665999999999392e-06, 3.5839999999974503e-06, 6.069000000000907e-06, 4.889000000000976e-06, 2.417000000001085e-06, 3.040999999998767e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.9029999999980765e-06, 4.291999999999491e-06, 2.847000000000266e-06, 5.139000000001226e-06, 4.6249999999976865e-06, 5.541000000001267e-06, 2.9729999999998646e-06, 4.111000000001086e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.471999999999422e-06, 4.596999999998547e-06, 2.55600000000078e-06], 'time': [0.018932431, 0.018936764, 0.018939986, 0.018946153, 0.018949625, 0.018955167, 0.018961139, 0.018965431, 0.018971694, 0.018974917, 0.018979306, 0.018982083, 0.018988389, 0.018993097, 0.018995944, 0.019001056, 0.019003903, 0.01900925, 0.019015486, 0.019020361, 0.019023361, 0.019029333, 0.019034333, 0.019040222, 0.019045583, 0.019049736, 0.019052458, 0.019054958, 0.019058917, 0.019062583, 0.019066167, 0.019072236, 0.019077125, 0.019079542, 0.019082583, 0.019085694, 0.019091347, 0.01909725, 0.019101542, 0.019104389, 0.019109528, 0.019114153, 0.019119694, 0.019122667, 0.019126778, 0.019132375, 0.019135292, 0.019140764, 0.019145361, 0.019147917], 'sourcesource_diff': [0, 4.332999999998727e-06, 3.222000000000641e-06, 6.167000000001366e-06, 3.472000000000891e-06, 5.541999999997271e-06, 5.971999999999922e-06, 4.29200000000296e-06, 6.262999999999408e-06, 3.2230000000001147e-06, 4.389000000000476e-06, 2.776999999998947e-06, 6.306000000001061e-06, 4.707999999999102e-06, 2.847000000000266e-06, 5.11199999999809e-06, 2.847000000000266e-06, 5.346999999999297e-06, 6.236000000003211e-06, 4.8749999999979365e-06, 2.999999999999531e-06, 5.971999999999922e-06, 5.000000000001531e-06, 5.8889999999985065e-06, 5.361000000002336e-06, 4.152999999999796e-06, 2.722000000000141e-06, 2.4999999999990308e-06, 3.959000000001295e-06, 3.665999999999392e-06, 3.5839999999974503e-06, 6.069000000000907e-06, 4.889000000000976e-06, 2.417000000001085e-06, 3.040999999998767e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.9029999999980765e-06, 4.291999999999491e-06, 2.847000000000266e-06, 5.139000000001226e-06, 4.6249999999976865e-06, 5.541000000001267e-06, 2.9729999999998646e-06, 4.111000000001086e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.471999999999422e-06, 4.596999999998547e-06, 2.55600000000078e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:48.983" endtime="20201112 12:25:48.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.979" endtime="20201112 12:25:48.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:48.990" level="INFO">${RESULT} = [{'time': 0.018936764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018946153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:48.987" endtime="20201112 12:25:48.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:48.998" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:48.991" endtime="20201112 12:25:48.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.002" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:49.001" endtime="20201112 12:25:49.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.005" level="INFO">VALUE: [4.332999999998727e-06, 6.167000000001366e-06, 5.541999999997271e-06, 4.29200000000296e-06, 3.2230000000001147e-06, 2.776999999998947e-06, 4.707999999999102e-06, 5.11199999999809e-06, 5.346999999999297e-06, 4.8749999999979365e-06, 5.971999999999922e-06, 5.8889999999985065e-06, 4.152999999999796e-06, 2.4999999999990308e-06, 3.665999999999392e-06, 6.069000000000907e-06, 2.417000000001085e-06, 3.111000000000086e-06, 5.9029999999980765e-06, 2.847000000000266e-06, 4.6249999999976865e-06, 2.9729999999998646e-06, 5.596999999999547e-06, 5.471999999999422e-06, 2.55600000000078e-06]</msg>
<status status="PASS" starttime="20201112 12:25:49.003" endtime="20201112 12:25:49.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.999" endtime="20201112 12:25:49.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.008" endtime="20201112 12:25:49.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:49.012" endtime="20201112 12:25:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.010" endtime="20201112 12:25:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.006" endtime="20201112 12:25:49.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:48.638" endtime="20201112 12:25:49.033"></status>
</kw>
<msg timestamp="20201112 12:25:49.033" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.042" endtime="20201112 12:25:49.055"></status>
</kw>
<msg timestamp="20201112 12:25:49.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.040" endtime="20201112 12:25:49.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.058" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.057" endtime="20201112 12:25:49.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.060" endtime="20201112 12:25:49.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.036" endtime="20201112 12:25:49.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.035" endtime="20201112 12:25:49.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.069" endtime="20201112 12:25:49.337"></status>
</kw>
<msg timestamp="20201112 12:25:49.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018955889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:49.067" endtime="20201112 12:25:49.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018955889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:49.340" endtime="20201112 12:25:49.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.345" endtime="20201112 12:25:49.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.065" endtime="20201112 12:25:49.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.063" endtime="20201112 12:25:49.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.352" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:49.351" endtime="20201112 12:25:49.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.356" level="INFO">VALUE: [{'time': 0.018952542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018955889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018959944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018964903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.018969, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018974972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018982875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018985278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018990764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018993472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.018998903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.019003944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.019009292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.019013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.019016792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.019020333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.019025069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019029542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.019035194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.019038236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019043347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.019046556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.019050278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019053694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.019056361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019061833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019066125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019070292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019075764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019078986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.019084708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.019092472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.019097264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.019103, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.019109222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.01911275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.019117556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019120222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.019123181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.019126278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.019130319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.019136042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.019139722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}, {'time': 0.019145486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019150417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.019153069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6520000000022914e-06, 'source_diff': 2.6520000000022914e-06}, {'time': 0.019157486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.019162139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:49.353" endtime="20201112 12:25:49.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.349" endtime="20201112 12:25:49.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:49.371" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:49.358" endtime="20201112 12:25:49.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.375" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:49.374" endtime="20201112 12:25:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.379" level="INFO">VALUE: {'eventdiff': [0, 3.347000000000766e-06, 4.054999999999337e-06, 4.959000000002295e-06, 4.096999999998047e-06, 5.971999999999922e-06, 4.846999999998797e-06, 3.05600000000128e-06, 2.403000000001515e-06, 5.485999999998992e-06, 2.708000000000571e-06, 5.431000000000186e-06, 5.040999999997298e-06, 5.34800000000224e-06, 3.776999999999947e-06, 3.7230000000006147e-06, 3.540999999999267e-06, 4.735999999998242e-06, 4.473000000001365e-06, 5.651999999998353e-06, 3.04200000000171e-06, 5.110999999998617e-06, 3.2090000000005448e-06, 3.722000000001141e-06, 3.415999999999142e-06, 2.667000000001335e-06, 5.471999999999422e-06, 4.291999999999491e-06, 4.166999999999366e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.431000000002655e-06, 3.3329999999977267e-06, 4.791999999999991e-06, 5.735999999999242e-06, 6.222000000000172e-06, 3.52800000000264e-06, 4.805999999999561e-06, 2.665999999998392e-06, 2.9590000000002947e-06, 3.097000000000516e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 3.6800000000024313e-06, 5.7639999999983815e-06, 4.930999999999686e-06, 2.6520000000022914e-06, 4.416999999999616e-06, 4.653000000000296e-06], 'time': [0.018952542, 0.018955889, 0.018959944, 0.018964903, 0.018969, 0.018974972, 0.018979819, 0.018982875, 0.018985278, 0.018990764, 0.018993472, 0.018998903, 0.019003944, 0.019009292, 0.019013069, 0.019016792, 0.019020333, 0.019025069, 0.019029542, 0.019035194, 0.019038236, 0.019043347, 0.019046556, 0.019050278, 0.019053694, 0.019056361, 0.019061833, 0.019066125, 0.019070292, 0.019075764, 0.019078986, 0.019084708, 0.019089139, 0.019092472, 0.019097264, 0.019103, 0.019109222, 0.01911275, 0.019117556, 0.019120222, 0.019123181, 0.019126278, 0.019130319, 0.019136042, 0.019139722, 0.019145486, 0.019150417, 0.019153069, 0.019157486, 0.019162139], 'sourcesource_diff': [0, 3.347000000000766e-06, 4.054999999999337e-06, 4.959000000002295e-06, 4.096999999998047e-06, 5.971999999999922e-06, 4.846999999998797e-06, 3.05600000000128e-06, 2.403000000001515e-06, 5.485999999998992e-06, 2.708000000000571e-06, 5.431000000000186e-06, 5.040999999997298e-06, 5.34800000000224e-06, 3.776999999999947e-06, 3.7230000000006147e-06, 3.540999999999267e-06, 4.735999999998242e-06, 4.473000000001365e-06, 5.651999999998353e-06, 3.04200000000171e-06, 5.110999999998617e-06, 3.2090000000005448e-06, 3.722000000001141e-06, 3.415999999999142e-06, 2.667000000001335e-06, 5.471999999999422e-06, 4.291999999999491e-06, 4.166999999999366e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.431000000002655e-06, 3.3329999999977267e-06, 4.791999999999991e-06, 5.735999999999242e-06, 6.222000000000172e-06, 3.52800000000264e-06, 4.805999999999561e-06, 2.665999999998392e-06, 2.9590000000002947e-06, 3.097000000000516e-06, 4.040999999999767e-06, 5.7229999999991454e-06, 3.6800000000024313e-06, 5.7639999999983815e-06, 4.930999999999686e-06, 2.6520000000022914e-06, 4.416999999999616e-06, 4.653000000000296e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:49.377" endtime="20201112 12:25:49.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.372" endtime="20201112 12:25:49.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:49.383" level="INFO">${RESULT} = [{'time': 0.018955889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018964903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:49.381" endtime="20201112 12:25:49.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:49.392" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:49.384" endtime="20201112 12:25:49.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.397" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:49.396" endtime="20201112 12:25:49.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.399" level="INFO">VALUE: [3.347000000000766e-06, 4.959000000002295e-06, 5.971999999999922e-06, 3.05600000000128e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.34800000000224e-06, 3.7230000000006147e-06, 4.735999999998242e-06, 5.651999999998353e-06, 5.110999999998617e-06, 3.722000000001141e-06, 2.667000000001335e-06, 4.291999999999491e-06, 5.471999999999422e-06, 5.721999999999672e-06, 3.3329999999977267e-06, 5.735999999999242e-06, 3.52800000000264e-06, 2.665999999998392e-06, 3.097000000000516e-06, 5.7229999999991454e-06, 5.7639999999983815e-06, 2.6520000000022914e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201112 12:25:49.398" endtime="20201112 12:25:49.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.393" endtime="20201112 12:25:49.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.403" endtime="20201112 12:25:49.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:49.406" endtime="20201112 12:25:49.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.405" endtime="20201112 12:25:49.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.401" endtime="20201112 12:25:49.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.033" endtime="20201112 12:25:49.427"></status>
</kw>
<msg timestamp="20201112 12:25:49.427" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.436" endtime="20201112 12:25:49.451"></status>
</kw>
<msg timestamp="20201112 12:25:49.451" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.435" endtime="20201112 12:25:49.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.452" endtime="20201112 12:25:49.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.455" endtime="20201112 12:25:49.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.432" endtime="20201112 12:25:49.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.429" endtime="20201112 12:25:49.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.464" endtime="20201112 12:25:49.732"></status>
</kw>
<msg timestamp="20201112 12:25:49.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018944583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018947458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:49.463" endtime="20201112 12:25:49.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018944583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018947458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:49.735" endtime="20201112 12:25:49.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.741" endtime="20201112 12:25:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.460" endtime="20201112 12:25:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.458" endtime="20201112 12:25:49.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.748" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:49.746" endtime="20201112 12:25:49.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.751" level="INFO">VALUE: [{'time': 0.018944583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018947458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}, {'time': 0.018955583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018958375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018963167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018966139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018968667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018971569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.018975861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018980778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018983403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018987556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018992653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018997736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.019002403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.019006375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.019011792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.019017653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019021125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.019024653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.019030319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.019036292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.019042319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.0190485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.019052556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.019055375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.019059639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.019064972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019067431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.019072722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.019076819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.019082111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.019088208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.019091569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.019094819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.019098708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019104681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.019109208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.019112681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.019118542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019121042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.019124611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5689999999984068e-06, 'source_diff': 3.5689999999984068e-06}, {'time': 0.019128903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019131444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.019134222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.019138708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019143444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019146167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.019149472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3050000000020563e-06, 'source_diff': 3.3050000000020563e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:49.749" endtime="20201112 12:25:49.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.744" endtime="20201112 12:25:49.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:49.767" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:49.754" endtime="20201112 12:25:49.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.771" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:49.770" endtime="20201112 12:25:49.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.774" level="INFO">VALUE: {'eventdiff': [0, 2.874999999999406e-06, 3.445000000001225e-06, 4.679999999999962e-06, 2.7919999999979905e-06, 4.791999999999991e-06, 2.972000000000391e-06, 2.52800000000164e-06, 2.901999999999072e-06, 4.291999999999491e-06, 4.917000000000116e-06, 2.6249999999991558e-06, 4.152999999999796e-06, 5.097000000002516e-06, 5.082999999999477e-06, 4.666999999999866e-06, 3.971999999997922e-06, 5.417000000000616e-06, 5.860999999999367e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 5.666000000001392e-06, 5.9729999999993955e-06, 6.026999999998728e-06, 6.181000000000936e-06, 4.0559999999988106e-06, 2.819000000001126e-06, 4.264000000000351e-06, 5.332999999999727e-06, 2.4589999999997947e-06, 5.291000000001017e-06, 4.096999999998047e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.888999999999976e-06, 5.9729999999993955e-06, 4.527000000000697e-06, 3.4730000000003647e-06, 5.860999999999367e-06, 2.5000000000025002e-06, 3.5689999999984068e-06, 4.291999999999491e-06, 2.5410000000017363e-06, 2.7779999999984206e-06, 4.486000000001461e-06, 4.735999999998242e-06, 2.7229999999996146e-06, 3.3050000000020563e-06], 'time': [0.018944583, 0.018947458, 0.018950903, 0.018955583, 0.018958375, 0.018963167, 0.018966139, 0.018968667, 0.018971569, 0.018975861, 0.018980778, 0.018983403, 0.018987556, 0.018992653, 0.018997736, 0.019002403, 0.019006375, 0.019011792, 0.019017653, 0.019021125, 0.019024653, 0.019030319, 0.019036292, 0.019042319, 0.0190485, 0.019052556, 0.019055375, 0.019059639, 0.019064972, 0.019067431, 0.019072722, 0.019076819, 0.019082111, 0.019088208, 0.019091569, 0.019094819, 0.019098708, 0.019104681, 0.019109208, 0.019112681, 0.019118542, 0.019121042, 0.019124611, 0.019128903, 0.019131444, 0.019134222, 0.019138708, 0.019143444, 0.019146167, 0.019149472], 'sourcesource_diff': [0, 2.874999999999406e-06, 3.445000000001225e-06, 4.679999999999962e-06, 2.7919999999979905e-06, 4.791999999999991e-06, 2.972000000000391e-06, 2.52800000000164e-06, 2.901999999999072e-06, 4.291999999999491e-06, 4.917000000000116e-06, 2.6249999999991558e-06, 4.152999999999796e-06, 5.097000000002516e-06, 5.082999999999477e-06, 4.666999999999866e-06, 3.971999999997922e-06, 5.417000000000616e-06, 5.860999999999367e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 5.666000000001392e-06, 5.9729999999993955e-06, 6.026999999998728e-06, 6.181000000000936e-06, 4.0559999999988106e-06, 2.819000000001126e-06, 4.264000000000351e-06, 5.332999999999727e-06, 2.4589999999997947e-06, 5.291000000001017e-06, 4.096999999998047e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.888999999999976e-06, 5.9729999999993955e-06, 4.527000000000697e-06, 3.4730000000003647e-06, 5.860999999999367e-06, 2.5000000000025002e-06, 3.5689999999984068e-06, 4.291999999999491e-06, 2.5410000000017363e-06, 2.7779999999984206e-06, 4.486000000001461e-06, 4.735999999998242e-06, 2.7229999999996146e-06, 3.3050000000020563e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:49.772" endtime="20201112 12:25:49.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.768" endtime="20201112 12:25:49.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:49.779" level="INFO">${RESULT} = [{'time': 0.018947458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018955583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:49.776" endtime="20201112 12:25:49.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:49.787" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:49.780" endtime="20201112 12:25:49.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.792" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:49.791" endtime="20201112 12:25:49.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.794" level="INFO">VALUE: [2.874999999999406e-06, 4.679999999999962e-06, 4.791999999999991e-06, 2.52800000000164e-06, 4.291999999999491e-06, 2.6249999999991558e-06, 5.097000000002516e-06, 4.666999999999866e-06, 5.417000000000616e-06, 3.472000000000891e-06, 5.666000000001392e-06, 6.026999999998728e-06, 4.0559999999988106e-06, 4.264000000000351e-06, 2.4589999999997947e-06, 4.096999999998047e-06, 6.097000000000047e-06, 3.249999999999781e-06, 5.9729999999993955e-06, 3.4730000000003647e-06, 2.5000000000025002e-06, 4.291999999999491e-06, 2.7779999999984206e-06, 4.735999999998242e-06, 3.3050000000020563e-06]</msg>
<status status="PASS" starttime="20201112 12:25:49.793" endtime="20201112 12:25:49.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.788" endtime="20201112 12:25:49.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.798" endtime="20201112 12:25:49.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:49.802" endtime="20201112 12:25:49.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.800" endtime="20201112 12:25:49.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.796" endtime="20201112 12:25:49.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.428" endtime="20201112 12:25:49.823"></status>
</kw>
<msg timestamp="20201112 12:25:49.823" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.831" endtime="20201112 12:25:49.845"></status>
</kw>
<msg timestamp="20201112 12:25:49.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.829" endtime="20201112 12:25:49.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:49.846" endtime="20201112 12:25:49.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.849" endtime="20201112 12:25:49.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.827" endtime="20201112 12:25:49.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.825" endtime="20201112 12:25:49.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:49.858" endtime="20201112 12:25:50.124"></status>
</kw>
<msg timestamp="20201112 12:25:50.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:49.857" endtime="20201112 12:25:50.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:50.127" endtime="20201112 12:25:50.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.132" endtime="20201112 12:25:50.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.854" endtime="20201112 12:25:50.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.852" endtime="20201112 12:25:50.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.139" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:50.138" endtime="20201112 12:25:50.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.143" level="INFO">VALUE: [{'time': 0.018143264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018153611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018157125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018164764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.01817, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018174569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.018179625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018184222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018187764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018190236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018193417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.018197208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018206083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018208806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.018214097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.018219444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.01822275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.018228972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018234875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018239653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018245306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018249861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.018254778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.01826075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018264972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018269528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018272458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.018276653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018281056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018286417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018288944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.01829125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3059999999970604e-06, 'source_diff': 2.3059999999970604e-06}, {'time': 0.018295847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018299583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018303472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018307458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.018312611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018316903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018322, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018326306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018330639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018335278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018337722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.018342069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018348181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.018352639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.018358069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:50.140" endtime="20201112 12:25:50.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.136" endtime="20201112 12:25:50.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:50.159" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:50.145" endtime="20201112 12:25:50.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.163" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:50.162" endtime="20201112 12:25:50.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.166" level="INFO">VALUE: {'eventdiff': [0, 6.292000000001491e-06, 4.054999999999337e-06, 3.5139999999996008e-06, 5.167000000000366e-06, 2.471999999999891e-06, 5.235999999998742e-06, 4.569000000002876e-06, 5.055999999999811e-06, 4.596999999998547e-06, 3.5419999999987406e-06, 2.471999999999891e-06, 3.181000000001405e-06, 3.790999999999517e-06, 4.264000000000351e-06, 4.611000000001586e-06, 2.7229999999996146e-06, 5.290999999997548e-06, 5.347000000002766e-06, 3.3059999999980605e-06, 6.222000000000172e-06, 5.903000000001546e-06, 4.778000000000421e-06, 5.6529999999978264e-06, 4.554999999999837e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.222000000001641e-06, 4.555999999999311e-06, 2.929999999998212e-06, 4.195000000001975e-06, 4.403000000000046e-06, 5.360999999998867e-06, 2.5270000000021664e-06, 2.3059999999970604e-06, 4.597000000002016e-06, 3.736000000000711e-06, 3.888999999999976e-06, 3.9859999999974915e-06, 5.153000000000796e-06, 4.291999999999491e-06, 5.097000000002516e-06, 4.305999999999061e-06, 4.332999999998727e-06, 4.639000000000726e-06, 2.444000000000751e-06, 4.346999999998297e-06, 6.11200000000256e-06, 4.457999999998852e-06, 5.430000000000712e-06], 'time': [0.018143264, 0.018149556, 0.018153611, 0.018157125, 0.018162292, 0.018164764, 0.01817, 0.018174569, 0.018179625, 0.018184222, 0.018187764, 0.018190236, 0.018193417, 0.018197208, 0.018201472, 0.018206083, 0.018208806, 0.018214097, 0.018219444, 0.01822275, 0.018228972, 0.018234875, 0.018239653, 0.018245306, 0.018249861, 0.018254778, 0.01826075, 0.018264972, 0.018269528, 0.018272458, 0.018276653, 0.018281056, 0.018286417, 0.018288944, 0.01829125, 0.018295847, 0.018299583, 0.018303472, 0.018307458, 0.018312611, 0.018316903, 0.018322, 0.018326306, 0.018330639, 0.018335278, 0.018337722, 0.018342069, 0.018348181, 0.018352639, 0.018358069], 'sourcesource_diff': [0, 6.292000000001491e-06, 4.054999999999337e-06, 3.5139999999996008e-06, 5.167000000000366e-06, 2.471999999999891e-06, 5.235999999998742e-06, 4.569000000002876e-06, 5.055999999999811e-06, 4.596999999998547e-06, 3.5419999999987406e-06, 2.471999999999891e-06, 3.181000000001405e-06, 3.790999999999517e-06, 4.264000000000351e-06, 4.611000000001586e-06, 2.7229999999996146e-06, 5.290999999997548e-06, 5.347000000002766e-06, 3.3059999999980605e-06, 6.222000000000172e-06, 5.903000000001546e-06, 4.778000000000421e-06, 5.6529999999978264e-06, 4.554999999999837e-06, 4.917000000000116e-06, 5.971999999999922e-06, 4.222000000001641e-06, 4.555999999999311e-06, 2.929999999998212e-06, 4.195000000001975e-06, 4.403000000000046e-06, 5.360999999998867e-06, 2.5270000000021664e-06, 2.3059999999970604e-06, 4.597000000002016e-06, 3.736000000000711e-06, 3.888999999999976e-06, 3.9859999999974915e-06, 5.153000000000796e-06, 4.291999999999491e-06, 5.097000000002516e-06, 4.305999999999061e-06, 4.332999999998727e-06, 4.639000000000726e-06, 2.444000000000751e-06, 4.346999999998297e-06, 6.11200000000256e-06, 4.457999999998852e-06, 5.430000000000712e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:50.164" endtime="20201112 12:25:50.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.160" endtime="20201112 12:25:50.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:50.170" level="INFO">${RESULT} = [{'time': 0.018149556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018157125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:50.168" endtime="20201112 12:25:50.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:50.179" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:50.171" endtime="20201112 12:25:50.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.184" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:50.182" endtime="20201112 12:25:50.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.186" level="INFO">VALUE: [6.292000000001491e-06, 3.5139999999996008e-06, 2.471999999999891e-06, 4.569000000002876e-06, 4.596999999998547e-06, 2.471999999999891e-06, 3.790999999999517e-06, 4.611000000001586e-06, 5.290999999997548e-06, 3.3059999999980605e-06, 5.903000000001546e-06, 5.6529999999978264e-06, 4.917000000000116e-06, 4.222000000001641e-06, 2.929999999998212e-06, 4.403000000000046e-06, 2.5270000000021664e-06, 4.597000000002016e-06, 3.888999999999976e-06, 5.153000000000796e-06, 5.097000000002516e-06, 4.332999999998727e-06, 2.444000000000751e-06, 6.11200000000256e-06, 5.430000000000712e-06]</msg>
<status status="PASS" starttime="20201112 12:25:50.185" endtime="20201112 12:25:50.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.180" endtime="20201112 12:25:50.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.190" endtime="20201112 12:25:50.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.193" endtime="20201112 12:25:50.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.192" endtime="20201112 12:25:50.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.188" endtime="20201112 12:25:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.823" endtime="20201112 12:25:50.214"></status>
</kw>
<msg timestamp="20201112 12:25:50.214" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.222" endtime="20201112 12:25:50.236"></status>
</kw>
<msg timestamp="20201112 12:25:50.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.220" endtime="20201112 12:25:50.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.238" endtime="20201112 12:25:50.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.240" endtime="20201112 12:25:50.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.218" endtime="20201112 12:25:50.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.216" endtime="20201112 12:25:50.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.250" endtime="20201112 12:25:50.516"></status>
</kw>
<msg timestamp="20201112 12:25:50.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018130972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:50.248" endtime="20201112 12:25:50.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018130972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:50.519" endtime="20201112 12:25:50.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.525" endtime="20201112 12:25:50.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.245" endtime="20201112 12:25:50.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.244" endtime="20201112 12:25:50.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.532" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:50.530" endtime="20201112 12:25:50.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.535" level="INFO">VALUE: [{'time': 0.018127139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018130972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018135208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.0181415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018145292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018149125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018151667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018156458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018162611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018167722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018171944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018177167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.018180778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.018186986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.018190097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018192861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.018195667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.018198736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.018201986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.018205528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018209569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018215556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.018218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.018222056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.018227903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018233014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018238361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.018241986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.0182445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018250597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018256583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018261236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018264653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018267625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018270556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018275194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.018281056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.018283903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018289319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.018295306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.018300889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018305556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018310722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.018313944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.018318292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018324389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018328306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018333292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018335819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.018341861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:50.533" endtime="20201112 12:25:50.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.528" endtime="20201112 12:25:50.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:50.777" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:50.743" endtime="20201112 12:25:50.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.785" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:50.783" endtime="20201112 12:25:50.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.792" level="INFO">VALUE: {'eventdiff': [0, 3.832999999998227e-06, 4.236000000001211e-06, 6.292000000001491e-06, 3.7919999999989906e-06, 3.832999999998227e-06, 2.54200000000121e-06, 4.791000000000517e-06, 6.1529999999983265e-06, 5.111000000002086e-06, 4.221999999998172e-06, 5.223000000002115e-06, 3.611000000000586e-06, 6.2079999999971325e-06, 3.111000000000086e-06, 2.76400000000232e-06, 2.8059999999975604e-06, 3.069000000001376e-06, 3.249999999999781e-06, 3.5419999999987406e-06, 4.040999999999767e-06, 5.987000000002435e-06, 2.526999999998697e-06, 3.973000000000865e-06, 5.846999999999797e-06, 5.110999999998617e-06, 5.347000000002766e-06, 3.625000000000156e-06, 2.5139999999986007e-06, 6.097000000000047e-06, 5.985999999999492e-06, 4.653000000000296e-06, 3.4169999999986156e-06, 2.972000000000391e-06, 2.931000000001155e-06, 4.638000000001252e-06, 5.86199999999884e-06, 2.847000000000266e-06, 5.415999999997673e-06, 5.987000000002435e-06, 5.582999999999977e-06, 4.666999999999866e-06, 5.166000000000892e-06, 3.2219999999971716e-06, 4.34800000000124e-06, 6.097000000000047e-06, 3.916999999999116e-06, 4.986000000001961e-06, 2.526999999998697e-06, 6.042000000001241e-06], 'time': [0.018127139, 0.018130972, 0.018135208, 0.0181415, 0.018145292, 0.018149125, 0.018151667, 0.018156458, 0.018162611, 0.018167722, 0.018171944, 0.018177167, 0.018180778, 0.018186986, 0.018190097, 0.018192861, 0.018195667, 0.018198736, 0.018201986, 0.018205528, 0.018209569, 0.018215556, 0.018218083, 0.018222056, 0.018227903, 0.018233014, 0.018238361, 0.018241986, 0.0182445, 0.018250597, 0.018256583, 0.018261236, 0.018264653, 0.018267625, 0.018270556, 0.018275194, 0.018281056, 0.018283903, 0.018289319, 0.018295306, 0.018300889, 0.018305556, 0.018310722, 0.018313944, 0.018318292, 0.018324389, 0.018328306, 0.018333292, 0.018335819, 0.018341861], 'sourcesource_diff': [0, 3.832999999998227e-06, 4.236000000001211e-06, 6.292000000001491e-06, 3.7919999999989906e-06, 3.832999999998227e-06, 2.54200000000121e-06, 4.791000000000517e-06, 6.1529999999983265e-06, 5.111000000002086e-06, 4.221999999998172e-06, 5.223000000002115e-06, 3.611000000000586e-06, 6.2079999999971325e-06, 3.111000000000086e-06, 2.76400000000232e-06, 2.8059999999975604e-06, 3.069000000001376e-06, 3.249999999999781e-06, 3.5419999999987406e-06, 4.040999999999767e-06, 5.987000000002435e-06, 2.526999999998697e-06, 3.973000000000865e-06, 5.846999999999797e-06, 5.110999999998617e-06, 5.347000000002766e-06, 3.625000000000156e-06, 2.5139999999986007e-06, 6.097000000000047e-06, 5.985999999999492e-06, 4.653000000000296e-06, 3.4169999999986156e-06, 2.972000000000391e-06, 2.931000000001155e-06, 4.638000000001252e-06, 5.86199999999884e-06, 2.847000000000266e-06, 5.415999999997673e-06, 5.987000000002435e-06, 5.582999999999977e-06, 4.666999999999866e-06, 5.166000000000892e-06, 3.2219999999971716e-06, 4.34800000000124e-06, 6.097000000000047e-06, 3.916999999999116e-06, 4.986000000001961e-06, 2.526999999998697e-06, 6.042000000001241e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:50.787" endtime="20201112 12:25:50.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.779" endtime="20201112 12:25:50.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:50.802" level="INFO">${RESULT} = [{'time': 0.018130972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.0181415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:25:50.796" endtime="20201112 12:25:50.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:50.821" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:50.804" endtime="20201112 12:25:50.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:50.828" endtime="20201112 12:25:50.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.832" level="INFO">VALUE: [3.832999999998227e-06, 6.292000000001491e-06, 3.832999999998227e-06, 4.791000000000517e-06, 5.111000000002086e-06, 5.223000000002115e-06, 6.2079999999971325e-06, 2.76400000000232e-06, 3.069000000001376e-06, 3.5419999999987406e-06, 5.987000000002435e-06, 3.973000000000865e-06, 5.110999999998617e-06, 3.625000000000156e-06, 6.097000000000047e-06, 4.653000000000296e-06, 2.972000000000391e-06, 4.638000000001252e-06, 2.847000000000266e-06, 5.987000000002435e-06, 4.666999999999866e-06, 3.2219999999971716e-06, 6.097000000000047e-06, 4.986000000001961e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201112 12:25:50.831" endtime="20201112 12:25:50.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.823" endtime="20201112 12:25:50.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.836" endtime="20201112 12:25:50.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.839" endtime="20201112 12:25:50.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.838" endtime="20201112 12:25:50.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.834" endtime="20201112 12:25:50.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.215" endtime="20201112 12:25:50.860"></status>
</kw>
<msg timestamp="20201112 12:25:50.860" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.868" endtime="20201112 12:25:50.883"></status>
</kw>
<msg timestamp="20201112 12:25:50.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.867" endtime="20201112 12:25:50.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.886" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.884" endtime="20201112 12:25:50.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.887" endtime="20201112 12:25:50.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.864" endtime="20201112 12:25:50.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.862" endtime="20201112 12:25:50.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.896" endtime="20201112 12:25:51.166"></status>
</kw>
<msg timestamp="20201112 12:25:51.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:50.895" endtime="20201112 12:25:51.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.169" endtime="20201112 12:25:51.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.174" endtime="20201112 12:25:51.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.892" endtime="20201112 12:25:51.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.890" endtime="20201112 12:25:51.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.181" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:51.180" endtime="20201112 12:25:51.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.185" level="INFO">VALUE: [{'time': 0.017973681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.017982333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.017985681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017990903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017995458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.017999472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018005208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.018011236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018016958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018019819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018022944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018027264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.018030236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018035542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018039083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018044417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018049764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018052181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018057139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.01806225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018065111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018067958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018070917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.018074667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018078583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.018081917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.018084278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018089806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018092542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018098556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018104111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018110403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018116056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.018125028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.01812775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018132403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.018135125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018137792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018140958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.018145236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018151042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018154875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.018157736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018161958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018165486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.018170444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018174819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.018178361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:51.182" endtime="20201112 12:25:51.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.178" endtime="20201112 12:25:51.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:51.200" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:51.187" endtime="20201112 12:25:51.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.204" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:51.203" endtime="20201112 12:25:51.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.208" level="INFO">VALUE: {'eventdiff': [0, 2.3610000000028053e-06, 6.290999999998548e-06, 3.3480000000002397e-06, 5.221999999999172e-06, 4.554999999999837e-06, 4.014000000000101e-06, 5.736000000002711e-06, 6.0279999999982015e-06, 5.721999999999672e-06, 2.860999999999836e-06, 3.124999999999656e-06, 4.3200000000021e-06, 2.972000000000391e-06, 5.306000000000061e-06, 3.540999999999267e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 2.417000000001085e-06, 4.957999999999352e-06, 5.110999999998617e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.9590000000002947e-06, 3.750000000000281e-06, 3.915999999999642e-06, 3.3340000000006698e-06, 2.360999999999336e-06, 5.528000000001171e-06, 2.735999999999711e-06, 6.0139999999986316e-06, 5.555000000000837e-06, 6.292000000001491e-06, 5.6529999999978264e-06, 6.111000000003086e-06, 2.860999999999836e-06, 2.722000000000141e-06, 4.652999999996826e-06, 2.722000000000141e-06, 2.667000000001335e-06, 3.165999999998892e-06, 4.277999999999921e-06, 5.806000000000561e-06, 3.833000000001696e-06, 2.860999999999836e-06, 4.221999999998172e-06, 3.52800000000264e-06, 4.957999999999352e-06, 4.3749999999974365e-06, 3.54200000000221e-06], 'time': [0.017973681, 0.017976042, 0.017982333, 0.017985681, 0.017990903, 0.017995458, 0.017999472, 0.018005208, 0.018011236, 0.018016958, 0.018019819, 0.018022944, 0.018027264, 0.018030236, 0.018035542, 0.018039083, 0.018044417, 0.018049764, 0.018052181, 0.018057139, 0.01806225, 0.018065111, 0.018067958, 0.018070917, 0.018074667, 0.018078583, 0.018081917, 0.018084278, 0.018089806, 0.018092542, 0.018098556, 0.018104111, 0.018110403, 0.018116056, 0.018122167, 0.018125028, 0.01812775, 0.018132403, 0.018135125, 0.018137792, 0.018140958, 0.018145236, 0.018151042, 0.018154875, 0.018157736, 0.018161958, 0.018165486, 0.018170444, 0.018174819, 0.018178361], 'sourcesource_diff': [0, 2.3610000000028053e-06, 6.290999999998548e-06, 3.3480000000002397e-06, 5.221999999999172e-06, 4.554999999999837e-06, 4.014000000000101e-06, 5.736000000002711e-06, 6.0279999999982015e-06, 5.721999999999672e-06, 2.860999999999836e-06, 3.124999999999656e-06, 4.3200000000021e-06, 2.972000000000391e-06, 5.306000000000061e-06, 3.540999999999267e-06, 5.3339999999992005e-06, 5.346999999999297e-06, 2.417000000001085e-06, 4.957999999999352e-06, 5.110999999998617e-06, 2.860999999999836e-06, 2.847000000000266e-06, 2.9590000000002947e-06, 3.750000000000281e-06, 3.915999999999642e-06, 3.3340000000006698e-06, 2.360999999999336e-06, 5.528000000001171e-06, 2.735999999999711e-06, 6.0139999999986316e-06, 5.555000000000837e-06, 6.292000000001491e-06, 5.6529999999978264e-06, 6.111000000003086e-06, 2.860999999999836e-06, 2.722000000000141e-06, 4.652999999996826e-06, 2.722000000000141e-06, 2.667000000001335e-06, 3.165999999998892e-06, 4.277999999999921e-06, 5.806000000000561e-06, 3.833000000001696e-06, 2.860999999999836e-06, 4.221999999998172e-06, 3.52800000000264e-06, 4.957999999999352e-06, 4.3749999999974365e-06, 3.54200000000221e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:51.205" endtime="20201112 12:25:51.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.201" endtime="20201112 12:25:51.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:51.212" level="INFO">${RESULT} = [{'time': 0.017976042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.017985681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:51.209" endtime="20201112 12:25:51.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:51.220" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:51.213" endtime="20201112 12:25:51.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.225" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:51.224" endtime="20201112 12:25:51.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.227" level="INFO">VALUE: [2.3610000000028053e-06, 3.3480000000002397e-06, 4.554999999999837e-06, 5.736000000002711e-06, 5.721999999999672e-06, 3.124999999999656e-06, 2.972000000000391e-06, 3.540999999999267e-06, 5.346999999999297e-06, 4.957999999999352e-06, 2.860999999999836e-06, 2.9590000000002947e-06, 3.915999999999642e-06, 2.360999999999336e-06, 2.735999999999711e-06, 5.555000000000837e-06, 5.6529999999978264e-06, 2.860999999999836e-06, 4.652999999996826e-06, 2.667000000001335e-06, 4.277999999999921e-06, 3.833000000001696e-06, 4.221999999998172e-06, 4.957999999999352e-06, 3.54200000000221e-06]</msg>
<status status="PASS" starttime="20201112 12:25:51.226" endtime="20201112 12:25:51.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.221" endtime="20201112 12:25:51.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.231" endtime="20201112 12:25:51.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:51.234" endtime="20201112 12:25:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.233" endtime="20201112 12:25:51.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.229" endtime="20201112 12:25:51.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.861" endtime="20201112 12:25:51.255"></status>
</kw>
<msg timestamp="20201112 12:25:51.255" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.263" endtime="20201112 12:25:51.278"></status>
</kw>
<msg timestamp="20201112 12:25:51.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.262" endtime="20201112 12:25:51.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.280" endtime="20201112 12:25:51.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.282" endtime="20201112 12:25:51.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.259" endtime="20201112 12:25:51.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.257" endtime="20201112 12:25:51.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.293" endtime="20201112 12:25:51.562"></status>
</kw>
<msg timestamp="20201112 12:25:51.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.291" endtime="20201112 12:25:51.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.565" endtime="20201112 12:25:51.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.571" endtime="20201112 12:25:51.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.287" endtime="20201112 12:25:51.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.285" endtime="20201112 12:25:51.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.578" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:51.577" endtime="20201112 12:25:51.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.582" level="INFO">VALUE: [{'time': 0.017936278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017946903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017950986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.017953778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017958875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017962417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017966833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017971361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017977653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017980375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017984986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017987778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017992181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017994528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018001292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018005208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9160000000031114e-06, 'source_diff': 3.9160000000031114e-06}, {'time': 0.018009514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018014778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.018020653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.018023236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.018028833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018033625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018039097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018042014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018045306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.018048458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.018050944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018054917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.018060986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018064375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018067569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.018072625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018078042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018081583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.01808525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.018094944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.138000000002752e-06, 'source_diff': 6.138000000002752e-06}, {'time': 0.018100542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018105528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018107875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018110222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.01811525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018121042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018126708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.018131556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.018134722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.018139278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:51.579" endtime="20201112 12:25:51.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.574" endtime="20201112 12:25:51.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:51.598" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:51.585" endtime="20201112 12:25:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.602" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:51.601" endtime="20201112 12:25:51.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.606" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 2.9029999999985456e-06, 3.986000000000961e-06, 3.736000000000711e-06, 4.082999999998477e-06, 2.79200000000146e-06, 5.096999999999047e-06, 3.54200000000221e-06, 4.416000000000142e-06, 4.528000000000171e-06, 6.291999999998021e-06, 2.722000000000141e-06, 4.611000000001586e-06, 2.7919999999979905e-06, 4.403000000000046e-06, 2.346999999999766e-06, 3.540999999999267e-06, 3.2230000000001147e-06, 3.9160000000031114e-06, 4.305999999999061e-06, 5.2639999999978815e-06, 5.875000000002406e-06, 2.583000000000446e-06, 5.596999999999547e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.9169999999981155e-06, 3.29200000000196e-06, 3.151999999999322e-06, 2.485999999999461e-06, 3.973000000000865e-06, 6.069000000000907e-06, 3.3889999999994758e-06, 3.1939999999980317e-06, 5.055999999999811e-06, 5.417000000000616e-06, 3.540999999999267e-06, 3.667000000002335e-06, 3.5559999999983105e-06, 6.138000000002752e-06, 5.5979999999990204e-06, 4.985999999998492e-06, 2.346999999999766e-06, 2.346999999999766e-06, 5.028000000000671e-06, 5.792000000000991e-06, 5.665999999997923e-06, 4.84800000000174e-06, 3.165999999998892e-06, 4.55600000000278e-06], 'time': [0.017936278, 0.017939181, 0.017943167, 0.017946903, 0.017950986, 0.017953778, 0.017958875, 0.017962417, 0.017966833, 0.017971361, 0.017977653, 0.017980375, 0.017984986, 0.017987778, 0.017992181, 0.017994528, 0.017998069, 0.018001292, 0.018005208, 0.018009514, 0.018014778, 0.018020653, 0.018023236, 0.018028833, 0.018033625, 0.018039097, 0.018042014, 0.018045306, 0.018048458, 0.018050944, 0.018054917, 0.018060986, 0.018064375, 0.018067569, 0.018072625, 0.018078042, 0.018081583, 0.01808525, 0.018088806, 0.018094944, 0.018100542, 0.018105528, 0.018107875, 0.018110222, 0.01811525, 0.018121042, 0.018126708, 0.018131556, 0.018134722, 0.018139278], 'sourcesource_diff': [0, 2.9029999999985456e-06, 3.986000000000961e-06, 3.736000000000711e-06, 4.082999999998477e-06, 2.79200000000146e-06, 5.096999999999047e-06, 3.54200000000221e-06, 4.416000000000142e-06, 4.528000000000171e-06, 6.291999999998021e-06, 2.722000000000141e-06, 4.611000000001586e-06, 2.7919999999979905e-06, 4.403000000000046e-06, 2.346999999999766e-06, 3.540999999999267e-06, 3.2230000000001147e-06, 3.9160000000031114e-06, 4.305999999999061e-06, 5.2639999999978815e-06, 5.875000000002406e-06, 2.583000000000446e-06, 5.596999999999547e-06, 4.791999999999991e-06, 5.471999999999422e-06, 2.9169999999981155e-06, 3.29200000000196e-06, 3.151999999999322e-06, 2.485999999999461e-06, 3.973000000000865e-06, 6.069000000000907e-06, 3.3889999999994758e-06, 3.1939999999980317e-06, 5.055999999999811e-06, 5.417000000000616e-06, 3.540999999999267e-06, 3.667000000002335e-06, 3.5559999999983105e-06, 6.138000000002752e-06, 5.5979999999990204e-06, 4.985999999998492e-06, 2.346999999999766e-06, 2.346999999999766e-06, 5.028000000000671e-06, 5.792000000000991e-06, 5.665999999997923e-06, 4.84800000000174e-06, 3.165999999998892e-06, 4.55600000000278e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:51.603" endtime="20201112 12:25:51.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.599" endtime="20201112 12:25:51.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:51.610" level="INFO">${RESULT} = [{'time': 0.017939181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017946903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:51.607" endtime="20201112 12:25:51.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:51.619" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:51.611" endtime="20201112 12:25:51.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.623" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:51.622" endtime="20201112 12:25:51.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.625" level="INFO">VALUE: [2.9029999999985456e-06, 3.736000000000711e-06, 2.79200000000146e-06, 3.54200000000221e-06, 4.528000000000171e-06, 2.722000000000141e-06, 2.7919999999979905e-06, 2.346999999999766e-06, 3.2230000000001147e-06, 4.305999999999061e-06, 5.875000000002406e-06, 5.596999999999547e-06, 5.471999999999422e-06, 3.29200000000196e-06, 2.485999999999461e-06, 6.069000000000907e-06, 3.1939999999980317e-06, 5.417000000000616e-06, 3.667000000002335e-06, 6.138000000002752e-06, 4.985999999998492e-06, 2.346999999999766e-06, 5.792000000000991e-06, 4.84800000000174e-06, 4.55600000000278e-06]</msg>
<status status="PASS" starttime="20201112 12:25:51.624" endtime="20201112 12:25:51.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.619" endtime="20201112 12:25:51.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.629" endtime="20201112 12:25:51.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:51.633" endtime="20201112 12:25:51.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.631" endtime="20201112 12:25:51.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.627" endtime="20201112 12:25:51.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.256" endtime="20201112 12:25:51.653"></status>
</kw>
<msg timestamp="20201112 12:25:51.654" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.662" endtime="20201112 12:25:51.676"></status>
</kw>
<msg timestamp="20201112 12:25:51.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.660" endtime="20201112 12:25:51.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.679" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:51.677" endtime="20201112 12:25:51.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.680" endtime="20201112 12:25:51.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.657" endtime="20201112 12:25:51.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.655" endtime="20201112 12:25:51.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.690" endtime="20201112 12:25:51.960"></status>
</kw>
<msg timestamp="20201112 12:25:51.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.689" endtime="20201112 12:25:51.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:51.963" endtime="20201112 12:25:51.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:51.969" endtime="20201112 12:25:51.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.686" endtime="20201112 12:25:51.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.684" endtime="20201112 12:25:51.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.976" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:51.974" endtime="20201112 12:25:51.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:51.979" level="INFO">VALUE: [{'time': 0.017946931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.0179575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017960583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0829999999974766e-06, 'source_diff': 3.0829999999974766e-06}, {'time': 0.017963556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017967361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.017971097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.017976806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.709000000003045e-06, 'source_diff': 5.709000000003045e-06}, {'time': 0.017982653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017985556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017989097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017993639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017997736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018001361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018003903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018006792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018010264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018015556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.018021111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018026625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.01802975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.018033264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018036306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018039903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018044694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018048556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.018054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.018057125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018063417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018069194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.018072986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018076833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018082319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018084736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018088319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.018092181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.018094542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.018100069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.018105097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018107944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018113347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018118903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.01812375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018126306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5559999999973104e-06, 'source_diff': 2.5559999999973104e-06}, {'time': 0.018131139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018136125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018142222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018146319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018150111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018154264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:51.977" endtime="20201112 12:25:51.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.972" endtime="20201112 12:25:51.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:51.996" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:51.982" endtime="20201112 12:25:51.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.000" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:51.999" endtime="20201112 12:25:52.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.003" level="INFO">VALUE: {'eventdiff': [0, 5.721999999999672e-06, 4.847000000002266e-06, 3.0829999999974766e-06, 2.9729999999998646e-06, 3.8050000000025563e-06, 3.7359999999972415e-06, 5.709000000003045e-06, 5.846999999999797e-06, 2.9029999999985456e-06, 3.540999999999267e-06, 4.541999999999741e-06, 4.097000000001516e-06, 3.625000000000156e-06, 2.54200000000121e-06, 2.8889999999989757e-06, 3.472000000000891e-06, 5.291999999997021e-06, 5.555000000000837e-06, 5.514000000001601e-06, 3.124999999999656e-06, 3.5139999999996008e-06, 3.0419999999982406e-06, 3.597000000001016e-06, 4.791000000000517e-06, 3.86200000000031e-06, 5.776999999998478e-06, 2.79200000000146e-06, 6.291999999998021e-06, 5.777000000001947e-06, 3.7919999999989906e-06, 3.847000000001266e-06, 5.485999999998992e-06, 2.417000000001085e-06, 3.5829999999979767e-06, 3.86200000000031e-06, 2.3610000000028053e-06, 5.526999999998228e-06, 5.028000000000671e-06, 2.847000000000266e-06, 5.402999999997576e-06, 5.556000000000311e-06, 4.847000000002266e-06, 2.5559999999973104e-06, 4.833000000002696e-06, 4.985999999998492e-06, 6.097000000000047e-06, 4.097000000001516e-06, 3.7919999999989906e-06, 4.152999999999796e-06], 'time': [0.017946931, 0.017952653, 0.0179575, 0.017960583, 0.017963556, 0.017967361, 0.017971097, 0.017976806, 0.017982653, 0.017985556, 0.017989097, 0.017993639, 0.017997736, 0.018001361, 0.018003903, 0.018006792, 0.018010264, 0.018015556, 0.018021111, 0.018026625, 0.01802975, 0.018033264, 0.018036306, 0.018039903, 0.018044694, 0.018048556, 0.018054333, 0.018057125, 0.018063417, 0.018069194, 0.018072986, 0.018076833, 0.018082319, 0.018084736, 0.018088319, 0.018092181, 0.018094542, 0.018100069, 0.018105097, 0.018107944, 0.018113347, 0.018118903, 0.01812375, 0.018126306, 0.018131139, 0.018136125, 0.018142222, 0.018146319, 0.018150111, 0.018154264], 'sourcesource_diff': [0, 5.721999999999672e-06, 4.847000000002266e-06, 3.0829999999974766e-06, 2.9729999999998646e-06, 3.8050000000025563e-06, 3.7359999999972415e-06, 5.709000000003045e-06, 5.846999999999797e-06, 2.9029999999985456e-06, 3.540999999999267e-06, 4.541999999999741e-06, 4.097000000001516e-06, 3.625000000000156e-06, 2.54200000000121e-06, 2.8889999999989757e-06, 3.472000000000891e-06, 5.291999999997021e-06, 5.555000000000837e-06, 5.514000000001601e-06, 3.124999999999656e-06, 3.5139999999996008e-06, 3.0419999999982406e-06, 3.597000000001016e-06, 4.791000000000517e-06, 3.86200000000031e-06, 5.776999999998478e-06, 2.79200000000146e-06, 6.291999999998021e-06, 5.777000000001947e-06, 3.7919999999989906e-06, 3.847000000001266e-06, 5.485999999998992e-06, 2.417000000001085e-06, 3.5829999999979767e-06, 3.86200000000031e-06, 2.3610000000028053e-06, 5.526999999998228e-06, 5.028000000000671e-06, 2.847000000000266e-06, 5.402999999997576e-06, 5.556000000000311e-06, 4.847000000002266e-06, 2.5559999999973104e-06, 4.833000000002696e-06, 4.985999999998492e-06, 6.097000000000047e-06, 4.097000000001516e-06, 3.7919999999989906e-06, 4.152999999999796e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:52.001" endtime="20201112 12:25:52.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.997" endtime="20201112 12:25:52.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.008" level="INFO">${RESULT} = [{'time': 0.017952653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017960583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:52.005" endtime="20201112 12:25:52.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.016" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.009" endtime="20201112 12:25:52.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.021" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.020" endtime="20201112 12:25:52.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.023" level="INFO">VALUE: [5.721999999999672e-06, 3.0829999999974766e-06, 3.8050000000025563e-06, 5.709000000003045e-06, 2.9029999999985456e-06, 4.541999999999741e-06, 3.625000000000156e-06, 2.8889999999989757e-06, 5.291999999997021e-06, 5.514000000001601e-06, 3.5139999999996008e-06, 3.597000000001016e-06, 3.86200000000031e-06, 2.79200000000146e-06, 5.777000000001947e-06, 3.847000000001266e-06, 2.417000000001085e-06, 3.86200000000031e-06, 5.526999999998228e-06, 2.847000000000266e-06, 5.556000000000311e-06, 2.5559999999973104e-06, 4.985999999998492e-06, 4.097000000001516e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201112 12:25:52.022" endtime="20201112 12:25:52.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.017" endtime="20201112 12:25:52.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.027" endtime="20201112 12:25:52.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.030" endtime="20201112 12:25:52.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.029" endtime="20201112 12:25:52.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.025" endtime="20201112 12:25:52.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:51.654" endtime="20201112 12:25:52.051"></status>
</kw>
<msg timestamp="20201112 12:25:52.052" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.060" endtime="20201112 12:25:52.075"></status>
</kw>
<msg timestamp="20201112 12:25:52.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.059" endtime="20201112 12:25:52.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.078" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.076" endtime="20201112 12:25:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.079" endtime="20201112 12:25:52.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.055" endtime="20201112 12:25:52.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.054" endtime="20201112 12:25:52.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.088" endtime="20201112 12:25:52.358"></status>
</kw>
<msg timestamp="20201112 12:25:52.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018869208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.087" endtime="20201112 12:25:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018869208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.361" endtime="20201112 12:25:52.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.366" endtime="20201112 12:25:52.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.084" endtime="20201112 12:25:52.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.082" endtime="20201112 12:25:52.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.373" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:52.372" endtime="20201112 12:25:52.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.377" level="INFO">VALUE: [{'time': 0.018864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018869208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018874181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.018879486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018884639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018888167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018894542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.018898681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018902167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018907514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018911806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018916333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.01891975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018925931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018931958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018937569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.018941097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018945208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018947917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.018950722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.018954611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018960708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018963625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018968542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018972083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018975542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.018980153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018985069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018988306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2369999999996846e-06, 'source_diff': 3.2369999999996846e-06}, {'time': 0.018992458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.018996681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.019000583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.019003944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.019006792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.848000000003209e-06, 'source_diff': 2.848000000003209e-06}, {'time': 0.019010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.019015375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.019020444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.019024889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.019028611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019034528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.019038764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.019042597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.019046889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.019050319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.019056528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.019062722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.019066347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.019071403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.019073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.019076722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.889000000002445e-06, 'source_diff': 2.889000000002445e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:52.374" endtime="20201112 12:25:52.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.370" endtime="20201112 12:25:52.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:52.393" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:52.379" endtime="20201112 12:25:52.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.397" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:52.396" endtime="20201112 12:25:52.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.400" level="INFO">VALUE: {'eventdiff': [0, 5.026999999997728e-06, 4.973000000001865e-06, 5.305000000000587e-06, 5.153000000000796e-06, 3.5279999999991707e-06, 6.374999999999437e-06, 4.139000000000226e-06, 3.486000000000461e-06, 5.346999999999297e-06, 4.291999999999491e-06, 4.527000000000697e-06, 3.4169999999986156e-06, 6.181000000000936e-06, 6.026999999998728e-06, 5.611000000002586e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.7090000000000447e-06, 2.804999999998087e-06, 3.888999999999976e-06, 6.097000000000047e-06, 2.917000000001585e-06, 4.917000000000116e-06, 3.540999999999267e-06, 3.4590000000007948e-06, 4.610999999998117e-06, 4.916000000000642e-06, 3.2369999999996846e-06, 4.152000000000322e-06, 4.223000000001115e-06, 3.902000000000072e-06, 3.3609999999968665e-06, 2.848000000003209e-06, 3.4859999999969915e-06, 5.097000000002516e-06, 5.068999999999907e-06, 4.4449999999987555e-06, 3.722000000001141e-06, 5.916999999997646e-06, 4.236000000001211e-06, 3.833000000001696e-06, 4.291999999999491e-06, 3.429999999998712e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 3.625000000000156e-06, 5.055999999999811e-06, 2.4299999999977118e-06, 2.889000000002445e-06], 'time': [0.018864181, 0.018869208, 0.018874181, 0.018879486, 0.018884639, 0.018888167, 0.018894542, 0.018898681, 0.018902167, 0.018907514, 0.018911806, 0.018916333, 0.01891975, 0.018925931, 0.018931958, 0.018937569, 0.018941097, 0.018945208, 0.018947917, 0.018950722, 0.018954611, 0.018960708, 0.018963625, 0.018968542, 0.018972083, 0.018975542, 0.018980153, 0.018985069, 0.018988306, 0.018992458, 0.018996681, 0.019000583, 0.019003944, 0.019006792, 0.019010278, 0.019015375, 0.019020444, 0.019024889, 0.019028611, 0.019034528, 0.019038764, 0.019042597, 0.019046889, 0.019050319, 0.019056528, 0.019062722, 0.019066347, 0.019071403, 0.019073833, 0.019076722], 'sourcesource_diff': [0, 5.026999999997728e-06, 4.973000000001865e-06, 5.305000000000587e-06, 5.153000000000796e-06, 3.5279999999991707e-06, 6.374999999999437e-06, 4.139000000000226e-06, 3.486000000000461e-06, 5.346999999999297e-06, 4.291999999999491e-06, 4.527000000000697e-06, 3.4169999999986156e-06, 6.181000000000936e-06, 6.026999999998728e-06, 5.611000000002586e-06, 3.5279999999991707e-06, 4.111000000001086e-06, 2.7090000000000447e-06, 2.804999999998087e-06, 3.888999999999976e-06, 6.097000000000047e-06, 2.917000000001585e-06, 4.917000000000116e-06, 3.540999999999267e-06, 3.4590000000007948e-06, 4.610999999998117e-06, 4.916000000000642e-06, 3.2369999999996846e-06, 4.152000000000322e-06, 4.223000000001115e-06, 3.902000000000072e-06, 3.3609999999968665e-06, 2.848000000003209e-06, 3.4859999999969915e-06, 5.097000000002516e-06, 5.068999999999907e-06, 4.4449999999987555e-06, 3.722000000001141e-06, 5.916999999997646e-06, 4.236000000001211e-06, 3.833000000001696e-06, 4.291999999999491e-06, 3.429999999998712e-06, 6.2090000000000756e-06, 6.194000000001032e-06, 3.625000000000156e-06, 5.055999999999811e-06, 2.4299999999977118e-06, 2.889000000002445e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:52.398" endtime="20201112 12:25:52.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.394" endtime="20201112 12:25:52.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.405" level="INFO">${RESULT} = [{'time': 0.018869208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018879486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:52.402" endtime="20201112 12:25:52.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.413" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.406" endtime="20201112 12:25:52.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.417" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.416" endtime="20201112 12:25:52.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.420" level="INFO">VALUE: [5.026999999997728e-06, 5.305000000000587e-06, 3.5279999999991707e-06, 4.139000000000226e-06, 5.346999999999297e-06, 4.527000000000697e-06, 6.181000000000936e-06, 5.611000000002586e-06, 4.111000000001086e-06, 2.804999999998087e-06, 6.097000000000047e-06, 4.917000000000116e-06, 3.4590000000007948e-06, 4.916000000000642e-06, 4.152000000000322e-06, 3.902000000000072e-06, 2.848000000003209e-06, 5.097000000002516e-06, 4.4449999999987555e-06, 5.916999999997646e-06, 3.833000000001696e-06, 3.429999999998712e-06, 6.194000000001032e-06, 5.055999999999811e-06, 2.889000000002445e-06]</msg>
<status status="PASS" starttime="20201112 12:25:52.418" endtime="20201112 12:25:52.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.414" endtime="20201112 12:25:52.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.423" endtime="20201112 12:25:52.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.427" endtime="20201112 12:25:52.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.425" endtime="20201112 12:25:52.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.422" endtime="20201112 12:25:52.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.052" endtime="20201112 12:25:52.449"></status>
</kw>
<msg timestamp="20201112 12:25:52.449" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.457" endtime="20201112 12:25:52.471"></status>
</kw>
<msg timestamp="20201112 12:25:52.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.455" endtime="20201112 12:25:52.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.473" endtime="20201112 12:25:52.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.475" endtime="20201112 12:25:52.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.452" endtime="20201112 12:25:52.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.451" endtime="20201112 12:25:52.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.485" endtime="20201112 12:25:52.754"></status>
</kw>
<msg timestamp="20201112 12:25:52.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.483" endtime="20201112 12:25:52.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.757" endtime="20201112 12:25:52.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.763" endtime="20201112 12:25:52.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.481" endtime="20201112 12:25:52.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.479" endtime="20201112 12:25:52.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.769" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:52.768" endtime="20201112 12:25:52.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.773" level="INFO">VALUE: [{'time': 0.018651347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018658569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018661472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018665875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018671944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.018675653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.018678361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.018681292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.018685194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018689792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.018696014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018700514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018703222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.018708194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018713542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.018717792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.01872375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018728847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018733569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018737069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018741333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018749611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018753778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01875625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018760833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.018763819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018766847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018770986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018773986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018778847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018782944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018786292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.018797806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.018801972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018807875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018812458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.01881775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018823681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930999999997216e-06, 'source_diff': 5.930999999997216e-06}, {'time': 0.018827486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.018833403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.018836292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.889000000002445e-06, 'source_diff': 2.889000000002445e-06}, {'time': 0.018841403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018846806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018849653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018854889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018860736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018864583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:52.770" endtime="20201112 12:25:52.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.766" endtime="20201112 12:25:52.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:52.789" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:52.776" endtime="20201112 12:25:52.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.793" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:52.792" endtime="20201112 12:25:52.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.796" level="INFO">VALUE: {'eventdiff': [0, 2.79200000000146e-06, 4.429999999999712e-06, 2.9029999999985456e-06, 4.403000000000046e-06, 6.069000000000907e-06, 3.709000000001045e-06, 2.708000000000571e-06, 2.9309999999976855e-06, 3.902000000000072e-06, 4.59800000000149e-06, 6.222000000000172e-06, 4.500000000001031e-06, 2.7079999999971016e-06, 4.972000000002391e-06, 5.34799999999877e-06, 4.250000000000781e-06, 5.958000000000352e-06, 5.096999999999047e-06, 4.721999999998672e-06, 3.500000000000031e-06, 4.264000000000351e-06, 3.667000000002335e-06, 4.610999999998117e-06, 4.166999999999366e-06, 2.471999999999891e-06, 4.583000000002446e-06, 2.985999999999961e-06, 3.0279999999986706e-06, 4.139000000000226e-06, 2.999999999999531e-06, 4.861000000001836e-06, 4.096999999998047e-06, 3.3480000000002397e-06, 6.055000000001337e-06, 5.4589999999993255e-06, 4.165999999999892e-06, 5.903000000001546e-06, 4.582999999998977e-06, 5.292000000000491e-06, 5.930999999997216e-06, 3.8050000000025563e-06, 5.916999999997646e-06, 2.889000000002445e-06, 5.110999999998617e-06, 5.403000000001046e-06, 2.847000000000266e-06, 5.235999999998742e-06, 5.846999999999797e-06, 3.847000000001266e-06], 'time': [0.018651347, 0.018654139, 0.018658569, 0.018661472, 0.018665875, 0.018671944, 0.018675653, 0.018678361, 0.018681292, 0.018685194, 0.018689792, 0.018696014, 0.018700514, 0.018703222, 0.018708194, 0.018713542, 0.018717792, 0.01872375, 0.018728847, 0.018733569, 0.018737069, 0.018741333, 0.018745, 0.018749611, 0.018753778, 0.01875625, 0.018760833, 0.018763819, 0.018766847, 0.018770986, 0.018773986, 0.018778847, 0.018782944, 0.018786292, 0.018792347, 0.018797806, 0.018801972, 0.018807875, 0.018812458, 0.01881775, 0.018823681, 0.018827486, 0.018833403, 0.018836292, 0.018841403, 0.018846806, 0.018849653, 0.018854889, 0.018860736, 0.018864583], 'sourcesource_diff': [0, 2.79200000000146e-06, 4.429999999999712e-06, 2.9029999999985456e-06, 4.403000000000046e-06, 6.069000000000907e-06, 3.709000000001045e-06, 2.708000000000571e-06, 2.9309999999976855e-06, 3.902000000000072e-06, 4.59800000000149e-06, 6.222000000000172e-06, 4.500000000001031e-06, 2.7079999999971016e-06, 4.972000000002391e-06, 5.34799999999877e-06, 4.250000000000781e-06, 5.958000000000352e-06, 5.096999999999047e-06, 4.721999999998672e-06, 3.500000000000031e-06, 4.264000000000351e-06, 3.667000000002335e-06, 4.610999999998117e-06, 4.166999999999366e-06, 2.471999999999891e-06, 4.583000000002446e-06, 2.985999999999961e-06, 3.0279999999986706e-06, 4.139000000000226e-06, 2.999999999999531e-06, 4.861000000001836e-06, 4.096999999998047e-06, 3.3480000000002397e-06, 6.055000000001337e-06, 5.4589999999993255e-06, 4.165999999999892e-06, 5.903000000001546e-06, 4.582999999998977e-06, 5.292000000000491e-06, 5.930999999997216e-06, 3.8050000000025563e-06, 5.916999999997646e-06, 2.889000000002445e-06, 5.110999999998617e-06, 5.403000000001046e-06, 2.847000000000266e-06, 5.235999999998742e-06, 5.846999999999797e-06, 3.847000000001266e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:52.794" endtime="20201112 12:25:52.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.790" endtime="20201112 12:25:52.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:52.801" level="INFO">${RESULT} = [{'time': 0.018654139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018661472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:25:52.798" endtime="20201112 12:25:52.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:52.809" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:52.802" endtime="20201112 12:25:52.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.814" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:52.813" endtime="20201112 12:25:52.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.816" level="INFO">VALUE: [2.79200000000146e-06, 2.9029999999985456e-06, 6.069000000000907e-06, 2.708000000000571e-06, 3.902000000000072e-06, 6.222000000000172e-06, 2.7079999999971016e-06, 5.34799999999877e-06, 5.958000000000352e-06, 4.721999999998672e-06, 4.264000000000351e-06, 4.610999999998117e-06, 2.471999999999891e-06, 2.985999999999961e-06, 4.139000000000226e-06, 4.861000000001836e-06, 3.3480000000002397e-06, 5.4589999999993255e-06, 5.903000000001546e-06, 5.292000000000491e-06, 3.8050000000025563e-06, 2.889000000002445e-06, 5.403000000001046e-06, 5.235999999998742e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201112 12:25:52.815" endtime="20201112 12:25:52.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.810" endtime="20201112 12:25:52.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.820" endtime="20201112 12:25:52.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:52.823" endtime="20201112 12:25:52.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.822" endtime="20201112 12:25:52.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.818" endtime="20201112 12:25:52.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.449" endtime="20201112 12:25:52.844"></status>
</kw>
<msg timestamp="20201112 12:25:52.844" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.852" endtime="20201112 12:25:52.867"></status>
</kw>
<msg timestamp="20201112 12:25:52.867" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.851" endtime="20201112 12:25:52.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:52.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:52.868" endtime="20201112 12:25:52.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.871" endtime="20201112 12:25:52.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.848" endtime="20201112 12:25:52.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.846" endtime="20201112 12:25:52.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:52.880" endtime="20201112 12:25:53.147"></status>
</kw>
<msg timestamp="20201112 12:25:53.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018085653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:52.879" endtime="20201112 12:25:53.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018085653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.150" endtime="20201112 12:25:53.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.156" endtime="20201112 12:25:53.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.876" endtime="20201112 12:25:53.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.874" endtime="20201112 12:25:53.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.163" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.162" endtime="20201112 12:25:53.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.167" level="INFO">VALUE: [{'time': 0.018080347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018085653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018089556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018094222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018097597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018103736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018108708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018114014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018116917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018120333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018125736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.018129153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018131639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.018137667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018140889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018147181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018153472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018158583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018162667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018168889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018174736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018178472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018181444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018184861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018187208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018191056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.018193486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.018198319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018202986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018208042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018213875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018218222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018221792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.0182265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018232361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018236069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018241306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236999999998215e-06, 'source_diff': 5.236999999998215e-06}, {'time': 0.018246028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.0182515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018255458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.018260319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018265931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018272139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.018276056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018286125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018291667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018295014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018299181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018304972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:53.165" endtime="20201112 12:25:53.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.160" endtime="20201112 12:25:53.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.184" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:53.170" endtime="20201112 12:25:53.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.188" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.187" endtime="20201112 12:25:53.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.192" level="INFO">VALUE: {'eventdiff': [0, 5.306000000000061e-06, 3.902999999999546e-06, 4.666000000000392e-06, 3.374999999999906e-06, 6.1389999999987566e-06, 4.972000000002391e-06, 5.306000000000061e-06, 2.9029999999985456e-06, 3.415999999999142e-06, 5.403000000001046e-06, 3.4169999999986156e-06, 2.4860000000029303e-06, 6.0279999999982015e-06, 3.222000000000641e-06, 6.291999999998021e-06, 6.291000000002017e-06, 5.110999999998617e-06, 4.08400000000142e-06, 6.222000000000172e-06, 5.846999999999797e-06, 3.736000000000711e-06, 2.972000000000391e-06, 3.4169999999986156e-06, 2.346999999999766e-06, 3.84800000000074e-06, 2.4299999999977118e-06, 4.833000000002696e-06, 4.666999999999866e-06, 5.055999999999811e-06, 5.833000000000227e-06, 4.346999999998297e-06, 3.57000000000135e-06, 4.707999999999102e-06, 5.860999999999367e-06, 3.708000000001571e-06, 5.236999999998215e-06, 4.722000000002141e-06, 5.471999999999422e-06, 3.957999999998352e-06, 4.861000000001836e-06, 5.61199999999859e-06, 6.208000000000602e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.222000000000172e-06, 5.542000000000741e-06, 3.3469999999972966e-06, 4.167000000002835e-06, 5.790999999998048e-06], 'time': [0.018080347, 0.018085653, 0.018089556, 0.018094222, 0.018097597, 0.018103736, 0.018108708, 0.018114014, 0.018116917, 0.018120333, 0.018125736, 0.018129153, 0.018131639, 0.018137667, 0.018140889, 0.018147181, 0.018153472, 0.018158583, 0.018162667, 0.018168889, 0.018174736, 0.018178472, 0.018181444, 0.018184861, 0.018187208, 0.018191056, 0.018193486, 0.018198319, 0.018202986, 0.018208042, 0.018213875, 0.018218222, 0.018221792, 0.0182265, 0.018232361, 0.018236069, 0.018241306, 0.018246028, 0.0182515, 0.018255458, 0.018260319, 0.018265931, 0.018272139, 0.018276056, 0.018279903, 0.018286125, 0.018291667, 0.018295014, 0.018299181, 0.018304972], 'sourcesource_diff': [0, 5.306000000000061e-06, 3.902999999999546e-06, 4.666000000000392e-06, 3.374999999999906e-06, 6.1389999999987566e-06, 4.972000000002391e-06, 5.306000000000061e-06, 2.9029999999985456e-06, 3.415999999999142e-06, 5.403000000001046e-06, 3.4169999999986156e-06, 2.4860000000029303e-06, 6.0279999999982015e-06, 3.222000000000641e-06, 6.291999999998021e-06, 6.291000000002017e-06, 5.110999999998617e-06, 4.08400000000142e-06, 6.222000000000172e-06, 5.846999999999797e-06, 3.736000000000711e-06, 2.972000000000391e-06, 3.4169999999986156e-06, 2.346999999999766e-06, 3.84800000000074e-06, 2.4299999999977118e-06, 4.833000000002696e-06, 4.666999999999866e-06, 5.055999999999811e-06, 5.833000000000227e-06, 4.346999999998297e-06, 3.57000000000135e-06, 4.707999999999102e-06, 5.860999999999367e-06, 3.708000000001571e-06, 5.236999999998215e-06, 4.722000000002141e-06, 5.471999999999422e-06, 3.957999999998352e-06, 4.861000000001836e-06, 5.61199999999859e-06, 6.208000000000602e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.222000000000172e-06, 5.542000000000741e-06, 3.3469999999972966e-06, 4.167000000002835e-06, 5.790999999998048e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:53.190" endtime="20201112 12:25:53.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.185" endtime="20201112 12:25:53.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.196" level="INFO">${RESULT} = [{'time': 0.018085653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018094222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:53.193" endtime="20201112 12:25:53.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.204" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:53.197" endtime="20201112 12:25:53.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:53.208" endtime="20201112 12:25:53.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.211" level="INFO">VALUE: [5.306000000000061e-06, 4.666000000000392e-06, 6.1389999999987566e-06, 5.306000000000061e-06, 3.415999999999142e-06, 3.4169999999986156e-06, 6.0279999999982015e-06, 6.291999999998021e-06, 5.110999999998617e-06, 6.222000000000172e-06, 3.736000000000711e-06, 3.4169999999986156e-06, 3.84800000000074e-06, 4.833000000002696e-06, 5.055999999999811e-06, 4.346999999998297e-06, 4.707999999999102e-06, 3.708000000001571e-06, 4.722000000002141e-06, 3.957999999998352e-06, 5.61199999999859e-06, 3.916999999999116e-06, 6.222000000000172e-06, 3.3469999999972966e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201112 12:25:53.210" endtime="20201112 12:25:53.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.205" endtime="20201112 12:25:53.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.215" endtime="20201112 12:25:53.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.218" endtime="20201112 12:25:53.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.217" endtime="20201112 12:25:53.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.213" endtime="20201112 12:25:53.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:52.845" endtime="20201112 12:25:53.239"></status>
</kw>
<msg timestamp="20201112 12:25:53.240" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.249" endtime="20201112 12:25:53.265"></status>
</kw>
<msg timestamp="20201112 12:25:53.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.247" endtime="20201112 12:25:53.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.267" endtime="20201112 12:25:53.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.269" endtime="20201112 12:25:53.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.243" endtime="20201112 12:25:53.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.242" endtime="20201112 12:25:53.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.279" endtime="20201112 12:25:53.545"></status>
</kw>
<msg timestamp="20201112 12:25:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.277" endtime="20201112 12:25:53.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.548" endtime="20201112 12:25:53.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.554" endtime="20201112 12:25:53.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.274" endtime="20201112 12:25:53.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.273" endtime="20201112 12:25:53.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.562" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.561" endtime="20201112 12:25:53.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.566" level="INFO">VALUE: [{'time': 0.019964444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.019972639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.019976569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.019979333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.019982306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.019986028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019990444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.019996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.019999764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.020005944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.020010681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736999999997715e-06, 'source_diff': 4.736999999997715e-06}, {'time': 0.020015389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.020019792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020024542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.020028611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.020032972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.020038833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.020043958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.020048694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.020054681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.020058597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.020061319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.020067611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.020070333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.020076139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.020080431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.020083139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.020085931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.020091528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.020095222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.020100278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.020106083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.020112208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.020118028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.020120444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.020124111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.020128889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.020132681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.020137278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.020142819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.02014875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.020154833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.020158139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.020161347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.020166069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.020170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.020173403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.02017775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.020183111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:53.563" endtime="20201112 12:25:53.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.559" endtime="20201112 12:25:53.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.581" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:53.568" endtime="20201112 12:25:53.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.585" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.584" endtime="20201112 12:25:53.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.589" level="INFO">VALUE: {'eventdiff': [0, 3.4029999999990457e-06, 4.791999999999991e-06, 3.929999999999212e-06, 2.7639999999988507e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.416000000000142e-06, 6.2229999999996455e-06, 3.097000000000516e-06, 6.180000000001462e-06, 4.736999999997715e-06, 4.708000000002571e-06, 4.403000000000046e-06, 4.7499999999978115e-06, 4.069000000002376e-06, 4.360999999997867e-06, 5.860999999999367e-06, 5.125000000001656e-06, 4.735999999998242e-06, 5.987000000002435e-06, 3.915999999999642e-06, 2.722000000000141e-06, 6.291999999998021e-06, 2.722000000000141e-06, 5.806000000000561e-06, 4.291999999999491e-06, 2.708000000000571e-06, 2.79200000000146e-06, 5.596999999999547e-06, 3.693999999998532e-06, 5.055999999999811e-06, 5.805000000001087e-06, 6.124999999999187e-06, 5.820000000000131e-06, 2.4160000000016113e-06, 3.6669999999988656e-06, 4.778000000000421e-06, 3.7919999999989906e-06, 4.597000000002016e-06, 5.540999999997798e-06, 5.931000000000686e-06, 6.083000000000477e-06, 3.3059999999980605e-06, 3.208000000001071e-06, 4.721999999998672e-06, 4.875000000001406e-06, 2.4589999999997947e-06, 4.347000000001766e-06, 5.360999999998867e-06], 'time': [0.019964444, 0.019967847, 0.019972639, 0.019976569, 0.019979333, 0.019982306, 0.019986028, 0.019990444, 0.019996667, 0.019999764, 0.020005944, 0.020010681, 0.020015389, 0.020019792, 0.020024542, 0.020028611, 0.020032972, 0.020038833, 0.020043958, 0.020048694, 0.020054681, 0.020058597, 0.020061319, 0.020067611, 0.020070333, 0.020076139, 0.020080431, 0.020083139, 0.020085931, 0.020091528, 0.020095222, 0.020100278, 0.020106083, 0.020112208, 0.020118028, 0.020120444, 0.020124111, 0.020128889, 0.020132681, 0.020137278, 0.020142819, 0.02014875, 0.020154833, 0.020158139, 0.020161347, 0.020166069, 0.020170944, 0.020173403, 0.02017775, 0.020183111], 'sourcesource_diff': [0, 3.4029999999990457e-06, 4.791999999999991e-06, 3.929999999999212e-06, 2.7639999999988507e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.416000000000142e-06, 6.2229999999996455e-06, 3.097000000000516e-06, 6.180000000001462e-06, 4.736999999997715e-06, 4.708000000002571e-06, 4.403000000000046e-06, 4.7499999999978115e-06, 4.069000000002376e-06, 4.360999999997867e-06, 5.860999999999367e-06, 5.125000000001656e-06, 4.735999999998242e-06, 5.987000000002435e-06, 3.915999999999642e-06, 2.722000000000141e-06, 6.291999999998021e-06, 2.722000000000141e-06, 5.806000000000561e-06, 4.291999999999491e-06, 2.708000000000571e-06, 2.79200000000146e-06, 5.596999999999547e-06, 3.693999999998532e-06, 5.055999999999811e-06, 5.805000000001087e-06, 6.124999999999187e-06, 5.820000000000131e-06, 2.4160000000016113e-06, 3.6669999999988656e-06, 4.778000000000421e-06, 3.7919999999989906e-06, 4.597000000002016e-06, 5.540999999997798e-06, 5.931000000000686e-06, 6.083000000000477e-06, 3.3059999999980605e-06, 3.208000000001071e-06, 4.721999999998672e-06, 4.875000000001406e-06, 2.4589999999997947e-06, 4.347000000001766e-06, 5.360999999998867e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:53.586" endtime="20201112 12:25:53.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.582" endtime="20201112 12:25:53.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.593" level="INFO">${RESULT} = [{'time': 0.019967847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.019976569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:53.590" endtime="20201112 12:25:53.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.601" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:53.594" endtime="20201112 12:25:53.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.606" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:53.605" endtime="20201112 12:25:53.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.609" level="INFO">VALUE: [3.4029999999990457e-06, 3.929999999999212e-06, 2.9729999999998646e-06, 4.416000000000142e-06, 3.097000000000516e-06, 4.736999999997715e-06, 4.403000000000046e-06, 4.069000000002376e-06, 5.860999999999367e-06, 4.735999999998242e-06, 3.915999999999642e-06, 6.291999999998021e-06, 5.806000000000561e-06, 2.708000000000571e-06, 5.596999999999547e-06, 5.055999999999811e-06, 6.124999999999187e-06, 2.4160000000016113e-06, 4.778000000000421e-06, 4.597000000002016e-06, 5.931000000000686e-06, 3.3059999999980605e-06, 4.721999999998672e-06, 2.4589999999997947e-06, 5.360999999998867e-06]</msg>
<status status="PASS" starttime="20201112 12:25:53.607" endtime="20201112 12:25:53.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.602" endtime="20201112 12:25:53.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.613" endtime="20201112 12:25:53.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.617" endtime="20201112 12:25:53.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.615" endtime="20201112 12:25:53.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.611" endtime="20201112 12:25:53.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.240" endtime="20201112 12:25:53.638"></status>
</kw>
<msg timestamp="20201112 12:25:53.638" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.646" endtime="20201112 12:25:53.661"></status>
</kw>
<msg timestamp="20201112 12:25:53.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.644" endtime="20201112 12:25:53.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.662" endtime="20201112 12:25:53.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.665" endtime="20201112 12:25:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.642" endtime="20201112 12:25:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.640" endtime="20201112 12:25:53.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.675" endtime="20201112 12:25:53.942"></status>
</kw>
<msg timestamp="20201112 12:25:53.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018063819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018066444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.674" endtime="20201112 12:25:53.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018063819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018066444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:53.945" endtime="20201112 12:25:53.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.951" endtime="20201112 12:25:53.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.670" endtime="20201112 12:25:53.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.668" endtime="20201112 12:25:53.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.958" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:53.957" endtime="20201112 12:25:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.962" level="INFO">VALUE: [{'time': 0.018063819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018066444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.018070833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018076528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018081875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018085889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018090875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018095333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.018100125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018106236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018109597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018114056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.018116903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.01812025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018124486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.018127403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018129861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018133167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.01813675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.018140486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018144347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018148472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018151861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018158069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.018160431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.362000000002279e-06, 'source_diff': 2.362000000002279e-06}, {'time': 0.018164972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018175778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.018181194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018185236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018191514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018197486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018200958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018205806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.018210333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.018214694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018218597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018223764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018228806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018232597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018236319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018240361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018243458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018249486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018254486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.01826025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018264236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018267889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018273, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:53.959" endtime="20201112 12:25:53.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.954" endtime="20201112 12:25:53.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:53.977" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:53.964" endtime="20201112 12:25:53.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.981" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:53.980" endtime="20201112 12:25:53.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.984" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 2.6250000000026252e-06, 4.389000000000476e-06, 5.695000000000006e-06, 5.346999999999297e-06, 4.014000000000101e-06, 4.985999999998492e-06, 4.458000000002321e-06, 4.791999999999991e-06, 6.110999999999617e-06, 3.361000000000336e-06, 4.458999999998325e-06, 2.847000000000266e-06, 3.347000000000766e-06, 4.2359999999977416e-06, 2.917000000001585e-06, 2.458000000000321e-06, 3.3059999999980605e-06, 3.583000000001446e-06, 3.736000000000711e-06, 3.861000000000836e-06, 4.1249999999971865e-06, 3.3889999999994758e-06, 6.208000000000602e-06, 2.362000000002279e-06, 4.541000000000267e-06, 5.971999999999922e-06, 4.8339999999987004e-06, 5.416000000001142e-06, 4.041999999999241e-06, 3.5419999999987406e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.472000000000891e-06, 4.84800000000174e-06, 4.526999999997228e-06, 4.361000000001336e-06, 3.902999999999546e-06, 5.167000000000366e-06, 5.042000000000241e-06, 3.790999999999517e-06, 3.722000000001141e-06, 4.041999999999241e-06, 3.097000000000516e-06, 6.0279999999982015e-06, 5.000000000001531e-06, 5.7639999999983815e-06, 3.986000000000961e-06, 3.6529999999992957e-06, 5.111000000002086e-06], 'time': [0.018063819, 0.018066444, 0.018070833, 0.018076528, 0.018081875, 0.018085889, 0.018090875, 0.018095333, 0.018100125, 0.018106236, 0.018109597, 0.018114056, 0.018116903, 0.01812025, 0.018124486, 0.018127403, 0.018129861, 0.018133167, 0.01813675, 0.018140486, 0.018144347, 0.018148472, 0.018151861, 0.018158069, 0.018160431, 0.018164972, 0.018170944, 0.018175778, 0.018181194, 0.018185236, 0.018188778, 0.018191514, 0.018197486, 0.018200958, 0.018205806, 0.018210333, 0.018214694, 0.018218597, 0.018223764, 0.018228806, 0.018232597, 0.018236319, 0.018240361, 0.018243458, 0.018249486, 0.018254486, 0.01826025, 0.018264236, 0.018267889, 0.018273], 'sourcesource_diff': [0, 2.6250000000026252e-06, 4.389000000000476e-06, 5.695000000000006e-06, 5.346999999999297e-06, 4.014000000000101e-06, 4.985999999998492e-06, 4.458000000002321e-06, 4.791999999999991e-06, 6.110999999999617e-06, 3.361000000000336e-06, 4.458999999998325e-06, 2.847000000000266e-06, 3.347000000000766e-06, 4.2359999999977416e-06, 2.917000000001585e-06, 2.458000000000321e-06, 3.3059999999980605e-06, 3.583000000001446e-06, 3.736000000000711e-06, 3.861000000000836e-06, 4.1249999999971865e-06, 3.3889999999994758e-06, 6.208000000000602e-06, 2.362000000002279e-06, 4.541000000000267e-06, 5.971999999999922e-06, 4.8339999999987004e-06, 5.416000000001142e-06, 4.041999999999241e-06, 3.5419999999987406e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.472000000000891e-06, 4.84800000000174e-06, 4.526999999997228e-06, 4.361000000001336e-06, 3.902999999999546e-06, 5.167000000000366e-06, 5.042000000000241e-06, 3.790999999999517e-06, 3.722000000001141e-06, 4.041999999999241e-06, 3.097000000000516e-06, 6.0279999999982015e-06, 5.000000000001531e-06, 5.7639999999983815e-06, 3.986000000000961e-06, 3.6529999999992957e-06, 5.111000000002086e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:53.982" endtime="20201112 12:25:53.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.978" endtime="20201112 12:25:53.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:53.989" level="INFO">${RESULT} = [{'time': 0.018066444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.018076528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:53.986" endtime="20201112 12:25:53.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:53.997" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:53.990" endtime="20201112 12:25:53.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.002" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.001" endtime="20201112 12:25:54.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.004" level="INFO">VALUE: [2.6250000000026252e-06, 5.695000000000006e-06, 4.014000000000101e-06, 4.458000000002321e-06, 6.110999999999617e-06, 4.458999999998325e-06, 3.347000000000766e-06, 2.917000000001585e-06, 3.3059999999980605e-06, 3.736000000000711e-06, 4.1249999999971865e-06, 6.208000000000602e-06, 4.541000000000267e-06, 4.8339999999987004e-06, 4.041999999999241e-06, 2.735999999999711e-06, 3.472000000000891e-06, 4.526999999997228e-06, 3.902999999999546e-06, 5.042000000000241e-06, 3.722000000001141e-06, 3.097000000000516e-06, 5.000000000001531e-06, 3.986000000000961e-06, 5.111000000002086e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.003" endtime="20201112 12:25:54.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.998" endtime="20201112 12:25:54.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.008" endtime="20201112 12:25:54.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.011" endtime="20201112 12:25:54.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.010" endtime="20201112 12:25:54.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.006" endtime="20201112 12:25:54.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.639" endtime="20201112 12:25:54.032"></status>
</kw>
<msg timestamp="20201112 12:25:54.032" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.040" endtime="20201112 12:25:54.055"></status>
</kw>
<msg timestamp="20201112 12:25:54.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.039" endtime="20201112 12:25:54.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.058" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.056" endtime="20201112 12:25:54.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.059" endtime="20201112 12:25:54.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.036" endtime="20201112 12:25:54.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.034" endtime="20201112 12:25:54.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.070" endtime="20201112 12:25:54.338"></status>
</kw>
<msg timestamp="20201112 12:25:54.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018022, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:25:54.068" endtime="20201112 12:25:54.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018022, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:25:54.341" endtime="20201112 12:25:54.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.346" endtime="20201112 12:25:54.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.066" endtime="20201112 12:25:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.064" endtime="20201112 12:25:54.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.353" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.352" endtime="20201112 12:25:54.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.357" level="INFO">VALUE: [{'time': 0.018017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018022, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018028153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018032472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018036625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018041958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018050042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018053764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018056486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018060458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018066139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680999999996966e-06, 'source_diff': 5.680999999996966e-06}, {'time': 0.018071028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018074958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018078806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.018082708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018088694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018092806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.018098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.018103486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018108472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018114306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018117181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018120833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.018126736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018130153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018132625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018137542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018142458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.01814675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018151528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018155069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018160292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.018163833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018166375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018171361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018176569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018181542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.018186222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018190056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.018193153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018195639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.018205708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018209056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018212681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018215569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.887999999999502e-06, 'source_diff': 2.887999999999502e-06}, {'time': 0.018221681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.11199999999909e-06, 'source_diff': 6.11199999999909e-06}, {'time': 0.018226833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.018229819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:54.354" endtime="20201112 12:25:54.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.350" endtime="20201112 12:25:54.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.373" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:54.359" endtime="20201112 12:25:54.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.377" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.376" endtime="20201112 12:25:54.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.381" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.318999999999157e-06, 4.152999999999796e-06, 5.332999999999727e-06, 3.0419999999982406e-06, 5.042000000000241e-06, 3.722000000001141e-06, 2.722000000000141e-06, 3.972000000001391e-06, 5.680999999996966e-06, 4.889000000000976e-06, 3.929999999999212e-06, 3.84800000000074e-06, 3.902000000000072e-06, 5.985999999999492e-06, 4.11200000000056e-06, 6.166000000001892e-06, 4.513999999997131e-06, 4.986000000001961e-06, 5.8339999999997005e-06, 2.874999999999406e-06, 3.651999999999822e-06, 5.903000000001546e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.291999999999491e-06, 4.778000000000421e-06, 3.540999999999267e-06, 5.223000000002115e-06, 3.540999999999267e-06, 2.5419999999977405e-06, 4.986000000001961e-06, 5.207999999999602e-06, 4.972999999998395e-06, 4.679999999999962e-06, 3.83400000000117e-06, 3.097000000000516e-06, 2.485999999999461e-06, 5.444000000000282e-06, 4.625000000001156e-06, 3.3480000000002397e-06, 3.625000000000156e-06, 2.887999999999502e-06, 6.11199999999909e-06, 5.152000000001322e-06, 2.985999999999961e-06], 'time': [0.018017889, 0.018022, 0.018028153, 0.018032472, 0.018036625, 0.018041958, 0.018045, 0.018050042, 0.018053764, 0.018056486, 0.018060458, 0.018066139, 0.018071028, 0.018074958, 0.018078806, 0.018082708, 0.018088694, 0.018092806, 0.018098972, 0.018103486, 0.018108472, 0.018114306, 0.018117181, 0.018120833, 0.018126736, 0.018130153, 0.018132625, 0.018137542, 0.018142458, 0.01814675, 0.018151528, 0.018155069, 0.018160292, 0.018163833, 0.018166375, 0.018171361, 0.018176569, 0.018181542, 0.018186222, 0.018190056, 0.018193153, 0.018195639, 0.018201083, 0.018205708, 0.018209056, 0.018212681, 0.018215569, 0.018221681, 0.018226833, 0.018229819], 'sourcesource_diff': [0, 4.111000000001086e-06, 6.153000000001796e-06, 4.318999999999157e-06, 4.152999999999796e-06, 5.332999999999727e-06, 3.0419999999982406e-06, 5.042000000000241e-06, 3.722000000001141e-06, 2.722000000000141e-06, 3.972000000001391e-06, 5.680999999996966e-06, 4.889000000000976e-06, 3.929999999999212e-06, 3.84800000000074e-06, 3.902000000000072e-06, 5.985999999999492e-06, 4.11200000000056e-06, 6.166000000001892e-06, 4.513999999997131e-06, 4.986000000001961e-06, 5.8339999999997005e-06, 2.874999999999406e-06, 3.651999999999822e-06, 5.903000000001546e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.291999999999491e-06, 4.778000000000421e-06, 3.540999999999267e-06, 5.223000000002115e-06, 3.540999999999267e-06, 2.5419999999977405e-06, 4.986000000001961e-06, 5.207999999999602e-06, 4.972999999998395e-06, 4.679999999999962e-06, 3.83400000000117e-06, 3.097000000000516e-06, 2.485999999999461e-06, 5.444000000000282e-06, 4.625000000001156e-06, 3.3480000000002397e-06, 3.625000000000156e-06, 2.887999999999502e-06, 6.11199999999909e-06, 5.152000000001322e-06, 2.985999999999961e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:54.378" endtime="20201112 12:25:54.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.374" endtime="20201112 12:25:54.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.385" level="INFO">${RESULT} = [{'time': 0.018022, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018032472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:25:54.382" endtime="20201112 12:25:54.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.393" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:54.386" endtime="20201112 12:25:54.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.398" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.397" endtime="20201112 12:25:54.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.400" level="INFO">VALUE: [4.111000000001086e-06, 4.318999999999157e-06, 5.332999999999727e-06, 5.042000000000241e-06, 2.722000000000141e-06, 5.680999999996966e-06, 3.929999999999212e-06, 3.902000000000072e-06, 4.11200000000056e-06, 4.513999999997131e-06, 5.8339999999997005e-06, 3.651999999999822e-06, 3.4169999999986156e-06, 4.917000000000116e-06, 4.291999999999491e-06, 3.540999999999267e-06, 3.540999999999267e-06, 4.986000000001961e-06, 4.972999999998395e-06, 3.83400000000117e-06, 2.485999999999461e-06, 4.625000000001156e-06, 3.625000000000156e-06, 6.11199999999909e-06, 2.985999999999961e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.399" endtime="20201112 12:25:54.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.394" endtime="20201112 12:25:54.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.404" endtime="20201112 12:25:54.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.407" endtime="20201112 12:25:54.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.406" endtime="20201112 12:25:54.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.402" endtime="20201112 12:25:54.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.033" endtime="20201112 12:25:54.428"></status>
</kw>
<msg timestamp="20201112 12:25:54.428" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.437" endtime="20201112 12:25:54.451"></status>
</kw>
<msg timestamp="20201112 12:25:54.451" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.435" endtime="20201112 12:25:54.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.453" endtime="20201112 12:25:54.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.455" endtime="20201112 12:25:54.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.432" endtime="20201112 12:25:54.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.430" endtime="20201112 12:25:54.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.464" endtime="20201112 12:25:54.733"></status>
</kw>
<msg timestamp="20201112 12:25:54.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.463" endtime="20201112 12:25:54.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.736" endtime="20201112 12:25:54.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.741" endtime="20201112 12:25:54.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.460" endtime="20201112 12:25:54.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.458" endtime="20201112 12:25:54.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.748" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:54.747" endtime="20201112 12:25:54.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.751" level="INFO">VALUE: [{'time': 0.018668625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018676903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018682556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018686653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018692653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018701292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018704306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.018708417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018713264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.0187165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018720778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018725208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018728472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018733222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018735819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018740028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.018745639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.018751042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018756139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018760431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018766153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018770389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.018773736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018777458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018780694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018785847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018789708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.01879275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018795139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018800389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018810319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018815556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.237000000001685e-06, 'source_diff': 5.237000000001685e-06}, {'time': 0.018819847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018822389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018826347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.018832639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018836042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018838528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018840889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018844847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.018850014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.166999999996896e-06, 'source_diff': 5.166999999996896e-06}, {'time': 0.018854556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.018856972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415999999998142e-06, 'source_diff': 2.415999999998142e-06}, {'time': 0.0188595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018865097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018868056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.018873431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:54.749" endtime="20201112 12:25:54.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.744" endtime="20201112 12:25:54.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:54.766" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:54.754" endtime="20201112 12:25:54.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.770" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:54.769" endtime="20201112 12:25:54.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.773" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 3.8059999999985605e-06, 4.472000000001891e-06, 5.6529999999978264e-06, 4.097000000001516e-06, 5.999999999999062e-06, 4.264000000000351e-06, 4.375000000000906e-06, 3.0139999999991007e-06, 4.111000000001086e-06, 4.846999999998797e-06, 3.236000000000211e-06, 4.277999999999921e-06, 4.429999999999712e-06, 3.2639999999993508e-06, 4.750000000001281e-06, 2.597000000000016e-06, 4.208999999998075e-06, 5.611000000002586e-06, 5.402999999997576e-06, 5.097000000002516e-06, 4.291999999999491e-06, 5.721999999999672e-06, 4.2359999999977416e-06, 3.347000000000766e-06, 3.722000000001141e-06, 3.236000000000211e-06, 5.153000000000796e-06, 3.8609999999973665e-06, 3.04200000000171e-06, 2.3889999999984757e-06, 5.250000000001781e-06, 4.332999999998727e-06, 5.596999999999547e-06, 5.237000000001685e-06, 4.291000000000017e-06, 2.5419999999977405e-06, 3.958000000001821e-06, 6.292000000001491e-06, 3.4029999999990457e-06, 2.485999999999461e-06, 2.360999999999336e-06, 3.958000000001821e-06, 5.166999999996896e-06, 4.54200000000321e-06, 2.415999999998142e-06, 2.52800000000164e-06, 5.596999999999547e-06, 2.9590000000002947e-06, 5.374999999998437e-06], 'time': [0.018668625, 0.018672431, 0.018676903, 0.018682556, 0.018686653, 0.018692653, 0.018696917, 0.018701292, 0.018704306, 0.018708417, 0.018713264, 0.0187165, 0.018720778, 0.018725208, 0.018728472, 0.018733222, 0.018735819, 0.018740028, 0.018745639, 0.018751042, 0.018756139, 0.018760431, 0.018766153, 0.018770389, 0.018773736, 0.018777458, 0.018780694, 0.018785847, 0.018789708, 0.01879275, 0.018795139, 0.018800389, 0.018804722, 0.018810319, 0.018815556, 0.018819847, 0.018822389, 0.018826347, 0.018832639, 0.018836042, 0.018838528, 0.018840889, 0.018844847, 0.018850014, 0.018854556, 0.018856972, 0.0188595, 0.018865097, 0.018868056, 0.018873431], 'sourcesource_diff': [0, 3.8059999999985605e-06, 4.472000000001891e-06, 5.6529999999978264e-06, 4.097000000001516e-06, 5.999999999999062e-06, 4.264000000000351e-06, 4.375000000000906e-06, 3.0139999999991007e-06, 4.111000000001086e-06, 4.846999999998797e-06, 3.236000000000211e-06, 4.277999999999921e-06, 4.429999999999712e-06, 3.2639999999993508e-06, 4.750000000001281e-06, 2.597000000000016e-06, 4.208999999998075e-06, 5.611000000002586e-06, 5.402999999997576e-06, 5.097000000002516e-06, 4.291999999999491e-06, 5.721999999999672e-06, 4.2359999999977416e-06, 3.347000000000766e-06, 3.722000000001141e-06, 3.236000000000211e-06, 5.153000000000796e-06, 3.8609999999973665e-06, 3.04200000000171e-06, 2.3889999999984757e-06, 5.250000000001781e-06, 4.332999999998727e-06, 5.596999999999547e-06, 5.237000000001685e-06, 4.291000000000017e-06, 2.5419999999977405e-06, 3.958000000001821e-06, 6.292000000001491e-06, 3.4029999999990457e-06, 2.485999999999461e-06, 2.360999999999336e-06, 3.958000000001821e-06, 5.166999999996896e-06, 4.54200000000321e-06, 2.415999999998142e-06, 2.52800000000164e-06, 5.596999999999547e-06, 2.9590000000002947e-06, 5.374999999998437e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:54.771" endtime="20201112 12:25:54.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.767" endtime="20201112 12:25:54.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:54.778" level="INFO">${RESULT} = [{'time': 0.018672431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018682556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:54.775" endtime="20201112 12:25:54.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:54.786" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:54.779" endtime="20201112 12:25:54.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.790" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:54.789" endtime="20201112 12:25:54.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.792" level="INFO">VALUE: [3.8059999999985605e-06, 5.6529999999978264e-06, 5.999999999999062e-06, 4.375000000000906e-06, 4.111000000001086e-06, 3.236000000000211e-06, 4.429999999999712e-06, 4.750000000001281e-06, 4.208999999998075e-06, 5.402999999997576e-06, 4.291999999999491e-06, 4.2359999999977416e-06, 3.722000000001141e-06, 5.153000000000796e-06, 3.04200000000171e-06, 5.250000000001781e-06, 5.596999999999547e-06, 4.291000000000017e-06, 3.958000000001821e-06, 3.4029999999990457e-06, 2.360999999999336e-06, 5.166999999996896e-06, 2.415999999998142e-06, 5.596999999999547e-06, 5.374999999998437e-06]</msg>
<status status="PASS" starttime="20201112 12:25:54.791" endtime="20201112 12:25:54.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.787" endtime="20201112 12:25:54.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.796" endtime="20201112 12:25:54.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:54.799" endtime="20201112 12:25:54.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.798" endtime="20201112 12:25:54.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.794" endtime="20201112 12:25:54.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.429" endtime="20201112 12:25:54.821"></status>
</kw>
<msg timestamp="20201112 12:25:54.821" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.829" endtime="20201112 12:25:54.843"></status>
</kw>
<msg timestamp="20201112 12:25:54.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.827" endtime="20201112 12:25:54.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:54.846" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:54.844" endtime="20201112 12:25:54.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.847" endtime="20201112 12:25:54.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.824" endtime="20201112 12:25:54.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.823" endtime="20201112 12:25:54.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:54.856" endtime="20201112 12:25:55.131"></status>
</kw>
<msg timestamp="20201112 12:25:55.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:54.854" endtime="20201112 12:25:55.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.137" endtime="20201112 12:25:55.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.149" endtime="20201112 12:25:55.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.852" endtime="20201112 12:25:55.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.850" endtime="20201112 12:25:55.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.162" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.160" endtime="20201112 12:25:55.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.170" level="INFO">VALUE: [{'time': 0.018263444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018274708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018281, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018285486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018289708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018295944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.018300472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01830375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.018306236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018310486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018314806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.018317861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.01832275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018328375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018331083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.018336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018339917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018345778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018352, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018358333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.0183645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018370111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.018374222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018378319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018384028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018389444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018394542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09799999999852e-06, 'source_diff': 5.09799999999852e-06}, {'time': 0.018400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018404694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018408403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.018411944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018416972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018421264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018425694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018428028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.0184305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018433111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018436139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018442111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018448292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.018453986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.018458583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018463347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018469264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.018474917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018479208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018483139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:55.164" endtime="20201112 12:25:55.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.155" endtime="20201112 12:25:55.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.185" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:55.173" endtime="20201112 12:25:55.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.189" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.188" endtime="20201112 12:25:55.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.192" level="INFO">VALUE: {'eventdiff': [0, 6.167000000001366e-06, 5.096999999999047e-06, 6.291999999998021e-06, 4.486000000001461e-06, 4.221999999998172e-06, 6.236000000003211e-06, 4.528000000000171e-06, 3.2779999999989207e-06, 2.485999999999461e-06, 4.250000000000781e-06, 4.3199999999986305e-06, 3.0550000000018063e-06, 4.8889999999975065e-06, 5.625000000002156e-06, 2.708000000000571e-06, 4.917000000000116e-06, 3.916999999999116e-06, 5.860999999999367e-06, 6.222000000000172e-06, 6.333000000000727e-06, 6.166999999997896e-06, 5.611000000002586e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 5.7089999999995755e-06, 5.416000000001142e-06, 5.09799999999852e-06, 5.721999999999672e-06, 4.429999999999712e-06, 3.709000000001045e-06, 3.540999999999267e-06, 5.028000000000671e-06, 4.291999999999491e-06, 4.429999999999712e-06, 2.3339999999996697e-06, 2.471999999999891e-06, 2.610999999999586e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.736000000000711e-06, 2.4450000000002248e-06, 5.6939999999970625e-06, 4.597000000002016e-06, 2.417000000001085e-06, 2.346999999999766e-06, 5.916999999997646e-06, 5.653000000001296e-06, 4.291000000000017e-06, 3.9309999999986855e-06], 'time': [0.018263444, 0.018269611, 0.018274708, 0.018281, 0.018285486, 0.018289708, 0.018295944, 0.018300472, 0.01830375, 0.018306236, 0.018310486, 0.018314806, 0.018317861, 0.01832275, 0.018328375, 0.018331083, 0.018336, 0.018339917, 0.018345778, 0.018352, 0.018358333, 0.0183645, 0.018370111, 0.018374222, 0.018378319, 0.018384028, 0.018389444, 0.018394542, 0.018400264, 0.018404694, 0.018408403, 0.018411944, 0.018416972, 0.018421264, 0.018425694, 0.018428028, 0.0184305, 0.018433111, 0.018436139, 0.018442111, 0.018445847, 0.018448292, 0.018453986, 0.018458583, 0.018461, 0.018463347, 0.018469264, 0.018474917, 0.018479208, 0.018483139], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 6.167000000001366e-06, 5.096999999999047e-06, 6.291999999998021e-06, 4.486000000001461e-06, 4.221999999998172e-06, 6.236000000003211e-06, 4.528000000000171e-06, 3.2779999999989207e-06, 2.485999999999461e-06, 4.250000000000781e-06, 4.3199999999986305e-06, 3.0550000000018063e-06, 4.8889999999975065e-06, 5.625000000002156e-06, 2.708000000000571e-06, 4.917000000000116e-06, 3.916999999999116e-06, 5.860999999999367e-06, 6.222000000000172e-06, 6.333000000000727e-06, 6.166999999997896e-06, 5.611000000002586e-06, 4.1109999999976166e-06, 4.097000000001516e-06, 5.7089999999995755e-06, 5.416000000001142e-06, 5.09799999999852e-06, 5.721999999999672e-06, 4.429999999999712e-06, 3.709000000001045e-06, 3.540999999999267e-06, 5.028000000000671e-06, 4.291999999999491e-06, 4.429999999999712e-06, 2.3339999999996697e-06, 2.471999999999891e-06, 2.610999999999586e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.736000000000711e-06, 2.4450000000002248e-06, 5.6939999999970625e-06, 4.597000000002016e-06, 2.417000000001085e-06, 2.346999999999766e-06, 5.916999999997646e-06, 5.653000000001296e-06, 4.291000000000017e-06, 3.9309999999986855e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:55.190" endtime="20201112 12:25:55.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.186" endtime="20201112 12:25:55.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.197" level="INFO">${RESULT} = [{'time': 0.018269611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018281, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:25:55.194" endtime="20201112 12:25:55.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.205" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:55.198" endtime="20201112 12:25:55.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.208" endtime="20201112 12:25:55.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.212" level="INFO">VALUE: [6.167000000001366e-06, 6.291999999998021e-06, 4.221999999998172e-06, 4.528000000000171e-06, 2.485999999999461e-06, 4.3199999999986305e-06, 4.8889999999975065e-06, 2.708000000000571e-06, 3.916999999999116e-06, 6.222000000000172e-06, 6.166999999997896e-06, 4.1109999999976166e-06, 5.7089999999995755e-06, 5.09799999999852e-06, 4.429999999999712e-06, 3.540999999999267e-06, 4.291999999999491e-06, 2.3339999999996697e-06, 2.610999999999586e-06, 5.971999999999922e-06, 2.4450000000002248e-06, 4.597000000002016e-06, 2.346999999999766e-06, 5.653000000001296e-06, 3.9309999999986855e-06]</msg>
<status status="PASS" starttime="20201112 12:25:55.210" endtime="20201112 12:25:55.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.206" endtime="20201112 12:25:55.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.215" endtime="20201112 12:25:55.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.219" endtime="20201112 12:25:55.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.217" endtime="20201112 12:25:55.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.213" endtime="20201112 12:25:55.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:54.822" endtime="20201112 12:25:55.239"></status>
</kw>
<msg timestamp="20201112 12:25:55.240" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.247" endtime="20201112 12:25:55.262"></status>
</kw>
<msg timestamp="20201112 12:25:55.262" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.246" endtime="20201112 12:25:55.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.263" endtime="20201112 12:25:55.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.266" endtime="20201112 12:25:55.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.243" endtime="20201112 12:25:55.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.241" endtime="20201112 12:25:55.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.275" endtime="20201112 12:25:55.542"></status>
</kw>
<msg timestamp="20201112 12:25:55.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.273" endtime="20201112 12:25:55.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.545" endtime="20201112 12:25:55.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.550" endtime="20201112 12:25:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.271" endtime="20201112 12:25:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.269" endtime="20201112 12:25:55.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.557" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:25:55.556" endtime="20201112 12:25:55.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.560" level="INFO">VALUE: [{'time': 0.017560778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.017571486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017576611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017580875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017584222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017590194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017596361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017599528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017602014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017605056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017611014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017614486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.017620028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017624083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.017630389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.017632819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017636708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017640944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017644542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.017650806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.017653111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3049999999975868e-06, 'source_diff': 2.3049999999975868e-06}, {'time': 0.017658, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017660375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.01766625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.017668889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017674139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017677361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017679889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017685861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017688514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.01769275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017697653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017700319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.017703056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7369999999991845e-06, 'source_diff': 2.7369999999991845e-06}, {'time': 0.017708583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.017711181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.017715917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017721819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.017725236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017729708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017733889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.017737556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.017741333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.017745431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.017749292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017754722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017758542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8199999999981304e-06, 'source_diff': 3.8199999999981304e-06}, {'time': 0.017761958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}]</msg>
<status status="PASS" starttime="20201112 12:25:55.558" endtime="20201112 12:25:55.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.553" endtime="20201112 12:25:55.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:25:55.689" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:25:55.675" endtime="20201112 12:25:55.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.693" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:25:55.692" endtime="20201112 12:25:55.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.696" level="INFO">VALUE: {'eventdiff': [0, 4.875000000001406e-06, 5.833000000000227e-06, 5.1249999999981866e-06, 4.264000000000351e-06, 3.347000000000766e-06, 5.971999999999922e-06, 6.167000000001366e-06, 3.1669999999983656e-06, 2.485999999999461e-06, 3.04200000000171e-06, 5.958000000000352e-06, 3.4719999999974216e-06, 5.542000000000741e-06, 4.054999999999337e-06, 3.26400000000282e-06, 3.0419999999982406e-06, 2.4300000000011812e-06, 3.888999999999976e-06, 4.2359999999977416e-06, 3.5980000000004897e-06, 6.264000000002351e-06, 2.3049999999975868e-06, 4.889000000000976e-06, 2.3749999999989058e-06, 5.875000000002406e-06, 2.6389999999987257e-06, 5.2499999999983116e-06, 3.222000000000641e-06, 2.52800000000164e-06, 5.971999999999922e-06, 2.6529999999982956e-06, 4.236000000001211e-06, 4.903000000000546e-06, 2.665999999998392e-06, 2.7369999999991845e-06, 5.527000000001697e-06, 2.5979999999994896e-06, 4.736000000001711e-06, 5.901999999998603e-06, 3.4169999999986156e-06, 4.472000000001891e-06, 4.1809999999989356e-06, 3.667000000002335e-06, 3.776999999999947e-06, 4.09799999999752e-06, 3.861000000000836e-06, 5.430000000000712e-06, 3.8199999999981304e-06, 3.4160000000026114e-06], 'time': [0.017560778, 0.017565653, 0.017571486, 0.017576611, 0.017580875, 0.017584222, 0.017590194, 0.017596361, 0.017599528, 0.017602014, 0.017605056, 0.017611014, 0.017614486, 0.017620028, 0.017624083, 0.017627347, 0.017630389, 0.017632819, 0.017636708, 0.017640944, 0.017644542, 0.017650806, 0.017653111, 0.017658, 0.017660375, 0.01766625, 0.017668889, 0.017674139, 0.017677361, 0.017679889, 0.017685861, 0.017688514, 0.01769275, 0.017697653, 0.017700319, 0.017703056, 0.017708583, 0.017711181, 0.017715917, 0.017721819, 0.017725236, 0.017729708, 0.017733889, 0.017737556, 0.017741333, 0.017745431, 0.017749292, 0.017754722, 0.017758542, 0.017761958], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'source_diff': [0, 4.875000000001406e-06, 5.833000000000227e-06, 5.1249999999981866e-06, 4.264000000000351e-06, 3.347000000000766e-06, 5.971999999999922e-06, 6.167000000001366e-06, 3.1669999999983656e-06, 2.485999999999461e-06, 3.04200000000171e-06, 5.958000000000352e-06, 3.4719999999974216e-06, 5.542000000000741e-06, 4.054999999999337e-06, 3.26400000000282e-06, 3.0419999999982406e-06, 2.4300000000011812e-06, 3.888999999999976e-06, 4.2359999999977416e-06, 3.5980000000004897e-06, 6.264000000002351e-06, 2.3049999999975868e-06, 4.889000000000976e-06, 2.3749999999989058e-06, 5.875000000002406e-06, 2.6389999999987257e-06, 5.2499999999983116e-06, 3.222000000000641e-06, 2.52800000000164e-06, 5.971999999999922e-06, 2.6529999999982956e-06, 4.236000000001211e-06, 4.903000000000546e-06, 2.665999999998392e-06, 2.7369999999991845e-06, 5.527000000001697e-06, 2.5979999999994896e-06, 4.736000000001711e-06, 5.901999999998603e-06, 3.4169999999986156e-06, 4.472000000001891e-06, 4.1809999999989356e-06, 3.667000000002335e-06, 3.776999999999947e-06, 4.09799999999752e-06, 3.861000000000836e-06, 5.430000000000712e-06, 3.8199999999981304e-06, 3.4160000000026114e-06]}</msg>
<status status="PASS" starttime="20201112 12:25:55.694" endtime="20201112 12:25:55.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.690" endtime="20201112 12:25:55.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:55.701" level="INFO">${RESULT} = [{'time': 0.017565653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.017576611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:55.698" endtime="20201112 12:25:55.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:55.709" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:55.702" endtime="20201112 12:25:55.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.713" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:25:55.712" endtime="20201112 12:25:55.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.715" level="INFO">VALUE: [4.875000000001406e-06, 5.1249999999981866e-06, 3.347000000000766e-06, 6.167000000001366e-06, 2.485999999999461e-06, 5.958000000000352e-06, 5.542000000000741e-06, 3.26400000000282e-06, 2.4300000000011812e-06, 4.2359999999977416e-06, 6.264000000002351e-06, 4.889000000000976e-06, 5.875000000002406e-06, 5.2499999999983116e-06, 2.52800000000164e-06, 2.6529999999982956e-06, 4.903000000000546e-06, 2.7369999999991845e-06, 2.5979999999994896e-06, 5.901999999998603e-06, 4.472000000001891e-06, 3.667000000002335e-06, 4.09799999999752e-06, 5.430000000000712e-06, 3.4160000000026114e-06]</msg>
<status status="PASS" starttime="20201112 12:25:55.714" endtime="20201112 12:25:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.710" endtime="20201112 12:25:55.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.719" endtime="20201112 12:25:55.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.722" endtime="20201112 12:25:55.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.720" endtime="20201112 12:25:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.717" endtime="20201112 12:25:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.240" endtime="20201112 12:25:55.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:47.445" endtime="20201112 12:25:55.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.748" endtime="20201112 12:25:55.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.746" endtime="20201112 12:25:55.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.745" endtime="20201112 12:25:55.768"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:47.369" endtime="20201112 12:25:55.769" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:55.778" endtime="20201112 12:25:55.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.776" endtime="20201112 12:25:55.801"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.815" endtime="20201112 12:25:55.834"></status>
</kw>
<msg timestamp="20201112 12:25:55.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.812" endtime="20201112 12:25:55.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.835" endtime="20201112 12:25:55.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.840" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:55.838" endtime="20201112 12:25:55.840"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:55.810" endtime="20201112 12:25:55.841"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:55.807" endtime="20201112 12:25:55.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.806" endtime="20201112 12:25:55.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:55.845" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:55.845" endtime="20201112 12:25:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.842" endtime="20201112 12:25:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.805" endtime="20201112 12:25:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.805" endtime="20201112 12:25:55.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.847" endtime="20201112 12:25:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.803" endtime="20201112 12:25:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.802" endtime="20201112 12:25:55.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.775" endtime="20201112 12:25:55.850"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:25:55.853" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.861" endtime="20201112 12:25:55.879"></status>
</kw>
<msg timestamp="20201112 12:25:55.880" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.859" endtime="20201112 12:25:55.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:55.885" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:55.882" endtime="20201112 12:25:55.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.887" endtime="20201112 12:25:55.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.856" endtime="20201112 12:25:55.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.854" endtime="20201112 12:25:55.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:55.906" endtime="20201112 12:25:56.197"></status>
</kw>
<msg timestamp="20201112 12:25:56.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069075486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069081708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:55.903" endtime="20201112 12:25:56.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069075486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069081708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.201" endtime="20201112 12:25:56.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.209" endtime="20201112 12:25:56.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.897" endtime="20201112 12:25:56.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.894" endtime="20201112 12:25:56.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.216" level="INFO">${RESULT} = [{'time': 0.069081708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.069085903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:56.213" endtime="20201112 12:25:56.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.230" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.217" endtime="20201112 12:25:56.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.234" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:56.233" endtime="20201112 12:25:56.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.237" level="INFO">VALUE: [6.222000000000172e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8880000000054409e-06, 1.832999999992757e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8060000000069687e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.8750000000122835e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8479999999987395e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.931000000010563e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.9160000000045807e-06, 1.8610000000057747e-06, 1.9029999999975455e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 12:25:56.236" endtime="20201112 12:25:56.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.231" endtime="20201112 12:25:56.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.240" endtime="20201112 12:25:56.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.243" endtime="20201112 12:25:56.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.242" endtime="20201112 12:25:56.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.238" endtime="20201112 12:25:56.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.853" endtime="20201112 12:25:56.264"></status>
</kw>
<msg timestamp="20201112 12:25:56.264" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.273" endtime="20201112 12:25:56.288"></status>
</kw>
<msg timestamp="20201112 12:25:56.289" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.271" endtime="20201112 12:25:56.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.291" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.290" endtime="20201112 12:25:56.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.292" endtime="20201112 12:25:56.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.268" endtime="20201112 12:25:56.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.267" endtime="20201112 12:25:56.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.301" endtime="20201112 12:25:56.587"></status>
</kw>
<msg timestamp="20201112 12:25:56.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018436153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018438014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.300" endtime="20201112 12:25:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018436153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018438014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.591" endtime="20201112 12:25:56.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.599" endtime="20201112 12:25:56.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.297" endtime="20201112 12:25:56.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.295" endtime="20201112 12:25:56.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.606" level="INFO">${RESULT} = [{'time': 0.018438014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018444958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:56.602" endtime="20201112 12:25:56.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:56.620" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.607" endtime="20201112 12:25:56.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.624" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:56.623" endtime="20201112 12:25:56.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.627" level="INFO">VALUE: [1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.901999999998072e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 12:25:56.625" endtime="20201112 12:25:56.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.621" endtime="20201112 12:25:56.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.630" endtime="20201112 12:25:56.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:56.634" endtime="20201112 12:25:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.632" endtime="20201112 12:25:56.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.628" endtime="20201112 12:25:56.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.265" endtime="20201112 12:25:56.655"></status>
</kw>
<msg timestamp="20201112 12:25:56.655" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.664" endtime="20201112 12:25:56.679"></status>
</kw>
<msg timestamp="20201112 12:25:56.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.662" endtime="20201112 12:25:56.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.681" endtime="20201112 12:25:56.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.683" endtime="20201112 12:25:56.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.659" endtime="20201112 12:25:56.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.657" endtime="20201112 12:25:56.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.692" endtime="20201112 12:25:56.975"></status>
</kw>
<msg timestamp="20201112 12:25:56.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019293236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.691" endtime="20201112 12:25:56.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019293236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:56.980" endtime="20201112 12:25:56.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.988" endtime="20201112 12:25:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.688" endtime="20201112 12:25:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.687" endtime="20201112 12:25:56.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:56.995" level="INFO">${RESULT} = [{'time': 0.019293236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8189999999966566e-06, 'source_diff': 1.8189999999966566e-06}, {'time': 0.019300986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:56.991" endtime="20201112 12:25:56.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.010" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:56.996" endtime="20201112 12:25:57.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:57.013" endtime="20201112 12:25:57.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.017" level="INFO">VALUE: [1.8189999999966566e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.7779999999974205e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:25:57.015" endtime="20201112 12:25:57.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.011" endtime="20201112 12:25:57.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.020" endtime="20201112 12:25:57.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.024" endtime="20201112 12:25:57.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.022" endtime="20201112 12:25:57.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.019" endtime="20201112 12:25:57.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.656" endtime="20201112 12:25:57.044"></status>
</kw>
<msg timestamp="20201112 12:25:57.045" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.052" endtime="20201112 12:25:57.067"></status>
</kw>
<msg timestamp="20201112 12:25:57.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.051" endtime="20201112 12:25:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.070" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.069" endtime="20201112 12:25:57.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.071" endtime="20201112 12:25:57.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.048" endtime="20201112 12:25:57.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.046" endtime="20201112 12:25:57.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.080" endtime="20201112 12:25:57.365"></status>
</kw>
<msg timestamp="20201112 12:25:57.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01805575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018057556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:57.079" endtime="20201112 12:25:57.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01805575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018057556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:25:57.369" endtime="20201112 12:25:57.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.377" endtime="20201112 12:25:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.076" endtime="20201112 12:25:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.075" endtime="20201112 12:25:57.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.384" level="INFO">${RESULT} = [{'time': 0.018057556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018061542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:57.380" endtime="20201112 12:25:57.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.398" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:57.385" endtime="20201112 12:25:57.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.402" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:57.401" endtime="20201112 12:25:57.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.405" level="INFO">VALUE: [1.8060000000000298e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:25:57.403" endtime="20201112 12:25:57.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.399" endtime="20201112 12:25:57.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.408" endtime="20201112 12:25:57.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.412" endtime="20201112 12:25:57.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.410" endtime="20201112 12:25:57.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.407" endtime="20201112 12:25:57.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.045" endtime="20201112 12:25:57.433"></status>
</kw>
<msg timestamp="20201112 12:25:57.433" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.441" endtime="20201112 12:25:57.456"></status>
</kw>
<msg timestamp="20201112 12:25:57.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.439" endtime="20201112 12:25:57.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.458" endtime="20201112 12:25:57.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.460" endtime="20201112 12:25:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.436" endtime="20201112 12:25:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.435" endtime="20201112 12:25:57.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.469" endtime="20201112 12:25:57.754"></status>
</kw>
<msg timestamp="20201112 12:25:57.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.467" endtime="20201112 12:25:57.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018031069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.758" endtime="20201112 12:25:57.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.767" endtime="20201112 12:25:57.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.465" endtime="20201112 12:25:57.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.463" endtime="20201112 12:25:57.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:57.773" level="INFO">${RESULT} = [{'time': 0.018031069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018036389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:57.770" endtime="20201112 12:25:57.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:57.788" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:57.774" endtime="20201112 12:25:57.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.792" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:57.791" endtime="20201112 12:25:57.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.794" level="INFO">VALUE: [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:25:57.793" endtime="20201112 12:25:57.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.789" endtime="20201112 12:25:57.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.798" endtime="20201112 12:25:57.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:57.802" endtime="20201112 12:25:57.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.800" endtime="20201112 12:25:57.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.796" endtime="20201112 12:25:57.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.433" endtime="20201112 12:25:57.822"></status>
</kw>
<msg timestamp="20201112 12:25:57.823" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.830" endtime="20201112 12:25:57.845"></status>
</kw>
<msg timestamp="20201112 12:25:57.846" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.829" endtime="20201112 12:25:57.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.848" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:57.847" endtime="20201112 12:25:57.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.849" endtime="20201112 12:25:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.826" endtime="20201112 12:25:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.824" endtime="20201112 12:25:57.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:57.858" endtime="20201112 12:25:58.144"></status>
</kw>
<msg timestamp="20201112 12:25:58.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018015861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:57.857" endtime="20201112 12:25:58.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018015861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.148" endtime="20201112 12:25:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.156" endtime="20201112 12:25:58.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.854" endtime="20201112 12:25:58.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.852" endtime="20201112 12:25:58.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.163" level="INFO">${RESULT} = [{'time': 0.018017736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018024833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:58.160" endtime="20201112 12:25:58.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.177" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:58.164" endtime="20201112 12:25:58.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.182" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:58.181" endtime="20201112 12:25:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.184" level="INFO">VALUE: [1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.7770000000014163e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.901999999998072e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.183" endtime="20201112 12:25:58.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.178" endtime="20201112 12:25:58.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.188" endtime="20201112 12:25:58.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.191" endtime="20201112 12:25:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.190" endtime="20201112 12:25:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.186" endtime="20201112 12:25:58.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.823" endtime="20201112 12:25:58.212"></status>
</kw>
<msg timestamp="20201112 12:25:58.212" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.220" endtime="20201112 12:25:58.235"></status>
</kw>
<msg timestamp="20201112 12:25:58.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.219" endtime="20201112 12:25:58.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.237" endtime="20201112 12:25:58.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.239" endtime="20201112 12:25:58.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.216" endtime="20201112 12:25:58.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.214" endtime="20201112 12:25:58.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.248" endtime="20201112 12:25:58.531"></status>
</kw>
<msg timestamp="20201112 12:25:58.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.247" endtime="20201112 12:25:58.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.535" endtime="20201112 12:25:58.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.543" endtime="20201112 12:25:58.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.244" endtime="20201112 12:25:58.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.243" endtime="20201112 12:25:58.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.550" level="INFO">${RESULT} = [{'time': 0.018329792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018333889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:58.547" endtime="20201112 12:25:58.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.565" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:58.551" endtime="20201112 12:25:58.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.570" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:58.568" endtime="20201112 12:25:58.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.572" level="INFO">VALUE: [1.8199999999995997e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8880000000019714e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8189999999966566e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8470000000027353e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.819000000000126e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.571" endtime="20201112 12:25:58.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.566" endtime="20201112 12:25:58.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.576" endtime="20201112 12:25:58.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.579" endtime="20201112 12:25:58.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.577" endtime="20201112 12:25:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.574" endtime="20201112 12:25:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.213" endtime="20201112 12:25:58.600"></status>
</kw>
<msg timestamp="20201112 12:25:58.600" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.608" endtime="20201112 12:25:58.623"></status>
</kw>
<msg timestamp="20201112 12:25:58.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.606" endtime="20201112 12:25:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.625" endtime="20201112 12:25:58.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.627" endtime="20201112 12:25:58.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.604" endtime="20201112 12:25:58.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.602" endtime="20201112 12:25:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.636" endtime="20201112 12:25:58.919"></status>
</kw>
<msg timestamp="20201112 12:25:58.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018347472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.635" endtime="20201112 12:25:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018347472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:58.923" endtime="20201112 12:25:58.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.931" endtime="20201112 12:25:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.632" endtime="20201112 12:25:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.630" endtime="20201112 12:25:58.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:58.938" level="INFO">${RESULT} = [{'time': 0.018347472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018351681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:58.934" endtime="20201112 12:25:58.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:58.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:58.939" endtime="20201112 12:25:58.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.956" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:58.955" endtime="20201112 12:25:58.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.959" level="INFO">VALUE: [1.903000000001015e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.944000000000251e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:25:58.957" endtime="20201112 12:25:58.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.953" endtime="20201112 12:25:58.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.962" endtime="20201112 12:25:58.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.966" endtime="20201112 12:25:58.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.964" endtime="20201112 12:25:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.961" endtime="20201112 12:25:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.600" endtime="20201112 12:25:58.986"></status>
</kw>
<msg timestamp="20201112 12:25:58.987" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.994" endtime="20201112 12:25:59.010"></status>
</kw>
<msg timestamp="20201112 12:25:59.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.993" endtime="20201112 12:25:59.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.011" endtime="20201112 12:25:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.014" endtime="20201112 12:25:59.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.990" endtime="20201112 12:25:59.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.989" endtime="20201112 12:25:59.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.023" endtime="20201112 12:25:59.308"></status>
</kw>
<msg timestamp="20201112 12:25:59.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018027722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.021" endtime="20201112 12:25:59.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018027722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018029583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.313" endtime="20201112 12:25:59.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.321" endtime="20201112 12:25:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.019" endtime="20201112 12:25:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.017" endtime="20201112 12:25:59.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.328" level="INFO">${RESULT} = [{'time': 0.018029583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018034625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:25:59.324" endtime="20201112 12:25:59.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.342" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:59.329" endtime="20201112 12:25:59.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.346" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:59.345" endtime="20201112 12:25:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.349" level="INFO">VALUE: [1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.834000000002639e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:25:59.347" endtime="20201112 12:25:59.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.343" endtime="20201112 12:25:59.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.352" endtime="20201112 12:25:59.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.356" endtime="20201112 12:25:59.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.354" endtime="20201112 12:25:59.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.351" endtime="20201112 12:25:59.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.987" endtime="20201112 12:25:59.376"></status>
</kw>
<msg timestamp="20201112 12:25:59.377" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.384" endtime="20201112 12:25:59.400"></status>
</kw>
<msg timestamp="20201112 12:25:59.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.383" endtime="20201112 12:25:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.403" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.401" endtime="20201112 12:25:59.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.404" endtime="20201112 12:25:59.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.380" endtime="20201112 12:25:59.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.378" endtime="20201112 12:25:59.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.413" endtime="20201112 12:25:59.701"></status>
</kw>
<msg timestamp="20201112 12:25:59.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017944597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017946444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.411" endtime="20201112 12:25:59.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017944597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017946444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.706" endtime="20201112 12:25:59.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.714" endtime="20201112 12:25:59.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.409" endtime="20201112 12:25:59.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.407" endtime="20201112 12:25:59.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:25:59.721" level="INFO">${RESULT} = [{'time': 0.017946444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017950889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:25:59.718" endtime="20201112 12:25:59.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:25:59.735" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:25:59.722" endtime="20201112 12:25:59.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.739" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:25:59.738" endtime="20201112 12:25:59.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.742" level="INFO">VALUE: [1.846999999999266e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.901999999998072e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:25:59.741" endtime="20201112 12:25:59.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.736" endtime="20201112 12:25:59.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.746" endtime="20201112 12:25:59.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:59.749" endtime="20201112 12:25:59.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.747" endtime="20201112 12:25:59.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.744" endtime="20201112 12:25:59.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.377" endtime="20201112 12:25:59.770"></status>
</kw>
<msg timestamp="20201112 12:25:59.770" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.778" endtime="20201112 12:25:59.793"></status>
</kw>
<msg timestamp="20201112 12:25:59.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.776" endtime="20201112 12:25:59.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:59.794" endtime="20201112 12:25:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.797" endtime="20201112 12:25:59.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.774" endtime="20201112 12:25:59.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.772" endtime="20201112 12:25:59.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:59.806" endtime="20201112 12:26:00.092"></status>
</kw>
<msg timestamp="20201112 12:26:00.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017980472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:25:59.804" endtime="20201112 12:26:00.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017980472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.096" endtime="20201112 12:26:00.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.104" endtime="20201112 12:26:00.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.802" endtime="20201112 12:26:00.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.800" endtime="20201112 12:26:00.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.111" level="INFO">${RESULT} = [{'time': 0.017982319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017987653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:00.107" endtime="20201112 12:26:00.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.126" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.112" endtime="20201112 12:26:00.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:00.129" endtime="20201112 12:26:00.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.132" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.131" endtime="20201112 12:26:00.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.127" endtime="20201112 12:26:00.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.136" endtime="20201112 12:26:00.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.140" endtime="20201112 12:26:00.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.138" endtime="20201112 12:26:00.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.134" endtime="20201112 12:26:00.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.771" endtime="20201112 12:26:00.160"></status>
</kw>
<msg timestamp="20201112 12:26:00.160" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.168" endtime="20201112 12:26:00.183"></status>
</kw>
<msg timestamp="20201112 12:26:00.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.166" endtime="20201112 12:26:00.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.184" endtime="20201112 12:26:00.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.187" endtime="20201112 12:26:00.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.164" endtime="20201112 12:26:00.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.162" endtime="20201112 12:26:00.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.196" endtime="20201112 12:26:00.485"></status>
</kw>
<msg timestamp="20201112 12:26:00.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017898139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:26:00.194" endtime="20201112 12:26:00.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017898139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201112 12:26:00.489" endtime="20201112 12:26:00.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.497" endtime="20201112 12:26:00.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.192" endtime="20201112 12:26:00.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.190" endtime="20201112 12:26:00.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.504" level="INFO">${RESULT} = [{'time': 0.0179, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017906806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:00.501" endtime="20201112 12:26:00.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.518" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.505" endtime="20201112 12:26:00.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:00.521" endtime="20201112 12:26:00.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.525" level="INFO">VALUE: [1.8609999999988358e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.523" endtime="20201112 12:26:00.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.519" endtime="20201112 12:26:00.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.528" endtime="20201112 12:26:00.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.532" endtime="20201112 12:26:00.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.530" endtime="20201112 12:26:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.527" endtime="20201112 12:26:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.161" endtime="20201112 12:26:00.552"></status>
</kw>
<msg timestamp="20201112 12:26:00.553" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.560" endtime="20201112 12:26:00.576"></status>
</kw>
<msg timestamp="20201112 12:26:00.576" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.559" endtime="20201112 12:26:00.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.577" endtime="20201112 12:26:00.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.580" endtime="20201112 12:26:00.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.556" endtime="20201112 12:26:00.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.554" endtime="20201112 12:26:00.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.589" endtime="20201112 12:26:00.874"></status>
</kw>
<msg timestamp="20201112 12:26:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.587" endtime="20201112 12:26:00.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018038181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:00.878" endtime="20201112 12:26:00.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.887" endtime="20201112 12:26:00.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.584" endtime="20201112 12:26:00.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.583" endtime="20201112 12:26:00.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:00.893" level="INFO">${RESULT} = [{'time': 0.018038181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.01804275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:00.890" endtime="20201112 12:26:00.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:00.907" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:00.894" endtime="20201112 12:26:00.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:00.911" endtime="20201112 12:26:00.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.914" level="INFO">VALUE: [1.862000000001779e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:26:00.913" endtime="20201112 12:26:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.908" endtime="20201112 12:26:01.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.047" endtime="20201112 12:26:01.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.051" endtime="20201112 12:26:01.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.050" endtime="20201112 12:26:01.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.045" endtime="20201112 12:26:01.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.553" endtime="20201112 12:26:01.072"></status>
</kw>
<msg timestamp="20201112 12:26:01.072" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.080" endtime="20201112 12:26:01.096"></status>
</kw>
<msg timestamp="20201112 12:26:01.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.079" endtime="20201112 12:26:01.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.097" endtime="20201112 12:26:01.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.100" endtime="20201112 12:26:01.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.076" endtime="20201112 12:26:01.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.074" endtime="20201112 12:26:01.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.110" endtime="20201112 12:26:01.398"></status>
</kw>
<msg timestamp="20201112 12:26:01.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.108" endtime="20201112 12:26:01.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.402" endtime="20201112 12:26:01.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.411" endtime="20201112 12:26:01.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.105" endtime="20201112 12:26:01.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.103" endtime="20201112 12:26:01.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:01.417" level="INFO">${RESULT} = [{'time': 0.018493611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018497611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:01.414" endtime="20201112 12:26:01.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:01.431" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:01.418" endtime="20201112 12:26:01.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.435" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:01.434" endtime="20201112 12:26:01.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.438" level="INFO">VALUE: [1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:26:01.436" endtime="20201112 12:26:01.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.432" endtime="20201112 12:26:01.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.441" endtime="20201112 12:26:01.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.445" endtime="20201112 12:26:01.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.443" endtime="20201112 12:26:01.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.440" endtime="20201112 12:26:01.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.073" endtime="20201112 12:26:01.465"></status>
</kw>
<msg timestamp="20201112 12:26:01.466" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.473" endtime="20201112 12:26:01.489"></status>
</kw>
<msg timestamp="20201112 12:26:01.489" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.472" endtime="20201112 12:26:01.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.491" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.490" endtime="20201112 12:26:01.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.492" endtime="20201112 12:26:01.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.469" endtime="20201112 12:26:01.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.467" endtime="20201112 12:26:01.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.501" endtime="20201112 12:26:01.808"></status>
</kw>
<msg timestamp="20201112 12:26:01.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018050819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018052708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.500" endtime="20201112 12:26:01.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018050819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018052708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.813" endtime="20201112 12:26:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.821" endtime="20201112 12:26:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.497" endtime="20201112 12:26:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.496" endtime="20201112 12:26:01.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:01.828" level="INFO">${RESULT} = [{'time': 0.018052708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018059542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:01.825" endtime="20201112 12:26:01.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:01.844" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:01.829" endtime="20201112 12:26:01.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.849" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:01.848" endtime="20201112 12:26:01.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.851" level="INFO">VALUE: [1.889000000001445e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.887999999998502e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.903000000001015e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.832999999999696e-06]</msg>
<status status="PASS" starttime="20201112 12:26:01.850" endtime="20201112 12:26:01.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.845" endtime="20201112 12:26:01.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.855" endtime="20201112 12:26:01.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.859" endtime="20201112 12:26:01.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.857" endtime="20201112 12:26:01.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.853" endtime="20201112 12:26:01.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.466" endtime="20201112 12:26:01.880"></status>
</kw>
<msg timestamp="20201112 12:26:01.880" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.888" endtime="20201112 12:26:01.903"></status>
</kw>
<msg timestamp="20201112 12:26:01.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.886" endtime="20201112 12:26:01.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.904" endtime="20201112 12:26:01.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.907" endtime="20201112 12:26:01.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.883" endtime="20201112 12:26:01.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.882" endtime="20201112 12:26:01.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.916" endtime="20201112 12:26:02.203"></status>
</kw>
<msg timestamp="20201112 12:26:02.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:01.914" endtime="20201112 12:26:02.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018469861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.208" endtime="20201112 12:26:02.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.216" endtime="20201112 12:26:02.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.912" endtime="20201112 12:26:02.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.910" endtime="20201112 12:26:02.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.223" level="INFO">${RESULT} = [{'time': 0.018469861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018475431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:02.220" endtime="20201112 12:26:02.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.239" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:02.225" endtime="20201112 12:26:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.243" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:02.242" endtime="20201112 12:26:02.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.246" level="INFO">VALUE: [1.8050000000005562e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8060000000000298e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8199999999995997e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:26:02.245" endtime="20201112 12:26:02.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.240" endtime="20201112 12:26:02.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.250" endtime="20201112 12:26:02.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.253" endtime="20201112 12:26:02.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.252" endtime="20201112 12:26:02.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.248" endtime="20201112 12:26:02.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.880" endtime="20201112 12:26:02.274"></status>
</kw>
<msg timestamp="20201112 12:26:02.274" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.282" endtime="20201112 12:26:02.298"></status>
</kw>
<msg timestamp="20201112 12:26:02.298" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.281" endtime="20201112 12:26:02.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.301" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.299" endtime="20201112 12:26:02.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.302" endtime="20201112 12:26:02.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.278" endtime="20201112 12:26:02.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.276" endtime="20201112 12:26:02.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.311" endtime="20201112 12:26:02.596"></status>
</kw>
<msg timestamp="20201112 12:26:02.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018370819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.310" endtime="20201112 12:26:02.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018370819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.601" endtime="20201112 12:26:02.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.609" endtime="20201112 12:26:02.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.307" endtime="20201112 12:26:02.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.305" endtime="20201112 12:26:02.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:02.616" level="INFO">${RESULT} = [{'time': 0.018370819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018375389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:02.613" endtime="20201112 12:26:02.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:02.631" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:02.617" endtime="20201112 12:26:02.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.636" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:02.635" endtime="20201112 12:26:02.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.639" level="INFO">VALUE: [1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.9160000000011113e-06]</msg>
<status status="PASS" starttime="20201112 12:26:02.637" endtime="20201112 12:26:02.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.633" endtime="20201112 12:26:02.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.642" endtime="20201112 12:26:02.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.646" endtime="20201112 12:26:02.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.644" endtime="20201112 12:26:02.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.641" endtime="20201112 12:26:02.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.275" endtime="20201112 12:26:02.667"></status>
</kw>
<msg timestamp="20201112 12:26:02.667" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.675" endtime="20201112 12:26:02.691"></status>
</kw>
<msg timestamp="20201112 12:26:02.691" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.673" endtime="20201112 12:26:02.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.692" endtime="20201112 12:26:02.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.695" endtime="20201112 12:26:02.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.671" endtime="20201112 12:26:02.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.669" endtime="20201112 12:26:02.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.704" endtime="20201112 12:26:02.993"></status>
</kw>
<msg timestamp="20201112 12:26:02.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.703" endtime="20201112 12:26:02.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018520708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.998" endtime="20201112 12:26:03.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.006" endtime="20201112 12:26:03.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.700" endtime="20201112 12:26:03.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.698" endtime="20201112 12:26:03.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.013" level="INFO">${RESULT} = [{'time': 0.018520708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018526208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.010" endtime="20201112 12:26:03.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.028" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:03.014" endtime="20201112 12:26:03.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.034" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:03.032" endtime="20201112 12:26:03.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.036" level="INFO">VALUE: [1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8199999999995997e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.917000000000585e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.035" endtime="20201112 12:26:03.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.029" endtime="20201112 12:26:03.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.040" endtime="20201112 12:26:03.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.043" endtime="20201112 12:26:03.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.042" endtime="20201112 12:26:03.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.038" endtime="20201112 12:26:03.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.668" endtime="20201112 12:26:03.064"></status>
</kw>
<msg timestamp="20201112 12:26:03.064" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.072" endtime="20201112 12:26:03.087"></status>
</kw>
<msg timestamp="20201112 12:26:03.088" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.071" endtime="20201112 12:26:03.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.090" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.089" endtime="20201112 12:26:03.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.091" endtime="20201112 12:26:03.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.068" endtime="20201112 12:26:03.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.066" endtime="20201112 12:26:03.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.101" endtime="20201112 12:26:03.385"></status>
</kw>
<msg timestamp="20201112 12:26:03.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.099" endtime="20201112 12:26:03.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.389" endtime="20201112 12:26:03.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.397" endtime="20201112 12:26:03.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.096" endtime="20201112 12:26:03.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.095" endtime="20201112 12:26:03.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.404" level="INFO">${RESULT} = [{'time': 0.018366042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018371792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.400" endtime="20201112 12:26:03.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.419" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:03.405" endtime="20201112 12:26:03.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.423" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:03.422" endtime="20201112 12:26:03.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.425" level="INFO">VALUE: [1.8479999999987395e-06, 1.8200000000030692e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8880000000019714e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.7920000000004599e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.834000000002639e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8330000000031654e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8749999999984057e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.424" endtime="20201112 12:26:03.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.420" endtime="20201112 12:26:03.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.429" endtime="20201112 12:26:03.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.432" endtime="20201112 12:26:03.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.431" endtime="20201112 12:26:03.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.427" endtime="20201112 12:26:03.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.065" endtime="20201112 12:26:03.453"></status>
</kw>
<msg timestamp="20201112 12:26:03.453" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.461" endtime="20201112 12:26:03.476"></status>
</kw>
<msg timestamp="20201112 12:26:03.477" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.459" endtime="20201112 12:26:03.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.478" endtime="20201112 12:26:03.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.480" endtime="20201112 12:26:03.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.457" endtime="20201112 12:26:03.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.455" endtime="20201112 12:26:03.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.489" endtime="20201112 12:26:03.774"></status>
</kw>
<msg timestamp="20201112 12:26:03.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:03.487" endtime="20201112 12:26:03.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018017847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:03.779" endtime="20201112 12:26:03.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.787" endtime="20201112 12:26:03.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.485" endtime="20201112 12:26:03.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.483" endtime="20201112 12:26:03.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.794" level="INFO">${RESULT} = [{'time': 0.018017847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018024125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:03.791" endtime="20201112 12:26:03.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.808" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:03.795" endtime="20201112 12:26:03.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.812" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:03.811" endtime="20201112 12:26:03.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.815" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.9169999999971155e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.813" endtime="20201112 12:26:03.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.809" endtime="20201112 12:26:03.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.818" endtime="20201112 12:26:03.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.822" endtime="20201112 12:26:03.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.820" endtime="20201112 12:26:03.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.817" endtime="20201112 12:26:03.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.454" endtime="20201112 12:26:03.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:55.852" endtime="20201112 12:26:03.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.851" endtime="20201112 12:26:03.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.849" endtime="20201112 12:26:03.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.848" endtime="20201112 12:26:03.874"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:55.772" endtime="20201112 12:26:03.875" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.893" endtime="20201112 12:26:03.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.890" endtime="20201112 12:26:03.916"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.944" endtime="20201112 12:26:03.968"></status>
</kw>
<msg timestamp="20201112 12:26:03.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.940" endtime="20201112 12:26:03.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.970" endtime="20201112 12:26:03.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.974" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:03.972" endtime="20201112 12:26:03.975"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:03.935" endtime="20201112 12:26:03.975"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:03.930" endtime="20201112 12:26:03.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.927" endtime="20201112 12:26:03.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:03.980" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:03.979" endtime="20201112 12:26:03.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.977" endtime="20201112 12:26:03.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.925" endtime="20201112 12:26:03.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.924" endtime="20201112 12:26:03.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.981" endtime="20201112 12:26:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.921" endtime="20201112 12:26:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.918" endtime="20201112 12:26:03.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.887" endtime="20201112 12:26:03.984"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.994" endtime="20201112 12:26:04.016"></status>
</kw>
<msg timestamp="20201112 12:26:04.016" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.992" endtime="20201112 12:26:04.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.019" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.017" endtime="20201112 12:26:04.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.020" endtime="20201112 12:26:04.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.990" endtime="20201112 12:26:04.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.987" endtime="20201112 12:26:04.023"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.025" endtime="20201112 12:26:04.026"></status>
</kw>
<msg timestamp="20201112 12:26:04.027" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:04.024" endtime="20201112 12:26:04.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.031" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:04.030" endtime="20201112 12:26:04.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.033" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:04.032" endtime="20201112 12:26:04.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.028" endtime="20201112 12:26:04.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.038" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:04.037" endtime="20201112 12:26:04.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.040" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:04.039" endtime="20201112 12:26:04.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.035" endtime="20201112 12:26:04.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.047" endtime="20201112 12:26:04.338"></status>
</kw>
<msg timestamp="20201112 12:26:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090339278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090382083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.046" endtime="20201112 12:26:04.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.090339278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.090382083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.342" endtime="20201112 12:26:04.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.350" endtime="20201112 12:26:04.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.043" endtime="20201112 12:26:04.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.041" endtime="20201112 12:26:04.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.357" level="INFO">${RESULT} = [{'time': 0.090382083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2805000000006865e-05, 'source_diff': 4.2805000000006865e-05}, {'time': 0.090395625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.354" endtime="20201112 12:26:04.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.370" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:04.358" endtime="20201112 12:26:04.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.375" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:04.374" endtime="20201112 12:26:04.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.378" level="INFO">VALUE: [4.2805000000006865e-05, 8.041999999999772e-06, 8.069999999998911e-06, 8.027999999993263e-06, 8.041999999999772e-06, 8.110999999991209e-06, 8.054999999992929e-06, 8.055999999992403e-06, 8.054999999992929e-06, 8.069999999998911e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.05600000000628e-06, 7.999999999994123e-06, 8.02800000000714e-06, 8.02800000000714e-06, 8.068999999999438e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.02800000000714e-06, 8.027999999993263e-06, 8.05600000000628e-06, 7.973000000008335e-06, 8.055999999992403e-06, 8.055999999992403e-06, 8.069000000013316e-06, 8.05600000000628e-06, 8.041000000000298e-06, 8.069999999998911e-06, 8.02800000000714e-06, 8.041999999999772e-06, 8.041999999999772e-06, 8.083999999991542e-06, 8.054999999992929e-06, 8.055999999992403e-06, 8.055000000006807e-06, 8.02800000000714e-06, 8.055000000006807e-06, 8.05600000000628e-06, 8.041999999999772e-06, 8.02800000000714e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.068999999999438e-06, 8.05600000000628e-06, 8.083000000005947e-06, 8.05600000000628e-06, 8.069999999998911e-06, 8.054999999992929e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.376" endtime="20201112 12:26:04.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.371" endtime="20201112 12:26:04.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.381" endtime="20201112 12:26:04.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.385" endtime="20201112 12:26:04.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.383" endtime="20201112 12:26:04.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.380" endtime="20201112 12:26:04.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.985" endtime="20201112 12:26:04.405"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:03.881" endtime="20201112 12:26:04.406" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.416" endtime="20201112 12:26:04.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.414" endtime="20201112 12:26:04.436"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.450" endtime="20201112 12:26:04.468"></status>
</kw>
<msg timestamp="20201112 12:26:04.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.447" endtime="20201112 12:26:04.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.469" endtime="20201112 12:26:04.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.474" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:04.472" endtime="20201112 12:26:04.474"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.445" endtime="20201112 12:26:04.475"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.442" endtime="20201112 12:26:04.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.441" endtime="20201112 12:26:04.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:04.479" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:04.479" endtime="20201112 12:26:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.476" endtime="20201112 12:26:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.440" endtime="20201112 12:26:04.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.440" endtime="20201112 12:26:04.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.481" endtime="20201112 12:26:04.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.438" endtime="20201112 12:26:04.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.436" endtime="20201112 12:26:04.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.413" endtime="20201112 12:26:04.484"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.494" endtime="20201112 12:26:04.562"></status>
</kw>
<msg timestamp="20201112 12:26:04.563" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.492" endtime="20201112 12:26:04.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.565" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.564" endtime="20201112 12:26:04.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.566" endtime="20201112 12:26:04.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.490" endtime="20201112 12:26:04.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.487" endtime="20201112 12:26:04.569"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.571" endtime="20201112 12:26:04.573"></status>
</kw>
<msg timestamp="20201112 12:26:04.573" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:04.570" endtime="20201112 12:26:04.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.577" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:04.576" endtime="20201112 12:26:04.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.579" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:04.578" endtime="20201112 12:26:04.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.574" endtime="20201112 12:26:04.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.584" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:04.583" endtime="20201112 12:26:04.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.586" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:04.585" endtime="20201112 12:26:04.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.581" endtime="20201112 12:26:04.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.594" endtime="20201112 12:26:04.884"></status>
</kw>
<msg timestamp="20201112 12:26:04.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069214931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.592" endtime="20201112 12:26:04.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069214931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.888" endtime="20201112 12:26:04.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.896" endtime="20201112 12:26:04.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.589" endtime="20201112 12:26:04.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.587" endtime="20201112 12:26:04.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.903" level="INFO">${RESULT} = [{'time': 0.069214931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.40979999999963e-05, 'source_diff': 3.40979999999963e-05}, {'time': 0.07018825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:04.900" endtime="20201112 12:26:04.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.918" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:04.904" endtime="20201112 12:26:04.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.923" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:04.922" endtime="20201112 12:26:04.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.926" level="INFO">VALUE: [3.40979999999963e-05, 3.4166999999987735e-05, 3.418100000000812e-05, 3.419400000000128e-05, 3.418100000000812e-05, 3.418000000000865e-05, 3.40970000000107e-05, 3.4180999999994244e-05, 3.4180999999994244e-05, 3.418100000000812e-05, 3.4138999999988595e-05, 3.418000000000865e-05, 3.418100000000812e-05, 3.4166999999987735e-05, 3.417999999999477e-05, 3.4180999999994244e-05, 3.417999999999477e-05, 3.417999999999477e-05, 3.419500000000075e-05, 3.417999999999477e-05, 3.418000000000865e-05, 3.41939999999874e-05, 3.415300000000898e-05, 3.41939999999874e-05, 3.418100000000812e-05, 3.413900000000247e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.419400000000128e-05, 3.416700000000161e-05, 3.419500000000075e-05, 3.416600000000214e-05, 3.419400000000128e-05, 3.419500000000075e-05, 3.416700000000161e-05, 3.416700000000161e-05, 3.4138999999988595e-05, 3.415199999999563e-05, 3.4096999999996824e-05, 3.4124999999995964e-05, 3.416700000000161e-05, 3.416600000000214e-05, 3.418100000000812e-05, 3.419400000000128e-05, 3.419500000000075e-05, 3.418000000000865e-05, 3.418000000000865e-05, 3.417999999999477e-05, 3.418100000000812e-05, 3.418000000000865e-05]</msg>
<status status="PASS" starttime="20201112 12:26:04.924" endtime="20201112 12:26:04.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.920" endtime="20201112 12:26:04.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.929" endtime="20201112 12:26:04.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.932" endtime="20201112 12:26:04.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.931" endtime="20201112 12:26:04.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.927" endtime="20201112 12:26:04.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.485" endtime="20201112 12:26:04.953"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:04.410" endtime="20201112 12:26:04.954" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.962" endtime="20201112 12:26:04.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.961" endtime="20201112 12:26:04.982"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.996" endtime="20201112 12:26:05.014"></status>
</kw>
<msg timestamp="20201112 12:26:05.014" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.993" endtime="20201112 12:26:05.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.017" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.015" endtime="20201112 12:26:05.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.020" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:05.018" endtime="20201112 12:26:05.020"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.991" endtime="20201112 12:26:05.021"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:04.989" endtime="20201112 12:26:05.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.987" endtime="20201112 12:26:05.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:05.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:05.025" endtime="20201112 12:26:05.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.023" endtime="20201112 12:26:05.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.986" endtime="20201112 12:26:05.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.986" endtime="20201112 12:26:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.027" endtime="20201112 12:26:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.984" endtime="20201112 12:26:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.983" endtime="20201112 12:26:05.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.959" endtime="20201112 12:26:05.030"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.039" endtime="20201112 12:26:05.237"></status>
</kw>
<msg timestamp="20201112 12:26:05.237" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.038" endtime="20201112 12:26:05.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.240" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.238" endtime="20201112 12:26:05.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.241" endtime="20201112 12:26:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.035" endtime="20201112 12:26:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.033" endtime="20201112 12:26:05.244"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.246" endtime="20201112 12:26:05.247"></status>
</kw>
<msg timestamp="20201112 12:26:05.248" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:05.244" endtime="20201112 12:26:05.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.252" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:05.251" endtime="20201112 12:26:05.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.254" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:05.253" endtime="20201112 12:26:05.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.248" endtime="20201112 12:26:05.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.259" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:05.257" endtime="20201112 12:26:05.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.261" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:05.260" endtime="20201112 12:26:05.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.255" endtime="20201112 12:26:05.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.268" endtime="20201112 12:26:05.573"></status>
</kw>
<msg timestamp="20201112 12:26:05.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070594361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070659042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.266" endtime="20201112 12:26:05.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070594361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070659042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.578" endtime="20201112 12:26:05.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.585" endtime="20201112 12:26:05.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.264" endtime="20201112 12:26:05.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.262" endtime="20201112 12:26:05.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.592" level="INFO">${RESULT} = [{'time': 0.070659042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.468100000001087e-05, 'source_diff': 6.468100000001087e-05}, {'time': 0.074212222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.589" endtime="20201112 12:26:05.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.606" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:05.594" endtime="20201112 12:26:05.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.611" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:05.610" endtime="20201112 12:26:05.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.613" level="INFO">VALUE: [6.468100000001087e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.433399999999923e-05, 6.436099999999889e-05, 6.433299999999975e-05, 6.43750000000054e-05, 6.433299999999975e-05, 6.434800000000573e-05, 6.434700000000626e-05, 6.433299999999975e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.433299999999975e-05, 6.434799999999186e-05, 6.434700000000626e-05, 6.434699999999238e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.430499999998673e-05, 6.436099999998501e-05, 6.440299999999066e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.441600000001158e-05, 6.434700000002014e-05, 6.436099999998501e-05, 6.436100000001277e-05, 6.43750000000054e-05, 6.434700000002014e-05, 6.436199999998449e-05, 6.440299999999066e-05, 6.433299999999975e-05, 6.436100000001277e-05, 6.434699999999238e-05, 6.433299999999975e-05, 6.440299999999066e-05, 6.436100000001277e-05, 6.436099999998501e-05, 6.434800000001961e-05, 6.434699999999238e-05, 6.434699999999238e-05, 6.43200000000066e-05, 6.431900000000712e-05, 6.430499999998673e-05, 6.434800000001961e-05]</msg>
<status status="PASS" starttime="20201112 12:26:05.612" endtime="20201112 12:26:05.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.607" endtime="20201112 12:26:05.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.616" endtime="20201112 12:26:05.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.620" endtime="20201112 12:26:05.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.618" endtime="20201112 12:26:05.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.615" endtime="20201112 12:26:05.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.031" endtime="20201112 12:26:05.640"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:04.957" endtime="20201112 12:26:05.641" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.650" endtime="20201112 12:26:05.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.648" endtime="20201112 12:26:05.670"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.683" endtime="20201112 12:26:05.701"></status>
</kw>
<msg timestamp="20201112 12:26:05.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.681" endtime="20201112 12:26:05.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.704" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.703" endtime="20201112 12:26:05.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:05.705" endtime="20201112 12:26:05.708"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:05.679" endtime="20201112 12:26:05.708"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:05.676" endtime="20201112 12:26:05.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.675" endtime="20201112 12:26:05.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:05.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:05.712" endtime="20201112 12:26:05.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.710" endtime="20201112 12:26:05.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.674" endtime="20201112 12:26:05.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.673" endtime="20201112 12:26:05.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.715" endtime="20201112 12:26:05.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.672" endtime="20201112 12:26:05.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.671" endtime="20201112 12:26:05.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.647" endtime="20201112 12:26:05.718"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.727" endtime="20201112 12:26:05.749"></status>
</kw>
<msg timestamp="20201112 12:26:05.750" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.726" endtime="20201112 12:26:05.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.752" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.751" endtime="20201112 12:26:05.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.753" endtime="20201112 12:26:05.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.723" endtime="20201112 12:26:05.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.721" endtime="20201112 12:26:05.756"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.758" endtime="20201112 12:26:05.760"></status>
</kw>
<msg timestamp="20201112 12:26:05.760" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:05.757" endtime="20201112 12:26:05.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.764" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:05.763" endtime="20201112 12:26:05.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.766" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:05.765" endtime="20201112 12:26:05.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.761" endtime="20201112 12:26:05.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.771" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:05.770" endtime="20201112 12:26:05.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.773" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:05.772" endtime="20201112 12:26:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.768" endtime="20201112 12:26:05.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.780" endtime="20201112 12:26:06.068"></status>
</kw>
<msg timestamp="20201112 12:26:06.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067774889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067776417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.779" endtime="20201112 12:26:06.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067774889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067776417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.073" endtime="20201112 12:26:06.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.081" endtime="20201112 12:26:06.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.776" endtime="20201112 12:26:06.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.774" endtime="20201112 12:26:06.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.088" level="INFO">${RESULT} = [{'time': 0.067776417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.067788847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:06.085" endtime="20201112 12:26:06.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.106" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:06.089" endtime="20201112 12:26:06.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.110" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:06.109" endtime="20201112 12:26:06.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.113" level="INFO">VALUE: [1.52800000000064e-06, 1.4440000000032205e-06, 1.5139999999941312e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.514000000008009e-06, 1.5279999999867622e-06, 1.5139999999941312e-06, 1.4859999999949913e-06, 1.5279999999867622e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.5269999999872885e-06, 1.514000000008009e-06, 1.5000000000015001e-06, 1.541999999993271e-06, 1.4440000000032205e-06, 1.4579999999958515e-06, 1.4860000000088691e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5410000000076751e-06, 1.5139999999941312e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5549999999864283e-06, 1.5139999999941312e-06, 1.5420000000071488e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.4720000000023603e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.5139999999941312e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.111" endtime="20201112 12:26:06.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.107" endtime="20201112 12:26:06.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.116" endtime="20201112 12:26:06.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.119" endtime="20201112 12:26:06.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.118" endtime="20201112 12:26:06.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.114" endtime="20201112 12:26:06.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.719" endtime="20201112 12:26:06.140"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:05.644" endtime="20201112 12:26:06.141" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.148" endtime="20201112 12:26:06.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.146" endtime="20201112 12:26:06.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.182" endtime="20201112 12:26:06.197"></status>
</kw>
<msg timestamp="20201112 12:26:06.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.179" endtime="20201112 12:26:06.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.200" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.199" endtime="20201112 12:26:06.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:06.201" endtime="20201112 12:26:06.204"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:06.176" endtime="20201112 12:26:06.204"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:06.174" endtime="20201112 12:26:06.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.173" endtime="20201112 12:26:06.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:06.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:06.209" endtime="20201112 12:26:06.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.206" endtime="20201112 12:26:06.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.172" endtime="20201112 12:26:06.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.172" endtime="20201112 12:26:06.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.211" endtime="20201112 12:26:06.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.170" endtime="20201112 12:26:06.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.169" endtime="20201112 12:26:06.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.145" endtime="20201112 12:26:06.214"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.223" endtime="20201112 12:26:06.293"></status>
</kw>
<msg timestamp="20201112 12:26:06.293" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.221" endtime="20201112 12:26:06.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.296" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.294" endtime="20201112 12:26:06.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.297" endtime="20201112 12:26:06.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.219" endtime="20201112 12:26:06.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.216" endtime="20201112 12:26:06.299"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.301" endtime="20201112 12:26:06.303"></status>
</kw>
<msg timestamp="20201112 12:26:06.303" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:06.300" endtime="20201112 12:26:06.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.307" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:06.306" endtime="20201112 12:26:06.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.309" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:06.308" endtime="20201112 12:26:06.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.304" endtime="20201112 12:26:06.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.314" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:06.313" endtime="20201112 12:26:06.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.316" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:06.315" endtime="20201112 12:26:06.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.311" endtime="20201112 12:26:06.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.324" endtime="20201112 12:26:06.615"></status>
</kw>
<msg timestamp="20201112 12:26:06.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066261444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06627025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:06.322" endtime="20201112 12:26:06.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066261444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06627025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:06.619" endtime="20201112 12:26:06.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.627" endtime="20201112 12:26:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.319" endtime="20201112 12:26:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.318" endtime="20201112 12:26:06.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.634" level="INFO">${RESULT} = [{'time': 0.06627025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.067249875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:06.630" endtime="20201112 12:26:06.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.649" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:06.635" endtime="20201112 12:26:06.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.654" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:06.653" endtime="20201112 12:26:06.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.656" level="INFO">VALUE: [8.806000000000092e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.959000000002826e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.875000000005406e-06, 8.874999999991529e-06, 8.861000000012775e-06, 8.874999999991529e-06, 8.860999999998898e-06, 8.819000000007127e-06, 8.888999999998037e-06, 8.874999999991529e-06, 8.957999999989474e-06, 8.875000000005406e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.860999999998898e-06, 8.889000000011915e-06, 8.875000000005406e-06, 8.818999999993249e-06, 8.860999999998898e-06, 8.875000000005406e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.655" endtime="20201112 12:26:06.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.650" endtime="20201112 12:26:06.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.659" endtime="20201112 12:26:06.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.663" endtime="20201112 12:26:06.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.661" endtime="20201112 12:26:06.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.658" endtime="20201112 12:26:06.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.215" endtime="20201112 12:26:06.683"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:06.142" endtime="20201112 12:26:06.684" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.691" endtime="20201112 12:26:06.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.690" endtime="20201112 12:26:06.711"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.725" endtime="20201112 12:26:06.741"></status>
</kw>
<msg timestamp="20201112 12:26:06.741" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.722" endtime="20201112 12:26:06.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.742" endtime="20201112 12:26:06.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.747" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:06.745" endtime="20201112 12:26:06.747"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:06.720" endtime="20201112 12:26:06.748"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:06.717" endtime="20201112 12:26:06.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.716" endtime="20201112 12:26:06.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:06.753" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:06.752" endtime="20201112 12:26:06.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.750" endtime="20201112 12:26:06.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.715" endtime="20201112 12:26:06.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.715" endtime="20201112 12:26:06.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.754" endtime="20201112 12:26:06.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.714" endtime="20201112 12:26:06.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.712" endtime="20201112 12:26:06.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.688" endtime="20201112 12:26:06.757"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.766" endtime="20201112 12:26:06.968"></status>
</kw>
<msg timestamp="20201112 12:26:06.969" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.764" endtime="20201112 12:26:06.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.974" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.971" endtime="20201112 12:26:06.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.976" endtime="20201112 12:26:06.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.762" endtime="20201112 12:26:06.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.759" endtime="20201112 12:26:06.982"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.986" endtime="20201112 12:26:06.989"></status>
</kw>
<msg timestamp="20201112 12:26:06.990" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:06.983" endtime="20201112 12:26:06.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.999" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:06.996" endtime="20201112 12:26:06.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.003" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:07.001" endtime="20201112 12:26:07.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.992" endtime="20201112 12:26:07.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.013" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:07.010" endtime="20201112 12:26:07.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.017" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:07.015" endtime="20201112 12:26:07.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.006" endtime="20201112 12:26:07.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.032" endtime="20201112 12:26:07.332"></status>
</kw>
<msg timestamp="20201112 12:26:07.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068079361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06809575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:07.029" endtime="20201112 12:26:07.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068079361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06809575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:07.336" endtime="20201112 12:26:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.344" endtime="20201112 12:26:07.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.024" endtime="20201112 12:26:07.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.020" endtime="20201112 12:26:07.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.351" level="INFO">${RESULT} = [{'time': 0.06809575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.638899999999166e-05, 'source_diff': 1.638899999999166e-05}, {'time': 0.071665875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:07.347" endtime="20201112 12:26:07.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.364" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:07.352" endtime="20201112 12:26:07.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.369" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:07.368" endtime="20201112 12:26:07.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.371" level="INFO">VALUE: [1.638899999999166e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.6318999999986872e-05, 1.6347999999999363e-05, 1.634699999999989e-05, 1.638899999999166e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.6389000000005538e-05, 1.637499999999903e-05, 1.636099999999252e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.637499999999903e-05, 1.637499999998515e-05, 1.636099999999252e-05, 1.637499999998515e-05, 1.636200000001975e-05, 1.6388999999977782e-05, 1.636099999999252e-05, 1.636099999999252e-05, 1.634699999999989e-05, 1.6389000000005538e-05, 1.6388999999977782e-05, 1.637499999998515e-05, 1.636099999999252e-05, 1.6375000000012907e-05, 1.6375000000012907e-05, 1.637499999998515e-05, 1.636099999999252e-05, 1.640299999999817e-05, 1.6347999999999363e-05, 1.634699999999989e-05, 1.630499999999424e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.6389000000005538e-05, 1.636099999999252e-05, 1.636099999999252e-05, 1.6375000000012907e-05, 1.636099999999252e-05, 1.6334000000006732e-05, 1.6361999999991994e-05, 1.637499999998515e-05, 1.634699999999989e-05, 1.640299999999817e-05, 1.6431000000011187e-05, 1.6375000000012907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:07.370" endtime="20201112 12:26:07.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.365" endtime="20201112 12:26:07.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.374" endtime="20201112 12:26:07.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.378" endtime="20201112 12:26:07.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.376" endtime="20201112 12:26:07.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.373" endtime="20201112 12:26:07.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.758" endtime="20201112 12:26:07.398"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:06.686" endtime="20201112 12:26:07.399" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:46.005" endtime="20201112 12:26:07.406"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.475" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:07.483" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:08.449" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:07.474" endtime="20201112 12:26:08.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.452" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:08.451" endtime="20201112 12:26:08.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.472" endtime="20201112 12:26:08.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.455" endtime="20201112 12:26:08.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.454" endtime="20201112 12:26:08.696"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.708" endtime="20201112 12:26:08.729"></status>
</kw>
<msg timestamp="20201112 12:26:08.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.707" endtime="20201112 12:26:08.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.731" endtime="20201112 12:26:08.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:08.734" endtime="20201112 12:26:08.736"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.704" endtime="20201112 12:26:08.736"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.702" endtime="20201112 12:26:08.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.701" endtime="20201112 12:26:08.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:08.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:08.740" endtime="20201112 12:26:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.738" endtime="20201112 12:26:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.700" endtime="20201112 12:26:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.699" endtime="20201112 12:26:08.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.744" endtime="20201112 12:26:08.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.698" endtime="20201112 12:26:08.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.747" endtime="20201112 12:26:08.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.696" endtime="20201112 12:26:08.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.471" endtime="20201112 12:26:08.749"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.755" endtime="20201112 12:26:08.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.754" endtime="20201112 12:26:08.775"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.788" endtime="20201112 12:26:08.804"></status>
</kw>
<msg timestamp="20201112 12:26:08.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.786" endtime="20201112 12:26:08.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.806" endtime="20201112 12:26:08.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:08.808" endtime="20201112 12:26:08.811"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.784" endtime="20201112 12:26:08.811"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:08.781" endtime="20201112 12:26:08.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.780" endtime="20201112 12:26:08.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:08.816" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:08.815" endtime="20201112 12:26:08.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.813" endtime="20201112 12:26:08.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.779" endtime="20201112 12:26:08.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.779" endtime="20201112 12:26:08.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.818" endtime="20201112 12:26:08.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.777" endtime="20201112 12:26:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.776" endtime="20201112 12:26:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.752" endtime="20201112 12:26:08.821"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.832" endtime="20201112 12:26:08.850"></status>
</kw>
<msg timestamp="20201112 12:26:08.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.830" endtime="20201112 12:26:08.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.851" endtime="20201112 12:26:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.854" endtime="20201112 12:26:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.826" endtime="20201112 12:26:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.824" endtime="20201112 12:26:08.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.863" endtime="20201112 12:26:09.156"></status>
</kw>
<msg timestamp="20201112 12:26:09.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066974389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067020597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.862" endtime="20201112 12:26:09.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066974389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067020597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.160" endtime="20201112 12:26:09.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.168" endtime="20201112 12:26:09.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.859" endtime="20201112 12:26:09.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.857" endtime="20201112 12:26:09.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.175" level="INFO">${RESULT} = [{'time': 0.067020597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.620800000000591e-05, 'source_diff': 4.620800000000591e-05}, {'time': 0.067029222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.172" endtime="20201112 12:26:09.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:09.188" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:09.176" endtime="20201112 12:26:09.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.193" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:09.192" endtime="20201112 12:26:09.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.195" level="INFO">VALUE: [4.620800000000591e-05, 3.2080000000045406e-06, 3.2219999999971716e-06, 2.6669999999978655e-06, 2.7080000000040405e-06, 2.7360000000031803e-06, 3.2089999999901364e-06, 2.7080000000040405e-06, 2.652000000005761e-06, 2.7219999999966715e-06, 3.223000000010523e-06, 3.2369999999892762e-06, 2.7220000000105493e-06, 3.1949999999975054e-06, 3.2219999999971716e-06, 2.723000000010023e-06, 3.1949999999975054e-06, 2.7079999999901627e-06, 2.7219999999966715e-06, 2.7080000000040405e-06, 3.1939999999980317e-06, 3.2360000000036804e-06, 3.7219999999976716e-06, 2.7080000000040405e-06, 3.2219999999971716e-06, 3.278000000009329e-06, 2.7079999999901627e-06, 3.2080000000045406e-06, 2.7220000000105493e-06, 2.7079999999901627e-06, 2.709000000003514e-06, 3.1939999999980317e-06, 3.2229999999966452e-06, 3.2219999999971716e-06, 3.2079999999906628e-06, 2.7360000000031803e-06, 3.1949999999975054e-06, 3.1669999999983656e-06, 3.2089999999901364e-06, 3.2089999999901364e-06, 2.7079999999901627e-06, 2.7220000000105493e-06, 2.6940000000114095e-06, 3.2080000000045406e-06, 2.709000000003514e-06, 3.2079999999906628e-06, 3.7080000000050406e-06, 2.709000000003514e-06, 3.2229999999966452e-06, 2.6949999999970053e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.194" endtime="20201112 12:26:09.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.189" endtime="20201112 12:26:09.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.199" endtime="20201112 12:26:09.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.202" endtime="20201112 12:26:09.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.201" endtime="20201112 12:26:09.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.197" endtime="20201112 12:26:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.823" endtime="20201112 12:26:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.822" endtime="20201112 12:26:09.223"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.232" endtime="20201112 12:26:09.250"></status>
</kw>
<msg timestamp="20201112 12:26:09.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.230" endtime="20201112 12:26:09.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.251" endtime="20201112 12:26:09.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.254" endtime="20201112 12:26:09.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.228" endtime="20201112 12:26:09.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.226" endtime="20201112 12:26:09.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.262" endtime="20201112 12:26:09.550"></status>
</kw>
<msg timestamp="20201112 12:26:09.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.261" endtime="20201112 12:26:09.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.554" endtime="20201112 12:26:09.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.562" endtime="20201112 12:26:09.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.258" endtime="20201112 12:26:09.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.257" endtime="20201112 12:26:09.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.569" level="INFO">${RESULT} = [{'time': 0.020529986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.020538917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.565" endtime="20201112 12:26:09.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:09.583" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:09.570" endtime="20201112 12:26:09.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.587" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:09.586" endtime="20201112 12:26:09.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.590" level="INFO">VALUE: [3.722000000001141e-06, 3.7230000000006147e-06, 4.195000000001975e-06, 3.7219999999976716e-06, 4.207999999998602e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.152000000000322e-06, 4.222000000001641e-06, 4.209000000001545e-06, 3.709000000001045e-06, 3.708000000001571e-06, 3.7359999999972415e-06, 4.194000000002501e-06, 4.222999999997645e-06, 4.222000000001641e-06, 3.6669999999988656e-06, 4.193999999999032e-06, 3.6940000000020012e-06, 4.625000000001156e-06, 4.209000000001545e-06, 4.695000000002475e-06, 4.193999999999032e-06, 4.167000000002835e-06, 3.736000000000711e-06, 3.6529999999992957e-06, 3.709000000001045e-06, 4.208000000002071e-06, 3.722000000001141e-06, 3.763999999999851e-06, 4.195000000001975e-06, 4.737000000001185e-06, 4.208999999998075e-06, 3.6940000000020012e-06, 3.693999999998532e-06, 4.223000000001115e-06, 3.722000000001141e-06, 3.7089999999975753e-06, 4.207999999998602e-06, 3.708000000001571e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.221999999998172e-06, 3.695000000001475e-06, 4.209000000001545e-06, 4.223000000001115e-06, 4.223000000001115e-06, 3.7079999999981017e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.588" endtime="20201112 12:26:09.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.584" endtime="20201112 12:26:09.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.593" endtime="20201112 12:26:09.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.597" endtime="20201112 12:26:09.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.595" endtime="20201112 12:26:09.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.592" endtime="20201112 12:26:09.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.224" endtime="20201112 12:26:09.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.223" endtime="20201112 12:26:09.617"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.626" endtime="20201112 12:26:09.641"></status>
</kw>
<msg timestamp="20201112 12:26:09.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.625" endtime="20201112 12:26:09.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.643" endtime="20201112 12:26:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.645" endtime="20201112 12:26:09.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.622" endtime="20201112 12:26:09.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.620" endtime="20201112 12:26:09.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.655" endtime="20201112 12:26:09.943"></status>
</kw>
<msg timestamp="20201112 12:26:09.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.654" endtime="20201112 12:26:09.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.948" endtime="20201112 12:26:09.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.956" endtime="20201112 12:26:09.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.651" endtime="20201112 12:26:09.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.650" endtime="20201112 12:26:09.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.963" level="INFO">${RESULT} = [{'time': 0.019598819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019608556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.959" endtime="20201112 12:26:09.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:09.976" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:09.964" endtime="20201112 12:26:09.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.980" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:09.979" endtime="20201112 12:26:09.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.983" level="INFO">VALUE: [5.221999999999172e-06, 4.722999999998145e-06, 5.2089999999990755e-06, 4.666999999999866e-06, 5.180000000000462e-06, 4.694000000003001e-06, 5.195000000002975e-06, 4.723000000001615e-06, 4.707999999999102e-06, 4.791000000000517e-06, 5.1949999999995056e-06, 4.709000000002045e-06, 5.2089999999990755e-06, 4.680999999999436e-06, 5.222000000002641e-06, 5.264000000001351e-06, 5.222999999998645e-06, 4.680999999999436e-06, 5.209000000002545e-06, 5.221999999999172e-06, 4.708000000002571e-06, 5.208000000003071e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.208000000003071e-06, 4.693999999999532e-06, 4.707999999999102e-06, 5.2089999999990755e-06, 5.237000000001685e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.208000000003071e-06, 5.250000000001781e-06, 4.7089999999985754e-06, 5.209000000002545e-06, 4.722000000002141e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.222999999998645e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.221999999999172e-06, 4.709000000002045e-06, 5.153000000000796e-06, 4.693999999999532e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.708000000000102e-06, 4.722000000002141e-06, 4.721999999998672e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.981" endtime="20201112 12:26:09.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.977" endtime="20201112 12:26:09.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.986" endtime="20201112 12:26:09.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.990" endtime="20201112 12:26:10.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.988" endtime="20201112 12:26:10.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.985" endtime="20201112 12:26:10.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.618" endtime="20201112 12:26:10.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.618" endtime="20201112 12:26:10.011"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.019" endtime="20201112 12:26:10.036"></status>
</kw>
<msg timestamp="20201112 12:26:10.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.017" endtime="20201112 12:26:10.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.038" endtime="20201112 12:26:10.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.040" endtime="20201112 12:26:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.015" endtime="20201112 12:26:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.013" endtime="20201112 12:26:10.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.050" endtime="20201112 12:26:10.338"></status>
</kw>
<msg timestamp="20201112 12:26:10.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.049" endtime="20201112 12:26:10.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.342" endtime="20201112 12:26:10.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.350" endtime="20201112 12:26:10.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.046" endtime="20201112 12:26:10.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.045" endtime="20201112 12:26:10.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.357" level="INFO">${RESULT} = [{'time': 0.019549444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.0195595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:10.354" endtime="20201112 12:26:10.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:10.370" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:10.358" endtime="20201112 12:26:10.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.375" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:10.374" endtime="20201112 12:26:10.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.377" level="INFO">VALUE: [5.708000000000102e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.7229999999991454e-06, 5.708000000000102e-06, 6.236000000003211e-06, 6.235999999999742e-06, 5.708000000000102e-06, 5.723000000002615e-06, 5.708000000000102e-06, 5.764000000001851e-06, 6.2079999999971325e-06, 5.7089999999995755e-06, 6.208000000000602e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 5.721999999999672e-06, 5.679999999997493e-06, 6.2229999999996455e-06, 6.2090000000000756e-06, 6.139000000002226e-06, 5.708000000000102e-06, 6.236000000003211e-06, 5.7089999999995755e-06, 5.681000000000436e-06, 6.2079999999971325e-06, 5.708000000000102e-06, 6.222000000000172e-06, 6.235999999999742e-06, 6.2229999999996455e-06, 6.222000000000172e-06, 6.208000000000602e-06, 6.222000000000172e-06, 6.195000000000506e-06, 5.666999999997396e-06, 6.694000000001532e-06, 5.708000000000102e-06, 5.721999999999672e-06, 6.208000000000602e-06, 6.1529999999983265e-06, 6.2229999999996455e-06, 6.195000000000506e-06, 6.194000000001032e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 6.235999999999742e-06, 6.264000000002351e-06, 5.708000000000102e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.376" endtime="20201112 12:26:10.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.371" endtime="20201112 12:26:10.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.381" endtime="20201112 12:26:10.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.384" endtime="20201112 12:26:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.383" endtime="20201112 12:26:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.379" endtime="20201112 12:26:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.011" endtime="20201112 12:26:10.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.011" endtime="20201112 12:26:10.405"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.413" endtime="20201112 12:26:10.431"></status>
</kw>
<msg timestamp="20201112 12:26:10.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.412" endtime="20201112 12:26:10.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.432" endtime="20201112 12:26:10.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.435" endtime="20201112 12:26:10.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.409" endtime="20201112 12:26:10.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.407" endtime="20201112 12:26:10.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.444" endtime="20201112 12:26:10.732"></status>
</kw>
<msg timestamp="20201112 12:26:10.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019361306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.443" endtime="20201112 12:26:10.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019361306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.736" endtime="20201112 12:26:10.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.745" endtime="20201112 12:26:10.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.440" endtime="20201112 12:26:10.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.439" endtime="20201112 12:26:10.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.751" level="INFO">${RESULT} = [{'time': 0.019361306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708999999997106e-06, 'source_diff': 6.708999999997106e-06}, {'time': 0.019371347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.748" endtime="20201112 12:26:10.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:10.765" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:10.752" endtime="20201112 12:26:10.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.769" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:10.768" endtime="20201112 12:26:10.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.772" level="INFO">VALUE: [6.708999999997106e-06, 6.694000000001532e-06, 7.138999999999757e-06, 6.722000000000672e-06, 7.209000000001076e-06, 6.722000000000672e-06, 7.222999999997176e-06, 7.125000000000187e-06, 7.222000000001172e-06, 6.7219999999972024e-06, 7.208000000001602e-06, 6.736000000000242e-06, 7.194000000002032e-06, 7.209000000001076e-06, 7.276999999999978e-06, 7.750000000000812e-06, 7.235999999997272e-06, 7.2079999999981326e-06, 6.7369999999997154e-06, 7.209000000001076e-06, 7.222000000001172e-06, 6.709000000000576e-06, 6.736000000000242e-06, 7.194999999998036e-06, 6.7079999999976325e-06, 7.2219999999977025e-06, 6.764000000002851e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.680000000001962e-06, 6.776999999999478e-06, 7.222000000001172e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 7.208000000001602e-06, 7.180999999998466e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 7.208999999997606e-06, 7.209000000001076e-06, 7.208000000001602e-06, 6.708000000001102e-06, 7.2079999999981326e-06, 7.2230000000006456e-06, 7.181000000001936e-06, 7.181000000001936e-06, 7.2079999999981326e-06, 7.2219999999977025e-06, 6.708000000001102e-06, 7.222000000001172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.770" endtime="20201112 12:26:10.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.765" endtime="20201112 12:26:10.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.775" endtime="20201112 12:26:10.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.778" endtime="20201112 12:26:10.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.777" endtime="20201112 12:26:10.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.773" endtime="20201112 12:26:10.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.406" endtime="20201112 12:26:10.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.405" endtime="20201112 12:26:10.799"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.808" endtime="20201112 12:26:10.825"></status>
</kw>
<msg timestamp="20201112 12:26:10.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.806" endtime="20201112 12:26:10.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.826" endtime="20201112 12:26:10.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.829" endtime="20201112 12:26:10.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.804" endtime="20201112 12:26:10.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.802" endtime="20201112 12:26:10.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.839" endtime="20201112 12:26:11.127"></status>
</kw>
<msg timestamp="20201112 12:26:11.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.837" endtime="20201112 12:26:11.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.131" endtime="20201112 12:26:11.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.140" endtime="20201112 12:26:11.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.834" endtime="20201112 12:26:11.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.833" endtime="20201112 12:26:11.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.146" level="INFO">${RESULT} = [{'time': 0.019433264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.019444306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:11.143" endtime="20201112 12:26:11.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:11.161" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:11.147" endtime="20201112 12:26:11.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.165" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:11.164" endtime="20201112 12:26:11.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.168" level="INFO">VALUE: [7.721999999998203e-06, 8.209000000002076e-06, 8.208000000002602e-06, 7.707999999998633e-06, 8.208000000002602e-06, 8.222000000002172e-06, 7.694999999998536e-06, 7.707999999998633e-06, 8.236000000001742e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.721999999998203e-06, 7.708000000002102e-06, 8.194999999999036e-06, 7.694000000002532e-06, 8.207999999999133e-06, 8.249999999997842e-06, 7.693999999999063e-06, 8.194999999999036e-06, 8.221999999998703e-06, 7.723000000001146e-06, 8.221999999998703e-06, 8.166999999999897e-06, 7.722000000001672e-06, 7.735999999997772e-06, 8.166000000000423e-06, 8.249999999997842e-06, 7.736000000001242e-06, 7.708000000002102e-06, 8.709000000002576e-06, 8.709000000002576e-06, 7.707999999998633e-06, 7.708000000002102e-06, 7.721999999998203e-06, 7.694999999998536e-06, 7.708000000002102e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.237000000001216e-06, 7.708000000002102e-06, 8.235999999998272e-06, 8.624999999998217e-06, 8.207999999999133e-06, 7.708000000002102e-06, 8.694000000000063e-06, 8.235999999998272e-06, 8.207999999999133e-06, 8.223000000001646e-06, 8.707999999999633e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.166" endtime="20201112 12:26:11.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.162" endtime="20201112 12:26:11.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.178" endtime="20201112 12:26:11.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.182" endtime="20201112 12:26:11.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.180" endtime="20201112 12:26:11.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.177" endtime="20201112 12:26:11.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.800" endtime="20201112 12:26:11.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.800" endtime="20201112 12:26:11.203"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.212" endtime="20201112 12:26:11.228"></status>
</kw>
<msg timestamp="20201112 12:26:11.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.210" endtime="20201112 12:26:11.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.229" endtime="20201112 12:26:11.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.232" endtime="20201112 12:26:11.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.208" endtime="20201112 12:26:11.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.205" endtime="20201112 12:26:11.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.242" endtime="20201112 12:26:11.526"></status>
</kw>
<msg timestamp="20201112 12:26:11.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.241" endtime="20201112 12:26:11.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.530" endtime="20201112 12:26:11.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.538" endtime="20201112 12:26:11.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.238" endtime="20201112 12:26:11.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.236" endtime="20201112 12:26:11.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.545" level="INFO">${RESULT} = [{'time': 0.019897403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.019912389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:11.542" endtime="20201112 12:26:11.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:11.558" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:11.546" endtime="20201112 12:26:11.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.563" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:11.562" endtime="20201112 12:26:11.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.565" level="INFO">VALUE: [9.208999999999606e-06, 8.707999999999633e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.195000000000036e-06, 8.763999999997912e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708999999999106e-06, 9.222999999999176e-06, 8.707999999999633e-06, 8.721999999999203e-06, 9.221999999999703e-06, 8.680999999999967e-06, 8.707999999999633e-06, 9.195000000000036e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.722000000002672e-06, 9.208000000000133e-06, 9.138999999998287e-06, 9.264000000001882e-06, 9.722000000000203e-06, 8.721999999999203e-06, 9.221999999999703e-06, 8.722999999998676e-06, 8.791000000001048e-06, 8.707999999999633e-06, 9.166999999997427e-06, 9.222999999999176e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.735999999998773e-06, 9.194000000000563e-06, 9.208999999999606e-06, 9.222999999999176e-06, 9.208000000000133e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.707999999999633e-06, 9.208000000000133e-06, 9.195000000000036e-06, 8.721999999999203e-06, 9.221999999999703e-06, 8.694000000000063e-06, 9.221999999999703e-06, 9.195000000000036e-06, 8.708999999999106e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.564" endtime="20201112 12:26:11.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.559" endtime="20201112 12:26:11.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.569" endtime="20201112 12:26:11.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.572" endtime="20201112 12:26:11.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.571" endtime="20201112 12:26:11.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.567" endtime="20201112 12:26:11.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.204" endtime="20201112 12:26:11.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.203" endtime="20201112 12:26:11.593"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.602" endtime="20201112 12:26:11.619"></status>
</kw>
<msg timestamp="20201112 12:26:11.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.600" endtime="20201112 12:26:11.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.620" endtime="20201112 12:26:11.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.623" endtime="20201112 12:26:11.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.597" endtime="20201112 12:26:11.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.595" endtime="20201112 12:26:11.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.633" endtime="20201112 12:26:11.919"></status>
</kw>
<msg timestamp="20201112 12:26:11.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.631" endtime="20201112 12:26:11.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.923" endtime="20201112 12:26:11.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.932" endtime="20201112 12:26:11.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.629" endtime="20201112 12:26:11.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.627" endtime="20201112 12:26:11.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.938" level="INFO">${RESULT} = [{'time': 0.019499403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694999999997067e-06, 'source_diff': 9.694999999997067e-06}, {'time': 0.0195135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:11.935" endtime="20201112 12:26:11.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:11.951" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:11.939" endtime="20201112 12:26:11.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.956" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:11.955" endtime="20201112 12:26:11.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.958" level="INFO">VALUE: [9.694999999997067e-06, 1.0263999999999412e-05, 9.708000000000633e-06, 9.693999999997593e-06, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0695000000001537e-05, 1.0195000000001037e-05, 9.722000000000203e-06, 9.722999999999676e-06, 9.708000000000633e-06, 1.0223000000000176e-05, 1.0222000000000703e-05, 9.693999999997593e-06, 1.0180999999997997e-05, 1.0222000000000703e-05, 1.0222999999996707e-05, 9.722000000000203e-06, 9.722000000000203e-06, 9.722000000000203e-06, 9.749999999999343e-06, 1.0263999999999412e-05, 1.0138999999999287e-05, 1.0222000000000703e-05, 1.0236000000000273e-05, 9.722000000000203e-06, 9.708000000000633e-06, 1.0723000000000676e-05, 1.0222000000000703e-05, 1.0207999999997663e-05, 9.708000000000633e-06, 1.0208000000001133e-05, 9.722000000000203e-06, 1.0223000000000176e-05, 1.0222000000000703e-05, 1.0221999999997233e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0264000000002882e-05, 1.0209000000000606e-05, 1.0722000000001203e-05, 1.0207999999997663e-05, 9.709000000000106e-06, 9.708000000000633e-06, 9.695000000000537e-06, 1.0194000000001563e-05, 9.708000000000633e-06, 1.0194999999997567e-05, 1.0222000000000703e-05, 1.0179999999998524e-05]</msg>
<status status="PASS" starttime="20201112 12:26:11.957" endtime="20201112 12:26:11.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.952" endtime="20201112 12:26:11.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.962" endtime="20201112 12:26:11.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.965" endtime="20201112 12:26:11.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.964" endtime="20201112 12:26:11.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.960" endtime="20201112 12:26:11.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.594" endtime="20201112 12:26:11.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.593" endtime="20201112 12:26:11.986"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.995" endtime="20201112 12:26:12.011"></status>
</kw>
<msg timestamp="20201112 12:26:12.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.993" endtime="20201112 12:26:12.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.013" endtime="20201112 12:26:12.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.015" endtime="20201112 12:26:12.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.991" endtime="20201112 12:26:12.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.989" endtime="20201112 12:26:12.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.025" endtime="20201112 12:26:12.311"></status>
</kw>
<msg timestamp="20201112 12:26:12.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.023" endtime="20201112 12:26:12.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.315" endtime="20201112 12:26:12.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.324" endtime="20201112 12:26:12.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.021" endtime="20201112 12:26:12.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.019" endtime="20201112 12:26:12.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.330" level="INFO">${RESULT} = [{'time': 0.019472264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.019485319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.327" endtime="20201112 12:26:12.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:12.343" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:12.331" endtime="20201112 12:26:12.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.348" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:12.347" endtime="20201112 12:26:12.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.350" level="INFO">VALUE: [1.0707999999998163e-05, 1.0708000000001633e-05, 1.0709000000001107e-05, 1.0652999999999357e-05, 1.0709000000001107e-05, 1.0707999999998163e-05, 1.0721999999997733e-05, 1.1181000000002467e-05, 1.1209000000001607e-05, 1.1235999999997803e-05, 1.1207999999998663e-05, 1.0708000000001633e-05, 1.0638999999999788e-05, 1.1208999999998137e-05, 1.0723000000000676e-05, 1.1708999999998637e-05, 1.1264000000000413e-05, 1.0736000000000773e-05, 1.0722000000001203e-05, 1.1222000000001703e-05, 1.0709000000001107e-05, 1.1236000000001273e-05, 1.1222000000001703e-05, 1.1291999999999552e-05, 1.1223000000001176e-05, 1.1223000000001176e-05, 1.1207999999998663e-05, 1.0638999999999788e-05, 1.0708000000001633e-05, 1.1208999999998137e-05, 1.1222000000001703e-05, 1.1223000000001176e-05, 1.0722000000001203e-05, 1.1181000000002467e-05, 1.1179999999999524e-05, 1.1221999999998233e-05, 1.1209000000001607e-05, 1.1194999999998567e-05, 1.1222000000001703e-05, 1.1207999999998663e-05, 1.1193999999999094e-05, 1.0736000000000773e-05, 1.1209000000001607e-05, 1.1194000000002563e-05, 1.1194999999998567e-05, 1.0721999999997733e-05, 1.1222000000001703e-05, 1.1180999999998997e-05, 1.0625000000000218e-05, 1.1222000000001703e-05]</msg>
<status status="PASS" starttime="20201112 12:26:12.349" endtime="20201112 12:26:12.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.344" endtime="20201112 12:26:12.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.354" endtime="20201112 12:26:12.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.357" endtime="20201112 12:26:12.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.356" endtime="20201112 12:26:12.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.352" endtime="20201112 12:26:12.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.987" endtime="20201112 12:26:12.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.987" endtime="20201112 12:26:12.378"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.387" endtime="20201112 12:26:12.403"></status>
</kw>
<msg timestamp="20201112 12:26:12.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.385" endtime="20201112 12:26:12.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.404" endtime="20201112 12:26:12.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.407" endtime="20201112 12:26:12.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.383" endtime="20201112 12:26:12.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.381" endtime="20201112 12:26:12.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.416" endtime="20201112 12:26:12.702"></status>
</kw>
<msg timestamp="20201112 12:26:12.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.415" endtime="20201112 12:26:12.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.706" endtime="20201112 12:26:12.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.714" endtime="20201112 12:26:12.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.412" endtime="20201112 12:26:12.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.411" endtime="20201112 12:26:12.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.721" level="INFO">${RESULT} = [{'time': 0.019678139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019693292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.717" endtime="20201112 12:26:12.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:12.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:12.722" endtime="20201112 12:26:12.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.740" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:12.739" endtime="20201112 12:26:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.742" level="INFO">VALUE: [1.2207999999999664e-05, 1.2236000000002273e-05, 1.1708999999998637e-05, 1.2708000000000164e-05, 1.1709000000002107e-05, 1.2209000000002607e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.2208999999999137e-05, 1.1750000000001343e-05, 1.2208000000003133e-05, 1.1707999999999164e-05, 1.2207999999999664e-05, 1.2708000000000164e-05, 1.2222999999998707e-05, 1.1709000000002107e-05, 1.1693999999999594e-05, 1.2207999999999664e-05, 1.1708999999998637e-05, 1.1708999999998637e-05, 1.2222000000002703e-05, 1.2208999999999137e-05, 1.1749999999997873e-05, 1.2221999999999233e-05, 1.2236000000002273e-05, 1.2207999999999664e-05, 1.1708000000002633e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.1721999999998733e-05, 1.1723000000001677e-05, 1.1708999999998637e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.1707999999999164e-05, 1.2222999999998707e-05, 1.1723000000001677e-05, 1.1694999999999067e-05, 1.2236000000002273e-05, 1.2207999999999664e-05, 1.1695000000002537e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.2207999999999664e-05, 1.1708000000002633e-05, 1.2207999999999664e-05, 1.1708000000002633e-05, 1.2235999999998803e-05]</msg>
<status status="PASS" starttime="20201112 12:26:12.741" endtime="20201112 12:26:12.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.736" endtime="20201112 12:26:12.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.746" endtime="20201112 12:26:12.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.749" endtime="20201112 12:26:12.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.748" endtime="20201112 12:26:12.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.744" endtime="20201112 12:26:12.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.379" endtime="20201112 12:26:12.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.378" endtime="20201112 12:26:12.770"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.779" endtime="20201112 12:26:12.794"></status>
</kw>
<msg timestamp="20201112 12:26:12.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.777" endtime="20201112 12:26:12.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.796" endtime="20201112 12:26:12.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.798" endtime="20201112 12:26:12.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.774" endtime="20201112 12:26:12.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.772" endtime="20201112 12:26:12.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.808" endtime="20201112 12:26:13.094"></status>
</kw>
<msg timestamp="20201112 12:26:13.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.807" endtime="20201112 12:26:13.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019618958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.098" endtime="20201112 12:26:13.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.106" endtime="20201112 12:26:13.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.804" endtime="20201112 12:26:13.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.802" endtime="20201112 12:26:13.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.115" level="INFO">${RESULT} = [{'time': 0.019618958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.019637903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:13.112" endtime="20201112 12:26:13.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:13.130" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:13.116" endtime="20201112 12:26:13.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.135" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:13.134" endtime="20201112 12:26:13.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.138" level="INFO">VALUE: [1.2721999999999734e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.2708000000000164e-05, 1.3152999999998388e-05, 1.3222999999999707e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3195000000000567e-05, 1.2721999999999734e-05, 1.2708000000000164e-05, 1.3708000000001164e-05, 1.3194000000001094e-05, 1.3209000000000137e-05, 1.3709000000000637e-05, 1.3707999999997694e-05, 1.3222000000000234e-05, 1.3638999999999318e-05, 1.2735999999999303e-05, 1.3749999999999873e-05, 1.2694999999996598e-05, 1.3179999999998054e-05, 1.3166000000001954e-05, 1.3222000000000234e-05, 1.3180000000001524e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3722000000000734e-05, 1.2681000000000497e-05, 1.2708999999999637e-05, 1.2708999999999637e-05, 1.3139000000002288e-05, 1.3208000000000664e-05, 1.2721999999999734e-05, 1.2693999999997124e-05, 1.2722999999999207e-05, 1.3249999999999373e-05, 1.2708000000000164e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.2722000000003203e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.3208000000000664e-05, 1.2708000000000164e-05, 1.3222000000000234e-05, 1.2652999999997888e-05]</msg>
<status status="PASS" starttime="20201112 12:26:13.136" endtime="20201112 12:26:13.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.131" endtime="20201112 12:26:13.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.142" endtime="20201112 12:26:13.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.146" endtime="20201112 12:26:13.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.144" endtime="20201112 12:26:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.140" endtime="20201112 12:26:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.771" endtime="20201112 12:26:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.770" endtime="20201112 12:26:13.167"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.175" endtime="20201112 12:26:13.193"></status>
</kw>
<msg timestamp="20201112 12:26:13.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.174" endtime="20201112 12:26:13.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.195" endtime="20201112 12:26:13.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.197" endtime="20201112 12:26:13.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.171" endtime="20201112 12:26:13.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.169" endtime="20201112 12:26:13.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.207" endtime="20201112 12:26:13.493"></status>
</kw>
<msg timestamp="20201112 12:26:13.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.206" endtime="20201112 12:26:13.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.497" endtime="20201112 12:26:13.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.505" endtime="20201112 12:26:13.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.203" endtime="20201112 12:26:13.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.201" endtime="20201112 12:26:13.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.512" level="INFO">${RESULT} = [{'time': 0.019795569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4721999999998264e-05, 'source_diff': 1.4721999999998264e-05}, {'time': 0.01981425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:13.509" endtime="20201112 12:26:13.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:13.525" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:13.513" endtime="20201112 12:26:13.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.530" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:13.529" endtime="20201112 12:26:13.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.532" level="INFO">VALUE: [1.4721999999998264e-05, 1.3735999999996834e-05, 1.4167000000002428e-05, 1.3708000000001164e-05, 1.3721999999997264e-05, 1.4736000000001304e-05, 1.4708999999998168e-05, 1.3721999999997264e-05, 1.4195000000001567e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.4723000000001207e-05, 1.3723000000000207e-05, 1.3708000000001164e-05, 1.3694000000001594e-05, 1.4195000000001567e-05, 1.4208000000001664e-05, 1.4222999999997238e-05, 1.4222999999997238e-05, 1.4138999999999818e-05, 1.3721999999997264e-05, 1.4222000000001234e-05, 1.4209000000001137e-05, 1.4236000000000804e-05, 1.3736000000000304e-05, 1.4125000000000248e-05, 1.4194000000002094e-05, 1.3694999999997598e-05, 1.3723000000000207e-05, 1.4221999999997764e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.4179999999999054e-05, 1.3624999999999748e-05, 1.3709000000000637e-05, 1.4209000000001137e-05, 1.4236000000000804e-05, 1.4249999999996904e-05, 1.4207999999998194e-05, 1.3723000000000207e-05, 1.4208000000001664e-05, 1.3722000000000734e-05, 1.3721999999997264e-05, 1.3652999999998888e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201112 12:26:13.531" endtime="20201112 12:26:13.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.526" endtime="20201112 12:26:13.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.536" endtime="20201112 12:26:13.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.540" endtime="20201112 12:26:13.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.538" endtime="20201112 12:26:13.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.534" endtime="20201112 12:26:13.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.167" endtime="20201112 12:26:13.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.167" endtime="20201112 12:26:13.563"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.581" endtime="20201112 12:26:13.604"></status>
</kw>
<msg timestamp="20201112 12:26:13.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.578" endtime="20201112 12:26:13.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.607" endtime="20201112 12:26:13.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.612" endtime="20201112 12:26:13.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.573" endtime="20201112 12:26:13.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.568" endtime="20201112 12:26:13.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.632" endtime="20201112 12:26:13.921"></status>
</kw>
<msg timestamp="20201112 12:26:13.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033084292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.629" endtime="20201112 12:26:13.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033069083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033084292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.926" endtime="20201112 12:26:13.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.934" endtime="20201112 12:26:13.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.624" endtime="20201112 12:26:13.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.620" endtime="20201112 12:26:13.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.941" level="INFO">${RESULT} = [{'time': 0.033084292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5209000000002137e-05, 'source_diff': 1.5209000000002137e-05}, {'time': 0.033102278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:13.938" endtime="20201112 12:26:13.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:13.955" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:13.942" endtime="20201112 12:26:13.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.959" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:13.958" endtime="20201112 12:26:13.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.962" level="INFO">VALUE: [1.5209000000002137e-05, 1.5209000000002137e-05, 1.5236000000001804e-05, 1.5236000000001804e-05, 1.4693999999995655e-05, 1.5221999999995295e-05, 1.5208999999995199e-05, 1.5179999999996585e-05, 1.5151999999997445e-05, 1.4750000000000874e-05, 1.4735999999994365e-05, 1.4709000000001637e-05, 1.5708000000003164e-05, 1.5152999999996919e-05, 1.4805999999999153e-05, 1.4708000000002164e-05, 1.4722000000001734e-05, 1.5208000000002664e-05, 1.5223000000001707e-05, 1.5208000000002664e-05, 1.5208000000002664e-05, 1.4708000000002164e-05, 1.5722000000002734e-05, 1.5208999999995199e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.5209000000002137e-05, 1.5222000000002234e-05, 1.5222000000002234e-05, 1.4791999999999583e-05, 1.4750000000000874e-05, 1.5221999999995295e-05, 1.5208000000002664e-05, 1.4693999999995655e-05, 1.4708000000002164e-05, 1.4778000000000013e-05, 1.4709000000001637e-05, 1.5237000000001277e-05, 1.5221999999995295e-05, 1.4749999999993935e-05, 1.5222000000002234e-05, 1.5209000000002137e-05, 1.5292000000000083e-05, 1.5207999999995725e-05, 1.4680000000003024e-05, 1.4708999999994699e-05, 1.5222000000002234e-05, 1.4707999999995225e-05, 1.5180000000003524e-05, 1.5221999999995295e-05]</msg>
<status status="PASS" starttime="20201112 12:26:13.960" endtime="20201112 12:26:13.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.955" endtime="20201112 12:26:13.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.965" endtime="20201112 12:26:13.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.969" endtime="20201112 12:26:13.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.967" endtime="20201112 12:26:13.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.964" endtime="20201112 12:26:13.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.565" endtime="20201112 12:26:13.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.564" endtime="20201112 12:26:13.990"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.998" endtime="20201112 12:26:14.016"></status>
</kw>
<msg timestamp="20201112 12:26:14.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.997" endtime="20201112 12:26:14.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.018" endtime="20201112 12:26:14.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.020" endtime="20201112 12:26:14.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.994" endtime="20201112 12:26:14.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.992" endtime="20201112 12:26:14.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.030" endtime="20201112 12:26:14.317"></status>
</kw>
<msg timestamp="20201112 12:26:14.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.029" endtime="20201112 12:26:14.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.321" endtime="20201112 12:26:14.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.330" endtime="20201112 12:26:14.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.026" endtime="20201112 12:26:14.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.025" endtime="20201112 12:26:14.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.336" level="INFO">${RESULT} = [{'time': 0.019708361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6208000000000194e-05, 'source_diff': 1.6208000000000194e-05}, {'time': 0.019729417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:14.333" endtime="20201112 12:26:14.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:14.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:14.337" endtime="20201112 12:26:14.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.355" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:14.354" endtime="20201112 12:26:14.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.358" level="INFO">VALUE: [1.6208000000000194e-05, 1.5722999999998738e-05, 1.6278000000001513e-05, 1.6208000000000194e-05, 1.5680000000000555e-05, 1.5721999999999264e-05, 1.6221999999999764e-05, 1.5709000000002638e-05, 1.5665999999997515e-05, 1.5721999999999264e-05, 1.5722000000002734e-05, 1.5694999999999598e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.5694999999999598e-05, 1.5707999999999694e-05, 1.5707999999999694e-05, 1.6221999999999764e-05, 1.5721999999999264e-05, 1.5722999999998738e-05, 1.6250000000002374e-05, 1.6181000000000528e-05, 1.6221999999999764e-05, 1.6709000000000168e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.5777999999997544e-05, 1.6208000000000194e-05, 1.6208999999999668e-05, 1.6207999999996725e-05, 1.6221999999999764e-05, 1.5709000000002638e-05, 1.615300000000139e-05, 1.6193999999997155e-05, 1.6221999999999764e-05, 1.6180000000001055e-05, 1.6235999999999334e-05, 1.6208999999999668e-05, 1.6194000000000625e-05, 1.6221999999999764e-05, 1.6208999999999668e-05, 1.6249999999998904e-05, 1.5722999999998738e-05, 1.6222999999999238e-05, 1.6208000000000194e-05, 1.5735999999998834e-05, 1.5707999999999694e-05, 1.5749999999998404e-05, 1.5737000000001777e-05, 1.6208999999999668e-05]</msg>
<status status="PASS" starttime="20201112 12:26:14.357" endtime="20201112 12:26:14.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.352" endtime="20201112 12:26:14.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.362" endtime="20201112 12:26:14.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.365" endtime="20201112 12:26:14.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.363" endtime="20201112 12:26:14.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.360" endtime="20201112 12:26:14.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.991" endtime="20201112 12:26:14.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.990" endtime="20201112 12:26:14.389"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.407" endtime="20201112 12:26:14.431"></status>
</kw>
<msg timestamp="20201112 12:26:14.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.404" endtime="20201112 12:26:14.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.434" endtime="20201112 12:26:14.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.439" endtime="20201112 12:26:14.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.399" endtime="20201112 12:26:14.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.394" endtime="20201112 12:26:14.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.460" endtime="20201112 12:26:14.748"></status>
</kw>
<msg timestamp="20201112 12:26:14.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034058278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0340755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:14.457" endtime="20201112 12:26:14.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034058278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0340755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:14.752" endtime="20201112 12:26:14.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.761" endtime="20201112 12:26:14.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.451" endtime="20201112 12:26:14.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.447" endtime="20201112 12:26:14.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.767" level="INFO">${RESULT} = [{'time': 0.0340755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7222000000004234e-05, 'source_diff': 1.7222000000004234e-05}, {'time': 0.034095611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:14.764" endtime="20201112 12:26:14.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:14.781" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:14.768" endtime="20201112 12:26:14.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.785" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:14.784" endtime="20201112 12:26:14.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.788" level="INFO">VALUE: [1.7222000000004234e-05, 1.6707999999997225e-05, 1.7221999999997295e-05, 1.6708000000004164e-05, 1.7708000000005164e-05, 1.6653000000005358e-05, 1.722299999999677e-05, 1.6723000000003208e-05, 1.6721999999996795e-05, 1.7207999999997725e-05, 1.669499999999713e-05, 1.7221999999997295e-05, 1.72089999999972e-05, 1.6722000000003734e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.7222000000004234e-05, 1.7235999999996865e-05, 1.7222000000004234e-05, 1.722299999999677e-05, 1.7250000000003374e-05, 1.6721999999996795e-05, 1.7137999999999876e-05, 1.6709000000003638e-05, 1.7681000000005498e-05, 1.7207999999997725e-05, 1.7707999999998225e-05, 1.7208000000004664e-05, 1.7222000000004234e-05, 1.7250000000003374e-05, 1.722299999999677e-05, 1.7223000000003708e-05, 1.7236000000003804e-05, 1.6708000000004164e-05, 1.7194000000005094e-05, 1.6721999999996795e-05, 1.7236000000003804e-05, 1.7223000000003708e-05, 1.7195000000004568e-05, 1.6680000000005024e-05, 1.7250000000003374e-05, 1.72089999999972e-05, 1.6721999999996795e-05, 1.6694000000004594e-05, 1.722299999999677e-05, 1.7222000000004234e-05, 1.7208000000004664e-05, 1.7209000000004138e-05, 1.6722000000003734e-05, 1.6737000000002777e-05]</msg>
<status status="PASS" starttime="20201112 12:26:14.786" endtime="20201112 12:26:14.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.782" endtime="20201112 12:26:14.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.791" endtime="20201112 12:26:14.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.795" endtime="20201112 12:26:14.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.793" endtime="20201112 12:26:14.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.790" endtime="20201112 12:26:14.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.391" endtime="20201112 12:26:14.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.390" endtime="20201112 12:26:14.816"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.824" endtime="20201112 12:26:14.842"></status>
</kw>
<msg timestamp="20201112 12:26:14.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.823" endtime="20201112 12:26:14.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.843" endtime="20201112 12:26:14.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.846" endtime="20201112 12:26:14.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.820" endtime="20201112 12:26:14.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.818" endtime="20201112 12:26:14.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.856" endtime="20201112 12:26:15.142"></status>
</kw>
<msg timestamp="20201112 12:26:15.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.854" endtime="20201112 12:26:15.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.146" endtime="20201112 12:26:15.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.155" endtime="20201112 12:26:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.852" endtime="20201112 12:26:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.850" endtime="20201112 12:26:15.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.162" level="INFO">${RESULT} = [{'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7723000000000738e-05, 'source_diff': 1.7723000000000738e-05}, {'time': 0.019759472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.158" endtime="20201112 12:26:15.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.175" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.163" endtime="20201112 12:26:15.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.180" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.179" endtime="20201112 12:26:15.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.182" level="INFO">VALUE: [1.7723000000000738e-05, 1.7722000000001265e-05, 1.7722000000001265e-05, 1.8221999999998295e-05, 1.7693999999998655e-05, 1.763899999999985e-05, 1.8209000000001668e-05, 1.772299999999727e-05, 1.8207999999998725e-05, 1.7708000000001695e-05, 1.7709000000001168e-05, 1.8708000000002695e-05, 1.82089999999982e-05, 1.8221999999998295e-05, 1.819499999999863e-05, 1.7763999999999974e-05, 1.7721999999997795e-05, 1.7736000000000834e-05, 1.8194000000002625e-05, 1.86950000000026e-05, 1.7735999999997365e-05, 1.8250000000000904e-05, 1.7722000000001265e-05, 1.772299999999727e-05, 1.7763999999999974e-05, 1.8207999999998725e-05, 1.81950000000021e-05, 1.8207999999998725e-05, 1.869499999999913e-05, 1.7723000000000738e-05, 1.86950000000026e-05, 1.8222000000001765e-05, 1.76950000000016e-05, 1.7736000000000834e-05, 1.8208000000002195e-05, 1.8221999999998295e-05, 1.7707999999998225e-05, 1.8209000000001668e-05, 1.7708000000001695e-05, 1.827700000000057e-05, 1.8208000000002195e-05, 1.8223000000001238e-05, 1.822299999999777e-05, 1.7694000000002125e-05, 1.8236000000001334e-05, 1.7722000000001265e-05, 1.815299999999992e-05, 1.8194000000002625e-05, 1.822299999999777e-05, 1.8221999999998295e-05]</msg>
<status status="PASS" starttime="20201112 12:26:15.181" endtime="20201112 12:26:15.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.176" endtime="20201112 12:26:15.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.186" endtime="20201112 12:26:15.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.189" endtime="20201112 12:26:15.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.188" endtime="20201112 12:26:15.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.184" endtime="20201112 12:26:15.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.816" endtime="20201112 12:26:15.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.816" endtime="20201112 12:26:15.210"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.219" endtime="20201112 12:26:15.236"></status>
</kw>
<msg timestamp="20201112 12:26:15.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.217" endtime="20201112 12:26:15.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.237" endtime="20201112 12:26:15.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.240" endtime="20201112 12:26:15.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.215" endtime="20201112 12:26:15.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.213" endtime="20201112 12:26:15.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.250" endtime="20201112 12:26:15.536"></status>
</kw>
<msg timestamp="20201112 12:26:15.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.248" endtime="20201112 12:26:15.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.541" endtime="20201112 12:26:15.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.549" endtime="20201112 12:26:15.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.246" endtime="20201112 12:26:15.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.244" endtime="20201112 12:26:15.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.556" level="INFO">${RESULT} = [{'time': 0.019774542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.869499999999913e-05, 'source_diff': 1.869499999999913e-05}, {'time': 0.019797347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:15.552" endtime="20201112 12:26:15.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.569" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.557" endtime="20201112 12:26:15.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.573" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.572" endtime="20201112 12:26:15.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.576" level="INFO">VALUE: [1.869499999999913e-05, 1.8707999999999225e-05, 1.9207999999999725e-05, 1.9708000000000225e-05, 1.8721999999998795e-05, 1.8708000000002695e-05, 1.8735999999998365e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.915300000000092e-05, 1.9194000000000155e-05, 1.8736000000001835e-05, 1.923699999999834e-05, 1.9221999999999295e-05, 1.8721999999998795e-05, 1.9221999999999295e-05, 1.9222000000002765e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.9250000000001904e-05, 1.9221999999999295e-05, 1.9222000000002765e-05, 1.9207999999999725e-05, 1.8721999999998795e-05, 1.9221999999999295e-05, 1.9194000000000155e-05, 1.9708000000000225e-05, 1.9264000000001474e-05, 1.9194000000000155e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.916700000000049e-05, 1.919499999999963e-05, 1.8721999999998795e-05, 1.9237000000001808e-05, 1.9207999999999725e-05, 1.9180000000000585e-05, 1.8693999999999655e-05, 1.8722000000002265e-05, 1.86950000000026e-05, 1.9223000000002238e-05, 1.8708000000002695e-05, 1.91950000000031e-05, 1.9207999999999725e-05, 1.915300000000092e-05, 1.868099999999956e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201112 12:26:15.575" endtime="20201112 12:26:15.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.570" endtime="20201112 12:26:15.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.580" endtime="20201112 12:26:15.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.583" endtime="20201112 12:26:15.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.582" endtime="20201112 12:26:15.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.578" endtime="20201112 12:26:15.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.211" endtime="20201112 12:26:15.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.211" endtime="20201112 12:26:15.604"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.612" endtime="20201112 12:26:15.630"></status>
</kw>
<msg timestamp="20201112 12:26:15.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.611" endtime="20201112 12:26:15.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.631" endtime="20201112 12:26:15.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.634" endtime="20201112 12:26:15.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.608" endtime="20201112 12:26:15.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.606" endtime="20201112 12:26:15.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.644" endtime="20201112 12:26:15.931"></status>
</kw>
<msg timestamp="20201112 12:26:15.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.642" endtime="20201112 12:26:15.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.935" endtime="20201112 12:26:15.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.943" endtime="20201112 12:26:15.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.640" endtime="20201112 12:26:15.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.638" endtime="20201112 12:26:15.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.950" level="INFO">${RESULT} = [{'time': 0.019668125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9764000000001974e-05, 'source_diff': 1.9764000000001974e-05}, {'time': 0.019692069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.947" endtime="20201112 12:26:15.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:15.965" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:15.951" endtime="20201112 12:26:15.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.970" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:15.969" endtime="20201112 12:26:15.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.972" level="INFO">VALUE: [1.9764000000001974e-05, 2.0208000000000725e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 1.973699999999884e-05, 2.0207999999997256e-05, 1.9722000000003265e-05, 1.965300000000142e-05, 2.0222000000000295e-05, 1.9749999999998935e-05, 2.0208000000000725e-05, 1.97089999999997e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0193999999997686e-05, 2.02090000000002e-05, 2.0221999999996826e-05, 1.9708000000000225e-05, 1.9736000000002835e-05, 1.9721999999999795e-05, 2.019500000000063e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 2.0194000000001155e-05, 2.0208000000000725e-05, 1.9708000000000225e-05, 2.019500000000063e-05, 1.972299999999927e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 1.968100000000056e-05, 2.0736000000000365e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 2.022299999999977e-05, 1.9735999999999365e-05, 2.02090000000002e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 1.9721999999999795e-05, 2.022299999999977e-05, 2.0235999999999865e-05, 1.965299999999795e-05]</msg>
<status status="PASS" starttime="20201112 12:26:15.971" endtime="20201112 12:26:15.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.966" endtime="20201112 12:26:15.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.976" endtime="20201112 12:26:15.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.979" endtime="20201112 12:26:15.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.978" endtime="20201112 12:26:15.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.974" endtime="20201112 12:26:16.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.605" endtime="20201112 12:26:16.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.604" endtime="20201112 12:26:16.000"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.009" endtime="20201112 12:26:16.026"></status>
</kw>
<msg timestamp="20201112 12:26:16.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.007" endtime="20201112 12:26:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.028" endtime="20201112 12:26:16.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.030" endtime="20201112 12:26:16.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.005" endtime="20201112 12:26:16.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.003" endtime="20201112 12:26:16.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.040" endtime="20201112 12:26:16.325"></status>
</kw>
<msg timestamp="20201112 12:26:16.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.039" endtime="20201112 12:26:16.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.329" endtime="20201112 12:26:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.337" endtime="20201112 12:26:16.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.036" endtime="20201112 12:26:16.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.035" endtime="20201112 12:26:16.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.344" level="INFO">${RESULT} = [{'time': 0.019851611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0722000000000795e-05, 'source_diff': 2.0722000000000795e-05}, {'time': 0.019878472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.341" endtime="20201112 12:26:16.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:16.358" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:16.345" endtime="20201112 12:26:16.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.362" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:16.361" endtime="20201112 12:26:16.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.365" level="INFO">VALUE: [2.0722000000000795e-05, 2.0694000000001656e-05, 2.1236000000000865e-05, 2.07090000000007e-05, 2.1707999999998756e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.12090000000012e-05, 2.069500000000113e-05, 2.0722000000000795e-05, 2.063899999999938e-05, 2.07090000000007e-05, 2.120899999999773e-05, 2.068100000000156e-05, 2.0749999999999935e-05, 2.1236000000000865e-05, 2.1222000000001295e-05, 2.1222000000001295e-05, 2.072300000000027e-05, 2.1277999999999575e-05, 2.1735999999997896e-05, 2.069500000000113e-05, 2.1207999999998256e-05, 2.1194000000002156e-05, 2.072300000000027e-05, 2.1208000000001725e-05, 2.0777999999999075e-05, 2.0736000000000365e-05, 2.1222000000001295e-05, 2.0693999999998186e-05, 2.1208000000001725e-05, 2.0721999999997326e-05, 2.0694000000001656e-05, 2.0722000000000795e-05, 2.0693999999998186e-05, 2.0693999999998186e-05, 2.065299999999895e-05, 2.1236000000000865e-05, 2.116699999999902e-05, 2.07090000000007e-05, 2.1221999999997826e-05, 2.0749999999999935e-05, 2.1221999999997826e-05, 2.070899999999723e-05, 2.1749999999997466e-05, 2.1236000000000865e-05, 2.1222000000001295e-05, 2.1722000000001795e-05, 2.1736000000001365e-05, 2.0708000000001225e-05]</msg>
<status status="PASS" starttime="20201112 12:26:16.363" endtime="20201112 12:26:16.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.359" endtime="20201112 12:26:16.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.368" endtime="20201112 12:26:16.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.372" endtime="20201112 12:26:16.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.370" endtime="20201112 12:26:16.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.367" endtime="20201112 12:26:16.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.001" endtime="20201112 12:26:16.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.001" endtime="20201112 12:26:16.393"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.401" endtime="20201112 12:26:16.419"></status>
</kw>
<msg timestamp="20201112 12:26:16.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.400" endtime="20201112 12:26:16.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.421" endtime="20201112 12:26:16.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.423" endtime="20201112 12:26:16.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.397" endtime="20201112 12:26:16.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.395" endtime="20201112 12:26:16.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.433" endtime="20201112 12:26:16.718"></status>
</kw>
<msg timestamp="20201112 12:26:16.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.432" endtime="20201112 12:26:16.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.723" endtime="20201112 12:26:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.731" endtime="20201112 12:26:16.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.429" endtime="20201112 12:26:16.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.427" endtime="20201112 12:26:16.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.738" level="INFO">${RESULT} = [{'time': 0.019732944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2721999999999326e-05, 'source_diff': 2.2721999999999326e-05}, {'time': 0.019759486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.734" endtime="20201112 12:26:16.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:16.751" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:16.739" endtime="20201112 12:26:16.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.756" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:16.755" endtime="20201112 12:26:16.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.758" level="INFO">VALUE: [2.2721999999999326e-05, 2.1707999999998756e-05, 2.222300000000177e-05, 2.2221999999998826e-05, 2.1721999999998326e-05, 2.1722000000001795e-05, 2.1735999999997896e-05, 2.2221999999998826e-05, 2.1791999999999645e-05, 2.2207999999999256e-05, 2.2180000000000116e-05, 2.22770000000011e-05, 2.22090000000022e-05, 2.1693999999999186e-05, 2.1708000000002226e-05, 2.170899999999823e-05, 2.22090000000022e-05, 2.1722000000001795e-05, 2.1707999999998756e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.169499999999866e-05, 2.1693999999999186e-05, 2.2208000000002726e-05, 2.1693999999999186e-05, 2.2222000000002295e-05, 2.22090000000022e-05, 2.1679999999999616e-05, 2.170899999999823e-05, 2.168099999999909e-05, 2.1708000000002226e-05, 2.1708000000002226e-05, 2.1694000000002656e-05, 2.2264000000001005e-05, 2.2207999999999256e-05, 2.2250000000001435e-05, 2.2707999999999756e-05, 2.2222000000002295e-05, 2.2207999999999256e-05, 2.2193999999999686e-05, 2.1764000000000505e-05, 2.226300000000153e-05, 2.2221999999998826e-05, 2.2208000000002726e-05, 2.2179999999996647e-05, 2.17090000000017e-05, 2.2207999999999256e-05, 2.1708000000002226e-05, 2.219499999999916e-05, 2.2735999999998896e-05]</msg>
<status status="PASS" starttime="20201112 12:26:16.757" endtime="20201112 12:26:16.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.752" endtime="20201112 12:26:16.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.762" endtime="20201112 12:26:16.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.765" endtime="20201112 12:26:16.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.764" endtime="20201112 12:26:16.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.760" endtime="20201112 12:26:16.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.394" endtime="20201112 12:26:16.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.393" endtime="20201112 12:26:16.786"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.795" endtime="20201112 12:26:16.812"></status>
</kw>
<msg timestamp="20201112 12:26:16.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.793" endtime="20201112 12:26:16.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.813" endtime="20201112 12:26:16.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.816" endtime="20201112 12:26:16.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.790" endtime="20201112 12:26:16.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.788" endtime="20201112 12:26:16.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.826" endtime="20201112 12:26:17.112"></status>
</kw>
<msg timestamp="20201112 12:26:17.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.824" endtime="20201112 12:26:17.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.116" endtime="20201112 12:26:17.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.125" endtime="20201112 12:26:17.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.822" endtime="20201112 12:26:17.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.820" endtime="20201112 12:26:17.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.131" level="INFO">${RESULT} = [{'time': 0.019711486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2721999999999326e-05, 'source_diff': 2.2721999999999326e-05}, {'time': 0.019737278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.128" endtime="20201112 12:26:17.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.145" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.132" endtime="20201112 12:26:17.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.149" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.148" endtime="20201112 12:26:17.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.152" level="INFO">VALUE: [2.2721999999999326e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.32229999999993e-05, 2.3722000000000326e-05, 2.319499999999669e-05, 2.3221999999999826e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.368099999999762e-05, 2.3193999999997217e-05, 2.322300000000277e-05, 2.2721999999999326e-05, 2.320899999999973e-05, 2.2735999999998896e-05, 2.3208000000000256e-05, 2.2763999999998036e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2764000000001505e-05, 2.269500000000313e-05, 2.2735999999998896e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.27229999999988e-05, 2.320899999999973e-05, 2.319500000000016e-05, 2.3221999999999826e-05, 2.319500000000016e-05, 2.2707999999999756e-05, 2.2722000000002796e-05, 2.2694000000000186e-05, 2.3208000000000256e-05, 2.276300000000203e-05, 2.2722000000002796e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.270899999999923e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.270899999999923e-05, 2.2735999999998896e-05, 2.2764000000001505e-05]</msg>
<status status="PASS" starttime="20201112 12:26:17.151" endtime="20201112 12:26:17.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.146" endtime="20201112 12:26:17.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.155" endtime="20201112 12:26:17.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.159" endtime="20201112 12:26:17.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.157" endtime="20201112 12:26:17.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.154" endtime="20201112 12:26:17.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.787" endtime="20201112 12:26:17.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.786" endtime="20201112 12:26:17.180"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.188" endtime="20201112 12:26:17.206"></status>
</kw>
<msg timestamp="20201112 12:26:17.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.187" endtime="20201112 12:26:17.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.207" endtime="20201112 12:26:17.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.210" endtime="20201112 12:26:17.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.184" endtime="20201112 12:26:17.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.182" endtime="20201112 12:26:17.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.220" endtime="20201112 12:26:17.505"></status>
</kw>
<msg timestamp="20201112 12:26:17.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.218" endtime="20201112 12:26:17.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.510" endtime="20201112 12:26:17.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.518" endtime="20201112 12:26:17.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.216" endtime="20201112 12:26:17.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.214" endtime="20201112 12:26:17.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.525" level="INFO">${RESULT} = [{'time': 0.019717847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4208000000001256e-05, 'source_diff': 2.4208000000001256e-05}, {'time': 0.019746889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.521" endtime="20201112 12:26:17.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.539" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.526" endtime="20201112 12:26:17.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.544" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.543" endtime="20201112 12:26:17.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.546" level="INFO">VALUE: [2.4208000000001256e-05, 2.3722000000000326e-05, 2.4721999999997857e-05, 2.4236000000000396e-05, 2.370900000000023e-05, 2.4249999999999966e-05, 2.3708000000000756e-05, 2.3722000000000326e-05, 2.4721999999997857e-05, 2.4236000000000396e-05, 2.3763999999999036e-05, 2.420900000000073e-05, 2.4221999999997357e-05, 2.4208000000001256e-05, 2.4222000000000826e-05, 2.3735999999999896e-05, 2.4722000000001326e-05, 2.42230000000003e-05, 2.4707999999998287e-05, 2.368099999999762e-05, 2.4708000000001756e-05, 2.370900000000023e-05, 2.4207999999997787e-05, 2.4193999999998217e-05, 2.4208000000001256e-05, 2.4694000000002186e-05, 2.3735999999999896e-05, 2.4194000000001686e-05, 2.42230000000003e-05, 2.4263999999999536e-05, 2.420900000000073e-05, 2.4263999999999536e-05, 2.418100000000159e-05, 2.4222000000000826e-05, 2.3749999999999466e-05, 2.37229999999998e-05, 2.42230000000003e-05, 2.419499999999769e-05, 2.4222000000000826e-05, 2.415299999999898e-05, 2.4249999999999966e-05, 2.3722000000000326e-05, 2.4207999999997787e-05, 2.420899999999726e-05, 2.4208000000001256e-05, 2.4194000000001686e-05, 2.3750000000002935e-05, 2.4207999999997787e-05, 2.420900000000073e-05, 2.370900000000023e-05]</msg>
<status status="PASS" starttime="20201112 12:26:17.545" endtime="20201112 12:26:17.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.540" endtime="20201112 12:26:17.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.550" endtime="20201112 12:26:17.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.553" endtime="20201112 12:26:17.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.552" endtime="20201112 12:26:17.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.548" endtime="20201112 12:26:17.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.181" endtime="20201112 12:26:17.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.180" endtime="20201112 12:26:17.574"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.583" endtime="20201112 12:26:17.599"></status>
</kw>
<msg timestamp="20201112 12:26:17.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.581" endtime="20201112 12:26:17.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.600" endtime="20201112 12:26:17.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.603" endtime="20201112 12:26:17.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.579" endtime="20201112 12:26:17.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.576" endtime="20201112 12:26:17.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.613" endtime="20201112 12:26:17.899"></status>
</kw>
<msg timestamp="20201112 12:26:17.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.611" endtime="20201112 12:26:17.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.903" endtime="20201112 12:26:17.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.911" endtime="20201112 12:26:17.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.609" endtime="20201112 12:26:17.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.607" endtime="20201112 12:26:17.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.918" level="INFO">${RESULT} = [{'time': 0.019671056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.469499999999819e-05, 'source_diff': 2.469499999999819e-05}, {'time': 0.019701917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.914" endtime="20201112 12:26:17.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:17.931" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:17.919" endtime="20201112 12:26:17.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.936" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:17.935" endtime="20201112 12:26:17.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.938" level="INFO">VALUE: [2.469499999999819e-05, 2.468099999999862e-05, 2.4708000000001756e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.469499999999819e-05, 2.522299999999783e-05, 2.4735999999997427e-05, 2.4722000000001326e-05, 2.5707999999999287e-05, 2.4693999999998717e-05, 2.5207999999998787e-05, 2.5207999999998787e-05, 2.470900000000123e-05, 2.52230000000013e-05, 2.518100000000259e-05, 2.4665999999999577e-05, 2.4722000000001326e-05, 2.469500000000166e-05, 2.4708000000001756e-05, 2.52230000000013e-05, 2.5207999999998787e-05, 2.5208000000002256e-05, 2.4694000000002186e-05, 2.5207999999998787e-05, 2.5221999999998357e-05, 2.4735999999997427e-05, 2.519500000000216e-05, 2.569500000000266e-05, 2.5179999999999647e-05, 2.5207999999998787e-05, 2.4736000000000896e-05, 2.469500000000166e-05, 2.47230000000008e-05, 2.5249999999997497e-05, 2.5221999999998357e-05, 2.4652000000000007e-05, 2.5222000000001826e-05, 2.4694000000002186e-05, 2.470900000000123e-05, 2.520900000000173e-05, 2.469500000000166e-05, 2.4721999999997857e-05, 2.4736000000000896e-05, 2.4736000000000896e-05, 2.4721999999997857e-05, 2.4707999999998287e-05, 2.5207999999998787e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201112 12:26:17.937" endtime="20201112 12:26:17.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.932" endtime="20201112 12:26:17.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.942" endtime="20201112 12:26:17.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.945" endtime="20201112 12:26:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.944" endtime="20201112 12:26:17.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.940" endtime="20201112 12:26:17.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.575" endtime="20201112 12:26:17.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.574" endtime="20201112 12:26:17.966"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.975" endtime="20201112 12:26:17.992"></status>
</kw>
<msg timestamp="20201112 12:26:17.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.973" endtime="20201112 12:26:17.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.993" endtime="20201112 12:26:17.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.996" endtime="20201112 12:26:17.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.971" endtime="20201112 12:26:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.968" endtime="20201112 12:26:17.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.006" endtime="20201112 12:26:18.291"></status>
</kw>
<msg timestamp="20201112 12:26:18.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.004" endtime="20201112 12:26:18.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.295" endtime="20201112 12:26:18.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.304" endtime="20201112 12:26:18.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.002" endtime="20201112 12:26:18.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.000" endtime="20201112 12:26:18.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.310" level="INFO">${RESULT} = [{'time': 0.019696389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.616700000000055e-05, 'source_diff': 2.616700000000055e-05}, {'time': 0.019724514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:18.307" endtime="20201112 12:26:18.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:18.324" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:18.311" endtime="20201112 12:26:18.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.328" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:18.327" endtime="20201112 12:26:18.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.331" level="INFO">VALUE: [2.616700000000055e-05, 2.5721999999998857e-05, 2.568099999999962e-05, 2.6194000000000217e-05, 2.570899999999876e-05, 2.6222000000002826e-05, 2.619500000000316e-05, 2.618100000000012e-05, 2.5707999999999287e-05, 2.6735999999999427e-05, 2.620899999999926e-05, 2.57230000000018e-05, 2.670899999999976e-05, 2.6236000000002396e-05, 2.569499999999919e-05, 2.570900000000223e-05, 2.6207999999999787e-05, 2.619499999999969e-05, 2.6207999999999787e-05, 2.5749999999997997e-05, 2.5721999999998857e-05, 2.6236000000002396e-05, 2.5721999999998857e-05, 2.6235999999998927e-05, 2.5722000000002326e-05, 2.6221999999999357e-05, 2.5722000000002326e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.566700000000005e-05, 2.568100000000309e-05, 2.5722000000002326e-05, 2.5666000000000577e-05, 2.6221999999999357e-05, 2.5736000000001896e-05, 2.5736000000001896e-05, 2.6264000000001536e-05, 2.5721999999998857e-05, 2.6207999999999787e-05, 2.6194000000000217e-05, 2.5763999999997567e-05, 2.57230000000018e-05, 2.623700000000187e-05, 2.572299999999833e-05, 2.5721999999998857e-05, 2.6194000000000217e-05, 2.5721999999998857e-05, 2.62230000000023e-05, 2.620899999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:26:18.329" endtime="20201112 12:26:18.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.325" endtime="20201112 12:26:18.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.334" endtime="20201112 12:26:18.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.338" endtime="20201112 12:26:18.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.336" endtime="20201112 12:26:18.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.333" endtime="20201112 12:26:18.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.967" endtime="20201112 12:26:18.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.966" endtime="20201112 12:26:18.359"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.367" endtime="20201112 12:26:18.384"></status>
</kw>
<msg timestamp="20201112 12:26:18.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.366" endtime="20201112 12:26:18.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.386" endtime="20201112 12:26:18.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.388" endtime="20201112 12:26:18.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.363" endtime="20201112 12:26:18.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.361" endtime="20201112 12:26:18.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.398" endtime="20201112 12:26:18.684"></status>
</kw>
<msg timestamp="20201112 12:26:18.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.397" endtime="20201112 12:26:18.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019791861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.688" endtime="20201112 12:26:18.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.696" endtime="20201112 12:26:18.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.394" endtime="20201112 12:26:18.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.392" endtime="20201112 12:26:18.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.703" level="INFO">${RESULT} = [{'time': 0.019791861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.019822833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.700" endtime="20201112 12:26:18.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:18.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:18.704" endtime="20201112 12:26:18.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.721" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:18.720" endtime="20201112 12:26:18.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.724" level="INFO">VALUE: [2.7222000000000357e-05, 2.7264000000002536e-05, 2.6694000000000717e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.670899999999976e-05, 2.715300000000198e-05, 2.670899999999976e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.7235999999999927e-05, 2.7262999999999593e-05, 2.6722000000003326e-05, 2.6735999999999427e-05, 2.6735999999999427e-05, 2.670899999999976e-05, 2.6708000000000287e-05, 2.7179999999998178e-05, 2.6735999999999427e-05, 2.7221999999996888e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.6708000000000287e-05, 2.672299999999933e-05, 2.7208000000000787e-05, 2.716699999999808e-05, 2.7208000000000787e-05, 2.7222000000000357e-05, 2.7193999999997748e-05, 2.722299999999983e-05, 2.6708000000000287e-05, 2.7208000000000787e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.669500000000019e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.6708000000000287e-05, 2.6665999999998108e-05, 2.7707999999997818e-05, 2.6721999999999857e-05, 2.663900000000191e-05, 2.715299999999851e-05, 2.7165999999998608e-05, 2.720900000000026e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201112 12:26:18.722" endtime="20201112 12:26:18.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.717" endtime="20201112 12:26:18.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.727" endtime="20201112 12:26:18.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.731" endtime="20201112 12:26:18.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.729" endtime="20201112 12:26:18.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.726" endtime="20201112 12:26:18.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.360" endtime="20201112 12:26:18.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.359" endtime="20201112 12:26:18.752"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.760" endtime="20201112 12:26:18.778"></status>
</kw>
<msg timestamp="20201112 12:26:18.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.759" endtime="20201112 12:26:18.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.780" endtime="20201112 12:26:18.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.782" endtime="20201112 12:26:18.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.756" endtime="20201112 12:26:18.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.754" endtime="20201112 12:26:18.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.792" endtime="20201112 12:26:19.078"></status>
</kw>
<msg timestamp="20201112 12:26:19.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.791" endtime="20201112 12:26:19.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.082" endtime="20201112 12:26:19.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.090" endtime="20201112 12:26:19.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.788" endtime="20201112 12:26:19.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.786" endtime="20201112 12:26:19.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.097" level="INFO">${RESULT} = [{'time': 0.019723708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7693999999998248e-05, 'source_diff': 2.7693999999998248e-05}, {'time': 0.019756958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.093" endtime="20201112 12:26:19.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.098" endtime="20201112 12:26:19.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.116" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.115" endtime="20201112 12:26:19.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.118" level="INFO">VALUE: [2.7693999999998248e-05, 2.7722000000000857e-05, 2.8208000000001787e-05, 2.7721999999997388e-05, 2.7708000000001287e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.8207999999998318e-05, 2.8207999999998318e-05, 2.7707999999997818e-05, 2.8207999999998318e-05, 2.8221999999997888e-05, 2.8165999999999608e-05, 2.7693999999998248e-05, 2.7721999999997388e-05, 2.8138999999999942e-05, 2.8264000000000067e-05, 2.822300000000083e-05, 2.8221999999997888e-05, 2.7707999999997818e-05, 2.8221999999997888e-05, 2.7721999999997388e-05, 2.8721999999998388e-05, 2.819499999999822e-05, 2.820899999999779e-05, 2.818100000000212e-05, 2.7722000000000857e-05, 2.768100000000162e-05, 2.8208000000001787e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.820900000000126e-05, 2.8193999999998748e-05, 2.7707999999997818e-05, 2.7708000000001287e-05, 2.8207999999998318e-05, 2.7722000000000857e-05, 2.772300000000033e-05, 2.766699999999858e-05, 2.8250000000000497e-05, 2.7693999999998248e-05, 2.7721999999997388e-05, 2.7721999999997388e-05, 2.820899999999779e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7721999999997388e-05, 2.8208000000001787e-05, 2.7722000000000857e-05, 2.7722000000000857e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.117" endtime="20201112 12:26:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.112" endtime="20201112 12:26:19.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.122" endtime="20201112 12:26:19.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.125" endtime="20201112 12:26:19.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.124" endtime="20201112 12:26:19.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.120" endtime="20201112 12:26:19.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.752" endtime="20201112 12:26:19.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.752" endtime="20201112 12:26:19.146"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.155" endtime="20201112 12:26:19.172"></status>
</kw>
<msg timestamp="20201112 12:26:19.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.153" endtime="20201112 12:26:19.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.174" endtime="20201112 12:26:19.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.176" endtime="20201112 12:26:19.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.151" endtime="20201112 12:26:19.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.149" endtime="20201112 12:26:19.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.186" endtime="20201112 12:26:19.470"></status>
</kw>
<msg timestamp="20201112 12:26:19.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:19.185" endtime="20201112 12:26:19.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:19.475" endtime="20201112 12:26:19.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.483" endtime="20201112 12:26:19.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.182" endtime="20201112 12:26:19.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.180" endtime="20201112 12:26:19.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.490" level="INFO">${RESULT} = [{'time': 0.019739, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9221999999998888e-05, 'source_diff': 2.9221999999998888e-05}, {'time': 0.019770181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:19.486" endtime="20201112 12:26:19.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.503" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.491" endtime="20201112 12:26:19.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.508" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.507" endtime="20201112 12:26:19.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.510" level="INFO">VALUE: [2.9221999999998888e-05, 2.872300000000133e-05, 2.8708000000002287e-05, 2.9278000000000637e-05, 2.920899999999879e-05, 2.9222000000002357e-05, 2.969499999999972e-05, 2.8736000000001427e-05, 2.920899999999879e-05, 2.9208000000002787e-05, 2.8707999999998818e-05, 2.920899999999879e-05, 2.8721999999998388e-05, 2.9264000000001067e-05, 2.8707999999998818e-05, 2.9707999999999818e-05, 2.922300000000183e-05, 2.9207999999999318e-05, 2.9264000000001067e-05, 2.9221999999998888e-05, 2.9208000000002787e-05, 2.9153000000000512e-05, 2.92370000000014e-05, 2.8721999999998388e-05, 2.9207999999999318e-05, 2.8707999999998818e-05, 2.9152000000001038e-05, 2.922300000000183e-05, 2.8721999999998388e-05, 2.872299999999786e-05, 2.9749999999998528e-05, 2.9221999999998888e-05, 2.918099999999965e-05, 2.8666999999999582e-05, 2.920899999999879e-05, 2.8708000000002287e-05, 2.920900000000226e-05, 2.9152000000001038e-05, 2.9221999999998888e-05, 2.8722000000001857e-05, 2.870899999999829e-05, 2.970899999999929e-05, 2.9193999999999748e-05, 2.870900000000176e-05, 2.9221999999998888e-05, 2.9276999999997694e-05, 2.9207999999999318e-05, 2.870899999999829e-05, 2.870900000000176e-05, 2.9249999999998028e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.509" endtime="20201112 12:26:19.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.504" endtime="20201112 12:26:19.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.514" endtime="20201112 12:26:19.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.517" endtime="20201112 12:26:19.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.516" endtime="20201112 12:26:19.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.512" endtime="20201112 12:26:19.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.147" endtime="20201112 12:26:19.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.146" endtime="20201112 12:26:19.538"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.547" endtime="20201112 12:26:19.564"></status>
</kw>
<msg timestamp="20201112 12:26:19.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.545" endtime="20201112 12:26:19.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.565" endtime="20201112 12:26:19.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.568" endtime="20201112 12:26:19.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.543" endtime="20201112 12:26:19.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.541" endtime="20201112 12:26:19.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.578" endtime="20201112 12:26:19.863"></status>
</kw>
<msg timestamp="20201112 12:26:19.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.576" endtime="20201112 12:26:19.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.867" endtime="20201112 12:26:19.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.875" endtime="20201112 12:26:19.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.574" endtime="20201112 12:26:19.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.572" endtime="20201112 12:26:19.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.882" level="INFO">${RESULT} = [{'time': 0.019819556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972299999999886e-05, 'source_diff': 2.972299999999886e-05}, {'time': 0.019852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:19.879" endtime="20201112 12:26:19.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:19.895" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:19.883" endtime="20201112 12:26:19.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.900" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:19.899" endtime="20201112 12:26:19.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.902" level="INFO">VALUE: [2.972299999999886e-05, 3.065300000000201e-05, 3.022300000000283e-05, 3.0263999999998598e-05, 2.970899999999929e-05, 3.0221999999999888e-05, 3.070900000000029e-05, 2.970899999999929e-05, 2.9778000000001137e-05, 2.9763999999998098e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 3.0194000000000748e-05, 3.0138999999998473e-05, 2.9666000000001108e-05, 3.0221999999999888e-05, 2.9736000000002427e-05, 2.9735999999998958e-05, 3.0208000000000318e-05, 3.0236000000002927e-05, 3.0208000000000318e-05, 3.020899999999979e-05, 2.9735999999998958e-05, 2.9680000000000678e-05, 2.9735999999998958e-05, 3.0221999999999888e-05, 3.019500000000022e-05, 3.0208000000000318e-05, 3.074999999999953e-05, 3.020899999999979e-05, 3.0221999999999888e-05, 2.9681000000000152e-05, 3.070800000000082e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.022299999999936e-05, 3.0249999999999028e-05, 3.0221999999999888e-05, 2.9721999999999388e-05, 2.9721999999999388e-05, 3.0194000000000748e-05, 3.020899999999979e-05, 3.070800000000082e-05, 3.0221999999999888e-05, 3.070799999999735e-05, 2.9707999999999818e-05, 3.0221999999999888e-05, 3.022299999999936e-05, 2.970899999999929e-05, 3.020899999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.901" endtime="20201112 12:26:19.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.896" endtime="20201112 12:26:19.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.906" endtime="20201112 12:26:19.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.909" endtime="20201112 12:26:19.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.908" endtime="20201112 12:26:19.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.904" endtime="20201112 12:26:19.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.539" endtime="20201112 12:26:19.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.538" endtime="20201112 12:26:19.930"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.939" endtime="20201112 12:26:19.957"></status>
</kw>
<msg timestamp="20201112 12:26:19.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.937" endtime="20201112 12:26:19.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.958" endtime="20201112 12:26:19.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.961" endtime="20201112 12:26:19.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.935" endtime="20201112 12:26:19.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.933" endtime="20201112 12:26:19.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.971" endtime="20201112 12:26:20.256"></status>
</kw>
<msg timestamp="20201112 12:26:20.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.969" endtime="20201112 12:26:20.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.260" endtime="20201112 12:26:20.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.269" endtime="20201112 12:26:20.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.966" endtime="20201112 12:26:20.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.965" endtime="20201112 12:26:20.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.275" level="INFO">${RESULT} = [{'time': 0.019701542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.068099999999768e-05, 'source_diff': 3.068099999999768e-05}, {'time': 0.019735722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:20.272" endtime="20201112 12:26:20.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.289" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:20.276" endtime="20201112 12:26:20.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.293" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.292" endtime="20201112 12:26:20.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.296" level="INFO">VALUE: [3.068099999999768e-05, 3.070800000000082e-05, 3.113899999999947e-05, 3.073599999999996e-05, 3.072200000000039e-05, 3.076400000000257e-05, 3.070800000000082e-05, 3.072300000000333e-05, 3.069400000000125e-05, 3.072200000000039e-05, 3.122200000000089e-05, 3.122300000000036e-05, 3.072200000000039e-05, 3.066699999999811e-05, 3.070799999999735e-05, 3.073599999999996e-05, 3.073599999999996e-05, 3.069500000000072e-05, 3.072299999999986e-05, 3.122300000000036e-05, 3.072299999999986e-05, 3.119399999999828e-05, 3.065200000000254e-05, 3.069500000000072e-05, 3.074999999999953e-05, 3.123600000000046e-05, 3.070900000000029e-05, 3.070899999999682e-05, 3.122199999999742e-05, 3.122199999999742e-05, 3.070800000000082e-05, 3.120800000000132e-05, 3.072299999999986e-05, 3.122300000000036e-05, 3.122199999999742e-05, 3.120799999999785e-05, 3.120800000000132e-05, 3.072200000000039e-05, 3.120800000000132e-05, 3.120900000000079e-05, 3.122200000000089e-05, 3.072299999999986e-05, 3.119500000000122e-05, 3.168099999999868e-05, 3.122200000000089e-05, 3.072199999999692e-05, 3.070900000000029e-05, 3.122300000000036e-05, 3.072200000000039e-05, 3.070799999999735e-05]</msg>
<status status="PASS" starttime="20201112 12:26:20.294" endtime="20201112 12:26:20.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.290" endtime="20201112 12:26:20.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.299" endtime="20201112 12:26:20.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.303" endtime="20201112 12:26:20.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.301" endtime="20201112 12:26:20.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.298" endtime="20201112 12:26:20.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.931" endtime="20201112 12:26:20.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.931" endtime="20201112 12:26:20.324"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.332" endtime="20201112 12:26:20.349"></status>
</kw>
<msg timestamp="20201112 12:26:20.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.331" endtime="20201112 12:26:20.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.351" endtime="20201112 12:26:20.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.353" endtime="20201112 12:26:20.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.328" endtime="20201112 12:26:20.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.326" endtime="20201112 12:26:20.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.363" endtime="20201112 12:26:20.648"></status>
</kw>
<msg timestamp="20201112 12:26:20.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:20.362" endtime="20201112 12:26:20.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:20.652" endtime="20201112 12:26:20.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.661" endtime="20201112 12:26:20.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.359" endtime="20201112 12:26:20.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.357" endtime="20201112 12:26:20.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.667" level="INFO">${RESULT} = [{'time': 0.019724514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7013999999997594e-05, 'source_diff': 5.7013999999997594e-05}, {'time': 0.019784639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.664" endtime="20201112 12:26:20.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:20.682" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:20.668" endtime="20201112 12:26:20.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.686" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:26:20.685" endtime="20201112 12:26:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.689" level="INFO">VALUE: [5.7013999999997594e-05, 3.4832999999998004e-05, 3.4902999999999323e-05, 3.5375000000000684e-05, 3.5653000000000074e-05, 3.491700000000236e-05, 3.536200000000059e-05, 3.550000000000081e-05, 3.4902999999999323e-05, 3.49450000000015e-05, 3.498600000000074e-05, 3.4776999999999725e-05, 3.5318999999998935e-05, 3.541599999999992e-05, 3.494399999999856e-05, 3.501400000000335e-05, 3.475000000000006e-05, 3.543099999999896e-05, 3.470800000000135e-05, 3.545799999999863e-05, 3.550000000000081e-05, 3.5653000000000074e-05, 3.4902999999999323e-05, 3.5332999999998504e-05, 3.544400000000253e-05, 3.504199999999902e-05, 3.5583000000002224e-05, 3.519400000000228e-05, 3.477800000000267e-05, 3.456999999999766e-05, 3.54580000000021e-05, 3.472200000000092e-05, 3.516700000000261e-05, 3.5139000000000004e-05, 3.479199999999877e-05, 3.473600000000049e-05, 3.525000000000056e-05, 3.526400000000013e-05, 3.51520000000001e-05, 3.520900000000132e-05, 3.541599999999992e-05, 3.4819000000001904e-05, 3.545799999999863e-05, 3.5389000000000254e-05, 3.4846999999997574e-05, 3.545799999999863e-05, 3.5374999999997214e-05, 3.501399999999988e-05, 3.520800000000185e-05, 3.472200000000092e-05]</msg>
<status status="PASS" starttime="20201112 12:26:20.687" endtime="20201112 12:26:20.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.683" endtime="20201112 12:26:20.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.693" endtime="20201112 12:26:20.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.696" endtime="20201112 12:26:20.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.694" endtime="20201112 12:26:20.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.691" endtime="20201112 12:26:20.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.324" endtime="20201112 12:26:20.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.324" endtime="20201112 12:26:20.717"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.725" endtime="20201112 12:26:20.743"></status>
</kw>
<msg timestamp="20201112 12:26:20.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.724" endtime="20201112 12:26:20.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.745" endtime="20201112 12:26:20.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.747" endtime="20201112 12:26:20.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.721" endtime="20201112 12:26:20.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.719" endtime="20201112 12:26:20.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.757" endtime="20201112 12:26:21.043"></status>
</kw>
<msg timestamp="20201112 12:26:21.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.756" endtime="20201112 12:26:21.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.048" endtime="20201112 12:26:21.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.056" endtime="20201112 12:26:21.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.753" endtime="20201112 12:26:21.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.752" endtime="20201112 12:26:21.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.063" level="INFO">${RESULT} = [{'time': 0.019766028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.626400000000113e-05, 'source_diff': 3.626400000000113e-05}, {'time': 0.019815069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.059" endtime="20201112 12:26:21.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.076" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:21.064" endtime="20201112 12:26:21.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.081" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.080" endtime="20201112 12:26:21.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.083" level="INFO">VALUE: [3.626400000000113e-05, 3.600000000000131e-05, 3.576400000000063e-05, 3.583399999999848e-05, 3.622300000000189e-05, 3.619399999999981e-05, 3.652800000000095e-05, 3.572199999999845e-05, 3.6526999999998006e-05, 3.6139000000001004e-05, 3.5888999999997284e-05, 3.6332999999999505e-05, 3.645799999999963e-05, 3.6555000000000615e-05, 3.6332999999999505e-05, 3.569399999999931e-05, 3.5889000000000754e-05, 3.6360999999998644e-05, 3.6167000000000143e-05, 3.6417000000000394e-05, 3.5804999999999865e-05, 3.644499999999953e-05, 3.602800000000045e-05, 3.5889000000000754e-05, 3.645799999999963e-05, 3.573600000000149e-05, 3.6417000000000394e-05, 3.633399999999898e-05, 3.658399999999923e-05, 3.5889000000000754e-05, 3.649999999999834e-05, 3.6554999999997145e-05, 3.650000000000181e-05, 3.6138999999997534e-05, 3.5832999999999005e-05, 3.576399999999716e-05, 3.673599999999902e-05, 3.5875000000001184e-05, 3.577799999999673e-05, 3.641599999999745e-05, 3.623599999999852e-05, 3.5916999999999893e-05, 3.602800000000045e-05, 3.670899999999935e-05, 3.6068999999999685e-05, 3.5916999999999893e-05, 3.5846999999998574e-05, 3.6332999999999505e-05, 3.6652999999997604e-05, 3.6361000000002114e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.082" endtime="20201112 12:26:21.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.077" endtime="20201112 12:26:21.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.087" endtime="20201112 12:26:21.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.090" endtime="20201112 12:26:21.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.089" endtime="20201112 12:26:21.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.085" endtime="20201112 12:26:21.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.718" endtime="20201112 12:26:21.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.717" endtime="20201112 12:26:21.111"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.120" endtime="20201112 12:26:21.137"></status>
</kw>
<msg timestamp="20201112 12:26:21.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.118" endtime="20201112 12:26:21.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.139" endtime="20201112 12:26:21.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.141" endtime="20201112 12:26:21.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.116" endtime="20201112 12:26:21.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.114" endtime="20201112 12:26:21.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.151" endtime="20201112 12:26:21.437"></status>
</kw>
<msg timestamp="20201112 12:26:21.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.150" endtime="20201112 12:26:21.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019771931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.442" endtime="20201112 12:26:21.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.450" endtime="20201112 12:26:21.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.147" endtime="20201112 12:26:21.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.146" endtime="20201112 12:26:21.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.457" level="INFO">${RESULT} = [{'time': 0.019771931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.681999999999991e-05, 'source_diff': 3.681999999999991e-05}, {'time': 0.019823917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.453" endtime="20201112 12:26:21.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.470" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:21.458" endtime="20201112 12:26:21.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.475" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.474" endtime="20201112 12:26:21.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.477" level="INFO">VALUE: [3.681999999999991e-05, 3.734799999999955e-05, 3.7638999999999034e-05, 3.673599999999902e-05, 3.7139000000002004e-05, 3.6791000000001295e-05, 3.6888999999998284e-05, 3.7555000000001615e-05, 3.719400000000081e-05, 3.74720000000002e-05, 3.6917000000000894e-05, 3.749999999999934e-05, 3.722199999999995e-05, 3.6805000000000865e-05, 3.6846999999999575e-05, 3.7374999999999214e-05, 3.720800000000038e-05, 3.727799999999823e-05, 3.748599999999977e-05, 3.6917000000000894e-05, 3.7403000000001824e-05, 3.655600000000009e-05, 3.7360999999999644e-05, 3.720899999999985e-05, 3.752800000000195e-05, 3.720899999999985e-05, 3.686200000000209e-05, 3.7653000000002074e-05, 3.7402999999998354e-05, 3.701399999999841e-05, 3.7610999999999895e-05, 3.724999999999909e-05, 3.6805000000000865e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.749999999999934e-05, 3.745800000000063e-05, 3.727799999999823e-05, 3.6819000000000435e-05, 3.672199999999945e-05, 3.67780000000012e-05, 3.676400000000163e-05, 3.7111000000002864e-05, 3.727799999999823e-05, 3.670799999999988e-05, 3.6833000000000005e-05, 3.7568999999997715e-05, 3.677799999999773e-05, 3.7167000000001144e-05, 3.7125000000002434e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.476" endtime="20201112 12:26:21.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.471" endtime="20201112 12:26:21.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.481" endtime="20201112 12:26:21.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.484" endtime="20201112 12:26:21.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.483" endtime="20201112 12:26:21.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.479" endtime="20201112 12:26:21.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.112" endtime="20201112 12:26:21.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.111" endtime="20201112 12:26:21.505"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.514" endtime="20201112 12:26:21.531"></status>
</kw>
<msg timestamp="20201112 12:26:21.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.512" endtime="20201112 12:26:21.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.533" endtime="20201112 12:26:21.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.535" endtime="20201112 12:26:21.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.509" endtime="20201112 12:26:21.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.507" endtime="20201112 12:26:21.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.545" endtime="20201112 12:26:21.830"></status>
</kw>
<msg timestamp="20201112 12:26:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.544" endtime="20201112 12:26:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.835" endtime="20201112 12:26:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.843" endtime="20201112 12:26:21.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.541" endtime="20201112 12:26:21.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.540" endtime="20201112 12:26:21.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.850" level="INFO">${RESULT} = [{'time': 0.019772958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.790199999999938e-05, 'source_diff': 3.790199999999938e-05}, {'time': 0.019823958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.846" endtime="20201112 12:26:21.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:21.863" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:21.851" endtime="20201112 12:26:21.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.868" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:26:21.867" endtime="20201112 12:26:21.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.870" level="INFO">VALUE: [3.790199999999938e-05, 3.8568999999998715e-05, 3.772200000000045e-05, 3.826399999999966e-05, 3.795799999999766e-05, 3.823600000000052e-05, 3.8083000000001255e-05, 3.8054999999998645e-05, 3.8639000000000034e-05, 3.7861000000000145e-05, 3.7888999999999284e-05, 3.780600000000134e-05, 3.7916999999998424e-05, 3.8388999999999784e-05, 3.82780000000027e-05, 3.8152999999999104e-05, 3.804199999999855e-05, 3.79590000000006e-05, 3.797300000000017e-05, 3.826399999999966e-05, 3.8667000000002644e-05, 3.820799999999791e-05, 3.865200000000013e-05, 3.8152999999999104e-05, 3.7874999999999714e-05, 3.769399999999784e-05, 3.8527000000000006e-05, 3.822200000000095e-05, 3.845799999999816e-05, 3.852799999999948e-05, 3.804199999999855e-05, 3.844400000000206e-05, 3.852799999999948e-05, 3.8666999999999174e-05, 3.77780000000022e-05, 3.777799999999873e-05, 3.7889000000002754e-05, 3.8652999999999604e-05, 3.822200000000095e-05, 3.8611000000000895e-05, 3.801399999999941e-05, 3.8375000000000214e-05, 3.7874999999999714e-05, 3.774999999999959e-05, 3.82919999999988e-05, 3.795800000000113e-05, 3.8597000000001325e-05, 3.8083000000001255e-05, 3.8333000000001505e-05, 3.866600000000317e-05]</msg>
<status status="PASS" starttime="20201112 12:26:21.869" endtime="20201112 12:26:21.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.864" endtime="20201112 12:26:21.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.874" endtime="20201112 12:26:21.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.877" endtime="20201112 12:26:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.876" endtime="20201112 12:26:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.872" endtime="20201112 12:26:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.506" endtime="20201112 12:26:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.505" endtime="20201112 12:26:21.898"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.907" endtime="20201112 12:26:21.927"></status>
</kw>
<msg timestamp="20201112 12:26:21.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.905" endtime="20201112 12:26:21.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.928" endtime="20201112 12:26:21.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.931" endtime="20201112 12:26:21.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.903" endtime="20201112 12:26:21.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.900" endtime="20201112 12:26:21.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.941" endtime="20201112 12:26:22.226"></status>
</kw>
<msg timestamp="20201112 12:26:22.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.939" endtime="20201112 12:26:22.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.230" endtime="20201112 12:26:22.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.239" endtime="20201112 12:26:22.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.937" endtime="20201112 12:26:22.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.935" endtime="20201112 12:26:22.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.246" level="INFO">${RESULT} = [{'time': 0.019711958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8791000000003295e-05, 'source_diff': 3.8791000000003295e-05}, {'time': 0.019762972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.242" endtime="20201112 12:26:22.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.260" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:22.247" endtime="20201112 12:26:22.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.265" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.264" endtime="20201112 12:26:22.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.267" level="INFO">VALUE: [3.8791000000003295e-05, 3.920799999999891e-05, 3.9318999999999465e-05, 3.8889000000000284e-05, 3.87919999999993e-05, 3.9333000000002505e-05, 3.944399999999959e-05, 3.9153000000000104e-05, 3.876400000000016e-05, 3.8568999999998715e-05, 3.873600000000102e-05, 3.9582999999999285e-05, 3.9180999999999244e-05, 3.922200000000195e-05, 3.900000000000084e-05, 3.87919999999993e-05, 3.931999999999894e-05, 3.9153000000000104e-05, 3.8944999999998564e-05, 3.9458999999998634e-05, 3.931999999999894e-05, 3.951400000000091e-05, 3.945800000000263e-05, 3.9458999999998634e-05, 3.870799999999841e-05, 3.945799999999916e-05, 3.870799999999841e-05, 3.8846999999998105e-05, 3.8790999999999826e-05, 3.951400000000091e-05, 3.9597000000002325e-05, 3.9318999999999465e-05, 3.902799999999998e-05, 3.92919999999998e-05, 3.9082999999998785e-05, 3.8916999999999424e-05, 3.8916999999999424e-05, 3.8832999999998535e-05, 3.873599999999755e-05, 3.922200000000195e-05, 3.9403000000000354e-05, 3.8652999999999604e-05, 3.9458999999998634e-05, 3.9125000000000965e-05, 3.9068999999999215e-05, 3.8709000000001353e-05, 3.9068999999999215e-05, 3.940200000000088e-05, 3.9027000000000506e-05, 3.9012999999997466e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.266" endtime="20201112 12:26:22.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.261" endtime="20201112 12:26:22.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.271" endtime="20201112 12:26:22.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.274" endtime="20201112 12:26:22.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.272" endtime="20201112 12:26:22.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.269" endtime="20201112 12:26:22.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.899" endtime="20201112 12:26:22.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.898" endtime="20201112 12:26:22.295"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.303" endtime="20201112 12:26:22.322"></status>
</kw>
<msg timestamp="20201112 12:26:22.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.302" endtime="20201112 12:26:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.323" endtime="20201112 12:26:22.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.326" endtime="20201112 12:26:22.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.299" endtime="20201112 12:26:22.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.297" endtime="20201112 12:26:22.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.336" endtime="20201112 12:26:22.621"></status>
</kw>
<msg timestamp="20201112 12:26:22.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.334" endtime="20201112 12:26:22.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.626" endtime="20201112 12:26:22.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.634" endtime="20201112 12:26:22.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.332" endtime="20201112 12:26:22.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.330" endtime="20201112 12:26:22.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.641" level="INFO">${RESULT} = [{'time': 0.019757319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0596999999999855e-05, 'source_diff': 4.0596999999999855e-05}, {'time': 0.019812306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.637" endtime="20201112 12:26:22.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:22.654" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:22.642" endtime="20201112 12:26:22.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.659" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:26:22.658" endtime="20201112 12:26:22.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.661" level="INFO">VALUE: [4.0596999999999855e-05, 4.033399999999951e-05, 4.0402999999997885e-05, 4.0194999999999814e-05, 3.993000000000052e-05, 4.025000000000209e-05, 4.0360999999999175e-05, 3.9611000000001895e-05, 4.044399999999712e-05, 4.009799999999883e-05, 4.044400000000059e-05, 4.044400000000059e-05, 4.027800000000123e-05, 4.026400000000166e-05, 4.023599999999905e-05, 4.002800000000098e-05, 3.9861000000002145e-05, 4.051399999999844e-05, 4.0153000000001104e-05, 4.0430999999997025e-05, 4.0333000000000035e-05, 4.026400000000166e-05, 4.0139000000001535e-05, 3.9709000000002354e-05, 3.9680999999999744e-05, 4.058399999999976e-05, 4.0276999999998286e-05, 3.988800000000181e-05, 4.0555000000001146e-05, 4.023599999999905e-05, 4.0041000000001076e-05, 3.9846999999999105e-05, 4.0458999999999634e-05, 3.9818999999999966e-05, 4.023599999999905e-05, 3.9847000000002575e-05, 4.0347000000003075e-05, 3.995799999999966e-05, 4.0333000000000035e-05, 3.9846999999999105e-05, 4.030600000000037e-05, 4.027799999999776e-05, 4.0167000000000674e-05, 3.99720000000027e-05, 3.995799999999966e-05, 3.997199999999923e-05, 3.9959000000002604e-05, 4.0638999999998565e-05, 4.005600000000012e-05, 4.0124999999998495e-05]</msg>
<status status="PASS" starttime="20201112 12:26:22.660" endtime="20201112 12:26:22.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.655" endtime="20201112 12:26:22.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.665" endtime="20201112 12:26:22.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.668" endtime="20201112 12:26:22.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.667" endtime="20201112 12:26:22.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.663" endtime="20201112 12:26:22.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.296" endtime="20201112 12:26:22.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.295" endtime="20201112 12:26:22.689"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.698" endtime="20201112 12:26:22.716"></status>
</kw>
<msg timestamp="20201112 12:26:22.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.696" endtime="20201112 12:26:22.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.717" endtime="20201112 12:26:22.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.720" endtime="20201112 12:26:22.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.694" endtime="20201112 12:26:22.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.692" endtime="20201112 12:26:22.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.730" endtime="20201112 12:26:23.016"></status>
</kw>
<msg timestamp="20201112 12:26:23.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.729" endtime="20201112 12:26:23.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.021" endtime="20201112 12:26:23.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.029" endtime="20201112 12:26:23.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.726" endtime="20201112 12:26:23.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.724" endtime="20201112 12:26:23.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.036" level="INFO">${RESULT} = [{'time': 0.019850194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1624999999999995e-05, 'source_diff': 4.1624999999999995e-05}, {'time': 0.019904125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:23.032" endtime="20201112 12:26:23.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.049" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:23.037" endtime="20201112 12:26:23.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.054" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.053" endtime="20201112 12:26:23.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.057" level="INFO">VALUE: [4.1624999999999995e-05, 4.0639000000002035e-05, 4.0847000000000105e-05, 4.09859999999998e-05, 4.1138999999999065e-05, 4.154200000000205e-05, 4.077799999999826e-05, 4.0902999999998385e-05, 4.124999999999962e-05, 4.1152999999998635e-05, 4.1403000000002355e-05, 4.1374999999999745e-05, 4.123600000000005e-05, 4.145800000000116e-05, 4.0874999999999245e-05, 4.0874999999999245e-05, 4.1403000000002355e-05, 4.149999999999987e-05, 4.102799999999851e-05, 4.1097000000000355e-05, 4.1069000000001216e-05, 4.101400000000241e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.1153000000002105e-05, 4.152799999999901e-05, 4.080600000000087e-05, 4.0847000000000105e-05, 4.125000000000309e-05, 4.070800000000041e-05, 4.0860999999999675e-05, 4.124999999999962e-05, 4.154199999999858e-05, 4.1110999999999925e-05, 4.151399999999944e-05, 4.0776999999998786e-05, 4.0931000000000994e-05, 4.1403000000002355e-05, 4.138799999999984e-05, 4.1569000000001716e-05, 4.099999999999937e-05, 4.073599999999955e-05, 4.099999999999937e-05, 4.145800000000116e-05, 4.1611000000000425e-05, 4.1695000000001314e-05, 4.0833000000000536e-05, 4.1624999999999995e-05, 4.152799999999901e-05, 4.104200000000155e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.055" endtime="20201112 12:26:23.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.050" endtime="20201112 12:26:23.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.061" endtime="20201112 12:26:23.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.064" endtime="20201112 12:26:23.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.063" endtime="20201112 12:26:23.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.059" endtime="20201112 12:26:23.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.690" endtime="20201112 12:26:23.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.690" endtime="20201112 12:26:23.085"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.094" endtime="20201112 12:26:23.112"></status>
</kw>
<msg timestamp="20201112 12:26:23.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.093" endtime="20201112 12:26:23.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.114" endtime="20201112 12:26:23.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.116" endtime="20201112 12:26:23.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.090" endtime="20201112 12:26:23.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.088" endtime="20201112 12:26:23.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.126" endtime="20201112 12:26:23.414"></status>
</kw>
<msg timestamp="20201112 12:26:23.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.125" endtime="20201112 12:26:23.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.418" endtime="20201112 12:26:23.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.427" endtime="20201112 12:26:23.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.122" endtime="20201112 12:26:23.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.121" endtime="20201112 12:26:23.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.433" level="INFO">${RESULT} = [{'time': 0.019812306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2652999999996666e-05, 'source_diff': 4.2652999999996666e-05}, {'time': 0.019866278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:23.430" endtime="20201112 12:26:23.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.447" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:23.434" endtime="20201112 12:26:23.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.451" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.450" endtime="20201112 12:26:23.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.454" level="INFO">VALUE: [4.2652999999996666e-05, 4.1709000000000884e-05, 4.254199999999958e-05, 4.198599999999733e-05, 4.231999999999847e-05, 4.220800000000191e-05, 4.179199999999883e-05, 4.2152999999999635e-05, 4.2610999999997956e-05, 4.263799999999762e-05, 4.2304999999999426e-05, 4.219400000000234e-05, 4.1818999999998496e-05, 4.2583000000002286e-05, 4.2333000000002036e-05, 4.222200000000148e-05, 4.170800000000141e-05, 4.2375000000000745e-05, 4.2333000000002036e-05, 4.1888999999999815e-05, 4.1931000000001994e-05, 4.226400000000019e-05, 4.269399999999937e-05, 4.202799999999951e-05, 4.1875000000000245e-05, 4.2152999999999635e-05, 4.2445000000002064e-05, 4.241599999999998e-05, 4.250000000000087e-05, 4.2111000000000925e-05, 4.182000000000144e-05, 4.2124999999997026e-05, 4.238800000000084e-05, 4.188800000000034e-05, 4.176300000000022e-05, 4.2110999999997456e-05, 4.1611000000000425e-05, 4.227799999999976e-05, 4.2625000000000995e-05, 4.2667000000003175e-05, 4.252800000000001e-05, 4.245799999999869e-05, 4.2596999999998386e-05, 4.176399999999969e-05, 4.2583000000002286e-05, 4.1902999999999385e-05, 4.2568999999999246e-05, 4.229199999999933e-05, 4.172200000000098e-05, 4.242999999999955e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.452" endtime="20201112 12:26:23.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.448" endtime="20201112 12:26:23.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.457" endtime="20201112 12:26:23.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.461" endtime="20201112 12:26:23.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.459" endtime="20201112 12:26:23.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.456" endtime="20201112 12:26:23.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.086" endtime="20201112 12:26:23.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.086" endtime="20201112 12:26:23.482"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.490" endtime="20201112 12:26:23.508"></status>
</kw>
<msg timestamp="20201112 12:26:23.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.488" endtime="20201112 12:26:23.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.509" endtime="20201112 12:26:23.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.512" endtime="20201112 12:26:23.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.486" endtime="20201112 12:26:23.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.484" endtime="20201112 12:26:23.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.522" endtime="20201112 12:26:23.822"></status>
</kw>
<msg timestamp="20201112 12:26:23.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.520" endtime="20201112 12:26:23.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.826" endtime="20201112 12:26:23.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.834" endtime="20201112 12:26:23.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.518" endtime="20201112 12:26:23.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.516" endtime="20201112 12:26:23.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.841" level="INFO">${RESULT} = [{'time': 0.019561528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.357000000000319e-05, 'source_diff': 4.357000000000319e-05}, {'time': 0.019617514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.838" endtime="20201112 12:26:23.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.855" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:23.842" endtime="20201112 12:26:23.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.860" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.859" endtime="20201112 12:26:23.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.862" level="INFO">VALUE: [4.357000000000319e-05, 4.277800000000026e-05, 4.2832999999999066e-05, 4.2972999999998235e-05, 4.3167000000000205e-05, 4.373600000000255e-05, 4.283400000000201e-05, 4.3138999999997596e-05, 4.2708999999998415e-05, 4.331999999999947e-05, 4.277799999999679e-05, 4.3305000000000426e-05, 4.2889000000000815e-05, 4.3596999999999386e-05, 4.2875000000001245e-05, 4.319399999999987e-05, 4.340199999999794e-05, 4.3653000000001135e-05, 4.2804999999999926e-05, 4.322200000000248e-05, 4.302800000000051e-05, 4.3167000000000205e-05, 4.302800000000051e-05, 4.3180999999999775e-05, 4.272199999999851e-05, 4.3431000000000025e-05, 4.352800000000101e-05, 4.3124999999998026e-05, 4.331999999999947e-05, 4.322199999999901e-05, 4.273599999999808e-05, 4.284799999999811e-05, 4.369400000000037e-05, 4.3403000000000885e-05, 4.33059999999999e-05, 4.309800000000183e-05, 4.3291000000000857e-05, 4.304200000000008e-05, 4.3596999999999386e-05, 4.3555000000000677e-05, 4.326400000000119e-05, 4.29860000000018e-05, 4.3110999999998456e-05, 4.273600000000155e-05, 4.3167000000000205e-05, 4.3082999999999316e-05, 4.3139000000001065e-05, 4.3332999999999566e-05, 4.333399999999904e-05, 4.336199999999818e-05]</msg>
<status status="PASS" starttime="20201112 12:26:23.861" endtime="20201112 12:26:23.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.856" endtime="20201112 12:26:23.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.866" endtime="20201112 12:26:23.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.869" endtime="20201112 12:26:23.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.868" endtime="20201112 12:26:23.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.864" endtime="20201112 12:26:23.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.482" endtime="20201112 12:26:23.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.482" endtime="20201112 12:26:23.890"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.898" endtime="20201112 12:26:23.917"></status>
</kw>
<msg timestamp="20201112 12:26:23.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.897" endtime="20201112 12:26:23.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.918" endtime="20201112 12:26:23.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.921" endtime="20201112 12:26:23.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.894" endtime="20201112 12:26:23.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.892" endtime="20201112 12:26:23.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.931" endtime="20201112 12:26:24.218"></status>
</kw>
<msg timestamp="20201112 12:26:24.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.929" endtime="20201112 12:26:24.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.222" endtime="20201112 12:26:24.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.231" endtime="20201112 12:26:24.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.927" endtime="20201112 12:26:24.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.925" endtime="20201112 12:26:24.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.237" level="INFO">${RESULT} = [{'time': 0.019554583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4624999999999526e-05, 'source_diff': 4.4624999999999526e-05}, {'time': 0.019612639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:24.234" endtime="20201112 12:26:24.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.251" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:24.238" endtime="20201112 12:26:24.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.255" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.254" endtime="20201112 12:26:24.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.258" level="INFO">VALUE: [4.4624999999999526e-05, 4.451400000000244e-05, 4.369400000000037e-05, 4.454200000000158e-05, 4.376400000000169e-05, 4.3833000000000066e-05, 4.4402999999998416e-05, 4.4597000000000386e-05, 4.401399999999847e-05, 4.4083000000000316e-05, 4.433400000000004e-05, 4.4610999999999956e-05, 4.4388999999998846e-05, 4.452799999999854e-05, 4.4459000000000165e-05, 4.4124999999999026e-05, 4.4181000000000775e-05, 4.398599999999933e-05, 4.441599999999851e-05, 4.391600000000148e-05, 4.465200000000266e-05, 4.3846999999999636e-05, 4.463799999999962e-05, 4.3846999999999636e-05, 4.4555000000001677e-05, 4.423599999999958e-05, 4.451399999999897e-05, 4.4402999999998416e-05, 4.4124999999999026e-05, 4.404100000000161e-05, 4.369400000000037e-05, 4.394400000000062e-05, 4.4181000000000775e-05, 4.407000000000022e-05, 4.4096999999999886e-05, 4.407000000000022e-05, 4.4208999999999915e-05, 4.4624999999999526e-05, 4.434799999999961e-05, 4.3722999999998985e-05, 4.3889000000001815e-05, 4.404100000000161e-05, 4.4639000000002566e-05, 4.3958999999999665e-05, 4.452799999999854e-05, 4.404099999999814e-05, 4.4333000000000566e-05, 4.423599999999958e-05, 4.4083000000000316e-05, 4.427800000000176e-05]</msg>
<status status="PASS" starttime="20201112 12:26:24.256" endtime="20201112 12:26:24.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.252" endtime="20201112 12:26:24.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.262" endtime="20201112 12:26:24.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.265" endtime="20201112 12:26:24.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.263" endtime="20201112 12:26:24.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.260" endtime="20201112 12:26:24.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.891" endtime="20201112 12:26:24.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.890" endtime="20201112 12:26:24.286"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.294" endtime="20201112 12:26:24.315"></status>
</kw>
<msg timestamp="20201112 12:26:24.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.293" endtime="20201112 12:26:24.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.316" endtime="20201112 12:26:24.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.319" endtime="20201112 12:26:24.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.290" endtime="20201112 12:26:24.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.288" endtime="20201112 12:26:24.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.329" endtime="20201112 12:26:24.633"></status>
</kw>
<msg timestamp="20201112 12:26:24.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.327" endtime="20201112 12:26:24.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.638" endtime="20201112 12:26:24.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.646" endtime="20201112 12:26:24.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.325" endtime="20201112 12:26:24.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.323" endtime="20201112 12:26:24.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.653" level="INFO">${RESULT} = [{'time': 0.019659514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4833000000001066e-05, 'source_diff': 4.4833000000001066e-05}, {'time': 0.019718528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:24.649" endtime="20201112 12:26:24.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.666" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:24.654" endtime="20201112 12:26:24.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.671" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.670" endtime="20201112 12:26:24.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.673" level="INFO">VALUE: [4.4833000000001066e-05, 4.501399999999947e-05, 4.527800000000276e-05, 4.5361000000000706e-05, 4.527800000000276e-05, 4.529200000000233e-05, 4.477699999999932e-05, 4.5625000000000526e-05, 4.473600000000008e-05, 4.491600000000248e-05, 4.522200000000101e-05, 4.4874999999999776e-05, 4.5375000000000276e-05, 4.4819000000001497e-05, 4.5388999999999846e-05, 4.474999999999965e-05, 4.520799999999797e-05, 4.5611000000000956e-05, 4.5347000000001136e-05, 4.5652999999999666e-05, 4.551399999999997e-05, 4.5375000000000276e-05, 4.4847000000000636e-05, 4.561099999999749e-05, 4.5209000000000915e-05, 4.559699999999792e-05, 4.548600000000083e-05, 4.479199999999836e-05, 4.4681000000001275e-05, 4.523599999999711e-05, 4.4833000000001066e-05, 4.5069000000001747e-05, 4.55000000000004e-05, 4.531899999999853e-05, 4.554099999999964e-05, 4.551399999999997e-05, 4.545799999999822e-05, 4.504200000000208e-05, 4.4819000000001497e-05, 4.525000000000015e-05, 4.4903000000002385e-05, 4.5361000000000706e-05, 4.455599999999768e-05, 4.5402999999999416e-05, 4.532000000000147e-05, 4.4861000000000206e-05, 4.495800000000119e-05, 4.5167000000002205e-05, 4.5361000000000706e-05, 4.5125000000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:26:24.672" endtime="20201112 12:26:24.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.667" endtime="20201112 12:26:24.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.677" endtime="20201112 12:26:24.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.680" endtime="20201112 12:26:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.679" endtime="20201112 12:26:24.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.675" endtime="20201112 12:26:24.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.287" endtime="20201112 12:26:24.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.286" endtime="20201112 12:26:24.701"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.710" endtime="20201112 12:26:24.729"></status>
</kw>
<msg timestamp="20201112 12:26:24.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.708" endtime="20201112 12:26:24.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.730" endtime="20201112 12:26:24.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.733" endtime="20201112 12:26:24.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.706" endtime="20201112 12:26:24.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.703" endtime="20201112 12:26:24.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.743" endtime="20201112 12:26:25.027"></status>
</kw>
<msg timestamp="20201112 12:26:25.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:24.741" endtime="20201112 12:26:25.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:25.032" endtime="20201112 12:26:25.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.040" endtime="20201112 12:26:25.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.738" endtime="20201112 12:26:25.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.737" endtime="20201112 12:26:25.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.047" level="INFO">${RESULT} = [{'time': 0.019789653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6653000000000666e-05, 'source_diff': 4.6653000000000666e-05}, {'time': 0.019850653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:25.043" endtime="20201112 12:26:25.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.060" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:25.048" endtime="20201112 12:26:25.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.065" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.064" endtime="20201112 12:26:25.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.067" level="INFO">VALUE: [4.6653000000000666e-05, 4.5902999999999916e-05, 4.6472999999998266e-05, 4.604199999999961e-05, 4.6403000000000416e-05, 4.6639000000001096e-05, 4.625000000000115e-05, 4.583399999999807e-05, 4.661099999999849e-05, 4.643000000000008e-05, 4.615200000000069e-05, 4.665200000000119e-05, 4.63329999999991e-05, 4.6611000000001956e-05, 4.577799999999979e-05, 4.601400000000047e-05, 4.6639000000001096e-05, 4.572200000000151e-05, 4.648600000000183e-05, 4.629199999999986e-05, 4.601400000000047e-05, 4.573599999999761e-05, 4.626400000000072e-05, 4.6583000000002817e-05, 4.604199999999961e-05, 4.6458999999998696e-05, 4.597200000000176e-05, 4.5916999999999486e-05, 4.6444999999999126e-05, 4.604199999999961e-05, 4.63329999999991e-05, 4.613800000000112e-05, 4.5875000000000776e-05, 4.597199999999829e-05, 4.659699999999892e-05, 4.625000000000115e-05, 4.597199999999829e-05, 4.576399999999675e-05, 4.662499999999806e-05, 4.6153000000000166e-05, 4.66529999999972e-05, 4.662499999999806e-05, 4.608299999999885e-05, 4.60000000000009e-05, 4.604199999999961e-05, 4.595799999999872e-05, 4.602800000000004e-05, 4.5958999999998196e-05, 4.649999999999793e-05, 4.601400000000047e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.066" endtime="20201112 12:26:25.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.061" endtime="20201112 12:26:25.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.071" endtime="20201112 12:26:25.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.074" endtime="20201112 12:26:25.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.073" endtime="20201112 12:26:25.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.069" endtime="20201112 12:26:25.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.702" endtime="20201112 12:26:25.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.701" endtime="20201112 12:26:25.095"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.104" endtime="20201112 12:26:25.123"></status>
</kw>
<msg timestamp="20201112 12:26:25.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.103" endtime="20201112 12:26:25.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.124" endtime="20201112 12:26:25.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.127" endtime="20201112 12:26:25.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.100" endtime="20201112 12:26:25.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.098" endtime="20201112 12:26:25.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.136" endtime="20201112 12:26:25.422"></status>
</kw>
<msg timestamp="20201112 12:26:25.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.135" endtime="20201112 12:26:25.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020331847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.427" endtime="20201112 12:26:25.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.435" endtime="20201112 12:26:25.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.132" endtime="20201112 12:26:25.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.131" endtime="20201112 12:26:25.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.442" level="INFO">${RESULT} = [{'time': 0.020378708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.686099999999874e-05, 'source_diff': 4.686099999999874e-05}, {'time': 0.020440722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.438" endtime="20201112 12:26:25.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.456" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:25.443" endtime="20201112 12:26:25.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.461" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.460" endtime="20201112 12:26:25.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.463" level="INFO">VALUE: [4.686099999999874e-05, 4.702800000000104e-05, 4.719399999999693e-05, 4.7153000000001166e-05, 4.729200000000086e-05, 4.695799999999972e-05, 4.677800000000079e-05, 4.712499999999856e-05, 4.747199999999979e-05, 4.7417000000000986e-05, 4.6736999999998086e-05, 4.6722999999998516e-05, 4.677799999999732e-05, 4.7375000000002276e-05, 4.698599999999886e-05, 4.75269999999986e-05, 4.672200000000251e-05, 4.679200000000036e-05, 4.729200000000086e-05, 4.736099999999924e-05, 4.729100000000139e-05, 4.706900000000028e-05, 4.748599999999936e-05, 4.7167000000000736e-05, 4.7125000000002026e-05, 4.7347000000003137e-05, 4.695800000000319e-05, 4.754199999999764e-05, 4.701400000000147e-05, 4.727800000000129e-05, 4.679200000000036e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.76529999999982e-05, 4.674999999999818e-05, 4.702800000000104e-05, 4.7208999999999446e-05, 4.676400000000122e-05, 4.7445000000000126e-05, 4.7194999999999876e-05, 4.679099999999742e-05, 4.675000000000165e-05, 4.70269999999981e-05, 4.755500000000121e-05, 4.748599999999936e-05, 4.709699999999942e-05, 4.71940000000004e-05, 4.7375000000002276e-05, 4.7625000000002526e-05, 4.729200000000086e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.462" endtime="20201112 12:26:25.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.457" endtime="20201112 12:26:25.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.467" endtime="20201112 12:26:25.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.470" endtime="20201112 12:26:25.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.469" endtime="20201112 12:26:25.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.465" endtime="20201112 12:26:25.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.096" endtime="20201112 12:26:25.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.096" endtime="20201112 12:26:25.491"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.500" endtime="20201112 12:26:25.518"></status>
</kw>
<msg timestamp="20201112 12:26:25.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.498" endtime="20201112 12:26:25.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.519" endtime="20201112 12:26:25.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.522" endtime="20201112 12:26:25.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.496" endtime="20201112 12:26:25.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.494" endtime="20201112 12:26:25.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.532" endtime="20201112 12:26:25.818"></status>
</kw>
<msg timestamp="20201112 12:26:25.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.530" endtime="20201112 12:26:25.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.822" endtime="20201112 12:26:25.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.830" endtime="20201112 12:26:25.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.528" endtime="20201112 12:26:25.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.526" endtime="20201112 12:26:25.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.837" level="INFO">${RESULT} = [{'time': 0.019671361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.788899999999888e-05, 'source_diff': 4.788899999999888e-05}, {'time': 0.019731361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.834" endtime="20201112 12:26:25.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.850" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:25.838" endtime="20201112 12:26:25.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.855" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.854" endtime="20201112 12:26:25.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.857" level="INFO">VALUE: [4.788899999999888e-05, 4.790299999999845e-05, 4.826400000000272e-05, 4.847200000000079e-05, 4.804199999999814e-05, 4.863899999999963e-05, 4.804200000000161e-05, 4.849999999999993e-05, 4.7917000000001486e-05, 4.7917000000001486e-05, 4.8445000000001126e-05, 4.798599999999986e-05, 4.81529999999987e-05, 4.774999999999918e-05, 4.807000000000075e-05, 4.787499999999931e-05, 4.830500000000196e-05, 4.852800000000254e-05, 4.786099999999974e-05, 4.80269999999991e-05, 4.776300000000275e-05, 4.795800000000072e-05, 4.829100000000239e-05, 4.773599999999961e-05, 4.855500000000221e-05, 4.787499999999931e-05, 4.774999999999918e-05, 4.849999999999993e-05, 4.784700000000017e-05, 4.855600000000168e-05, 4.85139999999995e-05, 4.837499999999981e-05, 4.7959000000000196e-05, 4.852799999999907e-05, 4.783400000000007e-05, 4.7972999999999766e-05, 4.81529999999987e-05, 4.7681000000000806e-05, 4.799999999999943e-05, 4.83330000000011e-05, 4.845799999999775e-05, 4.813899999999913e-05, 4.770800000000047e-05, 4.798599999999986e-05, 4.8486999999999836e-05, 4.827800000000229e-05, 4.81529999999987e-05, 4.83330000000011e-05, 4.8195000000000876e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:25.856" endtime="20201112 12:26:25.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.851" endtime="20201112 12:26:25.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.861" endtime="20201112 12:26:25.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.864" endtime="20201112 12:26:25.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.863" endtime="20201112 12:26:25.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.859" endtime="20201112 12:26:25.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.492" endtime="20201112 12:26:25.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.492" endtime="20201112 12:26:25.885"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.894" endtime="20201112 12:26:25.913"></status>
</kw>
<msg timestamp="20201112 12:26:25.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.892" endtime="20201112 12:26:25.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.915" endtime="20201112 12:26:25.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.917" endtime="20201112 12:26:25.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.890" endtime="20201112 12:26:25.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.888" endtime="20201112 12:26:25.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.927" endtime="20201112 12:26:26.213"></status>
</kw>
<msg timestamp="20201112 12:26:26.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:25.926" endtime="20201112 12:26:26.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:26.217" endtime="20201112 12:26:26.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.226" endtime="20201112 12:26:26.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.923" endtime="20201112 12:26:26.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.921" endtime="20201112 12:26:26.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.232" level="INFO">${RESULT} = [{'time': 0.01966475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.952800000000007e-05, 'source_diff': 4.952800000000007e-05}, {'time': 0.01972675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:26.229" endtime="20201112 12:26:26.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.246" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:26.233" endtime="20201112 12:26:26.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.250" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.249" endtime="20201112 12:26:26.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.253" level="INFO">VALUE: [4.952800000000007e-05, 4.929200000000286e-05, 4.9459000000001696e-05, 4.883299999999813e-05, 4.8945000000001626e-05, 4.954199999999964e-05, 4.930599999999896e-05, 4.936099999999777e-05, 4.8722999999997046e-05, 4.963900000000063e-05, 4.941699999999952e-05, 4.96530000000002e-05, 4.927700000000035e-05, 4.8707999999998e-05, 4.940200000000047e-05, 4.933299999999863e-05, 4.963900000000063e-05, 4.879200000000236e-05, 4.92079999999985e-05, 4.859700000000092e-05, 4.96530000000002e-05, 4.881900000000203e-05, 4.872200000000104e-05, 4.934700000000167e-05, 4.8667000000002236e-05, 4.96940000000029e-05, 4.9014e-05, 4.947199999999832e-05, 4.957000000000225e-05, 4.951399999999703e-05, 4.937500000000081e-05, 4.952800000000007e-05, 4.961100000000149e-05, 4.934800000000114e-05, 4.909699999999795e-05, 4.86940000000019e-05, 4.963900000000063e-05, 4.955499999999974e-05, 4.931899999999906e-05, 4.923600000000111e-05, 4.954100000000017e-05, 4.9445000000002126e-05, 4.905600000000218e-05, 4.905499999999924e-05, 4.879200000000236e-05, 4.855500000000221e-05, 4.947200000000179e-05, 4.911100000000099e-05, 4.890299999999945e-05, 4.962499999999759e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.252" endtime="20201112 12:26:26.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.247" endtime="20201112 12:26:26.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.256" endtime="20201112 12:26:26.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.260" endtime="20201112 12:26:26.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.259" endtime="20201112 12:26:26.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.255" endtime="20201112 12:26:26.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.886" endtime="20201112 12:26:26.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.886" endtime="20201112 12:26:26.281"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.290" endtime="20201112 12:26:26.308"></status>
</kw>
<msg timestamp="20201112 12:26:26.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.288" endtime="20201112 12:26:26.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.310" endtime="20201112 12:26:26.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.312" endtime="20201112 12:26:26.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.286" endtime="20201112 12:26:26.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.283" endtime="20201112 12:26:26.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.322" endtime="20201112 12:26:26.609"></status>
</kw>
<msg timestamp="20201112 12:26:26.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.321" endtime="20201112 12:26:26.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.613" endtime="20201112 12:26:26.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.621" endtime="20201112 12:26:26.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.318" endtime="20201112 12:26:26.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.317" endtime="20201112 12:26:26.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.628" level="INFO">${RESULT} = [{'time': 0.019735736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.006899999999981e-05, 'source_diff': 5.006899999999981e-05}, {'time': 0.01979875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:26.624" endtime="20201112 12:26:26.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:26.629" endtime="20201112 12:26:26.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.646" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.645" endtime="20201112 12:26:26.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.648" level="INFO">VALUE: [5.006899999999981e-05, 5.06530000000012e-05, 5.048599999999889e-05, 4.991700000000002e-05, 5.06530000000012e-05, 5.016700000000027e-05, 5.059699999999945e-05, 4.98339999999986e-05, 4.977800000000032e-05, 5.041699999999705e-05, 5.063899999999816e-05, 5.040300000000095e-05, 5.0459000000002696e-05, 5.031999999999953e-05, 5.0402000000001473e-05, 4.9707999999999e-05, 4.998600000000186e-05, 5.045799999999975e-05, 5.009699999999895e-05, 5.050000000000193e-05, 5.027800000000082e-05, 5.008299999999938e-05, 4.9707999999999e-05, 5.040300000000095e-05, 4.977800000000032e-05, 5.038899999999791e-05, 5.047200000000279e-05, 5.063900000000163e-05, 4.988900000000088e-05, 5.033400000000257e-05, 5.029200000000039e-05, 5.018000000000036e-05, 4.995899999999873e-05, 4.987500000000131e-05, 5.05279999999976e-05, 4.979100000000042e-05, 5.020800000000297e-05, 5.002800000000057e-05, 5.043000000000061e-05, 4.958299999999888e-05, 5.012499999999809e-05, 4.977799999999685e-05, 5.027800000000082e-05, 4.991700000000002e-05, 5.02079999999995e-05, 5.019499999999941e-05, 5.033299999999963e-05, 5.063899999999816e-05, 5.058400000000282e-05, 5.0459000000002696e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.647" endtime="20201112 12:26:26.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.642" endtime="20201112 12:26:26.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.656" endtime="20201112 12:26:26.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.659" endtime="20201112 12:26:26.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.658" endtime="20201112 12:26:26.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.654" endtime="20201112 12:26:26.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.282" endtime="20201112 12:26:26.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.281" endtime="20201112 12:26:26.680"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.689" endtime="20201112 12:26:26.707"></status>
</kw>
<msg timestamp="20201112 12:26:26.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.687" endtime="20201112 12:26:26.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.709" endtime="20201112 12:26:26.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.712" endtime="20201112 12:26:26.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.685" endtime="20201112 12:26:26.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.683" endtime="20201112 12:26:26.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.722" endtime="20201112 12:26:27.007"></status>
</kw>
<msg timestamp="20201112 12:26:27.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:26.720" endtime="20201112 12:26:27.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:27.011" endtime="20201112 12:26:27.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.020" endtime="20201112 12:26:27.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.717" endtime="20201112 12:26:27.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.716" endtime="20201112 12:26:27.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.027" level="INFO">${RESULT} = [{'time': 0.019707, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.141699999999805e-05, 'source_diff': 5.141699999999805e-05}, {'time': 0.019771042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:27.023" endtime="20201112 12:26:27.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.041" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:27.028" endtime="20201112 12:26:27.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.046" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.045" endtime="20201112 12:26:27.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.048" level="INFO">VALUE: [5.141699999999805e-05, 5.118099999999737e-05, 5.140299999999848e-05, 5.152800000000207e-05, 5.145900000000023e-05, 5.086199999999874e-05, 5.102800000000157e-05, 5.070899999999948e-05, 5.1415999999998574e-05, 5.0708e-05, 5.12080000000005e-05, 5.1415999999998574e-05, 5.095800000000025e-05, 5.088899999999841e-05, 5.152800000000207e-05, 5.127799999999835e-05, 5.083300000000013e-05, 5.113900000000213e-05, 5.077799999999785e-05, 5.102800000000157e-05, 5.075000000000218e-05, 5.145900000000023e-05, 5.090299999999798e-05, 5.152800000000207e-05, 5.08469999999997e-05, 5.070899999999948e-05, 5.140299999999848e-05, 5.15279999999986e-05, 5.119500000000041e-05, 5.1151999999998754e-05, 5.151299999999956e-05, 5.1637999999999684e-05, 5.097199999999982e-05, 5.069400000000043e-05, 5.073600000000261e-05, 5.090300000000145e-05, 5.1014000000002e-05, 5.072199999999957e-05, 5.168100000000134e-05, 5.111099999999952e-05, 5.159700000000045e-05, 5.162499999999959e-05, 5.090299999999798e-05, 5.109699999999995e-05, 5.093100000000059e-05, 5.152800000000207e-05, 5.136099999999977e-05, 5.145900000000023e-05, 5.119500000000041e-05, 5.084799999999917e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.047" endtime="20201112 12:26:27.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.042" endtime="20201112 12:26:27.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.052" endtime="20201112 12:26:27.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.055" endtime="20201112 12:26:27.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.054" endtime="20201112 12:26:27.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.050" endtime="20201112 12:26:27.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.681" endtime="20201112 12:26:27.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.681" endtime="20201112 12:26:27.076"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.085" endtime="20201112 12:26:27.103"></status>
</kw>
<msg timestamp="20201112 12:26:27.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.083" endtime="20201112 12:26:27.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.104" endtime="20201112 12:26:27.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.107" endtime="20201112 12:26:27.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.081" endtime="20201112 12:26:27.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.078" endtime="20201112 12:26:27.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.117" endtime="20201112 12:26:27.404"></status>
</kw>
<msg timestamp="20201112 12:26:27.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.116" endtime="20201112 12:26:27.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.408" endtime="20201112 12:26:27.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.417" endtime="20201112 12:26:27.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.113" endtime="20201112 12:26:27.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.111" endtime="20201112 12:26:27.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.423" level="INFO">${RESULT} = [{'time': 0.019721444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.231900000000206e-05, 'source_diff': 5.231900000000206e-05}, {'time': 0.019787458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:27.420" endtime="20201112 12:26:27.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.437" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:27.424" endtime="20201112 12:26:27.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.441" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.440" endtime="20201112 12:26:27.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.444" level="INFO">VALUE: [5.231900000000206e-05, 5.23470000000012e-05, 5.234699999999773e-05, 5.23479999999972e-05, 5.231899999999859e-05, 5.201399999999953e-05, 5.198600000000039e-05, 5.25279999999996e-05, 5.1707999999997534e-05, 5.173600000000014e-05, 5.20279999999991e-05, 5.25279999999996e-05, 5.201399999999953e-05, 5.233399999999763e-05, 5.215299999999923e-05, 5.225000000000021e-05, 5.1915999999999074e-05, 5.208400000000085e-05, 5.202699999999963e-05, 5.1971999999997354e-05, 5.23470000000012e-05, 5.2652000000000254e-05, 5.230499999999902e-05, 5.218000000000236e-05, 5.21669999999988e-05, 5.206900000000181e-05, 5.223600000000064e-05, 5.2429999999999144e-05, 5.209700000000095e-05, 5.227800000000282e-05, 5.212500000000009e-05, 5.259699999999798e-05, 5.25279999999996e-05, 5.19730000000003e-05, 5.174999999999971e-05, 5.23340000000011e-05, 5.261100000000102e-05, 5.1887999999999934e-05, 5.225000000000021e-05, 5.256899999999884e-05, 5.1707999999997534e-05, 5.2457999999998284e-05, 5.230599999999849e-05, 5.188900000000288e-05, 5.248600000000089e-05, 5.227799999999935e-05, 5.251400000000003e-05, 5.206899999999834e-05, 5.2443999999998714e-05, 5.241700000000252e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.442" endtime="20201112 12:26:27.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.438" endtime="20201112 12:26:27.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.447" endtime="20201112 12:26:27.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.451" endtime="20201112 12:26:27.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.449" endtime="20201112 12:26:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.446" endtime="20201112 12:26:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.077" endtime="20201112 12:26:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.076" endtime="20201112 12:26:27.472"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.480" endtime="20201112 12:26:27.499"></status>
</kw>
<msg timestamp="20201112 12:26:27.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.479" endtime="20201112 12:26:27.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.501" endtime="20201112 12:26:27.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.503" endtime="20201112 12:26:27.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.476" endtime="20201112 12:26:27.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.474" endtime="20201112 12:26:27.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.513" endtime="20201112 12:26:27.800"></status>
</kw>
<msg timestamp="20201112 12:26:27.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.512" endtime="20201112 12:26:27.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.804" endtime="20201112 12:26:27.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.812" endtime="20201112 12:26:27.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.509" endtime="20201112 12:26:27.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.507" endtime="20201112 12:26:27.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.819" level="INFO">${RESULT} = [{'time': 0.019708111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.313900000000066e-05, 'source_diff': 5.313900000000066e-05}, {'time': 0.019776125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:27.816" endtime="20201112 12:26:27.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.833" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:27.820" endtime="20201112 12:26:27.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.837" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.836" endtime="20201112 12:26:27.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.840" level="INFO">VALUE: [5.313900000000066e-05, 5.311099999999805e-05, 5.315300000000023e-05, 5.3263999999997313e-05, 5.315300000000023e-05, 5.31669999999998e-05, 5.347200000000232e-05, 5.275000000000071e-05, 5.3485999999998424e-05, 5.329199999999992e-05, 5.338900000000091e-05, 5.293099999999912e-05, 5.3221999999998604e-05, 5.28609999999978e-05, 5.309700000000195e-05, 5.337500000000134e-05, 5.3443999999999714e-05, 5.356899999999984e-05, 5.351400000000103e-05, 5.283299999999866e-05, 5.327800000000035e-05, 5.362499999999812e-05, 5.2957999999998784e-05, 5.306899999999934e-05, 5.2957999999998784e-05, 5.283300000000213e-05, 5.2721999999998104e-05, 5.279199999999942e-05, 5.25279999999996e-05, 5.313900000000066e-05, 5.333399999999863e-05, 5.345899999999876e-05, 5.308400000000185e-05, 5.33340000000021e-05, 5.323700000000112e-05, 5.326400000000078e-05, 5.331899999999959e-05, 5.302699999999716e-05, 5.3193999999999464e-05, 5.311100000000152e-05, 5.287500000000084e-05, 5.279199999999942e-05, 5.336100000000177e-05, 5.286100000000127e-05, 5.290299999999998e-05, 5.36670000000003e-05, 5.326400000000078e-05, 5.26669999999993e-05, 5.331999999999906e-05, 5.308300000000238e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.838" endtime="20201112 12:26:27.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.833" endtime="20201112 12:26:27.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.843" endtime="20201112 12:26:27.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.847" endtime="20201112 12:26:27.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.845" endtime="20201112 12:26:27.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.842" endtime="20201112 12:26:27.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.472" endtime="20201112 12:26:27.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.472" endtime="20201112 12:26:27.868"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.876" endtime="20201112 12:26:27.896"></status>
</kw>
<msg timestamp="20201112 12:26:27.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.875" endtime="20201112 12:26:27.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.897" endtime="20201112 12:26:27.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.900" endtime="20201112 12:26:27.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.872" endtime="20201112 12:26:27.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.870" endtime="20201112 12:26:27.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.910" endtime="20201112 12:26:28.196"></status>
</kw>
<msg timestamp="20201112 12:26:28.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.908" endtime="20201112 12:26:28.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.200" endtime="20201112 12:26:28.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.209" endtime="20201112 12:26:28.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.906" endtime="20201112 12:26:28.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.904" endtime="20201112 12:26:28.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.216" level="INFO">${RESULT} = [{'time': 0.019715403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4499999999998994e-05, 'source_diff': 5.4499999999998994e-05}, {'time': 0.019783403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.212" endtime="20201112 12:26:28.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.229" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:28.217" endtime="20201112 12:26:28.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.234" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.233" endtime="20201112 12:26:28.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.236" level="INFO">VALUE: [5.4499999999998994e-05, 5.376400000000128e-05, 5.413900000000166e-05, 5.4485999999999424e-05, 5.463899999999869e-05, 5.430500000000102e-05, 5.402699999999816e-05, 5.4457999999996815e-05, 5.452699999999866e-05, 5.408299999999991e-05, 5.3957999999999784e-05, 5.440299999999801e-05, 5.4458000000000284e-05, 5.440300000000148e-05, 5.381899999999662e-05, 5.438899999999844e-05, 5.393100000000012e-05, 5.461099999999955e-05, 5.420899999999951e-05, 5.3999999999998494e-05, 5.441700000000105e-05, 5.434699999999973e-05, 5.376400000000128e-05, 5.386199999999827e-05, 5.369499999999944e-05, 5.4458000000000284e-05, 5.372200000000257e-05, 5.402700000000163e-05, 5.413899999999819e-05, 5.3944000000000214e-05, 5.465300000000173e-05, 5.4415999999998105e-05, 5.4263999999998314e-05, 5.4221999999999604e-05, 5.383299999999966e-05, 5.433300000000016e-05, 5.440300000000148e-05, 5.3693999999999964e-05, 5.432000000000006e-05, 5.376400000000128e-05, 5.445899999999976e-05, 5.438899999999844e-05, 5.415300000000123e-05, 5.373699999999815e-05, 5.406999999999981e-05, 5.462499999999912e-05, 5.384699999999923e-05, 5.3901999999998035e-05, 5.458300000000041e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.235" endtime="20201112 12:26:28.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.230" endtime="20201112 12:26:28.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.240" endtime="20201112 12:26:28.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.243" endtime="20201112 12:26:28.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.242" endtime="20201112 12:26:28.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.238" endtime="20201112 12:26:28.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.868" endtime="20201112 12:26:28.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.868" endtime="20201112 12:26:28.264"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.273" endtime="20201112 12:26:28.291"></status>
</kw>
<msg timestamp="20201112 12:26:28.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.271" endtime="20201112 12:26:28.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.293" endtime="20201112 12:26:28.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.295" endtime="20201112 12:26:28.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.269" endtime="20201112 12:26:28.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.266" endtime="20201112 12:26:28.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.305" endtime="20201112 12:26:28.591"></status>
</kw>
<msg timestamp="20201112 12:26:28.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.303" endtime="20201112 12:26:28.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.595" endtime="20201112 12:26:28.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.603" endtime="20201112 12:26:28.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.301" endtime="20201112 12:26:28.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.299" endtime="20201112 12:26:28.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.610" level="INFO">${RESULT} = [{'time': 0.019777375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4999999999999494e-05, 'source_diff': 5.4999999999999494e-05}, {'time': 0.019847389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.607" endtime="20201112 12:26:28.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.624" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:28.611" endtime="20201112 12:26:28.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.629" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.628" endtime="20201112 12:26:28.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.631" level="INFO">VALUE: [5.4999999999999494e-05, 5.4722000000000104e-05, 5.508300000000091e-05, 5.4735999999999674e-05, 5.5541999999998704e-05, 5.5722000000001104e-05, 5.493100000000112e-05, 5.480499999999805e-05, 5.5249999999999744e-05, 5.4985999999999924e-05, 5.5457999999997815e-05, 5.5665999999999355e-05, 5.4722000000000104e-05, 5.4887999999999465e-05, 5.5208000000001034e-05, 5.531900000000159e-05, 5.4791999999997953e-05, 5.4943999999997745e-05, 5.511100000000005e-05, 5.506899999999787e-05, 5.508300000000091e-05, 5.5277999999998884e-05, 5.48609999999998e-05, 5.537499999999987e-05, 5.545899999999729e-05, 5.538900000000291e-05, 5.531999999999759e-05, 5.561200000000002e-05, 5.493100000000112e-05, 5.4999999999999494e-05, 5.511199999999952e-05, 5.558300000000141e-05, 5.5472000000000854e-05, 5.495900000000026e-05, 5.5027999999998634e-05, 5.513899999999919e-05, 5.511100000000005e-05, 5.538900000000291e-05, 5.483300000000066e-05, 5.5208000000001034e-05, 5.527800000000235e-05, 5.4999999999999494e-05, 5.5013999999999064e-05, 5.519500000000094e-05, 5.519499999999747e-05, 5.56809999999984e-05, 5.563899999999969e-05, 5.558399999999741e-05, 5.480600000000099e-05, 5.509799999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.630" endtime="20201112 12:26:28.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.625" endtime="20201112 12:26:28.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.635" endtime="20201112 12:26:28.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.638" endtime="20201112 12:26:28.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.637" endtime="20201112 12:26:28.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.633" endtime="20201112 12:26:28.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.265" endtime="20201112 12:26:28.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.264" endtime="20201112 12:26:28.659"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.668" endtime="20201112 12:26:28.686"></status>
</kw>
<msg timestamp="20201112 12:26:28.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.666" endtime="20201112 12:26:28.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.688" endtime="20201112 12:26:28.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.690" endtime="20201112 12:26:28.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.664" endtime="20201112 12:26:28.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.662" endtime="20201112 12:26:28.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.700" endtime="20201112 12:26:28.986"></status>
</kw>
<msg timestamp="20201112 12:26:28.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.699" endtime="20201112 12:26:28.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.990" endtime="20201112 12:26:28.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.999" endtime="20201112 12:26:29.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.696" endtime="20201112 12:26:29.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.695" endtime="20201112 12:26:29.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.005" level="INFO">${RESULT} = [{'time': 0.019913708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5750000000000244e-05, 'source_diff': 5.5750000000000244e-05}, {'time': 0.019985708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.002" endtime="20201112 12:26:29.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.019" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:29.006" endtime="20201112 12:26:29.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.023" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.022" endtime="20201112 12:26:29.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.026" level="INFO">VALUE: [5.5750000000000244e-05, 5.663900000000069e-05, 5.595899999999779e-05, 5.583299999999819e-05, 5.6014000000000064e-05, 5.5972000000001354e-05, 5.5707999999998065e-05, 5.606899999999887e-05, 5.606899999999887e-05, 5.6165999999999855e-05, 5.6222000000001604e-05, 5.5777999999999384e-05, 5.590299999999951e-05, 5.5694000000001964e-05, 5.6514000000000564e-05, 5.605500000000277e-05, 5.640300000000001e-05, 5.6458000000002284e-05, 5.661100000000155e-05, 5.613900000000019e-05, 5.6055999999998773e-05, 5.6221999999998135e-05, 5.586200000000027e-05, 5.568100000000187e-05, 5.620900000000151e-05, 5.629099999999998e-05, 5.663900000000069e-05, 5.556899999999837e-05, 5.661099999999808e-05, 5.588899999999994e-05, 5.608299999999844e-05, 5.641699999999958e-05, 5.6514000000000564e-05, 5.634699999999826e-05, 5.638900000000044e-05, 5.608400000000138e-05, 5.63610000000013e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.620899999999804e-05, 5.608399999999791e-05, 5.6555999999999274e-05, 5.606900000000234e-05, 5.6443999999999245e-05, 5.634700000000173e-05, 5.63610000000013e-05, 5.630600000000249e-05, 5.6222000000001604e-05, 5.6457999999998815e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.025" endtime="20201112 12:26:29.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.020" endtime="20201112 12:26:29.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.030" endtime="20201112 12:26:29.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.033" endtime="20201112 12:26:29.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.031" endtime="20201112 12:26:29.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.028" endtime="20201112 12:26:29.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.660" endtime="20201112 12:26:29.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.660" endtime="20201112 12:26:29.054"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.062" endtime="20201112 12:26:29.082"></status>
</kw>
<msg timestamp="20201112 12:26:29.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.061" endtime="20201112 12:26:29.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.083" endtime="20201112 12:26:29.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.086" endtime="20201112 12:26:29.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.058" endtime="20201112 12:26:29.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.056" endtime="20201112 12:26:29.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.096" endtime="20201112 12:26:29.382"></status>
</kw>
<msg timestamp="20201112 12:26:29.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.094" endtime="20201112 12:26:29.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019679861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.386" endtime="20201112 12:26:29.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.395" endtime="20201112 12:26:29.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.091" endtime="20201112 12:26:29.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.090" endtime="20201112 12:26:29.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.401" level="INFO">${RESULT} = [{'time': 0.019679861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7444000000000245e-05, 'source_diff': 5.7444000000000245e-05}, {'time': 0.019752819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.398" endtime="20201112 12:26:29.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:29.402" endtime="20201112 12:26:29.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.419" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.418" endtime="20201112 12:26:29.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.422" level="INFO">VALUE: [5.7444000000000245e-05, 5.751300000000209e-05, 5.7415999999997636e-05, 5.680500000000005e-05, 5.683300000000266e-05, 5.741700000000058e-05, 5.761099999999908e-05, 5.7207999999999565e-05, 5.680500000000005e-05, 5.740300000000101e-05, 5.7277999999997414e-05, 5.763900000000169e-05, 5.7472000000002854e-05, 5.740300000000101e-05, 5.690300000000051e-05, 5.709799999999848e-05, 5.709799999999848e-05, 5.744499999999972e-05, 5.6916000000000605e-05, 5.7444000000000245e-05, 5.7485999999998955e-05, 5.7402000000001535e-05, 5.709699999999901e-05, 5.6750000000001244e-05, 5.741699999999711e-05, 5.731900000000012e-05, 5.6805999999999524e-05, 5.6750000000001244e-05, 5.7292000000000454e-05, 5.7013999999997594e-05, 5.7264000000001314e-05, 5.6707999999999065e-05, 5.716699999999686e-05, 5.7278000000000884e-05, 5.684700000000223e-05, 5.719500000000294e-05, 5.736200000000177e-05, 5.7556000000000274e-05, 5.7138000000001715e-05, 5.729100000000098e-05, 5.680500000000005e-05, 5.715300000000076e-05, 5.6957999999999315e-05, 5.7264000000001314e-05, 5.7528000000001134e-05, 5.740300000000101e-05, 5.71809999999999e-05, 5.7471999999999385e-05, 5.7222000000002604e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.421" endtime="20201112 12:26:29.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.416" endtime="20201112 12:26:29.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.425" endtime="20201112 12:26:29.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.429" endtime="20201112 12:26:29.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.427" endtime="20201112 12:26:29.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.424" endtime="20201112 12:26:29.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.055" endtime="20201112 12:26:29.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.054" endtime="20201112 12:26:29.450"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.458" endtime="20201112 12:26:29.477"></status>
</kw>
<msg timestamp="20201112 12:26:29.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.457" endtime="20201112 12:26:29.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.478" endtime="20201112 12:26:29.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.481" endtime="20201112 12:26:29.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.454" endtime="20201112 12:26:29.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.452" endtime="20201112 12:26:29.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.491" endtime="20201112 12:26:29.777"></status>
</kw>
<msg timestamp="20201112 12:26:29.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.489" endtime="20201112 12:26:29.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.781" endtime="20201112 12:26:29.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.789" endtime="20201112 12:26:29.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.487" endtime="20201112 12:26:29.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.485" endtime="20201112 12:26:29.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.796" level="INFO">${RESULT} = [{'time': 0.019807125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.818099999999743e-05, 'source_diff': 5.818099999999743e-05}, {'time': 0.019877153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.793" endtime="20201112 12:26:29.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.809" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:29.797" endtime="20201112 12:26:29.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.814" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.813" endtime="20201112 12:26:29.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.816" level="INFO">VALUE: [5.818099999999743e-05, 5.7778000000001384e-05, 5.866700000000183e-05, 5.7778000000001384e-05, 5.80550000000013e-05, 5.8528000000002134e-05, 5.8083999999999913e-05, 5.769499999999997e-05, 5.8264000000002314e-05, 5.813899999999872e-05, 5.7901999999998566e-05, 5.826299999999937e-05, 5.781899999999715e-05, 5.7958000000000315e-05, 5.7763999999998344e-05, 5.834700000000026e-05, 5.7944000000000745e-05, 5.863899999999922e-05, 5.815299999999829e-05, 5.791699999999761e-05, 5.8541999999998234e-05, 5.8278000000001884e-05, 5.820900000000004e-05, 5.8263999999998844e-05, 5.772300000000258e-05, 5.8277999999998414e-05, 5.795899999999979e-05, 5.7916000000001605e-05, 5.783300000000019e-05, 5.7887999999998996e-05, 5.8194000000000995e-05, 5.8028000000001634e-05, 5.7693999999997025e-05, 5.791700000000108e-05, 5.8264000000002314e-05, 5.7971999999999885e-05, 5.861100000000008e-05, 5.8527999999998664e-05, 5.859700000000051e-05, 5.845900000000029e-05, 5.787500000000237e-05, 5.790300000000151e-05, 5.8597999999999983e-05, 5.812499999999915e-05, 5.8027999999998164e-05, 5.815299999999829e-05, 5.805499999999783e-05, 5.7902000000002035e-05, 5.802699999999869e-05, 5.858299999999747e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.815" endtime="20201112 12:26:29.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.810" endtime="20201112 12:26:29.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.820" endtime="20201112 12:26:29.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.823" endtime="20201112 12:26:29.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.822" endtime="20201112 12:26:29.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.818" endtime="20201112 12:26:29.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.451" endtime="20201112 12:26:29.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.450" endtime="20201112 12:26:29.844"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.853" endtime="20201112 12:26:29.872"></status>
</kw>
<msg timestamp="20201112 12:26:29.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.851" endtime="20201112 12:26:29.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.874" endtime="20201112 12:26:29.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.876" endtime="20201112 12:26:29.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.849" endtime="20201112 12:26:29.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.847" endtime="20201112 12:26:29.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.886" endtime="20201112 12:26:30.172"></status>
</kw>
<msg timestamp="20201112 12:26:30.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.885" endtime="20201112 12:26:30.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.176" endtime="20201112 12:26:30.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.184" endtime="20201112 12:26:30.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.882" endtime="20201112 12:26:30.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.880" endtime="20201112 12:26:30.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.191" level="INFO">${RESULT} = [{'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931899999999865e-05, 'source_diff': 5.931899999999865e-05}, {'time': 0.019906444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.188" endtime="20201112 12:26:30.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.206" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.192" endtime="20201112 12:26:30.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.210" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.209" endtime="20201112 12:26:30.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.213" level="INFO">VALUE: [5.931899999999865e-05, 5.883299999999772e-05, 5.9458000000001815e-05, 5.879100000000248e-05, 5.90689999999984e-05, 5.9291999999998984e-05, 5.958300000000194e-05, 5.9735999999997735e-05, 5.8721999999997165e-05, 5.8721999999997165e-05, 5.894499999999775e-05, 5.88749999999999e-05, 5.966699999999936e-05, 5.920900000000104e-05, 5.8708000000001065e-05, 5.915299999999929e-05, 5.872300000000011e-05, 5.922300000000061e-05, 5.902699999999969e-05, 5.93750000000004e-05, 5.9027999999999164e-05, 5.904099999999926e-05, 5.938899999999997e-05, 5.883300000000119e-05, 5.9541999999999234e-05, 5.915300000000276e-05, 5.909700000000101e-05, 5.940299999999954e-05, 5.9527999999999665e-05, 5.963900000000022e-05, 5.891699999999861e-05, 5.916699999999886e-05, 5.9500000000000525e-05, 5.8792000000001954e-05, 5.9069999999997874e-05, 5.9458000000001815e-05, 5.9665999999999886e-05, 5.881900000000162e-05, 5.855499999999833e-05, 5.9500000000000525e-05, 5.883299999999772e-05, 5.891700000000208e-05, 5.9486000000000955e-05, 5.883299999999772e-05, 5.9041999999998734e-05, 5.8722000000000635e-05, 5.8971999999997415e-05, 5.888899999999947e-05, 5.890299999999904e-05, 5.9320000000001594e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.211" endtime="20201112 12:26:30.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.207" endtime="20201112 12:26:30.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.216" endtime="20201112 12:26:30.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.220" endtime="20201112 12:26:30.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.218" endtime="20201112 12:26:30.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.215" endtime="20201112 12:26:30.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.845" endtime="20201112 12:26:30.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.845" endtime="20201112 12:26:30.241"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.249" endtime="20201112 12:26:30.269"></status>
</kw>
<msg timestamp="20201112 12:26:30.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.248" endtime="20201112 12:26:30.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.270" endtime="20201112 12:26:30.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.273" endtime="20201112 12:26:30.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.245" endtime="20201112 12:26:30.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.243" endtime="20201112 12:26:30.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.283" endtime="20201112 12:26:30.569"></status>
</kw>
<msg timestamp="20201112 12:26:30.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.281" endtime="20201112 12:26:30.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.573" endtime="20201112 12:26:30.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.581" endtime="20201112 12:26:30.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.279" endtime="20201112 12:26:30.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.277" endtime="20201112 12:26:30.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.588" level="INFO">${RESULT} = [{'time': 0.019757583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.062499999999818e-05, 'source_diff': 6.062499999999818e-05}, {'time': 0.019832597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.585" endtime="20201112 12:26:30.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.601" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.589" endtime="20201112 12:26:30.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.606" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.605" endtime="20201112 12:26:30.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.609" level="INFO">VALUE: [6.062499999999818e-05, 6.054100000000076e-05, 5.984700000000176e-05, 6.043099999999968e-05, 5.9679999999999456e-05, 6.0542000000000235e-05, 5.988900000000047e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.034699999999879e-05, 6.03750000000014e-05, 5.9777999999999915e-05, 6.0598000000001984e-05, 6.027700000000094e-05, 5.9777999999999915e-05, 6.015300000000029e-05, 5.9735999999997735e-05, 5.9707999999998596e-05, 5.9929999999999706e-05, 5.981899999999915e-05, 6.059699999999904e-05, 6.013900000000072e-05, 6.040300000000054e-05, 6.0208000000002565e-05, 5.9764000000000345e-05, 6.0527999999997195e-05, 5.990300000000004e-05, 6.016699999999986e-05, 5.9707999999998596e-05, 6.040300000000054e-05, 6.065300000000079e-05, 6.062500000000165e-05, 6.0528000000000665e-05, 6.0250000000001275e-05, 6.0652000000001316e-05, 5.9957999999998846e-05, 5.984700000000176e-05, 5.976300000000087e-05, 5.986099999999786e-05, 6.059699999999904e-05, 5.9805999999999054e-05, 6.058299999999947e-05, 6.006900000000287e-05, 5.9764000000000345e-05, 5.9707999999998596e-05, 6.008299999999897e-05, 5.984700000000176e-05, 5.9971999999998415e-05, 6.0277999999996945e-05, 6.033299999999922e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.607" endtime="20201112 12:26:30.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.602" endtime="20201112 12:26:30.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.612" endtime="20201112 12:26:30.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.616" endtime="20201112 12:26:30.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.614" endtime="20201112 12:26:30.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.611" endtime="20201112 12:26:30.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.242" endtime="20201112 12:26:30.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.241" endtime="20201112 12:26:30.636"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.645" endtime="20201112 12:26:30.664"></status>
</kw>
<msg timestamp="20201112 12:26:30.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.644" endtime="20201112 12:26:30.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.665" endtime="20201112 12:26:30.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.668" endtime="20201112 12:26:30.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.641" endtime="20201112 12:26:30.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.639" endtime="20201112 12:26:30.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.678" endtime="20201112 12:26:30.963"></status>
</kw>
<msg timestamp="20201112 12:26:30.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.676" endtime="20201112 12:26:30.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.967" endtime="20201112 12:26:30.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.975" endtime="20201112 12:26:30.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.674" endtime="20201112 12:26:30.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.672" endtime="20201112 12:26:30.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.982" level="INFO">${RESULT} = [{'time': 0.019759069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.144400000000078e-05, 'source_diff': 6.144400000000078e-05}, {'time': 0.019834056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.978" endtime="20201112 12:26:30.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.995" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:30.983" endtime="20201112 12:26:30.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.000" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.999" endtime="20201112 12:26:31.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.002" level="INFO">VALUE: [6.144400000000078e-05, 6.106999999999987e-05, 6.154200000000123e-05, 6.148599999999949e-05, 6.1013999999998125e-05, 6.079099999999754e-05, 6.12080000000001e-05, 6.13889999999985e-05, 6.125000000000227e-05, 6.129199999999752e-05, 6.083299999999972e-05, 6.154199999999777e-05, 6.12080000000001e-05, 6.0806000000000054e-05, 6.129100000000151e-05, 6.132000000000012e-05, 6.154200000000123e-05, 6.0819999999999624e-05, 6.154099999999829e-05, 6.10690000000004e-05, 6.0902000000001566e-05, 6.102699999999822e-05, 6.155500000000133e-05, 6.0819999999999624e-05, 6.163899999999875e-05, 6.115300000000129e-05, 6.133300000000022e-05, 6.084699999999929e-05, 6.127800000000141e-05, 6.15690000000009e-05, 6.152800000000166e-05, 6.118099999999696e-05, 6.137499999999893e-05, 6.094499999999975e-05, 6.129200000000098e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.118000000000096e-05, 6.102699999999822e-05, 6.126400000000184e-05, 6.141600000000164e-05, 6.1014000000001595e-05, 6.129200000000098e-05, 6.109699999999954e-05, 6.119400000000053e-05, 6.1013999999998125e-05, 6.126400000000184e-05, 6.145800000000035e-05, 6.165199999999885e-05, 6.070899999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.001" endtime="20201112 12:26:31.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.996" endtime="20201112 12:26:31.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.006" endtime="20201112 12:26:31.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.010" endtime="20201112 12:26:31.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.008" endtime="20201112 12:26:31.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.004" endtime="20201112 12:26:31.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.637" endtime="20201112 12:26:31.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.637" endtime="20201112 12:26:31.030"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.039" endtime="20201112 12:26:31.058"></status>
</kw>
<msg timestamp="20201112 12:26:31.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.037" endtime="20201112 12:26:31.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.059" endtime="20201112 12:26:31.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.062" endtime="20201112 12:26:31.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.035" endtime="20201112 12:26:31.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.033" endtime="20201112 12:26:31.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.072" endtime="20201112 12:26:31.357"></status>
</kw>
<msg timestamp="20201112 12:26:31.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01982325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:31.070" endtime="20201112 12:26:31.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01982325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:31.361" endtime="20201112 12:26:31.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.370" endtime="20201112 12:26:31.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.068" endtime="20201112 12:26:31.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.066" endtime="20201112 12:26:31.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.376" level="INFO">${RESULT} = [{'time': 0.019885069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181899999999768e-05, 'source_diff': 6.181899999999768e-05}, {'time': 0.019963083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.373" endtime="20201112 12:26:31.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.390" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:31.377" endtime="20201112 12:26:31.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.394" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.393" endtime="20201112 12:26:31.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.397" level="INFO">VALUE: [6.181899999999768e-05, 6.241599999999917e-05, 6.215200000000282e-05, 6.241599999999917e-05, 6.213900000000272e-05, 6.251399999999963e-05, 6.245800000000135e-05, 6.241700000000211e-05, 6.234700000000079e-05, 6.195800000000085e-05, 6.245799999999788e-05, 6.177799999999845e-05, 6.247199999999745e-05, 6.230599999999809e-05, 6.193100000000118e-05, 6.166699999999789e-05, 6.193100000000118e-05, 6.190300000000204e-05, 6.216600000000239e-05, 6.19439999999978e-05, 6.247200000000092e-05, 6.17080000000006e-05, 6.186099999999986e-05, 6.1888999999999e-05, 6.215299999999882e-05, 6.255499999999886e-05, 6.167999999999799e-05, 6.208300000000097e-05, 6.223600000000024e-05, 6.222200000000067e-05, 6.243100000000168e-05, 6.186099999999986e-05, 6.252800000000266e-05, 6.245900000000082e-05, 6.198699999999946e-05, 6.241699999999864e-05, 6.179099999999854e-05, 6.232000000000112e-05, 6.229099999999904e-05, 6.169400000000103e-05, 6.255500000000233e-05, 6.187499999999943e-05, 6.229199999999852e-05, 6.236100000000036e-05, 6.222200000000067e-05, 6.168000000000146e-05, 6.20690000000014e-05, 6.213899999999925e-05, 6.25279999999992e-05, 6.170900000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.395" endtime="20201112 12:26:31.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.391" endtime="20201112 12:26:31.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.400" endtime="20201112 12:26:31.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.404" endtime="20201112 12:26:31.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.402" endtime="20201112 12:26:31.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.399" endtime="20201112 12:26:31.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.031" endtime="20201112 12:26:31.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.031" endtime="20201112 12:26:31.425"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.433" endtime="20201112 12:26:31.452"></status>
</kw>
<msg timestamp="20201112 12:26:31.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.432" endtime="20201112 12:26:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.453" endtime="20201112 12:26:31.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.456" endtime="20201112 12:26:31.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.429" endtime="20201112 12:26:31.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.427" endtime="20201112 12:26:31.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.466" endtime="20201112 12:26:31.751"></status>
</kw>
<msg timestamp="20201112 12:26:31.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.464" endtime="20201112 12:26:31.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019939889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.755" endtime="20201112 12:26:31.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.763" endtime="20201112 12:26:31.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.462" endtime="20201112 12:26:31.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.460" endtime="20201112 12:26:31.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.770" level="INFO">${RESULT} = [{'time': 0.019939889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.281999999999816e-05, 'source_diff': 6.281999999999816e-05}, {'time': 0.020017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.767" endtime="20201112 12:26:31.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.784" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:31.771" endtime="20201112 12:26:31.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.789" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.788" endtime="20201112 12:26:31.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.792" level="INFO">VALUE: [6.281999999999816e-05, 6.334700000000179e-05, 6.304199999999927e-05, 6.309699999999807e-05, 6.347299999999792e-05, 6.301400000000013e-05, 6.366600000000042e-05, 6.326400000000038e-05, 6.291599999999967e-05, 6.27080000000016e-05, 6.27500000000003e-05, 6.27219999999977e-05, 6.330499999999961e-05, 6.334699999999832e-05, 6.327799999999995e-05, 6.336100000000136e-05, 6.320799999999863e-05, 6.30699999999984e-05, 6.334699999999832e-05, 6.293100000000218e-05, 6.355599999999934e-05, 6.327799999999995e-05, 6.276399999999988e-05, 6.26950000000015e-05, 6.30279999999997e-05, 6.334700000000179e-05, 6.283300000000172e-05, 6.30829999999985e-05, 6.301400000000013e-05, 6.347200000000192e-05, 6.30279999999997e-05, 6.363900000000075e-05, 6.354199999999977e-05, 6.327799999999995e-05, 6.327799999999995e-05, 6.290299999999957e-05, 6.309799999999754e-05, 6.304200000000273e-05, 6.347200000000192e-05, 6.298700000000046e-05, 6.337500000000093e-05, 6.330599999999909e-05, 6.359800000000151e-05, 6.291599999999967e-05, 6.32500000000008e-05, 6.361099999999814e-05, 6.283299999999825e-05, 6.329100000000004e-05, 6.33890000000005e-05, 6.319399999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.790" endtime="20201112 12:26:31.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.785" endtime="20201112 12:26:31.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.799" endtime="20201112 12:26:31.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.802" endtime="20201112 12:26:31.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.801" endtime="20201112 12:26:31.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.797" endtime="20201112 12:26:31.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.425" endtime="20201112 12:26:31.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.425" endtime="20201112 12:26:31.823"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.832" endtime="20201112 12:26:31.851"></status>
</kw>
<msg timestamp="20201112 12:26:31.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.830" endtime="20201112 12:26:31.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.853" endtime="20201112 12:26:31.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.855" endtime="20201112 12:26:31.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.828" endtime="20201112 12:26:31.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.826" endtime="20201112 12:26:31.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.865" endtime="20201112 12:26:32.151"></status>
</kw>
<msg timestamp="20201112 12:26:32.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.864" endtime="20201112 12:26:32.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.155" endtime="20201112 12:26:32.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.163" endtime="20201112 12:26:32.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.861" endtime="20201112 12:26:32.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.859" endtime="20201112 12:26:32.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.170" level="INFO">${RESULT} = [{'time': 0.019789236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.42080000000031e-05, 'source_diff': 6.42080000000031e-05}, {'time': 0.019866236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:32.167" endtime="20201112 12:26:32.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.171" endtime="20201112 12:26:32.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.188" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.187" endtime="20201112 12:26:32.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.191" level="INFO">VALUE: [6.42080000000031e-05, 6.401399999999766e-05, 6.415300000000082e-05, 6.384699999999882e-05, 6.395800000000285e-05, 6.42500000000018e-05, 6.433299999999975e-05, 6.409699999999907e-05, 6.427800000000095e-05, 6.397299999999842e-05, 6.377799999999698e-05, 6.422300000000214e-05, 6.463799999999881e-05, 6.449999999999859e-05, 6.437499999999846e-05, 6.383299999999925e-05, 6.424999999999834e-05, 6.40280000000007e-05, 6.416600000000092e-05, 6.412499999999821e-05, 6.429199999999705e-05, 6.431900000000018e-05, 6.40280000000007e-05, 6.40699999999994e-05, 6.384700000000229e-05, 6.408399999999898e-05, 6.461199999999861e-05, 6.42089999999991e-05, 6.398599999999852e-05, 6.390300000000057e-05, 6.408399999999898e-05, 6.417999999999702e-05, 6.465200000000185e-05, 6.411099999999864e-05, 6.433299999999975e-05, 6.430499999999714e-05, 6.380500000000011e-05, 6.434699999999932e-05, 6.404200000000027e-05, 6.416700000000039e-05, 6.423600000000224e-05, 6.40699999999994e-05, 6.427800000000095e-05, 6.466700000000089e-05, 6.431999999999966e-05, 6.369499999999903e-05, 6.423599999999877e-05, 6.423599999999877e-05, 6.368099999999946e-05, 6.402700000000122e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.189" endtime="20201112 12:26:32.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.184" endtime="20201112 12:26:32.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.195" endtime="20201112 12:26:32.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.199" endtime="20201112 12:26:32.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.197" endtime="20201112 12:26:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.193" endtime="20201112 12:26:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.824" endtime="20201112 12:26:32.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.824" endtime="20201112 12:26:32.220"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.228" endtime="20201112 12:26:32.248"></status>
</kw>
<msg timestamp="20201112 12:26:32.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.227" endtime="20201112 12:26:32.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.249" endtime="20201112 12:26:32.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.252" endtime="20201112 12:26:32.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.224" endtime="20201112 12:26:32.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.222" endtime="20201112 12:26:32.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.262" endtime="20201112 12:26:32.547"></status>
</kw>
<msg timestamp="20201112 12:26:32.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.260" endtime="20201112 12:26:32.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.551" endtime="20201112 12:26:32.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.560" endtime="20201112 12:26:32.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.257" endtime="20201112 12:26:32.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.256" endtime="20201112 12:26:32.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.566" level="INFO">${RESULT} = [{'time': 0.019905875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.481900000000068e-05, 'source_diff': 6.481900000000068e-05}, {'time': 0.019983847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:32.563" endtime="20201112 12:26:32.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.580" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.567" endtime="20201112 12:26:32.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.584" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.583" endtime="20201112 12:26:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.587" level="INFO">VALUE: [6.481900000000068e-05, 6.538899999999903e-05, 6.563899999999928e-05, 6.540300000000207e-05, 6.49440000000008e-05, 6.563899999999928e-05, 6.488899999999853e-05, 6.513899999999878e-05, 6.534700000000032e-05, 6.490300000000157e-05, 6.519500000000053e-05, 6.518100000000096e-05, 6.55419999999983e-05, 6.479100000000154e-05, 6.50419999999978e-05, 6.545800000000088e-05, 6.519400000000106e-05, 6.504200000000127e-05, 6.544399999999784e-05, 6.565300000000232e-05, 6.491700000000114e-05, 6.565300000000232e-05, 6.491699999999767e-05, 6.473599999999927e-05, 6.520800000000063e-05, 6.479199999999755e-05, 6.552799999999873e-05, 6.488899999999853e-05, 6.515299999999835e-05, 6.52639999999989e-05, 6.551399999999916e-05, 6.501400000000213e-05, 6.549999999999959e-05, 6.545800000000088e-05, 6.532000000000066e-05, 6.47500000000023e-05, 6.504200000000127e-05, 6.527800000000195e-05, 6.538899999999903e-05, 6.469500000000003e-05, 6.54029999999986e-05, 6.537500000000293e-05, 6.551399999999916e-05, 6.545900000000035e-05, 6.52220000000002e-05, 6.479199999999755e-05, 6.47089999999996e-05, 6.555500000000186e-05, 6.482000000000016e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.585" endtime="20201112 12:26:32.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.581" endtime="20201112 12:26:32.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.590" endtime="20201112 12:26:32.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.594" endtime="20201112 12:26:32.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.592" endtime="20201112 12:26:32.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.589" endtime="20201112 12:26:32.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.221" endtime="20201112 12:26:32.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.220" endtime="20201112 12:26:32.615"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.623" endtime="20201112 12:26:32.643"></status>
</kw>
<msg timestamp="20201112 12:26:32.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.622" endtime="20201112 12:26:32.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.644" endtime="20201112 12:26:32.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.647" endtime="20201112 12:26:32.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.619" endtime="20201112 12:26:32.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.617" endtime="20201112 12:26:32.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.657" endtime="20201112 12:26:32.943"></status>
</kw>
<msg timestamp="20201112 12:26:32.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.655" endtime="20201112 12:26:32.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019785444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.947" endtime="20201112 12:26:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.955" endtime="20201112 12:26:32.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.653" endtime="20201112 12:26:32.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.651" endtime="20201112 12:26:32.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.962" level="INFO">${RESULT} = [{'time': 0.019851681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.623700000000024e-05, 'source_diff': 6.623700000000024e-05}, {'time': 0.01992975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:32.959" endtime="20201112 12:26:32.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:32.963" endtime="20201112 12:26:32.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.980" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.979" endtime="20201112 12:26:32.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.982" level="INFO">VALUE: [6.623700000000024e-05, 6.597200000000095e-05, 6.659700000000157e-05, 6.62639999999999e-05, 6.569399999999809e-05, 6.59029999999991e-05, 6.665299999999985e-05, 6.577799999999898e-05, 6.634700000000132e-05, 6.647200000000145e-05, 6.623600000000077e-05, 6.609700000000107e-05, 6.659800000000105e-05, 6.580599999999812e-05, 6.631999999999819e-05, 6.652799999999973e-05, 6.580499999999864e-05, 6.636100000000089e-05, 6.651400000000016e-05, 6.60419999999988e-05, 6.57769999999995e-05, 6.665299999999985e-05, 6.641699999999917e-05, 6.597199999999748e-05, 6.645799999999841e-05, 6.648599999999755e-05, 6.647200000000145e-05, 6.570800000000113e-05, 6.597200000000095e-05, 6.641699999999917e-05, 6.63480000000008e-05, 6.597300000000042e-05, 6.662500000000071e-05, 6.601400000000313e-05, 6.62639999999999e-05, 6.6277e-05, 6.60830000000015e-05, 6.579099999999907e-05, 6.590300000000257e-05, 6.605499999999889e-05, 6.641699999999917e-05, 6.569400000000156e-05, 6.60280000000027e-05, 6.623600000000077e-05, 6.57639999999994e-05, 6.656999999999844e-05, 6.623600000000077e-05, 6.622300000000067e-05, 6.620899999999763e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.981" endtime="20201112 12:26:32.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.976" endtime="20201112 12:26:32.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.986" endtime="20201112 12:26:32.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.990" endtime="20201112 12:26:33.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.988" endtime="20201112 12:26:33.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.984" endtime="20201112 12:26:33.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.615" endtime="20201112 12:26:33.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.615" endtime="20201112 12:26:33.010"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.019" endtime="20201112 12:26:33.038"></status>
</kw>
<msg timestamp="20201112 12:26:33.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.017" endtime="20201112 12:26:33.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.040" endtime="20201112 12:26:33.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.042" endtime="20201112 12:26:33.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.015" endtime="20201112 12:26:33.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.013" endtime="20201112 12:26:33.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.052" endtime="20201112 12:26:33.338"></status>
</kw>
<msg timestamp="20201112 12:26:33.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.051" endtime="20201112 12:26:33.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.342" endtime="20201112 12:26:33.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.350" endtime="20201112 12:26:33.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.048" endtime="20201112 12:26:33.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.046" endtime="20201112 12:26:33.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.357" level="INFO">${RESULT} = [{'time': 0.019877125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.719399999999959e-05, 'source_diff': 6.719399999999959e-05}, {'time': 0.019956111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.354" endtime="20201112 12:26:33.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.372" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:33.358" endtime="20201112 12:26:33.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.376" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.375" endtime="20201112 12:26:33.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.379" level="INFO">VALUE: [6.719399999999959e-05, 6.672199999999823e-05, 6.738900000000103e-05, 6.691699999999967e-05, 6.672199999999823e-05, 6.74030000000006e-05, 6.749999999999812e-05, 6.670799999999866e-05, 6.736100000000189e-05, 6.743099999999974e-05, 6.713900000000078e-05, 6.74030000000006e-05, 6.701400000000066e-05, 6.669399999999909e-05, 6.684700000000182e-05, 6.670799999999866e-05, 6.765300000000085e-05, 6.680599999999912e-05, 6.745799999999941e-05, 6.716699999999992e-05, 6.692999999999977e-05, 6.711099999999817e-05, 6.763899999999781e-05, 6.738900000000103e-05, 6.732000000000266e-05, 6.763799999999834e-05, 6.683400000000173e-05, 6.74030000000006e-05, 6.697199999999848e-05, 6.684699999999835e-05, 6.698600000000152e-05, 6.675000000000084e-05, 6.679100000000007e-05, 6.656900000000243e-05, 6.727800000000048e-05, 6.733299999999928e-05, 6.727800000000048e-05, 6.695799999999891e-05, 6.670799999999866e-05, 6.743099999999974e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.748600000000202e-05, 6.756899999999996e-05, 6.74030000000006e-05, 6.701299999999771e-05, 6.722199999999873e-05, 6.72220000000022e-05, 6.715200000000088e-05, 6.701400000000066e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.377" endtime="20201112 12:26:33.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.373" endtime="20201112 12:26:33.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.382" endtime="20201112 12:26:33.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.387" endtime="20201112 12:26:33.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.385" endtime="20201112 12:26:33.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.381" endtime="20201112 12:26:33.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.011" endtime="20201112 12:26:33.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.011" endtime="20201112 12:26:33.408"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.417" endtime="20201112 12:26:33.436"></status>
</kw>
<msg timestamp="20201112 12:26:33.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.415" endtime="20201112 12:26:33.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.437" endtime="20201112 12:26:33.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.440" endtime="20201112 12:26:33.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.413" endtime="20201112 12:26:33.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.411" endtime="20201112 12:26:33.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.450" endtime="20201112 12:26:33.736"></status>
</kw>
<msg timestamp="20201112 12:26:33.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.448" endtime="20201112 12:26:33.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.741" endtime="20201112 12:26:33.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.749" endtime="20201112 12:26:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.446" endtime="20201112 12:26:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.444" endtime="20201112 12:26:33.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.756" level="INFO">${RESULT} = [{'time': 0.020180806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.83619999999989e-05, 'source_diff': 6.83619999999989e-05}, {'time': 0.020260861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:33.752" endtime="20201112 12:26:33.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.769" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:33.757" endtime="20201112 12:26:33.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.774" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.773" endtime="20201112 12:26:33.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.776" level="INFO">VALUE: [6.83619999999989e-05, 6.806900000000046e-05, 6.852799999999826e-05, 6.847199999999998e-05, 6.794400000000034e-05, 6.838899999999856e-05, 6.770799999999966e-05, 6.834699999999985e-05, 6.791700000000067e-05, 6.844399999999737e-05, 6.862499999999924e-05, 6.845800000000041e-05, 6.840299999999813e-05, 6.806999999999994e-05, 6.819500000000006e-05, 6.844500000000031e-05, 6.798699999999852e-05, 6.791599999999773e-05, 6.795799999999991e-05, 6.80969999999996e-05, 6.783299999999978e-05, 6.791599999999773e-05, 6.822199999999973e-05, 6.767999999999705e-05, 6.806900000000046e-05, 6.852800000000173e-05, 6.852799999999826e-05, 6.808300000000003e-05, 6.865300000000185e-05, 6.780599999999665e-05, 6.840299999999813e-05, 6.798600000000252e-05, 6.852700000000225e-05, 6.795900000000285e-05, 6.838800000000256e-05, 6.804099999999785e-05, 6.775000000000184e-05, 6.819399999999712e-05, 6.805600000000037e-05, 6.80969999999996e-05, 6.85970000000001e-05, 6.781900000000021e-05, 6.848600000000302e-05, 6.793100000000024e-05, 6.808300000000003e-05, 6.782000000000316e-05, 6.795800000000338e-05, 6.829200000000105e-05, 6.813899999999831e-05, 6.837499999999899e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.775" endtime="20201112 12:26:33.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.770" endtime="20201112 12:26:33.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.780" endtime="20201112 12:26:33.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.783" endtime="20201112 12:26:33.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.782" endtime="20201112 12:26:33.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.778" endtime="20201112 12:26:33.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.409" endtime="20201112 12:26:33.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.408" endtime="20201112 12:26:33.804"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.813" endtime="20201112 12:26:33.832"></status>
</kw>
<msg timestamp="20201112 12:26:33.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.811" endtime="20201112 12:26:33.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.834" endtime="20201112 12:26:33.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.836" endtime="20201112 12:26:33.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.809" endtime="20201112 12:26:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.807" endtime="20201112 12:26:33.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.847" endtime="20201112 12:26:34.133"></status>
</kw>
<msg timestamp="20201112 12:26:34.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.845" endtime="20201112 12:26:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.137" endtime="20201112 12:26:34.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.145" endtime="20201112 12:26:34.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.842" endtime="20201112 12:26:34.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.841" endtime="20201112 12:26:34.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.152" level="INFO">${RESULT} = [{'time': 0.019926278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.894499999999734e-05, 'source_diff': 6.894499999999734e-05}, {'time': 0.020008278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.148" endtime="20201112 12:26:34.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.165" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.153" endtime="20201112 12:26:34.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.170" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.169" endtime="20201112 12:26:34.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.172" level="INFO">VALUE: [6.894499999999734e-05, 6.955600000000187e-05, 6.957000000000144e-05, 6.897200000000048e-05, 6.955600000000187e-05, 6.941599999999923e-05, 6.90970000000006e-05, 6.938899999999956e-05, 6.880600000000112e-05, 6.936100000000042e-05, 6.958300000000153e-05, 6.938899999999956e-05, 6.891700000000167e-05, 6.894400000000134e-05, 6.904199999999833e-05, 6.927799999999901e-05, 6.957000000000144e-05, 6.882000000000069e-05, 6.92640000000029e-05, 6.884799999999983e-05, 6.902800000000223e-05, 6.893000000000177e-05, 6.922200000000073e-05, 6.927699999999953e-05, 6.922200000000073e-05, 6.952799999999926e-05, 6.951399999999969e-05, 6.947199999999751e-05, 6.958299999999806e-05, 6.937499999999999e-05, 6.938899999999956e-05, 6.920800000000116e-05, 6.877800000000198e-05, 6.916699999999845e-05, 6.940299999999913e-05, 6.902699999999928e-05, 6.934700000000085e-05, 6.959699999999763e-05, 6.874999999999937e-05, 6.951400000000316e-05, 6.883299999999731e-05, 6.920800000000116e-05, 6.899999999999962e-05, 6.94299999999988e-05, 6.904199999999833e-05, 6.966699999999895e-05, 6.951399999999969e-05, 6.870799999999719e-05, 6.884700000000035e-05, 6.933300000000128e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.171" endtime="20201112 12:26:34.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.166" endtime="20201112 12:26:34.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.176" endtime="20201112 12:26:34.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.179" endtime="20201112 12:26:34.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.178" endtime="20201112 12:26:34.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.174" endtime="20201112 12:26:34.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.805" endtime="20201112 12:26:34.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.805" endtime="20201112 12:26:34.200"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.209" endtime="20201112 12:26:34.229"></status>
</kw>
<msg timestamp="20201112 12:26:34.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.208" endtime="20201112 12:26:34.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.231" endtime="20201112 12:26:34.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.234" endtime="20201112 12:26:34.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.205" endtime="20201112 12:26:34.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.203" endtime="20201112 12:26:34.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.244" endtime="20201112 12:26:34.530"></status>
</kw>
<msg timestamp="20201112 12:26:34.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.242" endtime="20201112 12:26:34.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020170583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.534" endtime="20201112 12:26:34.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.542" endtime="20201112 12:26:34.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.240" endtime="20201112 12:26:34.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.238" endtime="20201112 12:26:34.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.549" level="INFO">${RESULT} = [{'time': 0.020241111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.052800000000026e-05, 'source_diff': 7.052800000000026e-05}, {'time': 0.020325125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.545" endtime="20201112 12:26:34.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.562" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.550" endtime="20201112 12:26:34.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.567" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.566" endtime="20201112 12:26:34.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.569" level="INFO">VALUE: [7.052800000000026e-05, 7.023599999999783e-05, 6.998600000000105e-05, 6.975000000000037e-05, 7.048599999999808e-05, 6.999999999999715e-05, 6.998699999999705e-05, 6.977799999999951e-05, 7.00840000000015e-05, 6.986099999999745e-05, 7.040199999999719e-05, 7.065200000000091e-05, 7.008300000000203e-05, 6.977700000000003e-05, 7.04169999999997e-05, 7.06109999999982e-05, 6.97909999999996e-05, 7.050000000000112e-05, 7.004199999999933e-05, 7.001400000000019e-05, 7.009699999999813e-05, 7.066700000000342e-05, 6.990200000000016e-05, 7.022299999999773e-05, 7.011100000000117e-05, 6.970899999999766e-05, 7.04299999999998e-05, 7.005499999999942e-05, 6.986100000000092e-05, 7.054199999999983e-05, 7.026399999999697e-05, 7.05559999999994e-05, 6.990299999999963e-05, 7.05559999999994e-05, 7.066699999999995e-05, 7.011100000000117e-05, 7.038900000000056e-05, 7.015300000000335e-05, 7.029199999999958e-05, 7.033400000000176e-05, 7.02369999999973e-05, 7.045899999999841e-05, 7.022200000000173e-05, 7.002700000000028e-05, 6.972200000000123e-05, 7.040300000000013e-05, 7.002799999999976e-05, 7.022200000000173e-05, 7.040300000000013e-05, 6.993099999999877e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.568" endtime="20201112 12:26:34.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.563" endtime="20201112 12:26:34.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.573" endtime="20201112 12:26:34.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.576" endtime="20201112 12:26:34.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.575" endtime="20201112 12:26:34.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.571" endtime="20201112 12:26:34.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.202" endtime="20201112 12:26:34.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.201" endtime="20201112 12:26:34.597"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.606" endtime="20201112 12:26:34.626"></status>
</kw>
<msg timestamp="20201112 12:26:34.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.604" endtime="20201112 12:26:34.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.627" endtime="20201112 12:26:34.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.630" endtime="20201112 12:26:34.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.602" endtime="20201112 12:26:34.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.600" endtime="20201112 12:26:34.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.640" endtime="20201112 12:26:34.925"></status>
</kw>
<msg timestamp="20201112 12:26:34.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.638" endtime="20201112 12:26:34.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.930" endtime="20201112 12:26:34.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.938" endtime="20201112 12:26:34.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.635" endtime="20201112 12:26:34.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.634" endtime="20201112 12:26:34.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.945" level="INFO">${RESULT} = [{'time': 0.019796764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.144499999999984e-05, 'source_diff': 7.144499999999984e-05}, {'time': 0.019880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.941" endtime="20201112 12:26:34.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.959" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:34.946" endtime="20201112 12:26:34.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.964" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.963" endtime="20201112 12:26:34.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.966" level="INFO">VALUE: [7.144499999999984e-05, 7.15560000000004e-05, 7.149999999999865e-05, 7.07499999999979e-05, 7.143100000000027e-05, 7.165299999999791e-05, 7.148599999999908e-05, 7.101299999999824e-05, 7.072199999999876e-05, 7.072199999999876e-05, 7.136100000000242e-05, 7.141699999999723e-05, 7.097199999999901e-05, 7.120799999999969e-05, 7.081999999999922e-05, 7.095799999999944e-05, 7.108399999999904e-05, 7.168000000000105e-05, 7.069499999999909e-05, 7.151400000000169e-05, 7.072299999999823e-05, 7.134699999999938e-05, 7.09300000000003e-05, 7.125000000000187e-05, 7.115300000000088e-05, 7.092999999999683e-05, 7.136099999999895e-05, 7.119400000000012e-05, 7.079200000000008e-05, 7.058299999999906e-05, 7.097199999999901e-05, 7.07360000000018e-05, 7.113899999999784e-05, 7.102800000000076e-05, 7.140300000000113e-05, 7.101400000000119e-05, 7.161100000000267e-05, 7.120799999999969e-05, 7.166599999999801e-05, 7.108299999999956e-05, 7.108299999999956e-05, 7.125000000000187e-05, 7.066600000000048e-05, 7.083300000000278e-05, 7.097200000000248e-05, 7.152799999999779e-05, 7.108299999999956e-05, 7.166700000000095e-05, 7.15970000000031e-05, 7.138900000000156e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.965" endtime="20201112 12:26:34.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.960" endtime="20201112 12:26:34.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.970" endtime="20201112 12:26:34.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.973" endtime="20201112 12:26:34.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.972" endtime="20201112 12:26:34.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.968" endtime="20201112 12:26:34.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.598" endtime="20201112 12:26:34.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.598" endtime="20201112 12:26:34.994"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.003" endtime="20201112 12:26:35.022"></status>
</kw>
<msg timestamp="20201112 12:26:35.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.001" endtime="20201112 12:26:35.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.024" endtime="20201112 12:26:35.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.026" endtime="20201112 12:26:35.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.998" endtime="20201112 12:26:35.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.996" endtime="20201112 12:26:35.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.036" endtime="20201112 12:26:35.321"></status>
</kw>
<msg timestamp="20201112 12:26:35.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.035" endtime="20201112 12:26:35.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.325" endtime="20201112 12:26:35.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.334" endtime="20201112 12:26:35.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.032" endtime="20201112 12:26:35.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.030" endtime="20201112 12:26:35.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.340" level="INFO">${RESULT} = [{'time': 0.019819264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.222200000000026e-05, 'source_diff': 7.222200000000026e-05}, {'time': 0.019907264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.337" endtime="20201112 12:26:35.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.354" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:35.341" endtime="20201112 12:26:35.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.358" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.357" endtime="20201112 12:26:35.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.361" level="INFO">VALUE: [7.222200000000026e-05, 7.257000000000097e-05, 7.244500000000084e-05, 7.184799999999936e-05, 7.247299999999998e-05, 7.19309999999973e-05, 7.223700000000277e-05, 7.263899999999934e-05, 7.192999999999783e-05, 7.220900000000016e-05, 7.227699999999906e-05, 7.223599999999983e-05, 7.223599999999983e-05, 7.212500000000274e-05, 7.195799999999697e-05, 7.258300000000106e-05, 7.233300000000081e-05, 7.223599999999983e-05, 7.258300000000106e-05, 7.213900000000231e-05, 7.265299999999891e-05, 7.170900000000313e-05, 7.234799999999986e-05, 7.255500000000192e-05, 7.181899999999727e-05, 7.186099999999945e-05, 7.175000000000237e-05, 7.208300000000056e-05, 7.226400000000244e-05, 7.234700000000038e-05, 7.251400000000269e-05, 7.19170000000012e-05, 7.190300000000163e-05, 7.169400000000062e-05, 7.266700000000195e-05, 7.183399999999979e-05, 7.261199999999968e-05, 7.194500000000034e-05, 7.209799999999961e-05, 7.201399999999872e-05, 7.263799999999987e-05, 7.234700000000038e-05, 7.22910000000021e-05, 7.193100000000077e-05, 7.251399999999922e-05, 7.259699999999716e-05, 7.194400000000087e-05, 7.238899999999909e-05, 7.230600000000115e-05, 7.230600000000115e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.360" endtime="20201112 12:26:35.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.355" endtime="20201112 12:26:35.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.364" endtime="20201112 12:26:35.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.368" endtime="20201112 12:26:35.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.366" endtime="20201112 12:26:35.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.363" endtime="20201112 12:26:35.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.995" endtime="20201112 12:26:35.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.994" endtime="20201112 12:26:35.389"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.397" endtime="20201112 12:26:35.417"></status>
</kw>
<msg timestamp="20201112 12:26:35.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.396" endtime="20201112 12:26:35.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.419" endtime="20201112 12:26:35.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.421" endtime="20201112 12:26:35.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.393" endtime="20201112 12:26:35.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.391" endtime="20201112 12:26:35.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.431" endtime="20201112 12:26:35.718"></status>
</kw>
<msg timestamp="20201112 12:26:35.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.430" endtime="20201112 12:26:35.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.722" endtime="20201112 12:26:35.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.731" endtime="20201112 12:26:35.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.427" endtime="20201112 12:26:35.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.426" endtime="20201112 12:26:35.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.737" level="INFO">${RESULT} = [{'time': 0.019837847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.363900000000034e-05, 'source_diff': 7.363900000000034e-05}, {'time': 0.019925847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.734" endtime="20201112 12:26:35.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.751" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:35.738" endtime="20201112 12:26:35.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.755" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.754" endtime="20201112 12:26:35.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.758" level="INFO">VALUE: [7.363900000000034e-05, 7.288899999999959e-05, 7.301399999999972e-05, 7.341699999999923e-05, 7.363900000000034e-05, 7.313899999999984e-05, 7.35829999999986e-05, 7.315299999999941e-05, 7.327799999999954e-05, 7.366699999999948e-05, 7.287500000000002e-05, 7.363900000000034e-05, 7.272200000000076e-05, 7.319500000000159e-05, 7.302699999999981e-05, 7.290199999999969e-05, 7.279199999999861e-05, 7.304199999999886e-05, 7.273600000000033e-05, 7.258300000000106e-05, 7.354199999999936e-05, 7.355599999999893e-05, 7.329199999999911e-05, 7.313899999999984e-05, 7.334799999999739e-05, 7.276399999999947e-05, 7.337500000000052e-05, 7.294400000000187e-05, 7.290200000000316e-05, 7.286100000000045e-05, 7.354199999999936e-05, 7.279200000000208e-05, 7.347200000000151e-05, 7.31249999999968e-05, 7.341699999999923e-05, 7.29309999999983e-05, 7.349999999999718e-05, 7.363899999999687e-05, 7.295800000000144e-05, 7.340299999999966e-05, 7.258400000000054e-05, 7.327799999999954e-05, 7.320900000000116e-05, 7.358400000000154e-05, 7.272200000000076e-05, 7.362500000000077e-05, 7.345799999999847e-05, 7.309700000000113e-05, 7.350000000000065e-05, 7.283299999999784e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.756" endtime="20201112 12:26:35.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.752" endtime="20201112 12:26:35.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.761" endtime="20201112 12:26:35.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.765" endtime="20201112 12:26:35.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.763" endtime="20201112 12:26:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.760" endtime="20201112 12:26:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.390" endtime="20201112 12:26:35.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.389" endtime="20201112 12:26:35.786"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.794" endtime="20201112 12:26:35.814"></status>
</kw>
<msg timestamp="20201112 12:26:35.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.793" endtime="20201112 12:26:35.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.815" endtime="20201112 12:26:35.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.818" endtime="20201112 12:26:35.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.790" endtime="20201112 12:26:35.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.788" endtime="20201112 12:26:35.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.828" endtime="20201112 12:26:36.113"></status>
</kw>
<msg timestamp="20201112 12:26:36.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.826" endtime="20201112 12:26:36.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.117" endtime="20201112 12:26:36.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.126" endtime="20201112 12:26:36.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.824" endtime="20201112 12:26:36.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.822" endtime="20201112 12:26:36.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.133" level="INFO">${RESULT} = [{'time': 0.019752611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.40829999999991e-05, 'source_diff': 7.40829999999991e-05}, {'time': 0.019840611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:36.129" endtime="20201112 12:26:36.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.146" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.134" endtime="20201112 12:26:36.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.151" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.149" endtime="20201112 12:26:36.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.153" level="INFO">VALUE: [7.40829999999991e-05, 7.35690000000025e-05, 7.433299999999934e-05, 7.40829999999991e-05, 7.391699999999973e-05, 7.465300000000091e-05, 7.387499999999755e-05, 7.383399999999832e-05, 7.447299999999851e-05, 7.436099999999848e-05, 7.434799999999839e-05, 7.465199999999797e-05, 7.390200000000069e-05, 7.451399999999775e-05, 7.388900000000059e-05, 7.452800000000079e-05, 7.420799999999922e-05, 7.40829999999991e-05, 7.459699999999916e-05, 7.440300000000066e-05, 7.383300000000231e-05, 7.405599999999943e-05, 7.426400000000097e-05, 7.429200000000011e-05, 7.44309999999998e-05, 7.462500000000177e-05, 7.37500000000009e-05, 7.370799999999872e-05, 7.388800000000112e-05, 7.416600000000051e-05, 7.397200000000201e-05, 7.370799999999872e-05, 7.36249999999973e-05, 7.441700000000023e-05, 7.415300000000041e-05, 7.44029999999972e-05, 7.394499999999887e-05, 7.387500000000102e-05, 7.4069999999999e-05, 7.397299999999801e-05, 7.434699999999891e-05, 7.448700000000155e-05, 7.370799999999872e-05, 7.398600000000158e-05, 7.424999999999793e-05, 7.377700000000056e-05, 7.37500000000009e-05, 7.45829999999996e-05, 7.463899999999787e-05, 7.388900000000059e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.152" endtime="20201112 12:26:36.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.147" endtime="20201112 12:26:36.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.157" endtime="20201112 12:26:36.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.160" endtime="20201112 12:26:36.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.159" endtime="20201112 12:26:36.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.155" endtime="20201112 12:26:36.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.786" endtime="20201112 12:26:36.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.786" endtime="20201112 12:26:36.181"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.190" endtime="20201112 12:26:36.209"></status>
</kw>
<msg timestamp="20201112 12:26:36.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.188" endtime="20201112 12:26:36.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.211" endtime="20201112 12:26:36.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.213" endtime="20201112 12:26:36.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.185" endtime="20201112 12:26:36.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.183" endtime="20201112 12:26:36.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.223" endtime="20201112 12:26:36.509"></status>
</kw>
<msg timestamp="20201112 12:26:36.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.222" endtime="20201112 12:26:36.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.514" endtime="20201112 12:26:36.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.522" endtime="20201112 12:26:36.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.219" endtime="20201112 12:26:36.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.217" endtime="20201112 12:26:36.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.529" level="INFO">${RESULT} = [{'time': 0.019801819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.552699999999885e-05, 'source_diff': 7.552699999999885e-05}, {'time': 0.019890903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.525" endtime="20201112 12:26:36.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.544" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.530" endtime="20201112 12:26:36.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.548" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.547" endtime="20201112 12:26:36.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.551" level="INFO">VALUE: [7.552699999999885e-05, 7.541700000000123e-05, 7.556900000000102e-05, 7.537500000000252e-05, 7.520800000000022e-05, 7.513899999999837e-05, 7.524999999999893e-05, 7.533300000000034e-05, 7.552799999999832e-05, 7.556899999999755e-05, 7.488900000000159e-05, 7.548599999999961e-05, 7.470899999999919e-05, 7.534799999999939e-05, 7.511099999999923e-05, 7.479100000000113e-05, 7.490199999999822e-05, 7.502799999999782e-05, 7.537500000000252e-05, 7.536099999999948e-05, 7.551400000000222e-05, 7.565299999999844e-05, 7.498599999999911e-05, 7.504200000000086e-05, 7.47769999999981e-05, 7.520800000000022e-05, 7.470899999999919e-05, 7.509799999999914e-05, 7.509799999999914e-05, 7.502700000000181e-05, 7.511200000000218e-05, 7.552699999999885e-05, 7.519400000000065e-05, 7.559700000000016e-05, 7.552799999999832e-05, 7.507e-05, 7.470799999999972e-05, 7.518100000000055e-05, 7.551400000000222e-05, 7.483299999999984e-05, 7.480600000000018e-05, 7.520899999999969e-05, 7.544500000000037e-05, 7.495900000000291e-05, 7.49310000000003e-05, 7.501300000000224e-05, 7.538800000000262e-05, 7.504099999999791e-05, 7.534699999999991e-05, 7.555499999999798e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.549" endtime="20201112 12:26:36.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.545" endtime="20201112 12:26:36.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.554" endtime="20201112 12:26:36.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.558" endtime="20201112 12:26:36.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.556" endtime="20201112 12:26:36.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.553" endtime="20201112 12:26:36.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.182" endtime="20201112 12:26:36.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.181" endtime="20201112 12:26:36.579"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.587" endtime="20201112 12:26:36.607"></status>
</kw>
<msg timestamp="20201112 12:26:36.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.586" endtime="20201112 12:26:36.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.608" endtime="20201112 12:26:36.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.611" endtime="20201112 12:26:36.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.583" endtime="20201112 12:26:36.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.581" endtime="20201112 12:26:36.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.621" endtime="20201112 12:26:36.906"></status>
</kw>
<msg timestamp="20201112 12:26:36.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.619" endtime="20201112 12:26:36.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.911" endtime="20201112 12:26:36.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.919" endtime="20201112 12:26:36.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.617" endtime="20201112 12:26:36.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.615" endtime="20201112 12:26:36.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.926" level="INFO">${RESULT} = [{'time': 0.019894181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.647300000000051e-05, 'source_diff': 7.647300000000051e-05}, {'time': 0.019983181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:36.922" endtime="20201112 12:26:36.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.939" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:36.927" endtime="20201112 12:26:36.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.944" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.943" endtime="20201112 12:26:36.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.946" level="INFO">VALUE: [7.647300000000051e-05, 7.604199999999839e-05, 7.594500000000087e-05, 7.633400000000082e-05, 7.606900000000152e-05, 7.622200000000079e-05, 7.576299999999953e-05, 7.624999999999993e-05, 7.659800000000064e-05, 7.627799999999907e-05, 7.595800000000097e-05, 7.652799999999932e-05, 7.654199999999889e-05, 7.604199999999839e-05, 7.644500000000137e-05, 7.643099999999833e-05, 7.602800000000229e-05, 7.663899999999987e-05, 7.590199999999922e-05, 7.608299999999762e-05, 7.640199999999972e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.597200000000054e-05, 7.60830000000011e-05, 7.645800000000147e-05, 7.586099999999998e-05, 7.654199999999889e-05, 7.64029999999992e-05, 7.619500000000112e-05, 7.615299999999894e-05, 7.663899999999987e-05, 7.629199999999864e-05, 7.559700000000016e-05, 7.645800000000147e-05, 7.63189999999983e-05, 7.66250000000003e-05, 7.629099999999917e-05, 7.663899999999987e-05, 7.604199999999839e-05, 7.602800000000229e-05, 7.651399999999975e-05, 7.606900000000152e-05, 7.613899999999937e-05, 7.588899999999912e-05, 7.627799999999907e-05, 7.584799999999989e-05, 7.665299999999944e-05, 7.579199999999814e-05, 7.618000000000208e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.945" endtime="20201112 12:26:36.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.940" endtime="20201112 12:26:36.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.954" endtime="20201112 12:26:36.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.958" endtime="20201112 12:26:36.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.956" endtime="20201112 12:26:36.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.952" endtime="20201112 12:26:36.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.580" endtime="20201112 12:26:36.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.579" endtime="20201112 12:26:36.979"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.987" endtime="20201112 12:26:37.007"></status>
</kw>
<msg timestamp="20201112 12:26:37.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.986" endtime="20201112 12:26:37.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.009" endtime="20201112 12:26:37.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.011" endtime="20201112 12:26:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.983" endtime="20201112 12:26:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.981" endtime="20201112 12:26:37.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.021" endtime="20201112 12:26:37.307"></status>
</kw>
<msg timestamp="20201112 12:26:37.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:37.020" endtime="20201112 12:26:37.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:37.311" endtime="20201112 12:26:37.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.319" endtime="20201112 12:26:37.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.017" endtime="20201112 12:26:37.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.015" endtime="20201112 12:26:37.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.326" level="INFO">${RESULT} = [{'time': 0.01978575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.715299999999994e-05, 'source_diff': 7.715299999999994e-05}, {'time': 0.019877792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:37.323" endtime="20201112 12:26:37.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.340" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:37.327" endtime="20201112 12:26:37.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.344" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.343" endtime="20201112 12:26:37.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.347" level="INFO">VALUE: [7.715299999999994e-05, 7.718099999999908e-05, 7.705599999999896e-05, 7.72640000000005e-05, 7.718100000000255e-05, 7.695899999999797e-05, 7.697199999999807e-05, 7.743099999999933e-05, 7.725000000000093e-05, 7.691599999999979e-05, 7.692999999999936e-05, 7.747200000000204e-05, 7.708299999999862e-05, 7.751400000000075e-05, 7.737500000000105e-05, 7.723599999999789e-05, 7.687500000000055e-05, 7.748600000000161e-05, 7.672300000000076e-05, 7.716699999999951e-05, 7.681999999999828e-05, 7.747300000000151e-05, 7.684700000000141e-05, 7.669399999999868e-05, 7.74030000000002e-05, 7.694399999999893e-05, 7.74030000000002e-05, 7.702800000000329e-05, 7.69029999999997e-05, 7.670900000000119e-05, 7.69440000000024e-05, 7.702799999999982e-05, 7.722200000000179e-05, 7.766700000000001e-05, 7.677799999999957e-05, 7.74449999999989e-05, 7.75839999999986e-05, 7.740199999999725e-05, 7.701300000000078e-05, 7.759700000000216e-05, 7.672199999999782e-05, 7.69029999999997e-05, 7.681900000000227e-05, 7.751399999999728e-05, 7.702799999999982e-05, 7.738799999999768e-05, 7.736100000000148e-05, 7.729199999999964e-05, 7.669499999999815e-05, 7.737500000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.345" endtime="20201112 12:26:37.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.341" endtime="20201112 12:26:37.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.350" endtime="20201112 12:26:37.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.354" endtime="20201112 12:26:37.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.352" endtime="20201112 12:26:37.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.349" endtime="20201112 12:26:37.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.980" endtime="20201112 12:26:37.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.979" endtime="20201112 12:26:37.374"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.383" endtime="20201112 12:26:37.402"></status>
</kw>
<msg timestamp="20201112 12:26:37.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.382" endtime="20201112 12:26:37.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.404" endtime="20201112 12:26:37.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.406" endtime="20201112 12:26:37.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.379" endtime="20201112 12:26:37.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.377" endtime="20201112 12:26:37.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.416" endtime="20201112 12:26:37.702"></status>
</kw>
<msg timestamp="20201112 12:26:37.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.415" endtime="20201112 12:26:37.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.706" endtime="20201112 12:26:37.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.714" endtime="20201112 12:26:37.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.412" endtime="20201112 12:26:37.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.411" endtime="20201112 12:26:37.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.721" level="INFO">${RESULT} = [{'time': 0.019867139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.79449999999994e-05, 'source_diff': 7.79449999999994e-05}, {'time': 0.019958194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:37.718" endtime="20201112 12:26:37.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:37.722" endtime="20201112 12:26:37.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.739" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.738" endtime="20201112 12:26:37.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.742" level="INFO">VALUE: [7.79449999999994e-05, 7.813799999999843e-05, 7.81389999999979e-05, 7.852800000000132e-05, 7.787499999999808e-05, 7.769500000000262e-05, 7.86389999999984e-05, 7.830500000000074e-05, 7.783299999999937e-05, 7.841599999999782e-05, 7.854099999999795e-05, 7.86250000000023e-05, 7.802800000000082e-05, 7.84030000000012e-05, 7.847199999999957e-05, 7.822199999999932e-05, 7.784699999999894e-05, 7.772199999999882e-05, 7.802800000000082e-05, 7.820899999999922e-05, 7.82779999999976e-05, 7.816700000000051e-05, 7.852800000000132e-05, 7.836099999999901e-05, 7.784699999999894e-05, 7.848599999999914e-05, 7.844400000000043e-05, 7.866700000000101e-05, 7.77779999999971e-05, 7.841700000000076e-05, 7.822200000000279e-05, 7.825000000000193e-05, 7.791700000000026e-05, 7.859800000000264e-05, 7.81250000000018e-05, 7.801399999999778e-05, 7.82640000000015e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.769399999999968e-05, 7.84030000000012e-05, 7.8458e-05, 7.81250000000018e-05, 7.829200000000064e-05, 7.823600000000236e-05, 7.790199999999775e-05, 7.80129999999983e-05, 7.784699999999894e-05, 7.823700000000183e-05, 7.806999999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.740" endtime="20201112 12:26:37.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.735" endtime="20201112 12:26:37.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.745" endtime="20201112 12:26:37.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.749" endtime="20201112 12:26:37.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.747" endtime="20201112 12:26:37.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.744" endtime="20201112 12:26:37.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.375" endtime="20201112 12:26:37.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.375" endtime="20201112 12:26:37.770"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.778" endtime="20201112 12:26:37.798"></status>
</kw>
<msg timestamp="20201112 12:26:37.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.777" endtime="20201112 12:26:37.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.799" endtime="20201112 12:26:37.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.802" endtime="20201112 12:26:37.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.774" endtime="20201112 12:26:37.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.772" endtime="20201112 12:26:37.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.812" endtime="20201112 12:26:38.097"></status>
</kw>
<msg timestamp="20201112 12:26:38.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.810" endtime="20201112 12:26:38.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.101" endtime="20201112 12:26:38.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.109" endtime="20201112 12:26:38.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.808" endtime="20201112 12:26:38.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.806" endtime="20201112 12:26:38.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.116" level="INFO">${RESULT} = [{'time': 0.019890403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.913900000000237e-05, 'source_diff': 7.913900000000237e-05}, {'time': 0.019985417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:38.113" endtime="20201112 12:26:38.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.131" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.117" endtime="20201112 12:26:38.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.135" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.134" endtime="20201112 12:26:38.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.138" level="INFO">VALUE: [7.913900000000237e-05, 7.948599999999667e-05, 7.87229999999993e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.913900000000237e-05, 7.961100000000026e-05, 7.894399999999746e-05, 7.883300000000037e-05, 7.936100000000001e-05, 7.890299999999822e-05, 7.874999999999896e-05, 7.96389999999994e-05, 7.888900000000212e-05, 7.895799999999703e-05, 7.901400000000225e-05, 7.909799999999967e-05, 7.915300000000194e-05, 7.890299999999822e-05, 7.951399999999928e-05, 7.872199999999982e-05, 7.906899999999759e-05, 7.952799999999885e-05, 7.92909999999987e-05, 7.948600000000014e-05, 7.915300000000194e-05, 7.881899999999734e-05, 7.899999999999921e-05, 7.893100000000083e-05, 7.961100000000026e-05, 7.89580000000005e-05, 7.8764000000002e-05, 7.95970000000007e-05, 7.90970000000002e-05, 7.881899999999734e-05, 7.92779999999986e-05, 7.924999999999946e-05, 7.916600000000204e-05, 7.96389999999994e-05, 7.95970000000007e-05, 7.948600000000014e-05, 7.965300000000244e-05, 7.877800000000157e-05, 7.883399999999985e-05, 7.938899999999915e-05, 7.909799999999967e-05, 7.887499999999908e-05, 7.92909999999987e-05, 7.937499999999958e-05, 7.855600000000046e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.136" endtime="20201112 12:26:38.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.132" endtime="20201112 12:26:38.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.141" endtime="20201112 12:26:38.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.145" endtime="20201112 12:26:38.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.143" endtime="20201112 12:26:38.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.140" endtime="20201112 12:26:38.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.771" endtime="20201112 12:26:38.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.770" endtime="20201112 12:26:38.165"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.174" endtime="20201112 12:26:38.194"></status>
</kw>
<msg timestamp="20201112 12:26:38.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.173" endtime="20201112 12:26:38.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.196" endtime="20201112 12:26:38.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.198" endtime="20201112 12:26:38.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.170" endtime="20201112 12:26:38.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.168" endtime="20201112 12:26:38.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.208" endtime="20201112 12:26:38.494"></status>
</kw>
<msg timestamp="20201112 12:26:38.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.207" endtime="20201112 12:26:38.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.498" endtime="20201112 12:26:38.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.506" endtime="20201112 12:26:38.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.204" endtime="20201112 12:26:38.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.202" endtime="20201112 12:26:38.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.513" level="INFO">${RESULT} = [{'time': 0.019701778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.966699999999854e-05, 'source_diff': 7.966699999999854e-05}, {'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:38.510" endtime="20201112 12:26:38.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.527" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.514" endtime="20201112 12:26:38.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.531" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.530" endtime="20201112 12:26:38.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.534" level="INFO">VALUE: [7.966699999999854e-05, 8.016700000000251e-05, 8.025000000000046e-05, 8.033400000000135e-05, 7.974999999999996e-05, 8.011100000000076e-05, 7.998600000000064e-05, 8.01389999999999e-05, 8.019399999999871e-05, 7.99719999999976e-05, 8.055599999999899e-05, 7.984699999999748e-05, 7.970800000000125e-05, 7.995900000000097e-05, 7.970800000000125e-05, 7.986199999999999e-05, 8.034800000000092e-05, 7.984700000000094e-05, 8.00970000000012e-05, 8.044400000000243e-05, 8.052700000000038e-05, 7.970800000000125e-05, 8.016699999999904e-05, 8.06390000000004e-05, 8.016699999999904e-05, 8.059699999999823e-05, 8.020800000000175e-05, 8.055599999999899e-05, 7.982000000000128e-05, 8.011100000000076e-05, 7.970900000000072e-05, 8.05840000000016e-05, 8.026400000000003e-05, 7.99169999999988e-05, 8.041599999999982e-05, 8.019399999999871e-05, 7.997200000000107e-05, 8.026400000000003e-05, 8.025000000000046e-05, 7.977800000000257e-05, 7.97779999999991e-05, 7.98329999999979e-05, 8.022200000000132e-05, 8.06390000000004e-05, 7.997200000000107e-05, 8.023600000000089e-05, 8.054199999999942e-05, 8.054099999999995e-05, 7.984700000000094e-05, 8.040299999999972e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.532" endtime="20201112 12:26:38.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.528" endtime="20201112 12:26:38.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.537" endtime="20201112 12:26:38.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.541" endtime="20201112 12:26:38.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.539" endtime="20201112 12:26:38.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.536" endtime="20201112 12:26:38.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.166" endtime="20201112 12:26:38.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.166" endtime="20201112 12:26:38.562"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.570" endtime="20201112 12:26:38.591"></status>
</kw>
<msg timestamp="20201112 12:26:38.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.569" endtime="20201112 12:26:38.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.592" endtime="20201112 12:26:38.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.595" endtime="20201112 12:26:38.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.566" endtime="20201112 12:26:38.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.564" endtime="20201112 12:26:38.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.605" endtime="20201112 12:26:38.891"></status>
</kw>
<msg timestamp="20201112 12:26:38.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.603" endtime="20201112 12:26:38.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.895" endtime="20201112 12:26:38.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.903" endtime="20201112 12:26:38.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.601" endtime="20201112 12:26:38.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.599" endtime="20201112 12:26:38.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.910" level="INFO">${RESULT} = [{'time': 0.019772639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.14450000000029e-05, 'source_diff': 8.14450000000029e-05}, {'time': 0.01986675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:38.907" endtime="20201112 12:26:38.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.923" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:38.911" endtime="20201112 12:26:38.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.928" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.927" endtime="20201112 12:26:38.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.931" level="INFO">VALUE: [8.14450000000029e-05, 8.144399999999996e-05, 8.105599999999949e-05, 8.086100000000151e-05, 8.091600000000032e-05, 8.165300000000097e-05, 8.15970000000027e-05, 8.07910000000002e-05, 8.08329999999989e-05, 8.163899999999794e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.109699999999873e-05, 8.075000000000096e-05, 8.14719999999991e-05, 8.080599999999924e-05, 8.066699999999954e-05, 8.137500000000158e-05, 8.158399999999913e-05, 8.16520000000015e-05, 8.108299999999916e-05, 8.131899999999984e-05, 8.120800000000275e-05, 8.137500000000158e-05, 8.079199999999967e-05, 8.101400000000078e-05, 8.148600000000214e-05, 8.162500000000183e-05, 8.109699999999873e-05, 8.166700000000054e-05, 8.148700000000161e-05, 8.11109999999983e-05, 8.058300000000213e-05, 8.090200000000075e-05, 8.12910000000007e-05, 8.094399999999946e-05, 8.083300000000238e-05, 8.109699999999873e-05, 8.156900000000009e-05, 8.090300000000022e-05, 8.150000000000171e-05, 8.145799999999953e-05, 8.120799999999928e-05, 8.16390000000014e-05, 8.143099999999986e-05, 8.102800000000035e-05, 8.15840000000026e-05, 8.091600000000032e-05, 8.162499999999837e-05, 8.091600000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.929" endtime="20201112 12:26:38.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.924" endtime="20201112 12:26:38.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.934" endtime="20201112 12:26:38.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.938" endtime="20201112 12:26:38.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.936" endtime="20201112 12:26:38.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.933" endtime="20201112 12:26:38.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.563" endtime="20201112 12:26:38.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.562" endtime="20201112 12:26:38.958"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.967" endtime="20201112 12:26:38.987"></status>
</kw>
<msg timestamp="20201112 12:26:38.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.965" endtime="20201112 12:26:38.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.989" endtime="20201112 12:26:38.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.991" endtime="20201112 12:26:38.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.963" endtime="20201112 12:26:38.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.961" endtime="20201112 12:26:38.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.001" endtime="20201112 12:26:39.286"></status>
</kw>
<msg timestamp="20201112 12:26:39.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.000" endtime="20201112 12:26:39.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.290" endtime="20201112 12:26:39.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.299" endtime="20201112 12:26:39.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.997" endtime="20201112 12:26:39.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.995" endtime="20201112 12:26:39.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.306" level="INFO">${RESULT} = [{'time': 0.019691458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.265199999999903e-05, 'source_diff': 8.265199999999903e-05}, {'time': 0.019787458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.302" endtime="20201112 12:26:39.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.319" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:39.307" endtime="20201112 12:26:39.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.324" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.323" endtime="20201112 12:26:39.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.326" level="INFO">VALUE: [8.265199999999903e-05, 8.245800000000053e-05, 8.236100000000302e-05, 8.231900000000084e-05, 8.186099999999905e-05, 8.258299999999719e-05, 8.219400000000071e-05, 8.199999999999874e-05, 8.17780000000011e-05, 8.266700000000154e-05, 8.213899999999844e-05, 8.195800000000003e-05, 8.231899999999737e-05, 8.190200000000175e-05, 8.244400000000096e-05, 8.26109999999998e-05, 8.177799999999763e-05, 8.202800000000135e-05, 8.208300000000016e-05, 8.255600000000099e-05, 8.251399999999881e-05, 8.2152999999998e-05, 8.204200000000092e-05, 8.220899999999975e-05, 8.255499999999805e-05, 8.227699999999866e-05, 8.205499999999755e-05, 8.215300000000147e-05, 8.213899999999844e-05, 8.226400000000203e-05, 8.177799999999763e-05, 8.209699999999973e-05, 8.22919999999977e-05, 8.208300000000016e-05, 8.234699999999998e-05, 8.194499999999993e-05, 8.179200000000067e-05, 8.255599999999752e-05, 8.270800000000078e-05, 8.226399999999856e-05, 8.19719999999996e-05, 8.241599999999835e-05, 8.218000000000114e-05, 8.208300000000016e-05, 8.244400000000096e-05, 8.176400000000153e-05, 8.199999999999874e-05, 8.238899999999869e-05, 8.245800000000053e-05, 8.19719999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.325" endtime="20201112 12:26:39.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.320" endtime="20201112 12:26:39.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.330" endtime="20201112 12:26:39.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.334" endtime="20201112 12:26:39.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.332" endtime="20201112 12:26:39.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.328" endtime="20201112 12:26:39.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.959" endtime="20201112 12:26:39.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.959" endtime="20201112 12:26:39.354"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.363" endtime="20201112 12:26:39.384"></status>
</kw>
<msg timestamp="20201112 12:26:39.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.362" endtime="20201112 12:26:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.385" endtime="20201112 12:26:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.388" endtime="20201112 12:26:39.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.359" endtime="20201112 12:26:39.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.357" endtime="20201112 12:26:39.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.398" endtime="20201112 12:26:39.683"></status>
</kw>
<msg timestamp="20201112 12:26:39.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.396" endtime="20201112 12:26:39.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.687" endtime="20201112 12:26:39.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.696" endtime="20201112 12:26:39.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.394" endtime="20201112 12:26:39.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.392" endtime="20201112 12:26:39.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.703" level="INFO">${RESULT} = [{'time': 0.019863222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.281900000000134e-05, 'source_diff': 8.281900000000134e-05}, {'time': 0.019960194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.699" endtime="20201112 12:26:39.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.717" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:39.703" endtime="20201112 12:26:39.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.722" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.721" endtime="20201112 12:26:39.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.724" level="INFO">VALUE: [8.281900000000134e-05, 8.269400000000121e-05, 8.352799999999938e-05, 8.27780000000021e-05, 8.319500000000118e-05, 8.29720000000006e-05, 8.326399999999956e-05, 8.34170000000023e-05, 8.359699999999776e-05, 8.327799999999913e-05, 8.301399999999931e-05, 8.276399999999906e-05, 8.306999999999759e-05, 8.322300000000032e-05, 8.336099999999708e-05, 8.331900000000184e-05, 8.336099999999708e-05, 8.316699999999858e-05, 8.350000000000024e-05, 8.36529999999995e-05, 8.283299999999744e-05, 8.354199999999895e-05, 8.281999999999734e-05, 8.301399999999931e-05, 8.308400000000063e-05, 8.358299999999819e-05, 8.363899999999994e-05, 8.348600000000067e-05, 8.362500000000037e-05, 8.319400000000171e-05, 8.333299999999794e-05, 8.29720000000006e-05, 8.334700000000098e-05, 8.344399999999849e-05, 8.319400000000171e-05, 8.294399999999799e-05, 8.270800000000078e-05, 8.304200000000192e-05, 8.340300000000272e-05, 8.333299999999794e-05, 8.329200000000217e-05, 8.273599999999992e-05, 8.356899999999862e-05, 8.298600000000017e-05, 8.347199999999763e-05, 8.304099999999898e-05, 8.318100000000161e-05, 8.33330000000014e-05, 8.341699999999883e-05, 8.302799999999888e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.723" endtime="20201112 12:26:39.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.718" endtime="20201112 12:26:39.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.728" endtime="20201112 12:26:39.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.731" endtime="20201112 12:26:39.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.730" endtime="20201112 12:26:39.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.726" endtime="20201112 12:26:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.355" endtime="20201112 12:26:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.355" endtime="20201112 12:26:39.752"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.761" endtime="20201112 12:26:39.781"></status>
</kw>
<msg timestamp="20201112 12:26:39.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.759" endtime="20201112 12:26:39.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.783" endtime="20201112 12:26:39.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.785" endtime="20201112 12:26:39.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.756" endtime="20201112 12:26:39.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.754" endtime="20201112 12:26:39.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.795" endtime="20201112 12:26:40.081"></status>
</kw>
<msg timestamp="20201112 12:26:40.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.794" endtime="20201112 12:26:40.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.086" endtime="20201112 12:26:40.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.094" endtime="20201112 12:26:40.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.791" endtime="20201112 12:26:40.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.790" endtime="20201112 12:26:40.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.101" level="INFO">${RESULT} = [{'time': 0.019829778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.440300000000026e-05, 'source_diff': 8.440300000000026e-05}, {'time': 0.019926819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.097" endtime="20201112 12:26:40.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.114" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.102" endtime="20201112 12:26:40.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.119" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.118" endtime="20201112 12:26:40.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.121" level="INFO">VALUE: [8.440300000000026e-05, 8.417999999999967e-05, 8.405500000000302e-05, 8.409699999999826e-05, 8.465199999999756e-05, 8.390299999999976e-05, 8.370799999999831e-05, 8.459699999999876e-05, 8.36659999999996e-05, 8.451400000000081e-05, 8.440300000000026e-05, 8.433399999999841e-05, 8.423599999999795e-05, 8.442999999999992e-05, 8.402799999999988e-05, 8.441699999999983e-05, 8.465199999999756e-05, 8.377799999999963e-05, 8.39859999999977e-05, 8.43330000000024e-05, 8.404099999999998e-05, 8.380500000000277e-05, 8.402799999999988e-05, 8.463899999999747e-05, 8.459700000000223e-05, 8.463900000000094e-05, 8.419500000000218e-05, 8.42919999999997e-05, 8.42370000000009e-05, 8.422299999999786e-05, 8.452800000000038e-05, 8.43049999999998e-05, 8.370900000000125e-05, 8.386100000000105e-05, 8.395799999999856e-05, 8.459699999999876e-05, 8.401400000000031e-05, 8.46530000000005e-05, 8.463900000000094e-05, 8.437500000000112e-05, 8.401400000000031e-05, 8.388900000000019e-05, 8.436200000000102e-05, 8.463900000000094e-05, 8.37370000000004e-05, 8.4459000000002e-05, 8.420799999999881e-05, 8.409699999999826e-05, 8.454100000000048e-05, 8.376400000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.120" endtime="20201112 12:26:40.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.115" endtime="20201112 12:26:40.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.125" endtime="20201112 12:26:40.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.128" endtime="20201112 12:26:40.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.127" endtime="20201112 12:26:40.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.123" endtime="20201112 12:26:40.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.753" endtime="20201112 12:26:40.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.752" endtime="20201112 12:26:40.149"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.158" endtime="20201112 12:26:40.178"></status>
</kw>
<msg timestamp="20201112 12:26:40.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.156" endtime="20201112 12:26:40.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.179" endtime="20201112 12:26:40.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.182" endtime="20201112 12:26:40.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.154" endtime="20201112 12:26:40.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.152" endtime="20201112 12:26:40.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.192" endtime="20201112 12:26:40.478"></status>
</kw>
<msg timestamp="20201112 12:26:40.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:40.190" endtime="20201112 12:26:40.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:40.482" endtime="20201112 12:26:40.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.491" endtime="20201112 12:26:40.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.188" endtime="20201112 12:26:40.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.186" endtime="20201112 12:26:40.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.497" level="INFO">${RESULT} = [{'time': 0.01990625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555600000000052e-05, 'source_diff': 8.555600000000052e-05}, {'time': 0.020006264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:40.494" endtime="20201112 12:26:40.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.511" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.498" endtime="20201112 12:26:40.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.515" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.514" endtime="20201112 12:26:40.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.518" level="INFO">VALUE: [8.555600000000052e-05, 8.561099999999933e-05, 8.558300000000019e-05, 8.54729999999991e-05, 8.488899999999772e-05, 8.508399999999916e-05, 8.527800000000113e-05, 8.490199999999781e-05, 8.513800000000196e-05, 8.540199999999831e-05, 8.538900000000169e-05, 8.538900000000169e-05, 8.558300000000019e-05, 8.552799999999791e-05, 8.555600000000052e-05, 8.512500000000187e-05, 8.551400000000181e-05, 8.472300000000182e-05, 8.545899999999954e-05, 8.552799999999791e-05, 8.554099999999801e-05, 8.495799999999956e-05, 8.522199999999938e-05, 8.523600000000242e-05, 8.547199999999963e-05, 8.472199999999888e-05, 8.481899999999987e-05, 8.49309999999999e-05, 8.497199999999913e-05, 8.554199999999748e-05, 8.54859999999992e-05, 8.515299999999754e-05, 8.495899999999904e-05, 8.522299999999886e-05, 8.493000000000042e-05, 8.526300000000209e-05, 8.456899999999962e-05, 8.498600000000217e-05, 8.542999999999745e-05, 8.499999999999827e-05, 8.536099999999908e-05, 8.552799999999791e-05, 8.566700000000108e-05, 8.470899999999879e-05, 8.477800000000063e-05, 8.490299999999729e-05, 8.484799999999848e-05, 8.486199999999805e-05, 8.511099999999883e-05, 8.497199999999913e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.516" endtime="20201112 12:26:40.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.512" endtime="20201112 12:26:40.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.521" endtime="20201112 12:26:40.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.525" endtime="20201112 12:26:40.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.523" endtime="20201112 12:26:40.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.520" endtime="20201112 12:26:40.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.150" endtime="20201112 12:26:40.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.150" endtime="20201112 12:26:40.546"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.554" endtime="20201112 12:26:40.574"></status>
</kw>
<msg timestamp="20201112 12:26:40.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.553" endtime="20201112 12:26:40.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.576" endtime="20201112 12:26:40.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.578" endtime="20201112 12:26:40.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.550" endtime="20201112 12:26:40.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.548" endtime="20201112 12:26:40.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.588" endtime="20201112 12:26:40.875"></status>
</kw>
<msg timestamp="20201112 12:26:40.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.587" endtime="20201112 12:26:40.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019701806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019787931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.879" endtime="20201112 12:26:40.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.887" endtime="20201112 12:26:40.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.584" endtime="20201112 12:26:40.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.583" endtime="20201112 12:26:40.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.894" level="INFO">${RESULT} = [{'time': 0.019787931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.612500000000287e-05, 'source_diff': 8.612500000000287e-05}, {'time': 0.019887944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.891" endtime="20201112 12:26:40.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.907" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:40.895" endtime="20201112 12:26:40.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.912" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.911" endtime="20201112 12:26:40.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.914" level="INFO">VALUE: [8.612500000000287e-05, 8.641600000000235e-05, 8.66249999999999e-05, 8.652799999999891e-05, 8.618000000000167e-05, 8.661100000000033e-05, 8.608299999999722e-05, 8.619400000000124e-05, 8.568099999999718e-05, 8.582000000000034e-05, 8.59310000000009e-05, 8.663899999999947e-05, 8.636199999999955e-05, 8.64860000000002e-05, 8.613799999999949e-05, 8.622200000000038e-05, 8.665199999999956e-05, 8.647200000000063e-05, 8.590299999999829e-05, 8.631900000000137e-05, 8.583300000000044e-05, 8.591700000000133e-05, 8.641699999999836e-05, 8.641699999999836e-05, 8.604200000000145e-05, 8.623599999999995e-05, 8.615199999999906e-05, 8.654100000000248e-05, 8.602800000000188e-05, 8.627700000000266e-05, 8.655500000000205e-05, 8.609700000000026e-05, 8.637499999999965e-05, 8.577800000000163e-05, 8.638900000000269e-05, 8.638899999999922e-05, 8.605600000000102e-05, 8.626399999999909e-05, 8.597200000000013e-05, 8.595900000000004e-05, 8.577799999999816e-05, 8.61660000000021e-05, 8.569400000000074e-05, 8.659700000000076e-05, 8.568000000000117e-05, 8.59859999999997e-05, 8.595800000000056e-05, 8.63470000000005e-05, 8.626400000000256e-05, 8.57920000000012e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.913" endtime="20201112 12:26:40.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.908" endtime="20201112 12:26:40.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.918" endtime="20201112 12:26:40.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.922" endtime="20201112 12:26:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.920" endtime="20201112 12:26:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.916" endtime="20201112 12:26:40.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.547" endtime="20201112 12:26:40.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.546" endtime="20201112 12:26:40.942"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.951" endtime="20201112 12:26:40.971"></status>
</kw>
<msg timestamp="20201112 12:26:40.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.950" endtime="20201112 12:26:40.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.972" endtime="20201112 12:26:40.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.975" endtime="20201112 12:26:40.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.947" endtime="20201112 12:26:40.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.945" endtime="20201112 12:26:40.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.985" endtime="20201112 12:26:41.272"></status>
</kw>
<msg timestamp="20201112 12:26:41.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.983" endtime="20201112 12:26:41.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.276" endtime="20201112 12:26:41.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.284" endtime="20201112 12:26:41.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.981" endtime="20201112 12:26:41.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.979" endtime="20201112 12:26:41.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.291" level="INFO">${RESULT} = [{'time': 0.019881764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74449999999985e-05, 'source_diff': 8.74449999999985e-05}, {'time': 0.019983778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:41.287" endtime="20201112 12:26:41.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:41.292" endtime="20201112 12:26:41.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.310" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.309" endtime="20201112 12:26:41.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.312" level="INFO">VALUE: [8.74449999999985e-05, 8.73470000000015e-05, 8.757000000000209e-05, 8.715299999999954e-05, 8.687500000000015e-05, 8.687500000000015e-05, 8.741700000000283e-05, 8.755499999999958e-05, 8.683300000000144e-05, 8.723600000000095e-05, 8.720800000000181e-05, 8.74860000000012e-05, 8.679199999999873e-05, 8.738900000000022e-05, 8.693099999999843e-05, 8.701399999999984e-05, 8.6847000000001e-05, 8.736100000000108e-05, 8.715299999999954e-05, 8.76669999999996e-05, 8.691599999999938e-05, 8.709699999999779e-05, 8.750000000000077e-05, 8.73189999999989e-05, 8.765300000000004e-05, 8.672200000000088e-05, 8.71669999999991e-05, 8.679199999999873e-05, 8.751400000000034e-05, 8.687500000000015e-05, 8.68059999999983e-05, 8.725000000000052e-05, 8.765300000000004e-05, 8.748599999999773e-05, 8.680499999999883e-05, 8.700000000000027e-05, 8.752799999999991e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.74860000000012e-05, 8.711099999999736e-05, 8.676399999999959e-05, 8.719499999999825e-05, 8.69730000000006e-05, 8.656999999999762e-05, 8.679099999999926e-05, 8.706900000000212e-05, 8.682000000000134e-05, 8.691599999999938e-05, 8.705500000000255e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.311" endtime="20201112 12:26:41.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.306" endtime="20201112 12:26:41.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.316" endtime="20201112 12:26:41.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.319" endtime="20201112 12:26:41.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.318" endtime="20201112 12:26:41.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.314" endtime="20201112 12:26:41.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.943" endtime="20201112 12:26:41.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.943" endtime="20201112 12:26:41.340"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.349" endtime="20201112 12:26:41.369"></status>
</kw>
<msg timestamp="20201112 12:26:41.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.347" endtime="20201112 12:26:41.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.370" endtime="20201112 12:26:41.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.373" endtime="20201112 12:26:41.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.345" endtime="20201112 12:26:41.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.343" endtime="20201112 12:26:41.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.383" endtime="20201112 12:26:41.668"></status>
</kw>
<msg timestamp="20201112 12:26:41.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.381" endtime="20201112 12:26:41.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.673" endtime="20201112 12:26:41.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.681" endtime="20201112 12:26:41.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.379" endtime="20201112 12:26:41.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.377" endtime="20201112 12:26:41.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.688" level="INFO">${RESULT} = [{'time': 0.019935583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.798599999999823e-05, 'source_diff': 8.798599999999823e-05}, {'time': 0.020037597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.684" endtime="20201112 12:26:41.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.701" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:41.689" endtime="20201112 12:26:41.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.705" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.704" endtime="20201112 12:26:41.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.708" level="INFO">VALUE: [8.798599999999823e-05, 8.823600000000195e-05, 8.779100000000026e-05, 8.815200000000106e-05, 8.773600000000145e-05, 8.844400000000002e-05, 8.773599999999798e-05, 8.815300000000054e-05, 8.826399999999762e-05, 8.866699999999714e-05, 8.804199999999998e-05, 8.786099999999811e-05, 8.863900000000147e-05, 8.837500000000165e-05, 8.869499999999975e-05, 8.779199999999973e-05, 8.816599999999716e-05, 8.786100000000158e-05, 8.776400000000059e-05, 8.779199999999973e-05, 8.845799999999959e-05, 8.827800000000066e-05, 8.838900000000122e-05, 8.833400000000241e-05, 8.770900000000179e-05, 8.795899999999857e-05, 8.8638999999998e-05, 8.829100000000076e-05, 8.755499999999958e-05, 8.820799999999934e-05, 8.815299999999707e-05, 8.822199999999891e-05, 8.79860000000017e-05, 8.848599999999873e-05, 8.806899999999965e-05, 8.782000000000234e-05, 8.808299999999922e-05, 8.845899999999907e-05, 8.822299999999839e-05, 8.840300000000079e-05, 8.808299999999922e-05, 8.788800000000124e-05, 8.837499999999818e-05, 8.795899999999857e-05, 8.855600000000005e-05, 8.824999999999805e-05, 8.836099999999861e-05, 8.773600000000145e-05, 8.852800000000091e-05, 8.840300000000079e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.707" endtime="20201112 12:26:41.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.702" endtime="20201112 12:26:41.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.712" endtime="20201112 12:26:41.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.715" endtime="20201112 12:26:41.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.714" endtime="20201112 12:26:41.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.710" endtime="20201112 12:26:41.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.341" endtime="20201112 12:26:41.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.341" endtime="20201112 12:26:41.736"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.744" endtime="20201112 12:26:41.765"></status>
</kw>
<msg timestamp="20201112 12:26:41.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.743" endtime="20201112 12:26:41.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.767" endtime="20201112 12:26:41.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.769" endtime="20201112 12:26:41.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.740" endtime="20201112 12:26:41.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.738" endtime="20201112 12:26:41.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.779" endtime="20201112 12:26:42.066"></status>
</kw>
<msg timestamp="20201112 12:26:42.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.778" endtime="20201112 12:26:42.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.070" endtime="20201112 12:26:42.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.080" endtime="20201112 12:26:42.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.775" endtime="20201112 12:26:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.773" endtime="20201112 12:26:42.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.087" level="INFO">${RESULT} = [{'time': 0.019730931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888900000000172e-05, 'source_diff': 8.888900000000172e-05}, {'time': 0.019834931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.084" endtime="20201112 12:26:42.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.101" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.088" endtime="20201112 12:26:42.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.105" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.104" endtime="20201112 12:26:42.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.108" level="INFO">VALUE: [8.888900000000172e-05, 8.879200000000073e-05, 8.94450000000005e-05, 8.942999999999798e-05, 8.911100000000283e-05, 8.904200000000098e-05, 8.951399999999887e-05, 8.94999999999993e-05, 8.956900000000115e-05, 8.920800000000034e-05, 8.894399999999705e-05, 8.927800000000166e-05, 8.966699999999814e-05, 8.91670000000011e-05, 8.890300000000129e-05, 8.956999999999715e-05, 8.88190000000004e-05, 8.9638999999999e-05, 8.926400000000209e-05, 8.954199999999801e-05, 8.941699999999789e-05, 8.890300000000129e-05, 8.888900000000172e-05, 8.895800000000009e-05, 8.940199999999884e-05, 8.900000000000227e-05, 8.856999999999962e-05, 8.904199999999751e-05, 8.936099999999961e-05, 8.952800000000191e-05, 8.904100000000151e-05, 8.936099999999961e-05, 8.940300000000179e-05, 8.965299999999857e-05, 8.891700000000086e-05, 8.91389999999985e-05, 8.884699999999954e-05, 8.922199999999991e-05, 8.902799999999794e-05, 8.880500000000083e-05, 8.902800000000141e-05, 8.916599999999816e-05, 8.93199999999969e-05, 8.898599999999923e-05, 8.915300000000154e-05, 8.951400000000234e-05, 8.958300000000072e-05, 8.88190000000004e-05, 8.916699999999764e-05, 8.887500000000215e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.106" endtime="20201112 12:26:42.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.102" endtime="20201112 12:26:42.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.111" endtime="20201112 12:26:42.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.115" endtime="20201112 12:26:42.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.113" endtime="20201112 12:26:42.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.110" endtime="20201112 12:26:42.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.737" endtime="20201112 12:26:42.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.736" endtime="20201112 12:26:42.136"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.144" endtime="20201112 12:26:42.165"></status>
</kw>
<msg timestamp="20201112 12:26:42.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.143" endtime="20201112 12:26:42.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.167" endtime="20201112 12:26:42.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.169" endtime="20201112 12:26:42.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.140" endtime="20201112 12:26:42.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.138" endtime="20201112 12:26:42.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.180" endtime="20201112 12:26:42.465"></status>
</kw>
<msg timestamp="20201112 12:26:42.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01973325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.178" endtime="20201112 12:26:42.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01973325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.469" endtime="20201112 12:26:42.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.478" endtime="20201112 12:26:42.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.175" endtime="20201112 12:26:42.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.174" endtime="20201112 12:26:42.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.484" level="INFO">${RESULT} = [{'time': 0.019823069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.981899999999793e-05, 'source_diff': 8.981899999999793e-05}, {'time': 0.019928069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.481" endtime="20201112 12:26:42.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.498" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.485" endtime="20201112 12:26:42.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.502" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.501" endtime="20201112 12:26:42.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.505" level="INFO">VALUE: [8.981899999999793e-05, 8.988799999999977e-05, 9.062500000000043e-05, 9.052799999999944e-05, 8.973599999999998e-05, 9.015299999999907e-05, 9.018099999999821e-05, 9.072199999999794e-05, 8.977800000000216e-05, 9.01670000000021e-05, 9.005600000000155e-05, 9.002799999999894e-05, 8.970900000000032e-05, 8.970799999999737e-05, 9.054099999999954e-05, 8.970800000000084e-05, 8.995799999999762e-05, 9.0639e-05, 8.979199999999826e-05, 8.972200000000041e-05, 9.058300000000172e-05, 9.03190000000019e-05, 9.008400000000069e-05, 9.032000000000137e-05, 9.004200000000198e-05, 8.990200000000281e-05, 8.969400000000127e-05, 9.059699999999782e-05, 9.019400000000177e-05, 9.040299999999932e-05, 8.977799999999869e-05, 9.037500000000018e-05, 8.976399999999912e-05, 9.01670000000021e-05, 9.004199999999851e-05, 8.988899999999925e-05, 9.044499999999803e-05, 8.994399999999805e-05, 8.98329999999975e-05, 8.988799999999977e-05, 8.983300000000097e-05, 9.016600000000263e-05, 8.976399999999912e-05, 8.977799999999869e-05, 9.023600000000048e-05, 8.984699999999707e-05, 9.01670000000021e-05, 8.970800000000084e-05, 9.008400000000069e-05, 9.015299999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.503" endtime="20201112 12:26:42.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.499" endtime="20201112 12:26:42.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.508" endtime="20201112 12:26:42.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.512" endtime="20201112 12:26:42.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.510" endtime="20201112 12:26:42.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.507" endtime="20201112 12:26:42.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.137" endtime="20201112 12:26:42.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.136" endtime="20201112 12:26:42.533"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.541" endtime="20201112 12:26:42.562"></status>
</kw>
<msg timestamp="20201112 12:26:42.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.540" endtime="20201112 12:26:42.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.563" endtime="20201112 12:26:42.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.566" endtime="20201112 12:26:42.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.537" endtime="20201112 12:26:42.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.535" endtime="20201112 12:26:42.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.576" endtime="20201112 12:26:42.861"></status>
</kw>
<msg timestamp="20201112 12:26:42.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.574" endtime="20201112 12:26:42.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.866" endtime="20201112 12:26:42.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.874" endtime="20201112 12:26:42.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.572" endtime="20201112 12:26:42.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.570" endtime="20201112 12:26:42.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.881" level="INFO">${RESULT} = [{'time': 0.019837333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.162499999999796e-05, 'source_diff': 9.162499999999796e-05}, {'time': 0.019942375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.877" endtime="20201112 12:26:42.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.895" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:42.882" endtime="20201112 12:26:42.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.900" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.899" endtime="20201112 12:26:42.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.902" level="INFO">VALUE: [9.162499999999796e-05, 9.099999999999733e-05, 9.088900000000025e-05, 9.166700000000014e-05, 9.084699999999807e-05, 9.095799999999862e-05, 9.168000000000023e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.084800000000101e-05, 9.079099999999979e-05, 9.102799999999994e-05, 9.08329999999985e-05, 9.127700000000072e-05, 9.073600000000098e-05, 9.088900000000025e-05, 9.120799999999887e-05, 9.080599999999883e-05, 9.162500000000143e-05, 9.129199999999976e-05, 9.152800000000044e-05, 9.097300000000114e-05, 9.098599999999776e-05, 9.095900000000157e-05, 9.111100000000136e-05, 9.129100000000029e-05, 9.075000000000055e-05, 9.144399999999955e-05, 9.098600000000123e-05, 9.084700000000154e-05, 9.125000000000105e-05, 9.158399999999872e-05, 9.134800000000151e-05, 9.155599999999958e-05, 9.076400000000012e-05, 9.16520000000011e-05, 9.095800000000209e-05, 9.158300000000272e-05, 9.155500000000011e-05, 9.144399999999955e-05, 9.077799999999969e-05, 9.140299999999685e-05, 9.098600000000123e-05, 9.081899999999893e-05, 9.102799999999994e-05, 9.122300000000139e-05, 9.097299999999767e-05, 9.163899999999753e-05, 9.158299999999925e-05, 9.126300000000115e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.901" endtime="20201112 12:26:42.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.896" endtime="20201112 12:26:42.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.906" endtime="20201112 12:26:42.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.909" endtime="20201112 12:26:42.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.908" endtime="20201112 12:26:42.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.904" endtime="20201112 12:26:42.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.534" endtime="20201112 12:26:42.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.533" endtime="20201112 12:26:42.930"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.939" endtime="20201112 12:26:42.960"></status>
</kw>
<msg timestamp="20201112 12:26:42.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.937" endtime="20201112 12:26:42.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.961" endtime="20201112 12:26:42.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.964" endtime="20201112 12:26:42.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.935" endtime="20201112 12:26:42.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.933" endtime="20201112 12:26:42.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.974" endtime="20201112 12:26:43.259"></status>
</kw>
<msg timestamp="20201112 12:26:43.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.972" endtime="20201112 12:26:43.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01971425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:43.263" endtime="20201112 12:26:43.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.271" endtime="20201112 12:26:43.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.970" endtime="20201112 12:26:43.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.968" endtime="20201112 12:26:43.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.278" level="INFO">${RESULT} = [{'time': 0.019806236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.198600000000223e-05, 'source_diff': 9.198600000000223e-05}, {'time': 0.019911236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.275" endtime="20201112 12:26:43.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.292" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:43.279" endtime="20201112 12:26:43.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.296" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.295" endtime="20201112 12:26:43.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.299" level="INFO">VALUE: [9.198600000000223e-05, 9.237499999999871e-05, 9.202799999999747e-05, 9.240300000000132e-05, 9.158400000000219e-05, 9.169499999999928e-05, 9.254200000000101e-05, 9.170899999999885e-05, 9.209699999999932e-05, 9.241600000000141e-05, 9.190300000000082e-05, 9.16939999999998e-05, 9.220799999999987e-05, 9.193099999999996e-05, 9.16939999999998e-05, 9.19719999999992e-05, 9.226400000000162e-05, 9.244400000000055e-05, 9.224999999999858e-05, 9.25139999999984e-05, 9.193000000000048e-05, 9.213799999999855e-05, 9.208299999999975e-05, 9.241700000000089e-05, 9.262500000000243e-05, 9.209699999999932e-05, 9.259700000000329e-05, 9.157000000000262e-05, 9.199999999999833e-05, 9.176399999999765e-05, 9.241699999999742e-05, 9.197300000000214e-05, 9.24589999999996e-05, 9.186099999999864e-05, 9.244500000000003e-05, 9.184700000000254e-05, 9.227799999999772e-05, 9.197200000000266e-05, 9.220799999999987e-05, 9.188900000000125e-05, 9.204200000000051e-05, 9.220799999999987e-05, 9.252800000000144e-05, 9.216700000000064e-05, 9.243100000000046e-05, 9.204199999999704e-05, 9.198599999999876e-05, 9.26520000000021e-05, 9.226399999999815e-05, 9.224999999999858e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.297" endtime="20201112 12:26:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.292" endtime="20201112 12:26:43.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.302" endtime="20201112 12:26:43.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.306" endtime="20201112 12:26:43.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.304" endtime="20201112 12:26:43.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.301" endtime="20201112 12:26:43.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.931" endtime="20201112 12:26:43.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.931" endtime="20201112 12:26:43.326"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.335" endtime="20201112 12:26:43.356"></status>
</kw>
<msg timestamp="20201112 12:26:43.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.334" endtime="20201112 12:26:43.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.358" endtime="20201112 12:26:43.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.361" endtime="20201112 12:26:43.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.331" endtime="20201112 12:26:43.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.329" endtime="20201112 12:26:43.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.371" endtime="20201112 12:26:43.656"></status>
</kw>
<msg timestamp="20201112 12:26:43.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019818972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:43.370" endtime="20201112 12:26:43.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019818972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:43.661" endtime="20201112 12:26:43.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.669" endtime="20201112 12:26:43.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.367" endtime="20201112 12:26:43.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.365" endtime="20201112 12:26:43.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.676" level="INFO">${RESULT} = [{'time': 0.019818972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.272199999999994e-05, 'source_diff': 9.272199999999994e-05}, {'time': 0.019923944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.672" endtime="20201112 12:26:43.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.689" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:43.676" endtime="20201112 12:26:43.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.694" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.693" endtime="20201112 12:26:43.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.696" level="INFO">VALUE: [9.272199999999994e-05, 9.295800000000062e-05, 9.31940000000013e-05, 9.334700000000057e-05, 9.352799999999897e-05, 9.31529999999986e-05, 9.329199999999829e-05, 9.291700000000139e-05, 9.30139999999989e-05, 9.29590000000001e-05, 9.290300000000182e-05, 9.272299999999942e-05, 9.306900000000118e-05, 9.308300000000075e-05, 9.311099999999989e-05, 9.270800000000037e-05, 9.305600000000108e-05, 9.359700000000082e-05, 9.359700000000082e-05, 9.320800000000087e-05, 9.363899999999953e-05, 9.291699999999792e-05, 9.301400000000237e-05, 9.368000000000223e-05, 9.358400000000072e-05, 9.292999999999801e-05, 9.305500000000161e-05, 9.313899999999903e-05, 9.272199999999994e-05, 9.311099999999989e-05, 9.30139999999989e-05, 9.33200000000009e-05, 9.313899999999903e-05, 9.286099999999964e-05, 9.272199999999994e-05, 9.348600000000026e-05, 9.299999999999933e-05, 9.344500000000103e-05, 9.336100000000014e-05, 9.329100000000229e-05, 9.354200000000201e-05, 9.334700000000057e-05, 9.311099999999989e-05, 9.333299999999753e-05, 9.340299999999885e-05, 9.368100000000171e-05, 9.309700000000032e-05, 9.302799999999847e-05, 9.324999999999958e-05, 9.315300000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.695" endtime="20201112 12:26:43.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.690" endtime="20201112 12:26:43.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.700" endtime="20201112 12:26:43.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.703" endtime="20201112 12:26:43.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.702" endtime="20201112 12:26:43.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.698" endtime="20201112 12:26:43.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.327" endtime="20201112 12:26:43.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.327" endtime="20201112 12:26:43.724"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.733" endtime="20201112 12:26:43.753"></status>
</kw>
<msg timestamp="20201112 12:26:43.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.731" endtime="20201112 12:26:43.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.754" endtime="20201112 12:26:43.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.757" endtime="20201112 12:26:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.729" endtime="20201112 12:26:43.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.726" endtime="20201112 12:26:43.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.767" endtime="20201112 12:26:44.053"></status>
</kw>
<msg timestamp="20201112 12:26:44.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.765" endtime="20201112 12:26:44.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.057" endtime="20201112 12:26:44.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.065" endtime="20201112 12:26:44.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.763" endtime="20201112 12:26:44.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.761" endtime="20201112 12:26:44.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.072" level="INFO">${RESULT} = [{'time': 0.019783236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.356899999999821e-05, 'source_diff': 9.356899999999821e-05}, {'time': 0.019890264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.069" endtime="20201112 12:26:44.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.073" endtime="20201112 12:26:44.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.090" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.089" endtime="20201112 12:26:44.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.092" level="INFO">VALUE: [9.356899999999821e-05, 9.384700000000107e-05, 9.44859999999978e-05, 9.407000000000165e-05, 9.466699999999967e-05, 9.411100000000089e-05, 9.458399999999825e-05, 9.400000000000033e-05, 9.4027e-05, 9.433299999999853e-05, 9.452799999999997e-05, 9.41659999999997e-05, 9.408300000000175e-05, 9.423599999999754e-05, 9.386100000000064e-05, 9.427799999999972e-05, 9.404199999999904e-05, 9.427799999999972e-05, 9.461099999999792e-05, 9.426400000000015e-05, 9.387500000000021e-05, 9.423600000000101e-05, 9.41659999999997e-05, 9.408299999999828e-05, 9.402799999999947e-05, 9.402799999999947e-05, 9.37079999999979e-05, 9.37079999999979e-05, 9.429199999999929e-05, 9.425000000000058e-05, 9.368099999999824e-05, 9.41529999999996e-05, 9.386100000000064e-05, 9.454100000000007e-05, 9.38469999999976e-05, 9.461100000000139e-05, 9.438900000000028e-05, 9.42079999999984e-05, 9.434800000000104e-05, 9.425000000000058e-05, 9.405600000000208e-05, 9.402799999999947e-05, 9.408300000000175e-05, 9.386100000000064e-05, 9.437500000000071e-05, 9.422300000000092e-05, 9.455499999999964e-05, 9.395800000000162e-05, 9.404099999999957e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.091" endtime="20201112 12:26:44.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.086" endtime="20201112 12:26:44.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.096" endtime="20201112 12:26:44.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.100" endtime="20201112 12:26:44.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.098" endtime="20201112 12:26:44.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.094" endtime="20201112 12:26:44.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.725" endtime="20201112 12:26:44.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.724" endtime="20201112 12:26:44.120"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.129" endtime="20201112 12:26:44.149"></status>
</kw>
<msg timestamp="20201112 12:26:44.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.127" endtime="20201112 12:26:44.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.151" endtime="20201112 12:26:44.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.153" endtime="20201112 12:26:44.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.125" endtime="20201112 12:26:44.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.123" endtime="20201112 12:26:44.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.163" endtime="20201112 12:26:44.449"></status>
</kw>
<msg timestamp="20201112 12:26:44.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.162" endtime="20201112 12:26:44.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.453" endtime="20201112 12:26:44.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.461" endtime="20201112 12:26:44.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.159" endtime="20201112 12:26:44.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.157" endtime="20201112 12:26:44.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.468" level="INFO">${RESULT} = [{'time': 0.019736778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.493099999999949e-05, 'source_diff': 9.493099999999949e-05}, {'time': 0.019845819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.465" endtime="20201112 12:26:44.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.483" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.469" endtime="20201112 12:26:44.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.487" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.486" endtime="20201112 12:26:44.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.490" level="INFO">VALUE: [9.493099999999949e-05, 9.550000000000183e-05, 9.486100000000164e-05, 9.518000000000026e-05, 9.566700000000067e-05, 9.504100000000057e-05, 9.479100000000032e-05, 9.479199999999979e-05, 9.50140000000009e-05, 9.55140000000014e-05, 9.536099999999867e-05, 9.484700000000207e-05, 9.490300000000035e-05, 9.534799999999857e-05, 9.490300000000035e-05, 9.481999999999893e-05, 9.491599999999698e-05, 9.477700000000075e-05, 9.487499999999774e-05, 9.508299999999928e-05, 9.526399999999768e-05, 9.505599999999961e-05, 9.506999999999918e-05, 9.502800000000047e-05, 9.472199999999847e-05, 9.558399999999925e-05, 9.50140000000009e-05, 9.550000000000183e-05, 9.483299999999903e-05, 9.541600000000094e-05, 9.500000000000133e-05, 9.566599999999773e-05, 9.509699999999885e-05, 9.552800000000097e-05, 9.49859999999983e-05, 9.502800000000047e-05, 9.52079999999994e-05, 9.538899999999781e-05, 9.495899999999863e-05, 9.504200000000004e-05, 9.481999999999893e-05, 9.472199999999847e-05, 9.50409999999971e-05, 9.47079999999989e-05, 9.540299999999738e-05, 9.552800000000097e-05, 9.486099999999817e-05, 9.527800000000072e-05, 9.527800000000072e-05, 9.5027999999997e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.488" endtime="20201112 12:26:44.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.484" endtime="20201112 12:26:44.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.493" endtime="20201112 12:26:44.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.497" endtime="20201112 12:26:44.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.495" endtime="20201112 12:26:44.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.492" endtime="20201112 12:26:44.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.121" endtime="20201112 12:26:44.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.121" endtime="20201112 12:26:44.518"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.527" endtime="20201112 12:26:44.548"></status>
</kw>
<msg timestamp="20201112 12:26:44.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.525" endtime="20201112 12:26:44.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.550" endtime="20201112 12:26:44.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.552" endtime="20201112 12:26:44.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.523" endtime="20201112 12:26:44.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.521" endtime="20201112 12:26:44.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.562" endtime="20201112 12:26:44.847"></status>
</kw>
<msg timestamp="20201112 12:26:44.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.561" endtime="20201112 12:26:44.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020636139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.852" endtime="20201112 12:26:44.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.860" endtime="20201112 12:26:44.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.558" endtime="20201112 12:26:44.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.556" endtime="20201112 12:26:44.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.867" level="INFO">${RESULT} = [{'time': 0.020636139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652800000000197e-05, 'source_diff': 9.652800000000197e-05}, {'time': 0.020745153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:44.863" endtime="20201112 12:26:44.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.880" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:44.868" endtime="20201112 12:26:44.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.885" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.884" endtime="20201112 12:26:44.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.887" level="INFO">VALUE: [9.652800000000197e-05, 9.570899999999938e-05, 9.618099999999727e-05, 9.641700000000142e-05, 9.613900000000203e-05, 9.627800000000172e-05, 9.662499999999949e-05, 9.576399999999818e-05, 9.597199999999972e-05, 9.604200000000104e-05, 9.652800000000197e-05, 9.605499999999767e-05, 9.612500000000246e-05, 9.665299999999863e-05, 9.643100000000099e-05, 9.663900000000253e-05, 9.602800000000147e-05, 9.586099999999917e-05, 9.613799999999909e-05, 9.604100000000157e-05, 9.641599999999848e-05, 9.574999999999861e-05, 9.587500000000221e-05, 9.590300000000135e-05, 9.637499999999924e-05, 9.659700000000035e-05, 9.59729999999992e-05, 9.595899999999963e-05, 9.659799999999982e-05, 9.58059999999969e-05, 9.6334e-05, 9.608300000000028e-05, 9.609699999999985e-05, 9.588900000000178e-05, 9.643000000000151e-05, 9.641700000000142e-05, 9.615299999999813e-05, 9.655599999999764e-05, 9.57079999999999e-05, 9.644500000000056e-05, 9.66669999999982e-05, 9.59859999999993e-05, 9.672200000000047e-05, 9.641599999999848e-05, 9.654100000000207e-05, 9.659700000000035e-05, 9.620899999999988e-05, 9.658300000000078e-05, 9.62080000000004e-05, 9.663899999999906e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.886" endtime="20201112 12:26:44.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.881" endtime="20201112 12:26:44.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.891" endtime="20201112 12:26:44.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.894" endtime="20201112 12:26:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.893" endtime="20201112 12:26:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.889" endtime="20201112 12:26:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.519" endtime="20201112 12:26:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.518" endtime="20201112 12:26:44.915"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.924" endtime="20201112 12:26:44.945"></status>
</kw>
<msg timestamp="20201112 12:26:44.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.922" endtime="20201112 12:26:44.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.946" endtime="20201112 12:26:44.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.949" endtime="20201112 12:26:44.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.920" endtime="20201112 12:26:44.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.918" endtime="20201112 12:26:44.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.959" endtime="20201112 12:26:45.245"></status>
</kw>
<msg timestamp="20201112 12:26:45.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.957" endtime="20201112 12:26:45.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.249" endtime="20201112 12:26:45.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.257" endtime="20201112 12:26:45.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.955" endtime="20201112 12:26:45.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.953" endtime="20201112 12:26:45.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.264" level="INFO">${RESULT} = [{'time': 0.019830944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.702699999999953e-05, 'source_diff': 9.702699999999953e-05}, {'time': 0.019941958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.261" endtime="20201112 12:26:45.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.278" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:45.265" endtime="20201112 12:26:45.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.282" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.281" endtime="20201112 12:26:45.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.285" level="INFO">VALUE: [9.702699999999953e-05, 9.695799999999768e-05, 9.734699999999763e-05, 9.726399999999968e-05, 9.686100000000017e-05, 9.744400000000208e-05, 9.733299999999806e-05, 9.736100000000067e-05, 9.76669999999992e-05, 9.713900000000303e-05, 9.740299999999938e-05, 9.68340000000005e-05, 9.691599999999898e-05, 9.715199999999966e-05, 9.737500000000024e-05, 9.7027999999999e-05, 9.736100000000067e-05, 9.704199999999857e-05, 9.71530000000026e-05, 9.686100000000017e-05, 9.719500000000131e-05, 9.693100000000149e-05, 9.737500000000024e-05, 9.765200000000016e-05, 9.677699999999928e-05, 9.740299999999938e-05, 9.681900000000146e-05, 9.709700000000085e-05, 9.656900000000121e-05, 9.69860000000003e-05, 9.68470000000006e-05, 9.7027999999999e-05, 9.748599999999732e-05, 9.723599999999707e-05, 9.736100000000067e-05, 9.676399999999918e-05, 9.733300000000153e-05, 9.722200000000097e-05, 9.740299999999938e-05, 9.716599999999923e-05, 9.751399999999993e-05, 9.758299999999831e-05, 9.672200000000047e-05, 9.738899999999981e-05, 9.76669999999992e-05, 9.75279999999995e-05, 9.745900000000113e-05, 9.704199999999857e-05, 9.68340000000005e-05, 9.73609999999972e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.283" endtime="20201112 12:26:45.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.279" endtime="20201112 12:26:45.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.288" endtime="20201112 12:26:45.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.292" endtime="20201112 12:26:45.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.290" endtime="20201112 12:26:45.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.287" endtime="20201112 12:26:45.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.916" endtime="20201112 12:26:45.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.915" endtime="20201112 12:26:45.313"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.321" endtime="20201112 12:26:45.343"></status>
</kw>
<msg timestamp="20201112 12:26:45.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.320" endtime="20201112 12:26:45.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.344" endtime="20201112 12:26:45.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.347" endtime="20201112 12:26:45.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.317" endtime="20201112 12:26:45.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.315" endtime="20201112 12:26:45.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.357" endtime="20201112 12:26:45.643"></status>
</kw>
<msg timestamp="20201112 12:26:45.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.355" endtime="20201112 12:26:45.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.647" endtime="20201112 12:26:45.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.655" endtime="20201112 12:26:45.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.353" endtime="20201112 12:26:45.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.351" endtime="20201112 12:26:45.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.662" level="INFO">${RESULT} = [{'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792999999999955e-05, 'source_diff': 9.792999999999955e-05}, {'time': 0.019917444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.659" endtime="20201112 12:26:45.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.675" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:45.663" endtime="20201112 12:26:45.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.680" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.679" endtime="20201112 12:26:45.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.683" level="INFO">VALUE: [9.792999999999955e-05, 9.79020000000004e-05, 9.85410000000006e-05, 9.797199999999825e-05, 9.776400000000018e-05, 9.793099999999902e-05, 9.827800000000025e-05, 9.791699999999945e-05, 9.788900000000031e-05, 9.801400000000043e-05, 9.78340000000015e-05, 9.808399999999828e-05, 9.783300000000203e-05, 9.786100000000117e-05, 9.77080000000019e-05, 9.840300000000038e-05, 9.83470000000021e-05, 9.790299999999988e-05, 9.797200000000172e-05, 9.863900000000106e-05, 9.779199999999932e-05, 9.844499999999909e-05, 9.769499999999834e-05, 9.819499999999884e-05, 9.816600000000023e-05, 9.859699999999888e-05, 9.779099999999985e-05, 9.777700000000028e-05, 9.777799999999975e-05, 9.773599999999757e-05, 9.818099999999927e-05, 9.782000000000193e-05, 9.786100000000117e-05, 9.86670000000002e-05, 9.770900000000138e-05, 9.861099999999845e-05, 9.865200000000116e-05, 9.863800000000159e-05, 9.773599999999757e-05, 9.797200000000172e-05, 9.862500000000149e-05, 9.827800000000025e-05, 9.833299999999906e-05, 9.797199999999825e-05, 9.798599999999782e-05, 9.82219999999985e-05, 9.790299999999988e-05, 9.827799999999678e-05, 9.800000000000086e-05, 9.822200000000197e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.681" endtime="20201112 12:26:45.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.676" endtime="20201112 12:26:45.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.686" endtime="20201112 12:26:45.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.690" endtime="20201112 12:26:45.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.688" endtime="20201112 12:26:45.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.685" endtime="20201112 12:26:45.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.313" endtime="20201112 12:26:45.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.313" endtime="20201112 12:26:45.710"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.719" endtime="20201112 12:26:45.740"></status>
</kw>
<msg timestamp="20201112 12:26:45.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.717" endtime="20201112 12:26:45.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.742" endtime="20201112 12:26:45.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.744" endtime="20201112 12:26:45.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.715" endtime="20201112 12:26:45.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.713" endtime="20201112 12:26:45.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.754" endtime="20201112 12:26:46.039"></status>
</kw>
<msg timestamp="20201112 12:26:46.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.753" endtime="20201112 12:26:46.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.044" endtime="20201112 12:26:46.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.052" endtime="20201112 12:26:46.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.750" endtime="20201112 12:26:46.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.749" endtime="20201112 12:26:46.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.059" level="INFO">${RESULT} = [{'time': 0.019810028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931999999999996e-05, 'source_diff': 9.931999999999996e-05}, {'time': 0.019922028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:46.055" endtime="20201112 12:26:46.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.073" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.060" endtime="20201112 12:26:46.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.078" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.077" endtime="20201112 12:26:46.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.080" level="INFO">VALUE: [9.931999999999996e-05, 9.863900000000106e-05, 9.940300000000138e-05, 9.947299999999923e-05, 9.88340000000025e-05, 9.966599999999826e-05, 9.927700000000178e-05, 9.890300000000088e-05, 9.898599999999882e-05, 9.915300000000113e-05, 9.91670000000007e-05, 9.895799999999969e-05, 9.872200000000247e-05, 9.877800000000075e-05, 9.959800000000282e-05, 9.926400000000168e-05, 9.863799999999812e-05, 9.89999999999984e-05, 9.866600000000073e-05, 9.865200000000116e-05, 9.934699999999963e-05, 9.966699999999773e-05, 9.897199999999926e-05, 9.954200000000107e-05, 9.873599999999857e-05, 9.933399999999953e-05, 9.927800000000125e-05, 9.901400000000143e-05, 9.880499999999695e-05, 9.927699999999831e-05, 9.895799999999969e-05, 9.884699999999913e-05, 9.919400000000037e-05, 9.947199999999976e-05, 9.945800000000019e-05, 9.877800000000075e-05, 9.9028000000001e-05, 9.958300000000031e-05, 9.922300000000245e-05, 9.913900000000156e-05, 9.909699999999938e-05, 9.927700000000178e-05, 9.9028000000001e-05, 9.901399999999796e-05, 9.898599999999882e-05, 9.929199999999735e-05, 9.965299999999816e-05, 9.934699999999963e-05, 9.915299999999766e-05, 9.888900000000131e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.079" endtime="20201112 12:26:46.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.074" endtime="20201112 12:26:46.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.084" endtime="20201112 12:26:46.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.087" endtime="20201112 12:26:46.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.086" endtime="20201112 12:26:46.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.082" endtime="20201112 12:26:46.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.711" endtime="20201112 12:26:46.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.711" endtime="20201112 12:26:46.108"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.117" endtime="20201112 12:26:46.138"></status>
</kw>
<msg timestamp="20201112 12:26:46.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.115" endtime="20201112 12:26:46.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.140" endtime="20201112 12:26:46.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.142" endtime="20201112 12:26:46.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.112" endtime="20201112 12:26:46.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.110" endtime="20201112 12:26:46.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.152" endtime="20201112 12:26:46.439"></status>
</kw>
<msg timestamp="20201112 12:26:46.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.151" endtime="20201112 12:26:46.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.443" endtime="20201112 12:26:46.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.451" endtime="20201112 12:26:46.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.148" endtime="20201112 12:26:46.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.146" endtime="20201112 12:26:46.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.458" level="INFO">${RESULT} = [{'time': 0.019747444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010011099999999995, 'source_diff': 0.00010011099999999995}, {'time': 0.019862444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.454" endtime="20201112 12:26:46.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.471" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.459" endtime="20201112 12:26:46.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.476" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.475" endtime="20201112 12:26:46.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.478" level="INFO">VALUE: [0.00010011099999999995, 0.00010038799999999987, 9.977699999999881e-05, 0.00010034700000000063, 0.00010047199999999729, 9.9722e-05, 0.0001005280000000025, 9.984700000000013e-05, 0.00010055600000000164, 9.98060000000009e-05, 0.00010027799999999878, 0.00010024999999999964, 0.00010002699999999906, 9.984700000000013e-05, 9.991700000000145e-05, 0.00010018100000000127, 9.969400000000087e-05, 0.00010058299999999784, 0.00010006899999999777, 0.00010032000000000096, 0.00010041700000000195, 9.9819999999997e-05, 0.00010048600000000033, 9.965199999999869e-05, 9.9722e-05, 0.00010006900000000124, 0.00010008300000000081, 0.00010024999999999964, 9.98609999999997e-05, 9.970800000000044e-05, 0.00010047200000000076, 0.00010008300000000081, 0.00010045800000000119, 9.965299999999816e-05, 9.968100000000077e-05, 0.00010015199999999919, 0.00010052699999999956, 9.977700000000228e-05, 0.00010013900000000256, 0.00010013899999999909, 0.00010044500000000109, 9.973599999999957e-05, 0.00010065199999999969, 0.0001001809999999978, 0.00010061100000000045, 0.00010011099999999995, 0.00010020900000000041, 0.00010023600000000008, 0.0001001939999999979, 0.00010045900000000066]</msg>
<status status="PASS" starttime="20201112 12:26:46.477" endtime="20201112 12:26:46.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.472" endtime="20201112 12:26:46.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.482" endtime="20201112 12:26:46.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.485" endtime="20201112 12:26:46.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.484" endtime="20201112 12:26:46.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.480" endtime="20201112 12:26:46.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.109" endtime="20201112 12:26:46.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.108" endtime="20201112 12:26:46.506"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.515" endtime="20201112 12:26:46.536"></status>
</kw>
<msg timestamp="20201112 12:26:46.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.513" endtime="20201112 12:26:46.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.537" endtime="20201112 12:26:46.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.540" endtime="20201112 12:26:46.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.511" endtime="20201112 12:26:46.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.509" endtime="20201112 12:26:46.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.550" endtime="20201112 12:26:46.835"></status>
</kw>
<msg timestamp="20201112 12:26:46.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.548" endtime="20201112 12:26:46.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.839" endtime="20201112 12:26:46.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.847" endtime="20201112 12:26:46.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.546" endtime="20201112 12:26:46.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.544" endtime="20201112 12:26:46.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.854" level="INFO">${RESULT} = [{'time': 0.019904069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010087500000000027, 'source_diff': 0.00010087500000000027}, {'time': 0.020017083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:46.850" endtime="20201112 12:26:46.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.867" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:46.855" endtime="20201112 12:26:46.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.871" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.870" endtime="20201112 12:26:46.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.874" level="INFO">VALUE: [0.00010087500000000027, 0.00010134700000000163, 0.000101416, 0.00010070800000000144, 0.00010073600000000058, 0.00010138900000000034, 0.00010145799999999872, 0.00010126400000000021, 0.00010151400000000046, 0.0001011670000000027, 0.00010077799999999928, 0.00010093100000000202, 0.00010158399999999831, 0.0001012220000000015, 0.00010162500000000102, 0.00010154100000000013, 0.00010169499999999887, 0.00010102799999999953, 0.00010144399999999915, 0.0001010419999999991, 0.00010122199999999804, 0.00010159700000000188, 0.00010070900000000091, 0.00010138900000000034, 0.00010129099999999988, 0.00010056899999999827, 0.0001012220000000015, 0.00010080599999999842, 0.00010120799999999847, 0.00010106900000000224, 0.00010163900000000059, 0.00010144399999999915, 0.00010148599999999786, 0.00010161100000000145, 0.00010147300000000123, 0.00010145899999999819, 0.00010088899999999984, 0.00010105600000000214, 0.0001006939999999984, 0.00010058300000000131, 0.00010090299999999941, 0.00010091700000000245, 0.00010093099999999855, 0.0001013610000000012, 0.00010134700000000163, 0.00010148600000000133, 0.0001011939999999989, 0.00010070900000000091, 0.00010140299999999991, 0.00010127700000000031]</msg>
<status status="PASS" starttime="20201112 12:26:46.872" endtime="20201112 12:26:46.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.868" endtime="20201112 12:26:46.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.877" endtime="20201112 12:26:46.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.881" endtime="20201112 12:26:46.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.879" endtime="20201112 12:26:46.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.876" endtime="20201112 12:26:46.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.507" endtime="20201112 12:26:46.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.506" endtime="20201112 12:26:46.902"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.910" endtime="20201112 12:26:46.931"></status>
</kw>
<msg timestamp="20201112 12:26:46.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.909" endtime="20201112 12:26:46.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.933" endtime="20201112 12:26:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.935" endtime="20201112 12:26:46.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.906" endtime="20201112 12:26:46.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.904" endtime="20201112 12:26:46.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.945" endtime="20201112 12:26:47.230"></status>
</kw>
<msg timestamp="20201112 12:26:47.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.944" endtime="20201112 12:26:47.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.234" endtime="20201112 12:26:47.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.242" endtime="20201112 12:26:47.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.941" endtime="20201112 12:26:47.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.939" endtime="20201112 12:26:47.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.249" level="INFO">${RESULT} = [{'time': 0.019850069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010183300000000256, 'source_diff': 0.00010183300000000256}, {'time': 0.019967083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.246" endtime="20201112 12:26:47.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.262" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:47.250" endtime="20201112 12:26:47.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.267" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.266" endtime="20201112 12:26:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.269" level="INFO">VALUE: [0.00010183300000000256, 0.00010227700000000131, 0.00010263900000000159, 0.00010209700000000238, 0.0001021939999999999, 0.00010220899999999894, 0.00010211100000000195, 0.00010184699999999866, 0.0001020420000000001, 0.00010197299999999826, 0.00010195899999999869, 0.00010177800000000028, 0.00010248600000000233, 0.00010180499999999995, 0.00010259700000000288, 0.0001021939999999999, 0.00010226400000000122, 0.00010183299999999909, 0.00010222199999999904, 0.00010244500000000309, 0.0001025420000000006, 0.00010177800000000028, 0.00010181899999999952, 0.00010223600000000208, 0.00010190200000000094, 0.00010227700000000131, 0.00010177700000000081, 0.00010198600000000183, 0.00010248599999999886, 0.00010212500000000152, 0.0001022220000000025, 0.00010198600000000183, 0.0001021809999999998, 0.00010226399999999775, 0.00010223600000000208, 0.00010220799999999947, 0.00010240200000000144, 0.00010238900000000134, 0.00010262500000000202, 0.00010248599999999886, 0.00010233299999999959, 0.00010263899999999812, 0.00010227800000000078, 0.0001023199999999995, 0.00010263900000000159, 0.00010223699999999808, 0.0001022220000000025, 0.00010188899999999737, 0.00010226300000000174, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201112 12:26:47.268" endtime="20201112 12:26:47.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.263" endtime="20201112 12:26:47.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.279" endtime="20201112 12:26:47.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.283" endtime="20201112 12:26:47.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.281" endtime="20201112 12:26:47.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.278" endtime="20201112 12:26:47.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.903" endtime="20201112 12:26:47.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.902" endtime="20201112 12:26:47.304"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.312" endtime="20201112 12:26:47.334"></status>
</kw>
<msg timestamp="20201112 12:26:47.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.311" endtime="20201112 12:26:47.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.335" endtime="20201112 12:26:47.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.338" endtime="20201112 12:26:47.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.308" endtime="20201112 12:26:47.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.306" endtime="20201112 12:26:47.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.348" endtime="20201112 12:26:47.633"></status>
</kw>
<msg timestamp="20201112 12:26:47.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019694681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.346" endtime="20201112 12:26:47.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019694681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.637" endtime="20201112 12:26:47.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.645" endtime="20201112 12:26:47.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.344" endtime="20201112 12:26:47.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.342" endtime="20201112 12:26:47.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.652" level="INFO">${RESULT} = [{'time': 0.019798306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010362500000000302, 'source_diff': 0.00010362500000000302}, {'time': 0.019916306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:47.648" endtime="20201112 12:26:47.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.666" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:47.653" endtime="20201112 12:26:47.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.671" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.670" endtime="20201112 12:26:47.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.673" level="INFO">VALUE: [0.00010362500000000302, 0.00010283400000000303, 0.00010272199999999954, 0.00010359699999999694, 0.00010309699999999991, 0.00010355600000000117, 0.00010327799999999832, 0.00010326400000000222, 0.00010368099999999783, 0.00010272199999999954, 0.00010309699999999991, 0.00010338900000000234, 0.00010295800000000022, 0.00010284699999999966, 0.00010345800000000072, 0.00010280500000000095, 0.00010362499999999955, 0.00010290299999999794, 0.00010358299999999737, 0.00010331900000000102, 0.00010279200000000085, 0.00010338899999999887, 0.00010294500000000012, 0.00010298599999999936, 0.00010338899999999887, 0.00010318000000000133, 0.00010340300000000191, 0.00010326399999999875, 0.000103513999999999, 0.00010305600000000067, 0.00010343100000000105, 0.00010333400000000006, 0.00010366700000000173, 0.00010320899999999994, 0.00010316699999999776, 0.00010297199999999979, 0.00010359700000000041, 0.00010326399999999875, 0.00010277800000000128, 0.00010284699999999966, 0.0001030420000000011, 0.00010365300000000216, 0.00010272199999999954, 0.00010283300000000009, 0.0001027359999999991, 0.00010304199999999764, 0.00010272299999999901, 0.00010283300000000009, 0.00010329100000000188, 0.00010331899999999755]</msg>
<status status="PASS" starttime="20201112 12:26:47.672" endtime="20201112 12:26:47.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.667" endtime="20201112 12:26:47.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.677" endtime="20201112 12:26:47.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.680" endtime="20201112 12:26:47.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.679" endtime="20201112 12:26:47.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.675" endtime="20201112 12:26:47.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.305" endtime="20201112 12:26:47.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.304" endtime="20201112 12:26:47.701"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.710" endtime="20201112 12:26:47.731"></status>
</kw>
<msg timestamp="20201112 12:26:47.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.708" endtime="20201112 12:26:47.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.732" endtime="20201112 12:26:47.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.735" endtime="20201112 12:26:47.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.705" endtime="20201112 12:26:47.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.703" endtime="20201112 12:26:47.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.745" endtime="20201112 12:26:48.030"></status>
</kw>
<msg timestamp="20201112 12:26:48.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.743" endtime="20201112 12:26:48.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019748694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.034" endtime="20201112 12:26:48.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.043" endtime="20201112 12:26:48.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.741" endtime="20201112 12:26:48.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.739" endtime="20201112 12:26:48.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.049" level="INFO">${RESULT} = [{'time': 0.019852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010422300000000051, 'source_diff': 0.00010422300000000051}, {'time': 0.019971931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.046" endtime="20201112 12:26:48.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.062" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.050" endtime="20201112 12:26:48.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.067" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.066" endtime="20201112 12:26:48.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.069" level="INFO">VALUE: [0.00010422300000000051, 0.00010420899999999747, 0.00010416599999999929, 0.00010384700000000066, 0.00010397200000000079, 0.00010369399999999793, 0.00010426399999999975, 0.00010436100000000073, 0.00010466700000000273, 0.00010459699999999794, 0.00010433400000000106, 0.00010427799999999932, 0.00010416699999999876, 0.00010395900000000069, 0.00010406999999999778, 0.00010416599999999929, 0.00010377699999999934, 0.00010430499999999898, 0.00010412500000000005, 0.00010426399999999975, 0.00010448600000000086, 0.00010379199999999839, 0.00010391699999999851, 0.00010404100000000263, 0.00010444499999999815, 0.00010390199999999947, 0.00010454099999999966, 0.00010379099999999891, 0.00010465299999999969, 0.00010402799999999907, 0.0001042360000000006, 0.00010448600000000086, 0.00010404100000000263, 0.00010386100000000023, 0.0001040420000000021, 0.00010445900000000119, 0.00010441599999999954, 0.00010420800000000147, 0.00010379100000000238, 0.00010440299999999944, 0.00010443000000000258, 0.00010425000000000018, 0.00010415299999999919, 0.00010418099999999833, 0.00010415299999999919, 0.00010402799999999907, 0.00010459799999999742, 0.00010388899999999937, 0.00010358299999999737, 0.00010380499999999848]</msg>
<status status="PASS" starttime="20201112 12:26:48.068" endtime="20201112 12:26:48.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.063" endtime="20201112 12:26:48.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.073" endtime="20201112 12:26:48.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.076" endtime="20201112 12:26:48.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.075" endtime="20201112 12:26:48.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.071" endtime="20201112 12:26:48.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.702" endtime="20201112 12:26:48.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.701" endtime="20201112 12:26:48.097"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.106" endtime="20201112 12:26:48.126"></status>
</kw>
<msg timestamp="20201112 12:26:48.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.104" endtime="20201112 12:26:48.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.127" endtime="20201112 12:26:48.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.130" endtime="20201112 12:26:48.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.102" endtime="20201112 12:26:48.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.100" endtime="20201112 12:26:48.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.140" endtime="20201112 12:26:48.425"></status>
</kw>
<msg timestamp="20201112 12:26:48.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.139" endtime="20201112 12:26:48.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019943861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.430" endtime="20201112 12:26:48.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.438" endtime="20201112 12:26:48.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.136" endtime="20201112 12:26:48.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.134" endtime="20201112 12:26:48.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.445" level="INFO">${RESULT} = [{'time': 0.020048611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010475000000000068, 'source_diff': 0.00010475000000000068}, {'time': 0.020169625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.442" endtime="20201112 12:26:48.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.458" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.446" endtime="20201112 12:26:48.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.463" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.462" endtime="20201112 12:26:48.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.465" level="INFO">VALUE: [0.00010475000000000068, 0.00010540300000000044, 0.00010520800000000247, 0.0001053339999999986, 0.00010563900000000112, 0.00010497299999999779, 0.00010458300000000184, 0.0001048339999999981, 0.00010561100000000198, 0.00010483299999999862, 0.00010530499999999998, 0.00010533299999999912, 0.00010527800000000032, 0.00010558300000000284, 0.00010522299999999804, 0.00010530599999999946, 0.00010522300000000151, 0.00010511100000000148, 0.00010488900000000037, 0.00010547200000000229, 0.00010475000000000068, 0.00010494399999999918, 0.00010509699999999844, 0.00010544500000000262, 0.00010480599999999896, 0.00010493099999999908, 0.00010509699999999844, 0.00010509799999999792, 0.00010527800000000032, 0.0001045689999999988, 0.00010498600000000136, 0.0001050689999999993, 0.00010541700000000001, 0.00010508300000000234, 0.00010493099999999908, 0.00010550000000000143, 0.00010509699999999844, 0.00010491699999999951, 0.00010531999999999903, 0.00010529199999999989, 0.00010492999999999961, 0.00010527699999999737, 0.00010498600000000136, 0.00010519399999999943, 0.000105514000000001, 0.00010527800000000032, 0.00010520800000000247, 0.00010540300000000044, 0.0001052360000000016, 0.00010509700000000191]</msg>
<status status="PASS" starttime="20201112 12:26:48.464" endtime="20201112 12:26:48.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.459" endtime="20201112 12:26:48.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.469" endtime="20201112 12:26:48.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.472" endtime="20201112 12:26:48.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.471" endtime="20201112 12:26:48.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.467" endtime="20201112 12:26:48.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.098" endtime="20201112 12:26:48.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.098" endtime="20201112 12:26:48.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.821" endtime="20201112 12:26:48.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.498" endtime="20201112 12:26:48.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.496" endtime="20201112 12:26:48.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.495" endtime="20201112 12:26:48.518"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:08.750" endtime="20201112 12:26:48.519" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.526" endtime="20201112 12:26:48.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.525" endtime="20201112 12:26:48.546"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.560" endtime="20201112 12:26:48.578"></status>
</kw>
<msg timestamp="20201112 12:26:48.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.559" endtime="20201112 12:26:48.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.580" endtime="20201112 12:26:48.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.584" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:48.583" endtime="20201112 12:26:48.585"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:48.556" endtime="20201112 12:26:48.585"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:48.554" endtime="20201112 12:26:48.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.552" endtime="20201112 12:26:48.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:48.590" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:48.589" endtime="20201112 12:26:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.587" endtime="20201112 12:26:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.551" endtime="20201112 12:26:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.550" endtime="20201112 12:26:48.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.592" endtime="20201112 12:26:48.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.548" endtime="20201112 12:26:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.547" endtime="20201112 12:26:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.523" endtime="20201112 12:26:48.594"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.605" endtime="20201112 12:26:48.621"></status>
</kw>
<msg timestamp="20201112 12:26:48.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.603" endtime="20201112 12:26:48.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.622" endtime="20201112 12:26:48.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.625" endtime="20201112 12:26:48.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.600" endtime="20201112 12:26:48.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.598" endtime="20201112 12:26:48.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.635" endtime="20201112 12:26:48.918"></status>
</kw>
<msg timestamp="20201112 12:26:48.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069222194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069245514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.632" endtime="20201112 12:26:48.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069222194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069245514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.923" endtime="20201112 12:26:48.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.931" endtime="20201112 12:26:48.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.630" endtime="20201112 12:26:48.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.628" endtime="20201112 12:26:48.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.938" level="INFO">${RESULT} = [{'time': 0.069245514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3319999999993346e-05, 'source_diff': 2.3319999999993346e-05}, {'time': 0.069255514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:48.934" endtime="20201112 12:26:48.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.951" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:48.939" endtime="20201112 12:26:48.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.956" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.955" endtime="20201112 12:26:48.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.958" level="INFO">VALUE: [2.3319999999993346e-05, 5.541999999997271e-06, 5.5279999999907625e-06, 6.0829999999900686e-06, 6.069999999996911e-06, 5.540999999997798e-06, 6.5410000000126756e-06, 5.55600000000378e-06, 5.55600000000378e-06, 5.540999999997798e-06, 6.055999999990402e-06, 5.52800000000464e-06, 6.0689999999974376e-06, 5.554999999990429e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.5689999999969375e-06, 5.639000000001726e-06, 5.554999999990429e-06, 6.042000000011649e-06, 5.55600000000378e-06, 6.054999999990929e-06, 6.040999999998298e-06, 6.0550000000048065e-06, 5.5410000000116755e-06, 5.570000000010289e-06, 6.0689999999974376e-06, 6.054999999990929e-06, 6.041999999997771e-06, 5.5689999999969375e-06, 5.5279999999907625e-06, 6.055999999990402e-06, 5.541999999997271e-06, 6.041999999997771e-06, 5.541999999997271e-06, 5.541999999997271e-06, 5.555999999989902e-06, 5.5139999999981315e-06, 6.041999999997771e-06, 5.5550000000043065e-06, 5.55600000000378e-06, 6.05600000000428e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.55600000000478e-06, 5.4589999999993255e-06, 6.05600000000428e-06, 6.042000000011649e-06, 6.0550000000048065e-06]</msg>
<status status="PASS" starttime="20201112 12:26:48.957" endtime="20201112 12:26:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.952" endtime="20201112 12:26:48.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.961" endtime="20201112 12:26:48.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.965" endtime="20201112 12:26:48.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.963" endtime="20201112 12:26:48.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.960" endtime="20201112 12:26:48.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.596" endtime="20201112 12:26:48.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.596" endtime="20201112 12:26:48.985"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.995" endtime="20201112 12:26:49.012"></status>
</kw>
<msg timestamp="20201112 12:26:49.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.993" endtime="20201112 12:26:49.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.014" endtime="20201112 12:26:49.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.016" endtime="20201112 12:26:49.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.990" endtime="20201112 12:26:49.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.988" endtime="20201112 12:26:49.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.025" endtime="20201112 12:26:49.313"></status>
</kw>
<msg timestamp="20201112 12:26:49.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.024" endtime="20201112 12:26:49.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.317" endtime="20201112 12:26:49.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.325" endtime="20201112 12:26:49.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.021" endtime="20201112 12:26:49.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.019" endtime="20201112 12:26:49.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.332" level="INFO">${RESULT} = [{'time': 0.020115153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.020125847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:49.328" endtime="20201112 12:26:49.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.345" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:49.333" endtime="20201112 12:26:49.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.350" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.349" endtime="20201112 12:26:49.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.352" level="INFO">VALUE: [7.0419999999987715e-06, 6.554999999998368e-06, 6.569000000001407e-06, 7.056000000001811e-06, 6.570000000000881e-06, 6.540999999998798e-06, 6.540999999998798e-06, 7.055999999998341e-06, 6.540999999998798e-06, 7.056000000001811e-06, 6.541999999998271e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.542000000001741e-06, 6.569000000001407e-06, 7.5419999999992715e-06, 7.055999999998341e-06, 7.054999999998868e-06, 7.055000000002337e-06, 7.0419999999987715e-06, 7.083000000001477e-06, 7.0279999999992016e-06, 7.055999999998341e-06, 6.541999999998271e-06, 7.054999999998868e-06, 7.028000000002671e-06, 6.556000000001311e-06, 6.570000000000881e-06, 7.055000000002337e-06, 7.499999999997092e-06, 6.499999999999562e-06, 6.555999999997841e-06, 7.0279999999992016e-06, 7.097000000001047e-06, 7.540999999999798e-06, 6.541000000002267e-06, 7.069000000001907e-06, 6.542000000001741e-06, 7.554999999999368e-06, 7.041000000002767e-06, 6.555999999997841e-06, 7.068999999998438e-06, 6.556000000001311e-06, 6.597000000000547e-06, 7.540999999999798e-06, 7.042000000002241e-06, 6.541000000002267e-06, 7.042000000002241e-06, 7.069000000001907e-06, 7.0419999999987715e-06]</msg>
<status status="PASS" starttime="20201112 12:26:49.351" endtime="20201112 12:26:49.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.346" endtime="20201112 12:26:49.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.355" endtime="20201112 12:26:49.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.359" endtime="20201112 12:26:49.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.358" endtime="20201112 12:26:49.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.354" endtime="20201112 12:26:49.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.987" endtime="20201112 12:26:49.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.986" endtime="20201112 12:26:49.380"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.389" endtime="20201112 12:26:49.406"></status>
</kw>
<msg timestamp="20201112 12:26:49.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.387" endtime="20201112 12:26:49.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.408" endtime="20201112 12:26:49.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.410" endtime="20201112 12:26:49.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.385" endtime="20201112 12:26:49.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.383" endtime="20201112 12:26:49.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.419" endtime="20201112 12:26:49.704"></status>
</kw>
<msg timestamp="20201112 12:26:49.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.417" endtime="20201112 12:26:49.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.708" endtime="20201112 12:26:49.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.716" endtime="20201112 12:26:49.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.415" endtime="20201112 12:26:49.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.413" endtime="20201112 12:26:49.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.723" level="INFO">${RESULT} = [{'time': 0.019839306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.019850306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:49.720" endtime="20201112 12:26:49.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.736" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:49.724" endtime="20201112 12:26:49.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.741" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.740" endtime="20201112 12:26:49.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.743" level="INFO">VALUE: [7.973000000001396e-06, 7.542000000002741e-06, 8.041999999999772e-06, 8.055999999999341e-06, 7.972999999997926e-06, 8.014000000000632e-06, 8.041999999999772e-06, 8.054999999999868e-06, 7.569000000002407e-06, 8.041999999999772e-06, 7.568999999998938e-06, 7.554999999999368e-06, 8.041999999999772e-06, 8.055999999999341e-06, 7.597000000001547e-06, 7.554999999999368e-06, 8.068999999999438e-06, 8.054999999999868e-06, 7.5419999999992715e-06, 8.054999999999868e-06, 8.041999999999772e-06, 7.514000000000132e-06, 7.542000000002741e-06, 8.014000000000632e-06, 8.056000000002811e-06, 8.013999999997162e-06, 8.041999999999772e-06, 7.540999999999798e-06, 8.054999999999868e-06, 8.097000000002047e-06, 7.5419999999992715e-06, 8.528000000000702e-06, 7.554999999999368e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.542000000000272e-06, 7.555999999998841e-06, 8.055999999999341e-06, 8.041999999999772e-06, 7.569999999998411e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.054999999999868e-06, 7.568999999998938e-06, 8.041999999999772e-06, 7.554999999999368e-06, 7.569000000002407e-06, 8.055000000003337e-06, 7.500000000000562e-06, 8.055999999999341e-06]</msg>
<status status="PASS" starttime="20201112 12:26:49.742" endtime="20201112 12:26:49.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.737" endtime="20201112 12:26:49.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.747" endtime="20201112 12:26:49.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.750" endtime="20201112 12:26:49.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.749" endtime="20201112 12:26:49.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.745" endtime="20201112 12:26:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.381" endtime="20201112 12:26:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.380" endtime="20201112 12:26:49.771"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.780" endtime="20201112 12:26:49.798"></status>
</kw>
<msg timestamp="20201112 12:26:49.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.778" endtime="20201112 12:26:49.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.799" endtime="20201112 12:26:49.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.802" endtime="20201112 12:26:49.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.776" endtime="20201112 12:26:49.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.774" endtime="20201112 12:26:49.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.811" endtime="20201112 12:26:50.096"></status>
</kw>
<msg timestamp="20201112 12:26:50.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.809" endtime="20201112 12:26:50.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019789861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.100" endtime="20201112 12:26:50.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.108" endtime="20201112 12:26:50.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.806" endtime="20201112 12:26:50.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.805" endtime="20201112 12:26:50.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.115" level="INFO">${RESULT} = [{'time': 0.019789861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.019801708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.112" endtime="20201112 12:26:50.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.128" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.116" endtime="20201112 12:26:50.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.133" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.132" endtime="20201112 12:26:50.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.135" level="INFO">VALUE: [9.583000000000508e-06, 9.055000000000868e-06, 8.541000000000798e-06, 9.056000000000342e-06, 8.542000000000272e-06, 8.568999999999938e-06, 9.083999999999481e-06, 9.056000000000342e-06, 9.041000000001298e-06, 8.555999999999842e-06, 9.056000000000342e-06, 8.542000000000272e-06, 9.014000000001632e-06, 8.596999999999078e-06, 8.542000000000272e-06, 9.055000000000868e-06, 9.069000000000438e-06, 9.055999999996872e-06, 9.056000000000342e-06, 9.096999999999578e-06, 9.083000000000008e-06, 9.040999999997829e-06, 8.542000000000272e-06, 9.111000000002617e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.471999999998953e-06, 9.610999999999648e-06, 9.028000000001202e-06, 9.013999999998162e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.570000000002881e-06, 9.056000000000342e-06, 8.555999999999842e-06, 8.514000000001132e-06, 9.541999999997802e-06, 9.611999999999121e-06, 8.555999999999842e-06, 9.055999999996872e-06, 8.555999999999842e-06, 8.555999999999842e-06, 9.054999999997398e-06, 8.542000000000272e-06, 9.068999999996968e-06, 8.541000000000798e-06, 9.055000000000868e-06, 9.054999999997398e-06, 8.542000000000272e-06, 8.611000000002117e-06]</msg>
<status status="PASS" starttime="20201112 12:26:50.134" endtime="20201112 12:26:50.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.129" endtime="20201112 12:26:50.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.139" endtime="20201112 12:26:50.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.142" endtime="20201112 12:26:50.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.141" endtime="20201112 12:26:50.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.137" endtime="20201112 12:26:50.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.772" endtime="20201112 12:26:50.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.772" endtime="20201112 12:26:50.163"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.172" endtime="20201112 12:26:50.189"></status>
</kw>
<msg timestamp="20201112 12:26:50.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.170" endtime="20201112 12:26:50.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.191" endtime="20201112 12:26:50.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.193" endtime="20201112 12:26:50.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.168" endtime="20201112 12:26:50.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.166" endtime="20201112 12:26:50.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.202" endtime="20201112 12:26:50.488"></status>
</kw>
<msg timestamp="20201112 12:26:50.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.200" endtime="20201112 12:26:50.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.492" endtime="20201112 12:26:50.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.500" endtime="20201112 12:26:50.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.198" endtime="20201112 12:26:50.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.196" endtime="20201112 12:26:50.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.507" level="INFO">${RESULT} = [{'time': 0.019810889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.019823833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.504" endtime="20201112 12:26:50.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.521" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.508" endtime="20201112 12:26:50.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.525" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.524" endtime="20201112 12:26:50.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.527" level="INFO">VALUE: [9.514000000002132e-06, 1.0054999999998399e-05, 1.0055000000001868e-05, 1.0042000000001772e-05, 1.0054999999998399e-05, 1.0028000000002202e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0513999999999663e-05, 1.0070000000000912e-05, 9.597000000000078e-06, 1.0070000000000912e-05, 1.0040999999998829e-05, 1.0069000000001438e-05, 1.0056000000001342e-05, 9.542000000001272e-06, 1.0040999999998829e-05, 9.555000000001368e-06, 9.513999999998662e-06, 1.0040999999998829e-05, 1.0084000000000481e-05, 1.0040999999998829e-05, 9.542000000001272e-06, 1.0056000000001342e-05, 1.0013999999999162e-05, 1.0041999999998302e-05, 9.541999999997802e-06, 9.556000000000842e-06, 9.542000000001272e-06, 9.541999999997802e-06, 1.0055999999997872e-05, 9.541999999997802e-06, 1.0042000000001772e-05, 9.542000000001272e-06, 1.0056000000001342e-05, 1.0055000000001868e-05, 1.0055000000001868e-05, 1.0042000000001772e-05, 9.540999999998329e-06, 9.499999999999093e-06, 1.0055000000001868e-05, 9.569000000000938e-06, 1.0554999999998899e-05, 9.554999999997899e-06, 9.555000000001368e-06, 1.0040999999998829e-05, 1.0111000000000148e-05, 1.0041000000002298e-05, 1.0041000000002298e-05, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201112 12:26:50.526" endtime="20201112 12:26:50.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.521" endtime="20201112 12:26:50.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.531" endtime="20201112 12:26:50.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.535" endtime="20201112 12:26:50.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.533" endtime="20201112 12:26:50.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.529" endtime="20201112 12:26:50.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.164" endtime="20201112 12:26:50.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.164" endtime="20201112 12:26:50.555"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.564" endtime="20201112 12:26:50.582"></status>
</kw>
<msg timestamp="20201112 12:26:50.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.563" endtime="20201112 12:26:50.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.583" endtime="20201112 12:26:50.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.586" endtime="20201112 12:26:50.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.560" endtime="20201112 12:26:50.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.558" endtime="20201112 12:26:50.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.595" endtime="20201112 12:26:50.882"></status>
</kw>
<msg timestamp="20201112 12:26:50.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.593" endtime="20201112 12:26:50.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.886" endtime="20201112 12:26:50.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.894" endtime="20201112 12:26:50.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.591" endtime="20201112 12:26:50.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.589" endtime="20201112 12:26:50.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.901" level="INFO">${RESULT} = [{'time': 0.019959667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.019973986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:50.898" endtime="20201112 12:26:50.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.959" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:50.902" endtime="20201112 12:26:50.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.964" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.963" endtime="20201112 12:26:50.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.966" level="INFO">VALUE: [1.1027999999999732e-05, 1.1054999999999399e-05, 1.1541999999999802e-05, 1.0554999999998899e-05, 1.1054999999999399e-05, 1.0555999999998372e-05, 1.1056000000002342e-05, 1.1027999999999732e-05, 1.1027000000000259e-05, 1.0541000000002798e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.1027999999999732e-05, 1.1610999999998178e-05, 1.0556000000001842e-05, 1.0556000000001842e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1554999999999899e-05, 1.0526999999999759e-05, 1.0540999999999329e-05, 1.0556000000001842e-05, 1.0542000000002272e-05, 1.1082999999998538e-05, 1.0526999999999759e-05, 1.1041999999999302e-05, 1.0568999999998469e-05, 1.0569000000001938e-05, 1.1568999999999469e-05, 1.1054999999999399e-05, 1.1041999999999302e-05, 1.0540999999999329e-05, 1.1055999999998872e-05, 1.0527999999999232e-05, 1.1041999999999302e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.0541000000002798e-05, 1.0554999999998899e-05, 1.0556000000001842e-05, 1.1056000000002342e-05, 1.0570000000001412e-05, 1.1554999999999899e-05, 1.0555000000002368e-05, 1.1042000000002772e-05, 1.0555999999998372e-05, 1.1054999999999399e-05, 1.0555999999998372e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.965" endtime="20201112 12:26:50.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.960" endtime="20201112 12:26:50.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.970" endtime="20201112 12:26:50.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.973" endtime="20201112 12:26:50.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.972" endtime="20201112 12:26:50.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.968" endtime="20201112 12:26:50.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.556" endtime="20201112 12:26:50.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.556" endtime="20201112 12:26:50.994"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.004" endtime="20201112 12:26:51.021"></status>
</kw>
<msg timestamp="20201112 12:26:51.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.002" endtime="20201112 12:26:51.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.022" endtime="20201112 12:26:51.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.025" endtime="20201112 12:26:51.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.999" endtime="20201112 12:26:51.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.997" endtime="20201112 12:26:51.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.034" endtime="20201112 12:26:51.319"></status>
</kw>
<msg timestamp="20201112 12:26:51.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.032" endtime="20201112 12:26:51.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.323" endtime="20201112 12:26:51.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.331" endtime="20201112 12:26:51.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.030" endtime="20201112 12:26:51.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.028" endtime="20201112 12:26:51.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.338" level="INFO">${RESULT} = [{'time': 0.020496139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.020512264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:51.335" endtime="20201112 12:26:51.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.352" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:51.339" endtime="20201112 12:26:51.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.356" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.355" endtime="20201112 12:26:51.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.359" level="INFO">VALUE: [1.2042000000000302e-05, 1.1541999999999802e-05, 1.1527000000000759e-05, 1.2082999999999539e-05, 1.1486000000001523e-05, 1.1986000000002023e-05, 1.2014000000001163e-05, 1.1555999999999372e-05, 1.2055000000000399e-05, 1.1541999999999802e-05, 1.2042000000000302e-05, 1.2055999999999872e-05, 1.2555000000000899e-05, 1.2041000000000829e-05, 1.1556000000002842e-05, 1.1554999999999899e-05, 1.1527999999996763e-05, 1.2056000000003342e-05, 1.1541999999999802e-05, 1.2068999999999969e-05, 1.2041999999996833e-05, 1.2555000000000899e-05, 1.1556000000002842e-05, 1.2014000000001163e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2055999999999872e-05, 1.2042000000000302e-05, 1.1986999999998027e-05, 1.2112000000001621e-05, 1.1541999999999802e-05, 1.1514000000000663e-05, 1.2055999999999872e-05, 1.2068999999999969e-05, 1.2068999999999969e-05, 1.1986000000002023e-05, 1.1570000000002412e-05, 1.2055000000000399e-05, 1.2055000000000399e-05, 1.2055999999999872e-05, 1.205499999999693e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2097000000002578e-05, 1.1500000000001093e-05, 1.2055000000000399e-05, 1.2000000000001593e-05, 1.1554999999999899e-05, 1.2055999999999872e-05, 1.2041000000000829e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.357" endtime="20201112 12:26:51.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.352" endtime="20201112 12:26:51.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.362" endtime="20201112 12:26:51.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.366" endtime="20201112 12:26:51.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.364" endtime="20201112 12:26:51.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.361" endtime="20201112 12:26:51.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.995" endtime="20201112 12:26:51.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.995" endtime="20201112 12:26:51.386"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.396" endtime="20201112 12:26:51.413"></status>
</kw>
<msg timestamp="20201112 12:26:51.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.394" endtime="20201112 12:26:51.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.415" endtime="20201112 12:26:51.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.418" endtime="20201112 12:26:51.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.391" endtime="20201112 12:26:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.389" endtime="20201112 12:26:51.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.427" endtime="20201112 12:26:51.711"></status>
</kw>
<msg timestamp="20201112 12:26:51.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.425" endtime="20201112 12:26:51.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.716" endtime="20201112 12:26:51.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.724" endtime="20201112 12:26:51.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.423" endtime="20201112 12:26:51.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.421" endtime="20201112 12:26:51.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.731" level="INFO">${RESULT} = [{'time': 0.020619361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3069000000000969e-05, 'source_diff': 1.3069000000000969e-05}, {'time': 0.020637347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:51.727" endtime="20201112 12:26:51.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.744" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:51.731" endtime="20201112 12:26:51.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.749" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.747" endtime="20201112 12:26:51.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.751" level="INFO">VALUE: [1.3069000000000969e-05, 1.3041000000001829e-05, 1.3055999999997403e-05, 1.3055000000001399e-05, 1.2528000000001233e-05, 1.3069000000000969e-05, 1.2556000000000372e-05, 1.3110999999999678e-05, 1.3056000000000872e-05, 1.3069999999996973e-05, 1.3042000000001303e-05, 1.2541999999997333e-05, 1.3069000000000969e-05, 1.3056000000000872e-05, 1.3056000000000872e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.3042000000001303e-05, 1.2569999999999942e-05, 1.2569000000000469e-05, 1.3042000000001303e-05, 1.2541999999997333e-05, 1.2569999999999942e-05, 1.3055000000001399e-05, 1.2542000000000803e-05, 1.2569000000000469e-05, 1.305499999999793e-05, 1.304099999999836e-05, 1.3486000000000054e-05, 1.3570000000000942e-05, 1.3069999999996973e-05, 1.3556000000001373e-05, 1.2528000000001233e-05, 1.2555000000000899e-05, 1.2556000000000372e-05, 1.2541000000001329e-05, 1.2541000000001329e-05, 1.2569000000000469e-05, 1.2541000000001329e-05, 1.255499999999743e-05, 1.2583000000000039e-05, 1.2542000000000803e-05, 1.2999999999999123e-05, 1.3556000000001373e-05, 1.305499999999793e-05, 1.2542000000000803e-05, 1.3028000000001733e-05, 1.254099999999786e-05, 1.3055999999997403e-05, 1.2555999999996903e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.750" endtime="20201112 12:26:51.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.745" endtime="20201112 12:26:51.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.755" endtime="20201112 12:26:51.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.758" endtime="20201112 12:26:51.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.756" endtime="20201112 12:26:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.753" endtime="20201112 12:26:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.387" endtime="20201112 12:26:51.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.387" endtime="20201112 12:26:51.779"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.787" endtime="20201112 12:26:51.804"></status>
</kw>
<msg timestamp="20201112 12:26:51.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.786" endtime="20201112 12:26:51.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.806" endtime="20201112 12:26:51.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.808" endtime="20201112 12:26:51.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.783" endtime="20201112 12:26:51.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.781" endtime="20201112 12:26:51.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.817" endtime="20201112 12:26:52.103"></status>
</kw>
<msg timestamp="20201112 12:26:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.816" endtime="20201112 12:26:52.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.107" endtime="20201112 12:26:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.115" endtime="20201112 12:26:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.813" endtime="20201112 12:26:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.811" endtime="20201112 12:26:52.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.122" level="INFO">${RESULT} = [{'time': 0.020551667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4069999999997973e-05, 'source_diff': 1.4069999999997973e-05}, {'time': 0.020567653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:52.119" endtime="20201112 12:26:52.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.136" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.123" endtime="20201112 12:26:52.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.140" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.139" endtime="20201112 12:26:52.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.143" level="INFO">VALUE: [1.4069999999997973e-05, 1.3542000000001803e-05, 1.3541999999998333e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.4056000000001873e-05, 1.3570000000000942e-05, 1.355499999999843e-05, 1.4555999999998903e-05, 1.3528000000002233e-05, 1.4027999999999263e-05, 1.4042000000002303e-05, 1.40689999999985e-05, 1.3486000000000054e-05, 1.4556000000002373e-05, 1.3528000000002233e-05, 1.3541999999998333e-05, 1.3527999999998763e-05, 1.4070000000001442e-05, 1.4069999999997973e-05, 1.3598000000000082e-05, 1.4055999999998403e-05, 1.355499999999843e-05, 1.4055999999998403e-05, 1.3541999999998333e-05, 1.3499999999999623e-05, 1.405499999999893e-05, 1.354099999999886e-05, 1.4041000000002829e-05, 1.4583000000002039e-05, 1.354099999999886e-05, 1.455499999999943e-05, 1.404099999999936e-05, 1.3486000000000054e-05, 1.355499999999843e-05, 1.355499999999843e-05, 1.4055999999998403e-05, 1.404099999999936e-05, 1.3527999999998763e-05, 1.4083000000001539e-05, 1.3555999999997903e-05, 1.3542000000001803e-05, 1.3597000000000609e-05, 1.405499999999893e-05, 1.354099999999886e-05, 1.4041999999998833e-05, 1.4625000000000749e-05, 1.3611000000000179e-05, 1.4041999999998833e-05, 1.3568999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.141" endtime="20201112 12:26:52.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.136" endtime="20201112 12:26:52.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.146" endtime="20201112 12:26:52.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.150" endtime="20201112 12:26:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.148" endtime="20201112 12:26:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.145" endtime="20201112 12:26:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.780" endtime="20201112 12:26:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.779" endtime="20201112 12:26:52.170"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.179" endtime="20201112 12:26:52.197"></status>
</kw>
<msg timestamp="20201112 12:26:52.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.177" endtime="20201112 12:26:52.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.198" endtime="20201112 12:26:52.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.201" endtime="20201112 12:26:52.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.175" endtime="20201112 12:26:52.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.173" endtime="20201112 12:26:52.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.210" endtime="20201112 12:26:52.496"></status>
</kw>
<msg timestamp="20201112 12:26:52.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.208" endtime="20201112 12:26:52.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.501" endtime="20201112 12:26:52.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.509" endtime="20201112 12:26:52.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.206" endtime="20201112 12:26:52.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.204" endtime="20201112 12:26:52.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.516" level="INFO">${RESULT} = [{'time': 0.019824514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5542000000000333e-05, 'source_diff': 1.5542000000000333e-05}, {'time': 0.019843333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:52.513" endtime="20201112 12:26:52.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.517" endtime="20201112 12:26:52.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.535" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.534" endtime="20201112 12:26:52.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.537" level="INFO">VALUE: [1.5542000000000333e-05, 1.452700000000029e-05, 1.4542000000002803e-05, 1.505499999999993e-05, 1.4569999999998473e-05, 1.4555000000002899e-05, 1.459699999999814e-05, 1.4541999999999333e-05, 1.4556000000002373e-05, 1.455499999999943e-05, 1.5555999999999903e-05, 1.4568999999999e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.5472999999998488e-05, 1.505499999999993e-05, 1.5542000000000333e-05, 1.5055999999999403e-05, 1.4513999999996724e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.5000000000001124e-05, 1.4555999999998903e-05, 1.5569e-05, 1.505499999999993e-05, 1.4541999999999333e-05, 1.555500000000043e-05, 1.454099999999986e-05, 1.5056000000002873e-05, 1.454099999999986e-05, 1.5125000000001249e-05, 1.4555999999998903e-05, 1.4568999999999e-05, 1.4555999999998903e-05, 1.505499999999993e-05, 1.4555999999998903e-05, 1.5041999999999833e-05, 1.4555999999998903e-05, 1.5569e-05, 1.455499999999943e-05, 1.5041999999999833e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.454099999999986e-05, 1.508299999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.536" endtime="20201112 12:26:52.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.531" endtime="20201112 12:26:52.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.545" endtime="20201112 12:26:52.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.549" endtime="20201112 12:26:52.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.547" endtime="20201112 12:26:52.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.543" endtime="20201112 12:26:52.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.171" endtime="20201112 12:26:52.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.171" endtime="20201112 12:26:52.569"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.578" endtime="20201112 12:26:52.594"></status>
</kw>
<msg timestamp="20201112 12:26:52.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.576" endtime="20201112 12:26:52.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.595" endtime="20201112 12:26:52.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.598" endtime="20201112 12:26:52.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.574" endtime="20201112 12:26:52.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.572" endtime="20201112 12:26:52.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.608" endtime="20201112 12:26:52.893"></status>
</kw>
<msg timestamp="20201112 12:26:52.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.606" endtime="20201112 12:26:52.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.897" endtime="20201112 12:26:52.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.905" endtime="20201112 12:26:52.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.604" endtime="20201112 12:26:52.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.602" endtime="20201112 12:26:52.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.912" level="INFO">${RESULT} = [{'time': 0.019932736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6027999999997794e-05, 'source_diff': 1.6027999999997794e-05}, {'time': 0.019950861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:52.909" endtime="20201112 12:26:52.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.925" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:52.913" endtime="20201112 12:26:52.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.930" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.929" endtime="20201112 12:26:52.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.932" level="INFO">VALUE: [1.6027999999997794e-05, 1.555500000000043e-05, 1.6042000000000833e-05, 1.5542000000000333e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.6056000000000403e-05, 1.555499999999696e-05, 1.6056000000000403e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.612500000000225e-05, 1.555500000000043e-05, 1.602699999999832e-05, 1.5971999999999514e-05, 1.5555999999999903e-05, 1.605500000000093e-05, 1.5528000000000763e-05, 1.5527999999997294e-05, 1.561100000000218e-05, 1.5542000000000333e-05, 1.6056000000000403e-05, 1.5499999999998154e-05, 1.5542000000000333e-05, 1.609699999999964e-05, 1.6514000000002194e-05, 1.6027999999997794e-05, 1.5555999999999903e-05, 1.6056000000000403e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.5485999999998584e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.608300000000007e-05, 1.6028000000001263e-05, 1.5542000000000333e-05, 1.6056000000000403e-05, 1.6056000000000403e-05, 1.6042000000000833e-05, 1.601299999999875e-05, 1.5542000000000333e-05, 1.605500000000093e-05, 1.5555999999999903e-05, 1.6556000000000903e-05, 1.6056000000000403e-05, 1.6556000000000903e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.931" endtime="20201112 12:26:52.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.926" endtime="20201112 12:26:52.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.936" endtime="20201112 12:26:52.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.940" endtime="20201112 12:26:52.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.938" endtime="20201112 12:26:52.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.934" endtime="20201112 12:26:52.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.570" endtime="20201112 12:26:52.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.570" endtime="20201112 12:26:52.960"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.969" endtime="20201112 12:26:52.986"></status>
</kw>
<msg timestamp="20201112 12:26:52.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.967" endtime="20201112 12:26:52.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.988" endtime="20201112 12:26:52.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.990" endtime="20201112 12:26:52.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.965" endtime="20201112 12:26:52.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.963" endtime="20201112 12:26:52.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.001" endtime="20201112 12:26:53.285"></status>
</kw>
<msg timestamp="20201112 12:26:53.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.999" endtime="20201112 12:26:53.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.290" endtime="20201112 12:26:53.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.298" endtime="20201112 12:26:53.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.996" endtime="20201112 12:26:53.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.995" endtime="20201112 12:26:53.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.305" level="INFO">${RESULT} = [{'time': 0.019982347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.705500000000193e-05, 'source_diff': 1.705500000000193e-05}, {'time': 0.020003236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.301" endtime="20201112 12:26:53.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:53.306" endtime="20201112 12:26:53.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.323" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.322" endtime="20201112 12:26:53.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.325" level="INFO">VALUE: [1.705500000000193e-05, 1.6514000000002194e-05, 1.6570000000000473e-05, 1.661099999999971e-05, 1.70690000000015e-05, 1.6569000000001e-05, 1.7541999999998864e-05, 1.7513999999999724e-05, 1.659700000000014e-05, 1.6556000000000903e-05, 1.7041999999998364e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.662499999999928e-05, 1.6556000000000903e-05, 1.6556000000000903e-05, 1.7070000000000973e-05, 1.7042000000001833e-05, 1.655499999999796e-05, 1.655500000000143e-05, 1.661099999999971e-05, 1.655499999999796e-05, 1.6528000000001764e-05, 1.655499999999796e-05, 1.708300000000107e-05, 1.655500000000143e-05, 1.7055999999997934e-05, 1.6569000000001e-05, 1.65829999999971e-05, 1.659699999999667e-05, 1.6569000000001e-05, 1.704100000000236e-05, 1.702699999999932e-05, 1.708300000000107e-05, 1.655499999999796e-05, 1.6556000000000903e-05, 1.6528000000001764e-05, 1.7000000000003124e-05, 1.654099999999839e-05, 1.654099999999839e-05, 1.6528000000001764e-05, 1.6542000000001333e-05, 1.7042000000001833e-05, 1.7041999999998364e-05, 1.7042000000001833e-05, 1.6569000000001e-05, 1.7013999999999224e-05, 1.6542000000001333e-05, 1.6541999999997864e-05, 1.7541999999998864e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.324" endtime="20201112 12:26:53.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.319" endtime="20201112 12:26:53.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.329" endtime="20201112 12:26:53.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.333" endtime="20201112 12:26:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.331" endtime="20201112 12:26:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.327" endtime="20201112 12:26:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.961" endtime="20201112 12:26:53.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.961" endtime="20201112 12:26:53.354"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.363" endtime="20201112 12:26:53.380"></status>
</kw>
<msg timestamp="20201112 12:26:53.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.361" endtime="20201112 12:26:53.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.382" endtime="20201112 12:26:53.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.385" endtime="20201112 12:26:53.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.358" endtime="20201112 12:26:53.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.356" endtime="20201112 12:26:53.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.395" endtime="20201112 12:26:53.680"></status>
</kw>
<msg timestamp="20201112 12:26:53.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.393" endtime="20201112 12:26:53.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.684" endtime="20201112 12:26:53.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.692" endtime="20201112 12:26:53.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.390" endtime="20201112 12:26:53.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.389" endtime="20201112 12:26:53.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.699" level="INFO">${RESULT} = [{'time': 0.020177847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.804099999999989e-05, 'source_diff': 1.804099999999989e-05}, {'time': 0.020201917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.696" endtime="20201112 12:26:53.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.713" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:53.700" endtime="20201112 12:26:53.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.717" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.716" endtime="20201112 12:26:53.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.720" level="INFO">VALUE: [1.804099999999989e-05, 1.8055999999998934e-05, 1.805500000000293e-05, 1.805499999999946e-05, 1.8056000000002403e-05, 1.805499999999946e-05, 1.7556000000001903e-05, 1.7555999999998434e-05, 1.754099999999939e-05, 1.7570000000001473e-05, 1.8069999999998504e-05, 1.7527999999999294e-05, 1.7555999999998434e-05, 1.804099999999989e-05, 1.8042000000002834e-05, 1.8555999999999434e-05, 1.7555999999998434e-05, 1.804099999999989e-05, 1.8555999999999434e-05, 1.8056000000002403e-05, 1.805499999999946e-05, 1.756899999999853e-05, 1.7555999999998434e-05, 1.802700000000032e-05, 1.755499999999896e-05, 1.805499999999946e-05, 1.755499999999896e-05, 1.8014000000000224e-05, 1.755499999999896e-05, 1.754099999999939e-05, 1.7513999999999724e-05, 1.7556000000001903e-05, 1.80690000000025e-05, 1.7513999999999724e-05, 1.8055999999998934e-05, 1.8041999999999364e-05, 1.7569000000002e-05, 1.7527999999999294e-05, 1.8055999999998934e-05, 1.7570000000001473e-05, 1.7569999999998004e-05, 1.8055999999998934e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.805499999999946e-05, 1.8056000000002403e-05, 1.806899999999903e-05, 1.7542000000002334e-05, 1.7500000000000154e-05, 1.804099999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.718" endtime="20201112 12:26:53.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.714" endtime="20201112 12:26:53.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.723" endtime="20201112 12:26:53.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.727" endtime="20201112 12:26:53.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.725" endtime="20201112 12:26:53.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.722" endtime="20201112 12:26:53.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.355" endtime="20201112 12:26:53.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.354" endtime="20201112 12:26:53.747"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.756" endtime="20201112 12:26:53.773"></status>
</kw>
<msg timestamp="20201112 12:26:53.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.755" endtime="20201112 12:26:53.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.775" endtime="20201112 12:26:53.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.777" endtime="20201112 12:26:53.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.752" endtime="20201112 12:26:53.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.750" endtime="20201112 12:26:53.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.787" endtime="20201112 12:26:54.073"></status>
</kw>
<msg timestamp="20201112 12:26:54.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.786" endtime="20201112 12:26:54.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.078" endtime="20201112 12:26:54.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.086" endtime="20201112 12:26:54.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.783" endtime="20201112 12:26:54.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.781" endtime="20201112 12:26:54.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.093" level="INFO">${RESULT} = [{'time': 0.019825514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8555999999999434e-05, 'source_diff': 1.8555999999999434e-05}, {'time': 0.019848736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:54.090" endtime="20201112 12:26:54.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.094" endtime="20201112 12:26:54.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.112" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.111" endtime="20201112 12:26:54.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.114" level="INFO">VALUE: [1.8555999999999434e-05, 1.9042000000000364e-05, 1.9041999999996895e-05, 1.8555999999999434e-05, 1.9041999999996895e-05, 1.855499999999996e-05, 1.8513999999997255e-05, 1.9042000000000364e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.8555999999999434e-05, 1.852699999999735e-05, 1.904099999999742e-05, 1.9042000000000364e-05, 1.956900000000053e-05, 1.956899999999706e-05, 1.952700000000182e-05, 1.8528000000000294e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.8541999999999864e-05, 1.8555999999999434e-05, 1.905500000000046e-05, 1.854100000000039e-05, 1.9055999999999934e-05, 1.8541999999999864e-05, 1.855500000000343e-05, 1.9042000000000364e-05, 1.8556000000002904e-05, 1.8556000000002904e-05, 1.9055999999999934e-05, 1.9542000000000864e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.905500000000046e-05, 1.8528000000000294e-05, 1.904100000000089e-05, 1.854100000000039e-05, 1.8541999999999864e-05, 1.906900000000003e-05, 1.862500000000128e-05, 1.9028000000000794e-05, 1.855499999999996e-05, 1.854100000000039e-05, 1.8584000000002043e-05, 1.8555999999999434e-05, 1.905500000000046e-05, 1.8500000000001154e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.113" endtime="20201112 12:26:54.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.108" endtime="20201112 12:26:54.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.118" endtime="20201112 12:26:54.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.122" endtime="20201112 12:26:54.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.120" endtime="20201112 12:26:54.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.116" endtime="20201112 12:26:54.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.748" endtime="20201112 12:26:54.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.748" endtime="20201112 12:26:54.142"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.151" endtime="20201112 12:26:54.169"></status>
</kw>
<msg timestamp="20201112 12:26:54.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.149" endtime="20201112 12:26:54.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.170" endtime="20201112 12:26:54.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.173" endtime="20201112 12:26:54.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.147" endtime="20201112 12:26:54.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.145" endtime="20201112 12:26:54.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.183" endtime="20201112 12:26:54.468"></status>
</kw>
<msg timestamp="20201112 12:26:54.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01977275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:54.181" endtime="20201112 12:26:54.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01977275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:54.472" endtime="20201112 12:26:54.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.481" endtime="20201112 12:26:54.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.178" endtime="20201112 12:26:54.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.177" endtime="20201112 12:26:54.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.487" level="INFO">${RESULT} = [{'time': 0.019792306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9556000000000434e-05, 'source_diff': 1.9556000000000434e-05}, {'time': 0.019814319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:54.484" endtime="20201112 12:26:54.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.501" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.488" endtime="20201112 12:26:54.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.505" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.504" endtime="20201112 12:26:54.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.508" level="INFO">VALUE: [1.9556000000000434e-05, 1.955500000000096e-05, 1.955500000000096e-05, 1.9556000000000434e-05, 2.005499999999799e-05, 2.0027999999998325e-05, 1.9556000000000434e-05, 2.0041999999997895e-05, 2.004100000000189e-05, 1.959699999999967e-05, 2.0042000000001364e-05, 2.0056000000000934e-05, 2.0056000000000934e-05, 1.954099999999792e-05, 2.0056000000000934e-05, 2.0527999999998825e-05, 1.9570000000000004e-05, 2.0042000000001364e-05, 1.9527999999997825e-05, 2.011099999999974e-05, 2.0055999999997465e-05, 2.0056000000000934e-05, 1.9542000000000864e-05, 2.0042000000001364e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 2.0041999999997895e-05, 1.9542000000000864e-05, 1.956900000000053e-05, 1.9514000000001724e-05, 2.0542000000001864e-05, 1.9583999999999574e-05, 1.956900000000053e-05, 2.0042000000001364e-05, 1.962499999999881e-05, 1.9556000000000434e-05, 1.9556000000000434e-05, 1.951299999999878e-05, 1.954100000000139e-05, 2.056899999999806e-05, 2.005500000000146e-05, 2.004100000000189e-05, 2.0056000000000934e-05, 1.954100000000139e-05, 2.005499999999799e-05, 2.005500000000146e-05, 2.0042000000001364e-05, 1.9541999999997395e-05, 2.005500000000146e-05, 1.954100000000139e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.506" endtime="20201112 12:26:54.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.502" endtime="20201112 12:26:54.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.511" endtime="20201112 12:26:54.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.515" endtime="20201112 12:26:54.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.513" endtime="20201112 12:26:54.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.510" endtime="20201112 12:26:54.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.143" endtime="20201112 12:26:54.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.143" endtime="20201112 12:26:54.536"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.544" endtime="20201112 12:26:54.563"></status>
</kw>
<msg timestamp="20201112 12:26:54.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.543" endtime="20201112 12:26:54.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.564" endtime="20201112 12:26:54.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.566" endtime="20201112 12:26:54.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.540" endtime="20201112 12:26:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.538" endtime="20201112 12:26:54.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.576" endtime="20201112 12:26:54.861"></status>
</kw>
<msg timestamp="20201112 12:26:54.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.575" endtime="20201112 12:26:54.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.865" endtime="20201112 12:26:54.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.874" endtime="20201112 12:26:54.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.572" endtime="20201112 12:26:54.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.571" endtime="20201112 12:26:54.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.880" level="INFO">${RESULT} = [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.102699999999985e-05, 'source_diff': 2.102699999999985e-05}, {'time': 0.020029278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.877" endtime="20201112 12:26:54.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.894" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:54.881" endtime="20201112 12:26:54.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.898" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.897" endtime="20201112 12:26:54.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.901" level="INFO">VALUE: [2.102699999999985e-05, 2.0556000000001434e-05, 2.1042000000002364e-05, 2.1041999999998895e-05, 2.0555999999997965e-05, 2.0513999999999255e-05, 2.054099999999892e-05, 2.0556000000001434e-05, 2.1112000000000214e-05, 2.1041999999998895e-05, 2.061100000000024e-05, 2.1098000000000644e-05, 2.056900000000153e-05, 2.0570000000001004e-05, 2.1055999999998465e-05, 2.0555999999997965e-05, 2.101300000000028e-05, 2.105499999999899e-05, 2.1555999999998965e-05, 2.0555999999997965e-05, 2.054099999999892e-05, 2.052699999999935e-05, 2.105499999999899e-05, 2.0556000000001434e-05, 2.0570000000001004e-05, 2.0541999999998395e-05, 2.0513999999999255e-05, 2.062499999999981e-05, 2.0527999999998825e-05, 2.0527999999998825e-05, 2.056899999999806e-05, 2.104100000000289e-05, 2.055499999999849e-05, 2.0555999999997965e-05, 2.1555999999998965e-05, 2.1027999999999325e-05, 2.1027999999999325e-05, 2.1541999999999395e-05, 2.106899999999856e-05, 2.1055999999998465e-05, 2.1084000000001074e-05, 2.1041999999998895e-05, 2.0570000000001004e-05, 2.1083999999997605e-05, 2.158299999999863e-05, 2.0556000000001434e-05, 2.062499999999981e-05, 2.0570000000001004e-05, 2.1512999999997312e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.899" endtime="20201112 12:26:54.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.895" endtime="20201112 12:26:54.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.904" endtime="20201112 12:26:54.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.908" endtime="20201112 12:26:54.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.906" endtime="20201112 12:26:54.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.903" endtime="20201112 12:26:54.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.537" endtime="20201112 12:26:54.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.536" endtime="20201112 12:26:54.929"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.937" endtime="20201112 12:26:54.955"></status>
</kw>
<msg timestamp="20201112 12:26:54.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.936" endtime="20201112 12:26:54.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.957" endtime="20201112 12:26:54.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.959" endtime="20201112 12:26:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.933" endtime="20201112 12:26:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.931" endtime="20201112 12:26:54.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.969" endtime="20201112 12:26:55.255"></status>
</kw>
<msg timestamp="20201112 12:26:55.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.968" endtime="20201112 12:26:55.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.259" endtime="20201112 12:26:55.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.267" endtime="20201112 12:26:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.965" endtime="20201112 12:26:55.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.964" endtime="20201112 12:26:55.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.274" level="INFO">${RESULT} = [{'time': 0.019919167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1598000000001144e-05, 'source_diff': 2.1598000000001144e-05}, {'time': 0.019945083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:55.271" endtime="20201112 12:26:55.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.288" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:55.275" endtime="20201112 12:26:55.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.292" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.291" endtime="20201112 12:26:55.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.295" level="INFO">VALUE: [2.1598000000001144e-05, 2.204100000000042e-05, 2.155499999999949e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1584000000001574e-05, 2.211099999999827e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2056000000002934e-05, 2.1527999999999825e-05, 2.155500000000296e-05, 2.1541999999999395e-05, 2.155499999999949e-05, 2.1527999999999825e-05, 2.1555999999998965e-05, 2.154099999999992e-05, 2.1555999999998965e-05, 2.206899999999956e-05, 2.1541999999999395e-05, 2.158299999999863e-05, 2.20969999999987e-05, 2.1542000000002864e-05, 2.206899999999956e-05, 2.1556000000002434e-05, 2.204100000000042e-05, 2.1555999999998965e-05, 2.256900000000006e-05, 2.156899999999906e-05, 2.208299999999913e-05, 2.1541999999999395e-05, 2.2026999999997382e-05, 2.204100000000042e-05, 2.1999999999997716e-05, 2.206899999999956e-05, 2.1556000000002434e-05, 2.2540999999997452e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.1541999999999395e-05, 2.1514000000000255e-05, 2.156899999999906e-05, 2.2528000000000825e-05, 2.2513999999997786e-05, 2.1555999999998965e-05, 2.255500000000049e-05, 2.20969999999987e-05, 2.1555999999998965e-05, 2.2070000000002504e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.293" endtime="20201112 12:26:55.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.289" endtime="20201112 12:26:55.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.298" endtime="20201112 12:26:55.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.302" endtime="20201112 12:26:55.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.300" endtime="20201112 12:26:55.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.297" endtime="20201112 12:26:55.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.930" endtime="20201112 12:26:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.929" endtime="20201112 12:26:55.323"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.331" endtime="20201112 12:26:55.349"></status>
</kw>
<msg timestamp="20201112 12:26:55.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.330" endtime="20201112 12:26:55.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.351" endtime="20201112 12:26:55.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.353" endtime="20201112 12:26:55.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.327" endtime="20201112 12:26:55.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.325" endtime="20201112 12:26:55.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.363" endtime="20201112 12:26:55.649"></status>
</kw>
<msg timestamp="20201112 12:26:55.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.362" endtime="20201112 12:26:55.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.653" endtime="20201112 12:26:55.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.662" endtime="20201112 12:26:55.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.359" endtime="20201112 12:26:55.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.357" endtime="20201112 12:26:55.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.668" level="INFO">${RESULT} = [{'time': 0.019855431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3542000000001395e-05, 'source_diff': 2.3542000000001395e-05}, {'time': 0.019882319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:55.665" endtime="20201112 12:26:55.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.683" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:55.669" endtime="20201112 12:26:55.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.687" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.686" endtime="20201112 12:26:55.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.690" level="INFO">VALUE: [2.3542000000001395e-05, 2.3054999999997522e-05, 2.2999999999998716e-05, 2.2555999999999965e-05, 2.2542000000000395e-05, 2.354100000000192e-05, 2.3070000000000035e-05, 2.3055999999996996e-05, 2.3056000000000465e-05, 2.304100000000142e-05, 2.2528000000000825e-05, 2.305500000000099e-05, 2.302700000000185e-05, 2.2499999999998216e-05, 2.3070000000000035e-05, 2.261100000000224e-05, 2.306900000000056e-05, 2.3054999999997522e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.256900000000006e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.3056000000000465e-05, 2.3555999999997496e-05, 2.3042000000000895e-05, 2.305500000000099e-05, 2.2555999999999965e-05, 2.3028000000001325e-05, 2.3056000000000465e-05, 2.306900000000056e-05, 2.3040999999997952e-05, 2.254100000000092e-05, 2.256900000000006e-05, 2.306900000000056e-05, 2.309700000000317e-05, 2.2569999999999535e-05, 2.252700000000135e-05, 2.3040999999997952e-05, 2.3542000000001395e-05, 2.2542000000000395e-05, 2.313899999999841e-05, 2.308300000000013e-05, 2.3028000000001325e-05, 2.2542000000000395e-05, 2.3041999999997426e-05, 2.3041999999997426e-05, 2.3056000000000465e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.688" endtime="20201112 12:26:55.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.684" endtime="20201112 12:26:55.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.693" endtime="20201112 12:26:55.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.697" endtime="20201112 12:26:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.695" endtime="20201112 12:26:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.692" endtime="20201112 12:26:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.324" endtime="20201112 12:26:55.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.323" endtime="20201112 12:26:55.717"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.726" endtime="20201112 12:26:55.743"></status>
</kw>
<msg timestamp="20201112 12:26:55.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.725" endtime="20201112 12:26:55.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.745" endtime="20201112 12:26:55.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.747" endtime="20201112 12:26:55.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.722" endtime="20201112 12:26:55.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.720" endtime="20201112 12:26:55.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.757" endtime="20201112 12:26:56.042"></status>
</kw>
<msg timestamp="20201112 12:26:56.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:55.756" endtime="20201112 12:26:56.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:56.046" endtime="20201112 12:26:56.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.054" endtime="20201112 12:26:56.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.753" endtime="20201112 12:26:56.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.751" endtime="20201112 12:26:56.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.061" level="INFO">${RESULT} = [{'time': 0.01988425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3541999999997926e-05, 'source_diff': 2.3541999999997926e-05}, {'time': 0.019914014, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:56.058" endtime="20201112 12:26:56.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.075" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.062" endtime="20201112 12:26:56.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.079" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.078" endtime="20201112 12:26:56.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.082" level="INFO">VALUE: [2.3541999999997926e-05, 2.4028000000002325e-05, 2.4013999999999286e-05, 2.404100000000242e-05, 2.3999999999999716e-05, 2.4070000000001035e-05, 2.4054999999998522e-05, 2.4041999999998426e-05, 2.404100000000242e-05, 2.3556000000000965e-05, 2.4054999999998522e-05, 2.4027999999998856e-05, 2.3500000000002685e-05, 2.3570000000000535e-05, 2.412499999999984e-05, 2.4013999999999286e-05, 2.3541999999997926e-05, 2.3541999999997926e-05, 2.4056000000001465e-05, 2.4042000000001895e-05, 2.4070000000001035e-05, 2.4070000000001035e-05, 2.4055999999997996e-05, 2.4041999999998426e-05, 2.355500000000149e-05, 2.4041999999998426e-05, 2.3526999999998882e-05, 2.4069999999997566e-05, 2.356900000000106e-05, 2.4068999999998092e-05, 2.4055999999997996e-05, 2.3556000000000965e-05, 2.4040999999998952e-05, 2.4054999999998522e-05, 2.4041999999998426e-05, 2.3514000000002255e-05, 2.362499999999934e-05, 2.3540999999998452e-05, 2.3542000000001395e-05, 2.363900000000238e-05, 2.355500000000149e-05, 2.3514000000002255e-05, 2.4027999999998856e-05, 2.4056000000001465e-05, 2.3570000000000535e-05, 2.3986000000000146e-05, 2.362499999999934e-05, 2.4054999999998522e-05, 2.3541999999997926e-05, 2.3556000000000965e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.080" endtime="20201112 12:26:56.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.075" endtime="20201112 12:26:56.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.085" endtime="20201112 12:26:56.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.089" endtime="20201112 12:26:56.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.087" endtime="20201112 12:26:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.084" endtime="20201112 12:26:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.718" endtime="20201112 12:26:56.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.718" endtime="20201112 12:26:56.110"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.118" endtime="20201112 12:26:56.136"></status>
</kw>
<msg timestamp="20201112 12:26:56.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.117" endtime="20201112 12:26:56.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.138" endtime="20201112 12:26:56.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.140" endtime="20201112 12:26:56.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.114" endtime="20201112 12:26:56.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.112" endtime="20201112 12:26:56.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.150" endtime="20201112 12:26:56.435"></status>
</kw>
<msg timestamp="20201112 12:26:56.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.149" endtime="20201112 12:26:56.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.439" endtime="20201112 12:26:56.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.448" endtime="20201112 12:26:56.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.146" endtime="20201112 12:26:56.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.144" endtime="20201112 12:26:56.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.454" level="INFO">${RESULT} = [{'time': 0.019856028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5056000000002465e-05, 'source_diff': 2.5056000000002465e-05}, {'time': 0.019883306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:56.451" endtime="20201112 12:26:56.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.468" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.455" endtime="20201112 12:26:56.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.472" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.471" endtime="20201112 12:26:56.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.475" level="INFO">VALUE: [2.5056000000002465e-05, 2.498700000000062e-05, 2.5054999999999522e-05, 2.4541999999998926e-05, 2.5055999999998996e-05, 2.4555999999998496e-05, 2.4556000000001965e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.5040999999999952e-05, 2.5528000000000356e-05, 2.5084000000001605e-05, 2.4568999999998592e-05, 2.5555000000000022e-05, 2.5041999999999426e-05, 2.4570000000001535e-05, 2.4555999999998496e-05, 2.4541999999998926e-05, 2.4610999999997302e-05, 2.4541999999998926e-05, 2.5555000000000022e-05, 2.5055999999998996e-05, 2.4526999999999882e-05, 2.4598000000000675e-05, 2.5041999999999426e-05, 2.5040999999999952e-05, 2.5541999999999926e-05, 2.4555999999998496e-05, 2.4570000000001535e-05, 2.4526999999999882e-05, 2.5014000000000286e-05, 2.5014000000000286e-05, 2.5541999999999926e-05, 2.4556000000001965e-05, 2.462500000000034e-05, 2.5054999999999522e-05, 2.4554999999999022e-05, 2.5014000000000286e-05, 2.5068999999999092e-05, 2.461100000000077e-05, 2.5014000000000286e-05, 2.4554999999999022e-05, 2.5000000000000716e-05, 2.5041999999999426e-05, 2.456900000000206e-05, 2.4542000000002395e-05, 2.4568999999998592e-05, 2.4555999999998496e-05, 2.5014000000000286e-05, 2.4556000000001965e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.473" endtime="20201112 12:26:56.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.469" endtime="20201112 12:26:56.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.479" endtime="20201112 12:26:56.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.482" endtime="20201112 12:26:56.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.480" endtime="20201112 12:26:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.477" endtime="20201112 12:26:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.111" endtime="20201112 12:26:56.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.110" endtime="20201112 12:26:56.503"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.511" endtime="20201112 12:26:56.529"></status>
</kw>
<msg timestamp="20201112 12:26:56.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.510" endtime="20201112 12:26:56.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.530" endtime="20201112 12:26:56.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.533" endtime="20201112 12:26:56.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.507" endtime="20201112 12:26:56.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.505" endtime="20201112 12:26:56.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.543" endtime="20201112 12:26:56.827"></status>
</kw>
<msg timestamp="20201112 12:26:56.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019832819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.541" endtime="20201112 12:26:56.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019832819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.832" endtime="20201112 12:26:56.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.840" endtime="20201112 12:26:56.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.539" endtime="20201112 12:26:56.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.537" endtime="20201112 12:26:56.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.847" level="INFO">${RESULT} = [{'time': 0.019859361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6541999999997457e-05, 'source_diff': 2.6541999999997457e-05}, {'time': 0.019890389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:56.843" endtime="20201112 12:26:56.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.860" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:56.848" endtime="20201112 12:26:56.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.865" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.864" endtime="20201112 12:26:56.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.867" level="INFO">VALUE: [2.6541999999997457e-05, 2.6070000000003035e-05, 2.6028000000000856e-05, 2.5568999999999592e-05, 2.6054999999997053e-05, 2.5541999999999926e-05, 2.5527000000000882e-05, 2.6096999999999232e-05, 2.5526999999997413e-05, 2.6069000000000092e-05, 2.5555000000000022e-05, 2.5540999999996983e-05, 2.6028000000000856e-05, 2.5555000000000022e-05, 2.6083999999999136e-05, 2.6041000000000952e-05, 2.5582999999999162e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.6556000000000496e-05, 2.5568999999999592e-05, 2.5568999999999592e-05, 2.6042000000000426e-05, 2.6055999999999996e-05, 2.6013999999997817e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.6568999999997123e-05, 2.6069000000000092e-05, 2.6041000000000952e-05, 2.6540999999997983e-05, 2.6555000000001022e-05, 2.5555000000000022e-05, 2.6028000000000856e-05, 2.5541000000000452e-05, 2.6069999999999566e-05, 2.5555999999999496e-05, 2.6055000000000522e-05, 2.5541999999999926e-05, 2.5556000000002965e-05, 2.5568999999999592e-05, 2.6041999999996956e-05, 2.6069000000000092e-05, 2.5541999999999926e-05, 2.6055999999999996e-05, 2.5541999999999926e-05, 2.6041999999996956e-05, 2.6541999999997457e-05, 2.6098000000002175e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.866" endtime="20201112 12:26:56.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.861" endtime="20201112 12:26:56.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.871" endtime="20201112 12:26:56.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.874" endtime="20201112 12:26:56.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.873" endtime="20201112 12:26:56.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.869" endtime="20201112 12:26:56.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.504" endtime="20201112 12:26:56.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.503" endtime="20201112 12:26:56.895"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.904" endtime="20201112 12:26:56.922"></status>
</kw>
<msg timestamp="20201112 12:26:56.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.902" endtime="20201112 12:26:56.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.923" endtime="20201112 12:26:56.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.926" endtime="20201112 12:26:56.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.900" endtime="20201112 12:26:56.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.898" endtime="20201112 12:26:56.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.936" endtime="20201112 12:26:57.220"></status>
</kw>
<msg timestamp="20201112 12:26:57.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.934" endtime="20201112 12:26:57.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.224" endtime="20201112 12:26:57.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.233" endtime="20201112 12:26:57.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.931" endtime="20201112 12:26:57.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.930" endtime="20201112 12:26:57.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.240" level="INFO">${RESULT} = [{'time': 0.019851597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6972000000000107e-05, 'source_diff': 2.6972000000000107e-05}, {'time': 0.019881417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.236" endtime="20201112 12:26:57.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.254" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:57.241" endtime="20201112 12:26:57.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.259" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.258" endtime="20201112 12:26:57.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.261" level="INFO">VALUE: [2.6972000000000107e-05, 2.6555999999997026e-05, 2.7055000000001522e-05, 2.6485999999999177e-05, 2.6637999999998968e-05, 2.697299999999958e-05, 2.7596999999997263e-05, 2.7556000000001496e-05, 2.7041999999997957e-05, 2.7070000000000566e-05, 2.7124999999999372e-05, 2.6513999999998317e-05, 2.7055000000001522e-05, 2.6527000000001882e-05, 2.6570000000000066e-05, 2.7054999999998053e-05, 2.6541999999997457e-05, 2.7056000000000996e-05, 2.6985999999999677e-05, 2.6526999999998413e-05, 2.7054999999998053e-05, 2.697299999999958e-05, 2.7056000000000996e-05, 2.6555000000001022e-05, 2.7055000000001522e-05, 2.7569000000001592e-05, 2.7041999999997957e-05, 2.6556000000000496e-05, 2.6556000000000496e-05, 2.7014000000002286e-05, 2.7054999999998053e-05, 2.7055999999997526e-05, 2.6570000000000066e-05, 2.7055000000001522e-05, 2.6499999999998747e-05, 2.6596999999999732e-05, 2.6570000000000066e-05, 2.7069000000001092e-05, 2.6569000000000592e-05, 2.7041000000001952e-05, 2.6556000000000496e-05, 2.7055000000001522e-05, 2.7041000000001952e-05, 2.7054999999998053e-05, 2.7069000000001092e-05, 2.7070000000000566e-05, 2.6556000000000496e-05, 2.7040999999998483e-05, 2.7596999999997263e-05, 2.6568999999997123e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.260" endtime="20201112 12:26:57.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.255" endtime="20201112 12:26:57.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.265" endtime="20201112 12:26:57.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.268" endtime="20201112 12:26:57.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.267" endtime="20201112 12:26:57.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.263" endtime="20201112 12:26:57.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.896" endtime="20201112 12:26:57.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.896" endtime="20201112 12:26:57.289"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.298" endtime="20201112 12:26:57.315"></status>
</kw>
<msg timestamp="20201112 12:26:57.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.296" endtime="20201112 12:26:57.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.317" endtime="20201112 12:26:57.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.320" endtime="20201112 12:26:57.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.294" endtime="20201112 12:26:57.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.292" endtime="20201112 12:26:57.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.330" endtime="20201112 12:26:57.614"></status>
</kw>
<msg timestamp="20201112 12:26:57.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.328" endtime="20201112 12:26:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.618" endtime="20201112 12:26:57.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.627" endtime="20201112 12:26:57.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.325" endtime="20201112 12:26:57.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.324" endtime="20201112 12:26:57.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.634" level="INFO">${RESULT} = [{'time': 0.019902083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7555000000002022e-05, 'source_diff': 2.7555000000002022e-05}, {'time': 0.019933208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.630" endtime="20201112 12:26:57.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.647" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:57.635" endtime="20201112 12:26:57.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.652" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.651" endtime="20201112 12:26:57.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.654" level="INFO">VALUE: [2.7555000000002022e-05, 2.8554999999999553e-05, 2.8042000000002426e-05, 2.8070000000001566e-05, 2.7541999999998457e-05, 2.7611000000000302e-05, 2.8082999999998193e-05, 2.8514000000000317e-05, 2.7556000000001496e-05, 2.8541999999999457e-05, 2.8054999999999053e-05, 2.8028000000002856e-05, 2.8082999999998193e-05, 2.8069999999998096e-05, 2.8556000000002496e-05, 2.7513999999999317e-05, 2.7527000000002882e-05, 2.8027999999999387e-05, 2.8068999999998623e-05, 2.7541000000002452e-05, 2.8054999999999053e-05, 2.7568999999998123e-05, 2.8054999999999053e-05, 2.8069999999998096e-05, 2.8069999999998096e-05, 2.8054999999999053e-05, 2.7569999999997596e-05, 2.8055999999998527e-05, 2.7527999999998887e-05, 2.8070000000001566e-05, 2.8041999999998957e-05, 2.7555000000002022e-05, 2.7569999999997596e-05, 2.7513999999999317e-05, 2.7555000000002022e-05, 2.8041000000002952e-05, 2.8027999999999387e-05, 2.8042000000002426e-05, 2.7486000000000177e-05, 2.8042000000002426e-05, 2.8055999999998527e-05, 2.7526999999999413e-05, 2.8554999999999553e-05, 2.8069000000002092e-05, 2.7542000000001926e-05, 2.8042000000002426e-05, 2.7555000000002022e-05, 2.7527999999998887e-05, 2.8554999999999553e-05, 2.7556000000001496e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.653" endtime="20201112 12:26:57.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.648" endtime="20201112 12:26:57.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.662" endtime="20201112 12:26:57.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.665" endtime="20201112 12:26:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.664" endtime="20201112 12:26:57.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.660" endtime="20201112 12:26:57.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.290" endtime="20201112 12:26:57.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.289" endtime="20201112 12:26:57.686"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.695" endtime="20201112 12:26:57.712"></status>
</kw>
<msg timestamp="20201112 12:26:57.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.693" endtime="20201112 12:26:57.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.713" endtime="20201112 12:26:57.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.716" endtime="20201112 12:26:57.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.691" endtime="20201112 12:26:57.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.689" endtime="20201112 12:26:57.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.726" endtime="20201112 12:26:58.010"></status>
</kw>
<msg timestamp="20201112 12:26:58.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.724" endtime="20201112 12:26:58.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.014" endtime="20201112 12:26:58.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.023" endtime="20201112 12:26:58.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.722" endtime="20201112 12:26:58.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.720" endtime="20201112 12:26:58.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.030" level="INFO">${RESULT} = [{'time': 0.019862417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9041999999999957e-05, 'source_diff': 2.9041999999999957e-05}, {'time': 0.019894056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.026" endtime="20201112 12:26:58.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.043" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.031" endtime="20201112 12:26:58.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.048" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.047" endtime="20201112 12:26:58.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.050" level="INFO">VALUE: [2.9041999999999957e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9026999999997444e-05, 2.9041999999999957e-05, 2.8570000000002066e-05, 2.8582999999998693e-05, 2.9055999999999527e-05, 2.9083999999998666e-05, 2.8554999999999553e-05, 2.9041000000000483e-05, 2.8569999999998597e-05, 2.9096999999998763e-05, 2.8611000000001302e-05, 2.9028000000000387e-05, 2.8555999999999027e-05, 2.9041000000000483e-05, 2.9041999999999957e-05, 2.9000000000001247e-05, 2.9055000000000053e-05, 2.9556000000000027e-05, 2.8541999999999457e-05, 2.9041999999999957e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9069999999999097e-05, 2.9069999999999097e-05, 2.9041000000000483e-05, 2.9542000000000457e-05, 2.8555000000003022e-05, 2.9070000000002566e-05, 2.9055999999999527e-05, 2.9082999999999193e-05, 2.8540999999999983e-05, 2.9068999999999623e-05, 2.8540999999999983e-05, 2.8556000000002496e-05, 2.9055999999999527e-05, 2.8527999999999887e-05, 2.9068999999999623e-05, 2.9028000000000387e-05, 2.9055000000000053e-05, 2.8527999999999887e-05, 2.8554999999999553e-05, 2.8556000000002496e-05, 2.8555999999999027e-05, 2.9055999999999527e-05, 2.9041999999999957e-05, 2.9055000000000053e-05, 2.9028000000000387e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.049" endtime="20201112 12:26:58.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.044" endtime="20201112 12:26:58.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.054" endtime="20201112 12:26:58.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.057" endtime="20201112 12:26:58.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.056" endtime="20201112 12:26:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.052" endtime="20201112 12:26:58.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.687" endtime="20201112 12:26:58.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.687" endtime="20201112 12:26:58.078"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.087" endtime="20201112 12:26:58.105"></status>
</kw>
<msg timestamp="20201112 12:26:58.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.085" endtime="20201112 12:26:58.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.106" endtime="20201112 12:26:58.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.109" endtime="20201112 12:26:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.082" endtime="20201112 12:26:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.080" endtime="20201112 12:26:58.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.119" endtime="20201112 12:26:58.404"></status>
</kw>
<msg timestamp="20201112 12:26:58.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.117" endtime="20201112 12:26:58.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019897653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.408" endtime="20201112 12:26:58.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.417" endtime="20201112 12:26:58.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.115" endtime="20201112 12:26:58.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.113" endtime="20201112 12:26:58.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.423" level="INFO">${RESULT} = [{'time': 0.019927681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0027999999997917e-05, 'source_diff': 3.0027999999997917e-05}, {'time': 0.01996375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:58.420" endtime="20201112 12:26:58.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.437" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.424" endtime="20201112 12:26:58.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.441" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.440" endtime="20201112 12:26:58.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.444" level="INFO">VALUE: [3.0027999999997917e-05, 3.0056000000000527e-05, 2.9471999999999138e-05, 3.056999999999713e-05, 2.9555000000000553e-05, 3.0041000000001483e-05, 2.9528000000000887e-05, 2.9555000000000553e-05, 2.9555000000000553e-05, 2.9527000000001413e-05, 3.0042000000000957e-05, 3.0138999999998473e-05, 3.0055000000001053e-05, 3.0028000000001387e-05, 3.0056000000000527e-05, 2.9583000000003162e-05, 3.0028000000001387e-05, 2.9582999999999693e-05, 3.0042000000000957e-05, 3.0069000000000623e-05, 3.0070000000000097e-05, 3.0055000000001053e-05, 3.055500000000155e-05, 3.0055000000001053e-05, 3.0055000000001053e-05, 2.9555000000000553e-05, 3.0055999999997057e-05, 3.0042000000000957e-05, 3.0055999999997057e-05, 2.9556000000000027e-05, 2.9513999999997848e-05, 2.9556000000000027e-05, 3.0055000000001053e-05, 3.0070000000000097e-05, 3.0054999999997584e-05, 2.9541999999996987e-05, 2.9556000000000027e-05, 2.9555000000000553e-05, 3.0056000000000527e-05, 3.0014000000001817e-05, 3.055600000000103e-05, 2.9596999999999263e-05, 3.0041000000001483e-05, 2.9555000000000553e-05, 2.9582999999999693e-05, 2.9999999999998778e-05, 3.0041000000001483e-05, 3.0069000000000623e-05, 2.9569000000000123e-05, 3.0041000000001483e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.443" endtime="20201112 12:26:58.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.438" endtime="20201112 12:26:58.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.448" endtime="20201112 12:26:58.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.451" endtime="20201112 12:26:58.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.449" endtime="20201112 12:26:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.446" endtime="20201112 12:26:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.079" endtime="20201112 12:26:58.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.078" endtime="20201112 12:26:58.472"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.480" endtime="20201112 12:26:58.499"></status>
</kw>
<msg timestamp="20201112 12:26:58.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.479" endtime="20201112 12:26:58.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.500" endtime="20201112 12:26:58.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.503" endtime="20201112 12:26:58.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.476" endtime="20201112 12:26:58.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.474" endtime="20201112 12:26:58.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.513" endtime="20201112 12:26:58.798"></status>
</kw>
<msg timestamp="20201112 12:26:58.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.511" endtime="20201112 12:26:58.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.803" endtime="20201112 12:26:58.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.811" endtime="20201112 12:26:58.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.509" endtime="20201112 12:26:58.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.507" endtime="20201112 12:26:58.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.818" level="INFO">${RESULT} = [{'time': 0.019945194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0554999999998084e-05, 'source_diff': 3.0554999999998084e-05}, {'time': 0.019981528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.814" endtime="20201112 12:26:58.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.832" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:58.819" endtime="20201112 12:26:58.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.837" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.836" endtime="20201112 12:26:58.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.839" level="INFO">VALUE: [3.0554999999998084e-05, 3.055599999999756e-05, 3.1026999999999444e-05, 3.1540999999999514e-05, 3.1054999999998584e-05, 3.104199999999849e-05, 3.055599999999756e-05, 3.1054999999998584e-05, 3.056999999999713e-05, 3.104200000000196e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.105500000000205e-05, 3.1054999999998584e-05, 3.147200000000114e-05, 3.0611999999999306e-05, 3.05700000000006e-05, 3.056900000000112e-05, 3.104199999999849e-05, 3.054100000000198e-05, 3.10700000000011e-05, 3.058300000000069e-05, 3.055600000000103e-05, 3.106900000000162e-05, 3.054199999999799e-05, 3.055599999999756e-05, 3.154199999999899e-05, 3.105500000000205e-05, 3.058300000000069e-05, 3.105500000000205e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.105500000000205e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.105599999999806e-05, 3.104199999999849e-05, 3.055599999999756e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.054199999999799e-05, 3.151399999999985e-05, 3.104200000000196e-05, 3.0485999999999708e-05, 3.055600000000103e-05, 3.104199999999849e-05, 3.0499999999999278e-05, 3.105500000000205e-05, 3.1054999999998584e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.838" endtime="20201112 12:26:58.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.833" endtime="20201112 12:26:58.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.843" endtime="20201112 12:26:58.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.846" endtime="20201112 12:26:58.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.845" endtime="20201112 12:26:58.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.841" endtime="20201112 12:26:58.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.473" endtime="20201112 12:26:58.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.472" endtime="20201112 12:26:58.867"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.876" endtime="20201112 12:26:58.893"></status>
</kw>
<msg timestamp="20201112 12:26:58.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.874" endtime="20201112 12:26:58.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.894" endtime="20201112 12:26:58.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.897" endtime="20201112 12:26:58.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.872" endtime="20201112 12:26:58.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.869" endtime="20201112 12:26:58.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.907" endtime="20201112 12:26:59.193"></status>
</kw>
<msg timestamp="20201112 12:26:59.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.905" endtime="20201112 12:26:59.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.197" endtime="20201112 12:26:59.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.206" endtime="20201112 12:26:59.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.903" endtime="20201112 12:26:59.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.901" endtime="20201112 12:26:59.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.212" level="INFO">${RESULT} = [{'time': 0.019856139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.154199999999899e-05, 'source_diff': 3.154199999999899e-05}, {'time': 0.019892944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.209" endtime="20201112 12:26:59.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.226" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:59.213" endtime="20201112 12:26:59.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.230" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.229" endtime="20201112 12:26:59.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.233" level="INFO">VALUE: [3.154199999999899e-05, 3.2054999999999584e-05, 3.1540999999999514e-05, 3.254199999999999e-05, 3.198599999999774e-05, 3.161100000000083e-05, 3.155600000000203e-05, 3.204199999999949e-05, 3.147199999999767e-05, 3.2068999999999154e-05, 3.156900000000212e-05, 3.2054999999999584e-05, 3.152799999999942e-05, 3.2054999999999584e-05, 3.204199999999949e-05, 3.205599999999906e-05, 3.2041000000000014e-05, 3.15700000000016e-05, 3.201400000000035e-05, 3.155599999999856e-05, 3.155600000000203e-05, 3.2068999999999154e-05, 3.155599999999856e-05, 3.2054999999999584e-05, 3.2110999999997863e-05, 3.2068999999999154e-05, 3.205599999999906e-05, 3.2041000000000014e-05, 3.2041000000000014e-05, 3.154199999999899e-05, 3.204199999999949e-05, 3.155600000000203e-05, 3.155599999999856e-05, 3.254199999999999e-05, 3.247199999999867e-05, 3.205599999999906e-05, 3.1554999999999084e-05, 3.1554999999999084e-05, 3.2054999999999584e-05, 3.151399999999985e-05, 3.200000000000078e-05, 3.209700000000176e-05, 3.155599999999856e-05, 3.155600000000203e-05, 3.155500000000255e-05, 3.254199999999999e-05, 3.204199999999949e-05, 3.2041000000000014e-05, 3.155599999999856e-05, 3.2082999999998724e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.232" endtime="20201112 12:26:59.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.227" endtime="20201112 12:26:59.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.237" endtime="20201112 12:26:59.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.240" endtime="20201112 12:26:59.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.239" endtime="20201112 12:26:59.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.235" endtime="20201112 12:26:59.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.868" endtime="20201112 12:26:59.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.867" endtime="20201112 12:26:59.261"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.269" endtime="20201112 12:26:59.287"></status>
</kw>
<msg timestamp="20201112 12:26:59.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.268" endtime="20201112 12:26:59.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.288" endtime="20201112 12:26:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.291" endtime="20201112 12:26:59.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.265" endtime="20201112 12:26:59.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.263" endtime="20201112 12:26:59.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.301" endtime="20201112 12:26:59.586"></status>
</kw>
<msg timestamp="20201112 12:26:59.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.299" endtime="20201112 12:26:59.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.590" endtime="20201112 12:26:59.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.599" endtime="20201112 12:26:59.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.297" endtime="20201112 12:26:59.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.295" endtime="20201112 12:26:59.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.606" level="INFO">${RESULT} = [{'time': 0.019835153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.254199999999999e-05, 'source_diff': 3.254199999999999e-05}, {'time': 0.019872042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.603" endtime="20201112 12:26:59.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.620" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:26:59.608" endtime="20201112 12:26:59.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.625" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.624" endtime="20201112 12:26:59.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.627" level="INFO">VALUE: [3.254199999999999e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.3055000000000584e-05, 3.304200000000049e-05, 3.2596999999998794e-05, 3.254199999999999e-05, 3.255599999999956e-05, 3.298699999999821e-05, 3.302800000000092e-05, 3.3069000000000154e-05, 3.305600000000006e-05, 3.355600000000056e-05, 3.256999999999913e-05, 3.298600000000221e-05, 3.30700000000031e-05, 3.3541000000001514e-05, 3.3055000000000584e-05, 3.304200000000049e-05, 3.256999999999913e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.256900000000312e-05, 3.254199999999999e-05, 3.2596999999998794e-05, 3.2568999999999654e-05, 3.3069000000000154e-05, 3.3082999999999724e-05, 3.3069000000000154e-05, 3.2555000000000084e-05, 3.30700000000031e-05, 3.2541000000000514e-05, 3.2541000000000514e-05, 3.258300000000269e-05, 3.355600000000056e-05, 3.2555000000000084e-05, 3.3040999999997545e-05, 3.2555000000000084e-05, 3.248600000000171e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.304200000000049e-05, 3.3583000000000224e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.3082999999999724e-05, 3.252800000000042e-05, 3.3055000000000584e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.626" endtime="20201112 12:26:59.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.621" endtime="20201112 12:26:59.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.631" endtime="20201112 12:26:59.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.634" endtime="20201112 12:26:59.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.633" endtime="20201112 12:26:59.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.629" endtime="20201112 12:26:59.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.262" endtime="20201112 12:26:59.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.261" endtime="20201112 12:26:59.655"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.664" endtime="20201112 12:26:59.682"></status>
</kw>
<msg timestamp="20201112 12:26:59.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.662" endtime="20201112 12:26:59.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.684" endtime="20201112 12:26:59.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.686" endtime="20201112 12:26:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.660" endtime="20201112 12:26:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.657" endtime="20201112 12:26:59.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.696" endtime="20201112 12:26:59.981"></status>
</kw>
<msg timestamp="20201112 12:26:59.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.694" endtime="20201112 12:26:59.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.986" endtime="20201112 12:26:59.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.994" endtime="20201112 12:26:59.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.692" endtime="20201112 12:26:59.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.690" endtime="20201112 12:26:59.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.001" level="INFO">${RESULT} = [{'time': 0.019947764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4083000000000724e-05, 'source_diff': 3.4083000000000724e-05}, {'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:59.997" endtime="20201112 12:27:00.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.014" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.002" endtime="20201112 12:27:00.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.019" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.018" endtime="20201112 12:27:00.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.021" level="INFO">VALUE: [3.4083000000000724e-05, 3.3569000000000654e-05, 3.4055000000001584e-05, 3.355600000000056e-05, 3.355599999999709e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.4597000000000794e-05, 3.3540999999998045e-05, 3.3610999999999364e-05, 3.354200000000099e-05, 3.404199999999802e-05, 3.4040999999998545e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.4555000000002084e-05, 3.4083000000000724e-05, 3.351400000000185e-05, 3.354199999999752e-05, 3.355600000000056e-05, 3.405600000000106e-05, 3.4069000000001154e-05, 3.404199999999802e-05, 3.4055000000001584e-05, 3.3554999999997615e-05, 3.4069000000001154e-05, 3.4110999999999864e-05, 3.401400000000235e-05, 3.404200000000149e-05, 3.3555000000001084e-05, 3.4026999999998975e-05, 3.404199999999802e-05, 3.404199999999802e-05, 3.455600000000156e-05, 3.404200000000149e-05, 3.407000000000063e-05, 3.4069000000001154e-05, 3.405600000000106e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.405600000000106e-05, 3.4055000000001584e-05, 3.4582999999997754e-05, 3.407000000000063e-05, 3.3555000000001084e-05, 3.4054999999998115e-05, 3.4055000000001584e-05, 3.3540999999998045e-05, 3.3554999999997615e-05, 3.3554999999997615e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.020" endtime="20201112 12:27:00.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.015" endtime="20201112 12:27:00.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.025" endtime="20201112 12:27:00.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.028" endtime="20201112 12:27:00.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.027" endtime="20201112 12:27:00.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.023" endtime="20201112 12:27:00.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.656" endtime="20201112 12:27:00.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.655" endtime="20201112 12:27:00.049"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.058" endtime="20201112 12:27:00.077"></status>
</kw>
<msg timestamp="20201112 12:27:00.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.056" endtime="20201112 12:27:00.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.079" endtime="20201112 12:27:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.081" endtime="20201112 12:27:00.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.054" endtime="20201112 12:27:00.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.052" endtime="20201112 12:27:00.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.091" endtime="20201112 12:27:00.376"></status>
</kw>
<msg timestamp="20201112 12:27:00.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.090" endtime="20201112 12:27:00.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.381" endtime="20201112 12:27:00.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.389" endtime="20201112 12:27:00.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.087" endtime="20201112 12:27:00.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.086" endtime="20201112 12:27:00.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.396" level="INFO">${RESULT} = [{'time': 0.019934722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.156899999999784e-05, 'source_diff': 5.156899999999784e-05}, {'time': 0.019991778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.392" endtime="20201112 12:27:00.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.410" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.397" endtime="20201112 12:27:00.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.415" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.414" endtime="20201112 12:27:00.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.417" level="INFO">VALUE: [5.156899999999784e-05, 5.21530000000027e-05, 5.126399999999878e-05, 5.205600000000171e-05, 5.143100000000109e-05, 5.130600000000096e-05, 5.215299999999923e-05, 5.186100000000027e-05, 5.138899999999891e-05, 5.123599999999964e-05, 5.179200000000189e-05, 5.211099999999705e-05, 5.176399999999928e-05, 5.126300000000278e-05, 5.204199999999867e-05, 5.187499999999984e-05, 5.181899999999809e-05, 5.186100000000027e-05, 5.168000000000186e-05, 5.211099999999705e-05, 5.2221999999997604e-05, 5.111100000000299e-05, 5.181899999999809e-05, 5.1665999999998824e-05, 5.175000000000318e-05, 5.2207999999998034e-05, 5.148599999999989e-05, 5.218100000000184e-05, 5.16530000000022e-05, 5.193100000000159e-05, 5.136100000000324e-05, 5.218099999999837e-05, 5.1223000000003016e-05, 5.216700000000227e-05, 5.132000000000053e-05, 5.144499999999719e-05, 5.168100000000134e-05, 5.168099999999787e-05, 5.132000000000053e-05, 5.14729999999998e-05, 5.127699999999888e-05, 5.215299999999923e-05, 5.16669999999983e-05, 5.2193999999998464e-05, 5.1402000000002473e-05, 5.126400000000225e-05, 5.155500000000174e-05, 5.129099999999845e-05, 5.215299999999923e-05, 5.155499999999827e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.416" endtime="20201112 12:27:00.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.411" endtime="20201112 12:27:00.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.421" endtime="20201112 12:27:00.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.424" endtime="20201112 12:27:00.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.423" endtime="20201112 12:27:00.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.419" endtime="20201112 12:27:00.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.050" endtime="20201112 12:27:00.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.050" endtime="20201112 12:27:00.445"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.454" endtime="20201112 12:27:00.471"></status>
</kw>
<msg timestamp="20201112 12:27:00.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.452" endtime="20201112 12:27:00.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.473" endtime="20201112 12:27:00.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.475" endtime="20201112 12:27:00.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.449" endtime="20201112 12:27:00.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.447" endtime="20201112 12:27:00.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.485" endtime="20201112 12:27:00.772"></status>
</kw>
<msg timestamp="20201112 12:27:00.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019850986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.484" endtime="20201112 12:27:00.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019850986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.776" endtime="20201112 12:27:00.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.784" endtime="20201112 12:27:00.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.481" endtime="20201112 12:27:00.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.480" endtime="20201112 12:27:00.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.791" level="INFO">${RESULT} = [{'time': 0.019904125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.313900000000066e-05, 'source_diff': 5.313900000000066e-05}, {'time': 0.019961181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.788" endtime="20201112 12:27:00.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.805" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:00.792" endtime="20201112 12:27:00.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.809" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.808" endtime="20201112 12:27:00.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.812" level="INFO">VALUE: [5.313900000000066e-05, 5.236200000000024e-05, 5.243099999999862e-05, 5.247200000000132e-05, 5.241699999999905e-05, 5.233300000000163e-05, 5.295900000000173e-05, 5.280599999999899e-05, 5.230599999999849e-05, 5.261099999999755e-05, 5.318099999999937e-05, 5.287500000000084e-05, 5.26669999999993e-05, 5.262500000000059e-05, 5.305499999999977e-05, 5.2429999999999144e-05, 5.241700000000252e-05, 5.3193999999999464e-05, 5.2971999999998354e-05, 5.311100000000152e-05, 5.251400000000003e-05, 5.262499999999712e-05, 5.256899999999884e-05, 5.2985999999997924e-05, 5.25279999999996e-05, 5.308299999999891e-05, 5.211100000000052e-05, 5.268099999999887e-05, 5.255599999999874e-05, 5.312500000000109e-05, 5.254200000000264e-05, 5.23340000000011e-05, 5.318100000000284e-05, 5.234699999999773e-05, 5.313900000000066e-05, 5.2749999999997244e-05, 5.245800000000175e-05, 5.223600000000064e-05, 5.237500000000034e-05, 5.226399999999978e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.230499999999902e-05, 5.2443999999998714e-05, 5.236100000000077e-05, 5.269400000000243e-05, 5.272200000000157e-05, 5.2943999999999214e-05, 5.318099999999937e-05, 5.281999999999856e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.810" endtime="20201112 12:27:00.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.805" endtime="20201112 12:27:00.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.815" endtime="20201112 12:27:00.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.819" endtime="20201112 12:27:00.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.817" endtime="20201112 12:27:00.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.814" endtime="20201112 12:27:00.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.446" endtime="20201112 12:27:00.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.445" endtime="20201112 12:27:00.840"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.848" endtime="20201112 12:27:00.868"></status>
</kw>
<msg timestamp="20201112 12:27:00.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.847" endtime="20201112 12:27:00.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.870" endtime="20201112 12:27:00.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.872" endtime="20201112 12:27:00.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.844" endtime="20201112 12:27:00.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.842" endtime="20201112 12:27:00.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.882" endtime="20201112 12:27:01.167"></status>
</kw>
<msg timestamp="20201112 12:27:01.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.880" endtime="20201112 12:27:01.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.171" endtime="20201112 12:27:01.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.179" endtime="20201112 12:27:01.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.878" endtime="20201112 12:27:01.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.876" endtime="20201112 12:27:01.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.186" level="INFO">${RESULT} = [{'time': 0.019949347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.380500000000052e-05, 'source_diff': 5.380500000000052e-05}, {'time': 0.020006319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.183" endtime="20201112 12:27:01.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.201" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:01.187" endtime="20201112 12:27:01.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.206" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.205" endtime="20201112 12:27:01.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.210" level="INFO">VALUE: [5.380500000000052e-05, 5.356899999999984e-05, 5.351400000000103e-05, 5.3680000000000394e-05, 5.3707999999999534e-05, 5.40410000000012e-05, 5.3471999999998854e-05, 5.3680000000000394e-05, 5.418100000000037e-05, 5.3971999999999354e-05, 5.423699999999865e-05, 5.36670000000003e-05, 5.337500000000134e-05, 5.3263999999997313e-05, 5.377800000000085e-05, 5.329199999999992e-05, 5.36670000000003e-05, 5.372200000000257e-05, 5.331999999999906e-05, 5.416699999999733e-05, 5.362500000000159e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.330500000000002e-05, 5.35410000000007e-05, 5.405500000000077e-05, 5.331899999999959e-05, 5.3693999999999964e-05, 5.373600000000214e-05, 5.3666000000000824e-05, 5.3680000000000394e-05, 5.3930000000000644e-05, 5.411099999999905e-05, 5.400000000000196e-05, 5.362499999999812e-05, 5.405600000000024e-05, 5.381999999999956e-05, 5.376400000000128e-05, 5.393100000000012e-05, 5.3457999999999284e-05, 5.406999999999981e-05, 5.344499999999919e-05, 5.379199999999695e-05, 5.398700000000187e-05, 5.387500000000184e-05, 5.336200000000124e-05, 5.3443999999999714e-05, 5.325000000000121e-05, 5.325000000000121e-05, 5.311099999999805e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.208" endtime="20201112 12:27:01.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.202" endtime="20201112 12:27:01.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.214" endtime="20201112 12:27:01.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.219" endtime="20201112 12:27:01.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.217" endtime="20201112 12:27:01.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.212" endtime="20201112 12:27:01.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.840" endtime="20201112 12:27:01.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.840" endtime="20201112 12:27:01.241"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.252" endtime="20201112 12:27:01.272"></status>
</kw>
<msg timestamp="20201112 12:27:01.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.250" endtime="20201112 12:27:01.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.274" endtime="20201112 12:27:01.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.276" endtime="20201112 12:27:01.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.247" endtime="20201112 12:27:01.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.244" endtime="20201112 12:27:01.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.286" endtime="20201112 12:27:01.572"></status>
</kw>
<msg timestamp="20201112 12:27:01.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.285" endtime="20201112 12:27:01.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.577" endtime="20201112 12:27:01.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.585" endtime="20201112 12:27:01.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.282" endtime="20201112 12:27:01.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.280" endtime="20201112 12:27:01.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.592" level="INFO">${RESULT} = [{'time': 0.023567139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.437500000000234e-05, 'source_diff': 5.437500000000234e-05}, {'time': 0.023624139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.588" endtime="20201112 12:27:01.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.605" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:01.593" endtime="20201112 12:27:01.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.610" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.609" endtime="20201112 12:27:01.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.612" level="INFO">VALUE: [5.437500000000234e-05, 5.483299999999719e-05, 5.518100000000137e-05, 5.491700000000155e-05, 5.43609999999993e-05, 5.463899999999869e-05, 5.432000000000006e-05, 5.493099999999765e-05, 5.4791999999997953e-05, 5.49869999999994e-05, 5.462499999999912e-05, 5.423600000000264e-05, 5.481900000000109e-05, 5.511100000000005e-05, 5.5179999999998425e-05, 5.4458000000000284e-05, 5.481900000000109e-05, 5.481900000000109e-05, 5.481900000000109e-05, 5.4208000000000034e-05, 5.5027999999998634e-05, 5.4985999999999924e-05, 5.491700000000155e-05, 5.476400000000228e-05, 5.469500000000044e-05, 5.4235999999999174e-05, 5.4541999999997703e-05, 5.4249999999998744e-05, 5.488900000000241e-05, 5.518100000000137e-05, 5.4735999999999674e-05, 5.511199999999952e-05, 5.486199999999927e-05, 5.480499999999805e-05, 5.4763999999998814e-05, 5.479100000000195e-05, 5.4415999999998105e-05, 5.495899999999679e-05, 5.4708000000000534e-05, 5.4763999999998814e-05, 5.4485999999999424e-05, 5.4999999999999494e-05, 5.4722000000000104e-05, 5.490299999999851e-05, 5.469500000000044e-05, 5.519500000000094e-05, 5.411099999999905e-05, 5.450000000000246e-05, 5.505600000000124e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.611" endtime="20201112 12:27:01.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.606" endtime="20201112 12:27:01.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.616" endtime="20201112 12:27:01.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.619" endtime="20201112 12:27:01.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.618" endtime="20201112 12:27:01.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.614" endtime="20201112 12:27:01.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.242" endtime="20201112 12:27:01.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.241" endtime="20201112 12:27:01.640"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.649" endtime="20201112 12:27:01.667"></status>
</kw>
<msg timestamp="20201112 12:27:01.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.647" endtime="20201112 12:27:01.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.669" endtime="20201112 12:27:01.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.671" endtime="20201112 12:27:01.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.645" endtime="20201112 12:27:01.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.643" endtime="20201112 12:27:01.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.681" endtime="20201112 12:27:01.967"></status>
</kw>
<msg timestamp="20201112 12:27:01.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.680" endtime="20201112 12:27:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019963139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.972" endtime="20201112 12:27:01.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.980" endtime="20201112 12:27:01.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.677" endtime="20201112 12:27:01.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.675" endtime="20201112 12:27:01.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.987" level="INFO">${RESULT} = [{'time': 0.020018806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.566699999999883e-05, 'source_diff': 5.566699999999883e-05}, {'time': 0.020077819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.983" endtime="20201112 12:27:01.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.001" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:01.988" endtime="20201112 12:27:02.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.006" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.005" endtime="20201112 12:27:02.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.008" level="INFO">VALUE: [5.566699999999883e-05, 5.6000000000000494e-05, 5.593099999999865e-05, 5.6179999999999425e-05, 5.6179999999999425e-05, 5.534700000000073e-05, 5.5694000000001964e-05, 5.583299999999819e-05, 5.55549999999988e-05, 5.5750000000000244e-05, 5.509700000000048e-05, 5.587500000000037e-05, 5.607000000000181e-05, 5.593099999999865e-05, 5.6055999999998773e-05, 5.609799999999748e-05, 5.593099999999865e-05, 5.532000000000106e-05, 5.6221999999998135e-05, 5.5763999999999814e-05, 5.583300000000166e-05, 5.5277999999998884e-05, 5.529200000000192e-05, 5.590299999999951e-05, 5.5638000000000215e-05, 5.5499999999999994e-05, 5.60549999999993e-05, 5.53610000000003e-05, 5.611099999999758e-05, 5.6014000000000064e-05, 5.55549999999988e-05, 5.5499999999999994e-05, 5.5750000000000244e-05, 5.5944000000002214e-05, 5.566699999999883e-05, 5.581999999999809e-05, 5.561100000000055e-05, 5.6041999999999204e-05, 5.5486000000000424e-05, 5.5763999999999814e-05, 5.5291999999998453e-05, 5.6000000000000494e-05, 5.5750000000000244e-05, 5.58610000000008e-05, 5.584699999999776e-05, 5.529200000000192e-05, 5.611100000000105e-05, 5.5665999999999355e-05, 5.573700000000015e-05, 5.55549999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.007" endtime="20201112 12:27:02.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.002" endtime="20201112 12:27:02.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.012" endtime="20201112 12:27:02.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.015" endtime="20201112 12:27:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.014" endtime="20201112 12:27:02.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.010" endtime="20201112 12:27:02.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.641" endtime="20201112 12:27:02.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.641" endtime="20201112 12:27:02.036"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.045" endtime="20201112 12:27:02.063"></status>
</kw>
<msg timestamp="20201112 12:27:02.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.043" endtime="20201112 12:27:02.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.064" endtime="20201112 12:27:02.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.067" endtime="20201112 12:27:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.041" endtime="20201112 12:27:02.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.039" endtime="20201112 12:27:02.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.077" endtime="20201112 12:27:02.362"></status>
</kw>
<msg timestamp="20201112 12:27:02.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.075" endtime="20201112 12:27:02.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.366" endtime="20201112 12:27:02.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.375" endtime="20201112 12:27:02.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.073" endtime="20201112 12:27:02.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.071" endtime="20201112 12:27:02.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.382" level="INFO">${RESULT} = [{'time': 0.019943042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.620900000000151e-05, 'source_diff': 5.620900000000151e-05}, {'time': 0.020002042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.378" endtime="20201112 12:27:02.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.395" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:02.383" endtime="20201112 12:27:02.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.400" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.399" endtime="20201112 12:27:02.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.402" level="INFO">VALUE: [5.620900000000151e-05, 5.6291999999999454e-05, 5.6778000000000384e-05, 5.643099999999915e-05, 5.697300000000183e-05, 5.638900000000044e-05, 5.688900000000094e-05, 5.711099999999858e-05, 5.636099999999783e-05, 5.6999999999998024e-05, 5.662499999999765e-05, 5.686099999999833e-05, 5.6721999999998635e-05, 5.66809999999994e-05, 5.6207999999998565e-05, 5.657000000000231e-05, 5.634700000000173e-05, 5.7000000000001494e-05, 5.688900000000094e-05, 5.6207999999998565e-05, 5.71809999999999e-05, 5.68749999999979e-05, 5.6277999999999884e-05, 5.688900000000094e-05, 5.6805999999999524e-05, 5.7166000000000855e-05, 5.63480000000012e-05, 5.658299999999894e-05, 5.609700000000148e-05, 5.6666000000000355e-05, 5.6735999999998205e-05, 5.6429999999999675e-05, 5.6749999999997774e-05, 5.691700000000008e-05, 5.6750000000001244e-05, 5.63610000000013e-05, 5.693099999999965e-05, 5.6221999999998135e-05, 5.6485999999997955e-05, 5.670900000000201e-05, 5.6541999999999704e-05, 5.6985999999998455e-05, 5.6721999999998635e-05, 5.654200000000317e-05, 5.661099999999808e-05, 5.6250000000000744e-05, 5.651299999999762e-05, 5.68619999999978e-05, 5.656899999999937e-05, 5.6236000000001174e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.401" endtime="20201112 12:27:02.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.396" endtime="20201112 12:27:02.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.406" endtime="20201112 12:27:02.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.409" endtime="20201112 12:27:02.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.408" endtime="20201112 12:27:02.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.404" endtime="20201112 12:27:02.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.037" endtime="20201112 12:27:02.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.036" endtime="20201112 12:27:02.430"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.439" endtime="20201112 12:27:02.459"></status>
</kw>
<msg timestamp="20201112 12:27:02.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.437" endtime="20201112 12:27:02.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.461" endtime="20201112 12:27:02.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.463" endtime="20201112 12:27:02.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.435" endtime="20201112 12:27:02.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.433" endtime="20201112 12:27:02.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.473" endtime="20201112 12:27:02.758"></status>
</kw>
<msg timestamp="20201112 12:27:02.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.472" endtime="20201112 12:27:02.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.762" endtime="20201112 12:27:02.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.771" endtime="20201112 12:27:02.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.469" endtime="20201112 12:27:02.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.467" endtime="20201112 12:27:02.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.777" level="INFO">${RESULT} = [{'time': 0.020126944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7735999999999205e-05, 'source_diff': 5.7735999999999205e-05}, {'time': 0.020189958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.774" endtime="20201112 12:27:02.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.791" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:02.778" endtime="20201112 12:27:02.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.795" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.794" endtime="20201112 12:27:02.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.798" level="INFO">VALUE: [5.7735999999999205e-05, 5.73610000000023e-05, 5.761099999999908e-05, 5.786099999999933e-05, 5.811100000000305e-05, 5.762500000000212e-05, 5.804099999999826e-05, 5.7457999999999815e-05, 5.709700000000248e-05, 5.733299999999969e-05, 5.711100000000205e-05, 5.756900000000037e-05, 5.7542000000000704e-05, 5.7722000000003104e-05, 5.8013999999998594e-05, 5.7292000000000454e-05, 5.809700000000001e-05, 5.76810000000004e-05, 5.809700000000001e-05, 5.81810000000009e-05, 5.761200000000202e-05, 5.7999999999999025e-05, 5.812499999999915e-05, 5.7542000000000704e-05, 5.733299999999969e-05, 5.7735999999999205e-05, 5.804100000000173e-05, 5.7735999999999205e-05, 5.73749999999984e-05, 5.812500000000262e-05, 5.7264000000001314e-05, 5.7792000000000954e-05, 5.7485999999998955e-05, 5.7499999999998525e-05, 5.76810000000004e-05, 5.763899999999822e-05, 5.745899999999929e-05, 5.819500000000047e-05, 5.7721999999999635e-05, 5.745899999999929e-05, 5.766700000000083e-05, 5.8179999999997956e-05, 5.726299999999837e-05, 5.7806000000000524e-05, 5.729100000000098e-05, 5.709800000000195e-05, 5.8236000000003174e-05, 5.790299999999804e-05, 5.7792000000000954e-05, 5.786099999999933e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.796" endtime="20201112 12:27:02.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.792" endtime="20201112 12:27:02.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.807" endtime="20201112 12:27:02.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.811" endtime="20201112 12:27:02.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.810" endtime="20201112 12:27:02.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.806" endtime="20201112 12:27:02.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.431" endtime="20201112 12:27:02.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.431" endtime="20201112 12:27:02.832"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.841" endtime="20201112 12:27:02.859"></status>
</kw>
<msg timestamp="20201112 12:27:02.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.839" endtime="20201112 12:27:02.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.861" endtime="20201112 12:27:02.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.863" endtime="20201112 12:27:02.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.837" endtime="20201112 12:27:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.834" endtime="20201112 12:27:02.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.873" endtime="20201112 12:27:03.159"></status>
</kw>
<msg timestamp="20201112 12:27:03.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.872" endtime="20201112 12:27:03.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.163" endtime="20201112 12:27:03.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.172" endtime="20201112 12:27:03.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.869" endtime="20201112 12:27:03.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.868" endtime="20201112 12:27:03.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.179" level="INFO">${RESULT} = [{'time': 0.019984486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8749999999999775e-05, 'source_diff': 5.8749999999999775e-05}, {'time': 0.020046486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.175" endtime="20201112 12:27:03.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.192" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:03.180" endtime="20201112 12:27:03.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.197" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.195" endtime="20201112 12:27:03.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.199" level="INFO">VALUE: [5.8749999999999775e-05, 5.886100000000033e-05, 5.88749999999999e-05, 5.906900000000187e-05, 5.9000000000000025e-05, 5.9194999999998e-05, 5.809700000000001e-05, 5.8235999999999705e-05, 5.8500000000002994e-05, 5.8499999999999525e-05, 5.897300000000036e-05, 5.8707999999997595e-05, 5.843100000000115e-05, 5.86810000000014e-05, 5.915299999999929e-05, 5.8500000000002994e-05, 5.8429999999998206e-05, 5.880499999999858e-05, 5.8680000000001925e-05, 5.854099999999876e-05, 5.858300000000094e-05, 5.8528000000002134e-05, 5.8957999999997845e-05, 5.8722000000000635e-05, 5.830499999999808e-05, 5.8708000000001065e-05, 5.8986000000000455e-05, 5.8334000000000163e-05, 5.891700000000208e-05, 5.869500000000097e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.811099999999958e-05, 5.8443999999997776e-05, 5.8722000000000635e-05, 5.86810000000014e-05, 5.829100000000198e-05, 5.811099999999958e-05, 5.881899999999815e-05, 5.8958000000001315e-05, 5.9165999999999386e-05, 5.904099999999926e-05, 5.904099999999926e-05, 5.833299999999722e-05, 5.8972000000000885e-05, 5.8569999999997374e-05, 5.88749999999999e-05, 5.8805999999998054e-05, 5.8499999999999525e-05, 5.866700000000183e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.198" endtime="20201112 12:27:03.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.193" endtime="20201112 12:27:03.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.203" endtime="20201112 12:27:03.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.206" endtime="20201112 12:27:03.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.205" endtime="20201112 12:27:03.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.201" endtime="20201112 12:27:03.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.833" endtime="20201112 12:27:03.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.832" endtime="20201112 12:27:03.227"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.236" endtime="20201112 12:27:03.255"></status>
</kw>
<msg timestamp="20201112 12:27:03.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.234" endtime="20201112 12:27:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.256" endtime="20201112 12:27:03.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.259" endtime="20201112 12:27:03.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.231" endtime="20201112 12:27:03.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.229" endtime="20201112 12:27:03.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.269" endtime="20201112 12:27:03.554"></status>
</kw>
<msg timestamp="20201112 12:27:03.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.267" endtime="20201112 12:27:03.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.559" endtime="20201112 12:27:03.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.567" endtime="20201112 12:27:03.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.265" endtime="20201112 12:27:03.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.263" endtime="20201112 12:27:03.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.574" level="INFO">${RESULT} = [{'time': 0.020059306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9791999999999484e-05, 'source_diff': 5.9791999999999484e-05}, {'time': 0.020121361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.570" endtime="20201112 12:27:03.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.588" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:03.575" endtime="20201112 12:27:03.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.593" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.592" endtime="20201112 12:27:03.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.595" level="INFO">VALUE: [5.9791999999999484e-05, 5.990300000000004e-05, 5.983299999999872e-05, 5.966700000000283e-05, 5.9749999999997305e-05, 5.9250000000000275e-05, 5.9652000000000316e-05, 6.013899999999725e-05, 5.9929999999999706e-05, 5.9929999999999706e-05, 5.9250000000000275e-05, 5.940299999999954e-05, 5.962499999999718e-05, 5.9514000000000095e-05, 6.0041999999999734e-05, 6.009699999999854e-05, 5.9250000000000275e-05, 6.0041999999999734e-05, 6.0013999999997125e-05, 5.9291999999998984e-05, 6.01810000000029e-05, 5.961100000000108e-05, 5.9598000000000984e-05, 5.926300000000037e-05, 5.944499999999825e-05, 5.9443999999998776e-05, 5.929099999999951e-05, 5.937499999999693e-05, 5.9500000000000525e-05, 5.986099999999786e-05, 5.9750000000000775e-05, 5.9943999999999276e-05, 6.012500000000115e-05, 5.986100000000133e-05, 5.963900000000022e-05, 5.9236000000000705e-05, 5.9736000000001205e-05, 5.9486000000000955e-05, 5.969500000000197e-05, 5.9750000000000775e-05, 5.962500000000065e-05, 5.909700000000101e-05, 6.0055999999999304e-05, 5.9791999999999484e-05, 5.9430000000002675e-05, 5.9735999999997735e-05, 5.9208000000001565e-05, 5.987499999999743e-05, 6.0179999999999956e-05, 5.9402000000000066e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.594" endtime="20201112 12:27:03.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.589" endtime="20201112 12:27:03.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.599" endtime="20201112 12:27:03.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.602" endtime="20201112 12:27:03.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.601" endtime="20201112 12:27:03.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.597" endtime="20201112 12:27:03.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.228" endtime="20201112 12:27:03.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.227" endtime="20201112 12:27:03.623"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.632" endtime="20201112 12:27:03.651"></status>
</kw>
<msg timestamp="20201112 12:27:03.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.630" endtime="20201112 12:27:03.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.653" endtime="20201112 12:27:03.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.656" endtime="20201112 12:27:03.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.627" endtime="20201112 12:27:03.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.625" endtime="20201112 12:27:03.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.667" endtime="20201112 12:27:03.952"></status>
</kw>
<msg timestamp="20201112 12:27:03.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.665" endtime="20201112 12:27:03.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020088569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.957" endtime="20201112 12:27:03.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.965" endtime="20201112 12:27:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.662" endtime="20201112 12:27:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.660" endtime="20201112 12:27:03.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.972" level="INFO">${RESULT} = [{'time': 0.020088569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.034700000000226e-05, 'source_diff': 6.034700000000226e-05}, {'time': 0.020154556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.968" endtime="20201112 12:27:03.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.985" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:03.973" endtime="20201112 12:27:03.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.990" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.989" endtime="20201112 12:27:03.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.992" level="INFO">VALUE: [6.034700000000226e-05, 6.0500000000001525e-05, 6.070899999999907e-05, 6.0680000000000456e-05, 6.0402000000001066e-05, 6.080500000000058e-05, 6.0221999999998665e-05, 6.087499999999843e-05, 6.068099999999993e-05, 6.0485999999998485e-05, 6.066700000000036e-05, 6.0485999999998485e-05, 6.0305999999999554e-05, 6.061099999999861e-05, 6.090300000000104e-05, 6.0847999999998764e-05, 6.0806000000000054e-05, 6.094499999999975e-05, 6.011099999999811e-05, 6.043099999999968e-05, 6.0305999999999554e-05, 6.0305999999999554e-05, 6.081899999999668e-05, 6.047299999999839e-05, 6.0362000000001304e-05, 6.0499999999998055e-05, 6.012500000000115e-05, 6.086099999999886e-05, 6.087499999999843e-05, 6.030500000000008e-05, 6.087499999999843e-05, 6.118000000000096e-05, 6.118000000000096e-05, 6.118000000000096e-05, 6.038900000000097e-05, 6.0486000000001955e-05, 6.043099999999968e-05, 6.118099999999696e-05, 6.0735999999998735e-05, 6.106999999999987e-05, 6.0750000000001775e-05, 6.0305999999999554e-05, 6.03750000000014e-05, 6.0527999999997195e-05, 6.08750000000019e-05, 6.0514000000001095e-05, 6.0971999999999416e-05, 6.080500000000058e-05, 6.030500000000008e-05, 6.0916000000001136e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.991" endtime="20201112 12:27:03.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.986" endtime="20201112 12:27:03.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.996" endtime="20201112 12:27:03.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.999" endtime="20201112 12:27:04.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.998" endtime="20201112 12:27:04.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.994" endtime="20201112 12:27:04.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.624" endtime="20201112 12:27:04.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.623" endtime="20201112 12:27:04.020"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.029" endtime="20201112 12:27:04.048"></status>
</kw>
<msg timestamp="20201112 12:27:04.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.027" endtime="20201112 12:27:04.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.049" endtime="20201112 12:27:04.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.052" endtime="20201112 12:27:04.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.025" endtime="20201112 12:27:04.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.023" endtime="20201112 12:27:04.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.062" endtime="20201112 12:27:04.347"></status>
</kw>
<msg timestamp="20201112 12:27:04.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.060" endtime="20201112 12:27:04.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.351" endtime="20201112 12:27:04.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.360" endtime="20201112 12:27:04.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.058" endtime="20201112 12:27:04.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.056" endtime="20201112 12:27:04.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.366" level="INFO">${RESULT} = [{'time': 0.019857125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.216699999999839e-05, 'source_diff': 6.216699999999839e-05}, {'time': 0.019924153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.363" endtime="20201112 12:27:04.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.380" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:04.367" endtime="20201112 12:27:04.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.384" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.383" endtime="20201112 12:27:04.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.387" level="INFO">VALUE: [6.216699999999839e-05, 6.13339999999997e-05, 6.136099999999936e-05, 6.20560000000013e-05, 6.20560000000013e-05, 6.186099999999986e-05, 6.16950000000005e-05, 6.22499999999998e-05, 6.162499999999918e-05, 6.180599999999759e-05, 6.15690000000009e-05, 6.19439999999978e-05, 6.12360000000027e-05, 6.151399999999863e-05, 6.109699999999954e-05, 6.212499999999968e-05, 6.166600000000189e-05, 6.191700000000161e-05, 6.179199999999802e-05, 6.136100000000283e-05, 6.154199999999777e-05, 6.137499999999893e-05, 6.13889999999985e-05, 6.184700000000029e-05, 6.17499999999993e-05, 6.143100000000068e-05, 6.218099999999796e-05, 6.143099999999721e-05, 6.173599999999974e-05, 6.176399999999888e-05, 6.173699999999921e-05, 6.202699999999922e-05, 6.134699999999979e-05, 6.217999999999849e-05, 6.168000000000146e-05, 6.209700000000054e-05, 6.166599999999842e-05, 6.155500000000133e-05, 6.125000000000227e-05, 6.17360000000032e-05, 6.17499999999993e-05, 6.108299999999997e-05, 6.204200000000173e-05, 6.166700000000136e-05, 6.200000000000302e-05, 6.129200000000098e-05, 6.177799999999845e-05, 6.22499999999998e-05, 6.184700000000029e-05, 6.163900000000222e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.385" endtime="20201112 12:27:04.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.381" endtime="20201112 12:27:04.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.391" endtime="20201112 12:27:04.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.394" endtime="20201112 12:27:04.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.392" endtime="20201112 12:27:04.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.389" endtime="20201112 12:27:04.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.021" endtime="20201112 12:27:04.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.021" endtime="20201112 12:27:04.415"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.423" endtime="20201112 12:27:04.442"></status>
</kw>
<msg timestamp="20201112 12:27:04.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.422" endtime="20201112 12:27:04.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.443" endtime="20201112 12:27:04.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.446" endtime="20201112 12:27:04.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.419" endtime="20201112 12:27:04.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.417" endtime="20201112 12:27:04.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.456" endtime="20201112 12:27:04.742"></status>
</kw>
<msg timestamp="20201112 12:27:04.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.454" endtime="20201112 12:27:04.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.746" endtime="20201112 12:27:04.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.754" endtime="20201112 12:27:04.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.452" endtime="20201112 12:27:04.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.450" endtime="20201112 12:27:04.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.761" level="INFO">${RESULT} = [{'time': 0.019936347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277799999999945e-05, 'source_diff': 6.277799999999945e-05}, {'time': 0.020004347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.758" endtime="20201112 12:27:04.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:04.762" endtime="20201112 12:27:04.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.779" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.778" endtime="20201112 12:27:04.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.782" level="INFO">VALUE: [6.277799999999945e-05, 6.237499999999993e-05, 6.24439999999983e-05, 6.30690000000024e-05, 6.273599999999727e-05, 6.295800000000185e-05, 6.305500000000283e-05, 6.25279999999992e-05, 6.298600000000099e-05, 6.243100000000168e-05, 6.23889999999995e-05, 6.286099999999739e-05, 6.241699999999864e-05, 6.248600000000049e-05, 6.262500000000018e-05, 6.291699999999914e-05, 6.261099999999714e-05, 6.293100000000218e-05, 6.237499999999993e-05, 6.270900000000107e-05, 6.2889e-05, 6.300000000000056e-05, 6.211100000000011e-05, 6.305499999999936e-05, 6.280499999999911e-05, 6.30279999999997e-05, 6.267999999999899e-05, 6.319499999999853e-05, 6.230600000000155e-05, 6.22080000000011e-05, 6.261100000000061e-05, 6.237499999999993e-05, 6.250000000000006e-05, 6.318100000000243e-05, 6.2889e-05, 6.211200000000305e-05, 6.215299999999882e-05, 6.287500000000043e-05, 6.298700000000046e-05, 6.213899999999925e-05, 6.286100000000086e-05, 6.300000000000056e-05, 6.276399999999988e-05, 6.280499999999911e-05, 6.269399999999856e-05, 6.262500000000018e-05, 6.290300000000304e-05, 6.23889999999995e-05, 6.206899999999793e-05, 6.232000000000112e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.780" endtime="20201112 12:27:04.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.775" endtime="20201112 12:27:04.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.785" endtime="20201112 12:27:04.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.789" endtime="20201112 12:27:04.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.787" endtime="20201112 12:27:04.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.784" endtime="20201112 12:27:04.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.416" endtime="20201112 12:27:04.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.415" endtime="20201112 12:27:04.810"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.818" endtime="20201112 12:27:04.838"></status>
</kw>
<msg timestamp="20201112 12:27:04.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.817" endtime="20201112 12:27:04.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.840" endtime="20201112 12:27:04.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.842" endtime="20201112 12:27:04.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.814" endtime="20201112 12:27:04.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.812" endtime="20201112 12:27:04.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.853" endtime="20201112 12:27:05.139"></status>
</kw>
<msg timestamp="20201112 12:27:05.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.851" endtime="20201112 12:27:05.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.143" endtime="20201112 12:27:05.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.151" endtime="20201112 12:27:05.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.848" endtime="20201112 12:27:05.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.847" endtime="20201112 12:27:05.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.158" level="INFO">${RESULT} = [{'time': 0.019875111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.391700000000014e-05, 'source_diff': 6.391700000000014e-05}, {'time': 0.019942153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.155" endtime="20201112 12:27:05.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.173" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:05.159" endtime="20201112 12:27:05.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.177" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.176" endtime="20201112 12:27:05.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.180" level="INFO">VALUE: [6.391700000000014e-05, 6.3889000000001e-05, 6.405599999999984e-05, 6.336099999999789e-05, 6.327799999999995e-05, 6.366699999999989e-05, 6.323599999999777e-05, 6.343099999999921e-05, 6.349999999999759e-05, 6.393099999999971e-05, 6.344500000000225e-05, 6.417999999999702e-05, 6.383399999999873e-05, 6.326400000000038e-05, 6.366600000000042e-05, 6.419400000000006e-05, 6.348599999999802e-05, 6.393000000000024e-05, 6.420799999999963e-05, 6.363799999999781e-05, 6.336100000000136e-05, 6.377800000000045e-05, 6.336099999999789e-05, 6.376400000000088e-05, 6.323600000000124e-05, 6.416699999999692e-05, 6.336099999999789e-05, 6.393099999999971e-05, 6.387500000000143e-05, 6.330599999999909e-05, 6.397299999999842e-05, 6.363900000000075e-05, 6.405500000000036e-05, 6.374999999999784e-05, 6.411099999999864e-05, 6.361099999999814e-05, 6.330499999999961e-05, 6.342999999999974e-05, 6.39029999999971e-05, 6.362500000000118e-05, 6.408300000000297e-05, 6.387499999999796e-05, 6.341699999999964e-05, 6.373599999999827e-05, 6.362500000000118e-05, 6.32500000000008e-05, 6.391700000000014e-05, 6.365299999999685e-05, 6.32500000000008e-05, 6.358400000000194e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.178" endtime="20201112 12:27:05.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.174" endtime="20201112 12:27:05.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.183" endtime="20201112 12:27:05.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.187" endtime="20201112 12:27:05.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.185" endtime="20201112 12:27:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.182" endtime="20201112 12:27:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.810" endtime="20201112 12:27:05.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.810" endtime="20201112 12:27:05.208"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.216" endtime="20201112 12:27:05.236"></status>
</kw>
<msg timestamp="20201112 12:27:05.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.215" endtime="20201112 12:27:05.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.238" endtime="20201112 12:27:05.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.240" endtime="20201112 12:27:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.212" endtime="20201112 12:27:05.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.210" endtime="20201112 12:27:05.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.250" endtime="20201112 12:27:05.536"></status>
</kw>
<msg timestamp="20201112 12:27:05.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019839667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:05.249" endtime="20201112 12:27:05.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019839667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01990425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:05.541" endtime="20201112 12:27:05.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.549" endtime="20201112 12:27:05.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.246" endtime="20201112 12:27:05.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.245" endtime="20201112 12:27:05.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.555" level="INFO">${RESULT} = [{'time': 0.01990425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4583e-05, 'source_diff': 6.4583e-05}, {'time': 0.019971264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486099999999939e-0...</msg>
<status status="PASS" starttime="20201112 12:27:05.552" endtime="20201112 12:27:05.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.569" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:05.556" endtime="20201112 12:27:05.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.574" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.572" endtime="20201112 12:27:05.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.576" level="INFO">VALUE: [6.4583e-05, 6.486099999999939e-05, 6.450000000000206e-05, 6.473599999999927e-05, 6.508399999999998e-05, 6.461099999999914e-05, 6.479200000000102e-05, 6.498599999999952e-05, 6.411099999999864e-05, 6.430500000000061e-05, 6.477800000000145e-05, 6.470800000000013e-05, 6.481899999999721e-05, 6.443000000000074e-05, 6.411099999999864e-05, 6.462499999999871e-05, 6.459699999999957e-05, 6.45280000000012e-05, 6.470800000000013e-05, 6.427799999999748e-05, 6.437500000000193e-05, 6.519499999999706e-05, 6.42500000000018e-05, 6.505600000000084e-05, 6.423599999999877e-05, 6.443100000000021e-05, 6.450000000000206e-05, 6.4889000000002e-05, 6.463799999999881e-05, 6.473700000000221e-05, 6.423700000000171e-05, 6.443100000000021e-05, 6.443000000000074e-05, 6.504099999999832e-05, 6.411099999999864e-05, 6.477800000000145e-05, 6.462499999999871e-05, 6.501399999999866e-05, 6.461100000000261e-05, 6.450000000000206e-05, 6.43890000000015e-05, 6.437499999999846e-05, 6.486099999999939e-05, 6.468100000000046e-05, 6.443100000000021e-05, 6.448600000000249e-05, 6.499999999999909e-05, 6.482000000000016e-05, 6.434699999999932e-05, 6.449999999999859e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.575" endtime="20201112 12:27:05.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.570" endtime="20201112 12:27:05.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.580" endtime="20201112 12:27:05.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.583" endtime="20201112 12:27:05.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.582" endtime="20201112 12:27:05.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.578" endtime="20201112 12:27:05.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.209" endtime="20201112 12:27:05.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.208" endtime="20201112 12:27:05.604"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.613" endtime="20201112 12:27:05.632"></status>
</kw>
<msg timestamp="20201112 12:27:05.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.611" endtime="20201112 12:27:05.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.633" endtime="20201112 12:27:05.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.636" endtime="20201112 12:27:05.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.608" endtime="20201112 12:27:05.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.606" endtime="20201112 12:27:05.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.646" endtime="20201112 12:27:05.931"></status>
</kw>
<msg timestamp="20201112 12:27:05.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.644" endtime="20201112 12:27:05.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.935" endtime="20201112 12:27:05.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.943" endtime="20201112 12:27:05.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.642" endtime="20201112 12:27:05.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.640" endtime="20201112 12:27:05.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.950" level="INFO">${RESULT} = [{'time': 0.019917403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.591699999999867e-05, 'source_diff': 6.591699999999867e-05}, {'time': 0.019986403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.947" endtime="20201112 12:27:05.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.963" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:05.951" endtime="20201112 12:27:05.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.968" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.967" endtime="20201112 12:27:05.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.971" level="INFO">VALUE: [6.591699999999867e-05, 6.562499999999971e-05, 6.600000000000009e-05, 6.538799999999956e-05, 6.54029999999986e-05, 6.617999999999902e-05, 6.565200000000285e-05, 6.580500000000211e-05, 6.579099999999907e-05, 6.574999999999984e-05, 6.568000000000199e-05, 6.592999999999877e-05, 6.573600000000027e-05, 6.597300000000042e-05, 6.568000000000199e-05, 6.60419999999988e-05, 6.52639999999989e-05, 6.547200000000045e-05, 6.561100000000014e-05, 6.593100000000171e-05, 6.544500000000078e-05, 6.556999999999744e-05, 6.586200000000333e-05, 6.548699999999949e-05, 6.550000000000306e-05, 6.609799999999708e-05, 6.574999999999984e-05, 6.600000000000009e-05, 6.52500000000028e-05, 6.543000000000174e-05, 6.524999999999934e-05, 6.576400000000288e-05, 6.604099999999932e-05, 6.618100000000196e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.573600000000027e-05, 6.593100000000171e-05, 6.593100000000171e-05, 6.568099999999799e-05, 6.600000000000009e-05, 6.545800000000088e-05, 6.619500000000153e-05, 6.555499999999839e-05, 6.581900000000168e-05, 6.548699999999949e-05, 6.581900000000168e-05, 6.59440000000018e-05, 6.54440000000013e-05, 6.52220000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.969" endtime="20201112 12:27:05.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.964" endtime="20201112 12:27:05.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.974" endtime="20201112 12:27:05.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.978" endtime="20201112 12:27:05.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.976" endtime="20201112 12:27:05.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.972" endtime="20201112 12:27:05.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.605" endtime="20201112 12:27:05.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.604" endtime="20201112 12:27:05.998"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.007" endtime="20201112 12:27:06.026"></status>
</kw>
<msg timestamp="20201112 12:27:06.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.006" endtime="20201112 12:27:06.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.027" endtime="20201112 12:27:06.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.030" endtime="20201112 12:27:06.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.003" endtime="20201112 12:27:06.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.001" endtime="20201112 12:27:06.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.040" endtime="20201112 12:27:06.325"></status>
</kw>
<msg timestamp="20201112 12:27:06.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:06.038" endtime="20201112 12:27:06.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:06.329" endtime="20201112 12:27:06.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.338" endtime="20201112 12:27:06.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.036" endtime="20201112 12:27:06.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.034" endtime="20201112 12:27:06.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.344" level="INFO">${RESULT} = [{'time': 0.020046, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638900000000003e-05, 'source_diff': 6.638900000000003e-05}, {'time': 0.020117986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:06.341" endtime="20201112 12:27:06.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.358" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:06.345" endtime="20201112 12:27:06.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.362" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.361" endtime="20201112 12:27:06.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.365" level="INFO">VALUE: [6.638900000000003e-05, 6.673600000000127e-05, 6.6583000000002e-05, 6.687500000000096e-05, 6.681999999999869e-05, 6.630599999999862e-05, 6.700000000000109e-05, 6.688900000000053e-05, 6.630599999999862e-05, 6.643100000000221e-05, 6.640200000000013e-05, 6.68619999999974e-05, 6.680499999999964e-05, 6.69030000000001e-05, 6.630499999999914e-05, 6.656899999999896e-05, 6.642999999999927e-05, 6.688900000000053e-05, 6.673600000000127e-05, 6.70419999999998e-05, 6.677799999999998e-05, 6.697200000000195e-05, 6.697199999999848e-05, 6.70419999999998e-05, 6.700000000000109e-05, 6.643099999999874e-05, 6.62220000000012e-05, 6.680599999999912e-05, 6.62359999999973e-05, 6.633300000000175e-05, 6.650000000000059e-05, 6.623699999999677e-05, 6.705499999999989e-05, 6.673600000000127e-05, 6.715300000000035e-05, 6.661100000000114e-05, 6.720799999999916e-05, 6.673600000000127e-05, 6.715300000000035e-05, 6.655499999999939e-05, 6.637500000000046e-05, 6.718100000000296e-05, 6.651400000000016e-05, 6.669499999999856e-05, 6.688900000000053e-05, 6.694400000000281e-05, 6.718099999999949e-05, 6.675000000000084e-05, 6.712500000000121e-05, 6.688900000000053e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.363" endtime="20201112 12:27:06.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.359" endtime="20201112 12:27:06.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.368" endtime="20201112 12:27:06.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.372" endtime="20201112 12:27:06.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.370" endtime="20201112 12:27:06.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.367" endtime="20201112 12:27:06.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.999" endtime="20201112 12:27:06.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.999" endtime="20201112 12:27:06.393"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.401" endtime="20201112 12:27:06.421"></status>
</kw>
<msg timestamp="20201112 12:27:06.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.400" endtime="20201112 12:27:06.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.422" endtime="20201112 12:27:06.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.425" endtime="20201112 12:27:06.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.397" endtime="20201112 12:27:06.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.395" endtime="20201112 12:27:06.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.435" endtime="20201112 12:27:06.722"></status>
</kw>
<msg timestamp="20201112 12:27:06.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.434" endtime="20201112 12:27:06.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.726" endtime="20201112 12:27:06.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.734" endtime="20201112 12:27:06.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.431" endtime="20201112 12:27:06.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.429" endtime="20201112 12:27:06.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.741" level="INFO">${RESULT} = [{'time': 0.019917125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.784699999999935e-05, 'source_diff': 6.784699999999935e-05}, {'time': 0.019989125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.738" endtime="20201112 12:27:06.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.756" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:06.742" endtime="20201112 12:27:06.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.760" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.759" endtime="20201112 12:27:06.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.763" level="INFO">VALUE: [6.784699999999935e-05, 6.729200000000005e-05, 6.762500000000171e-05, 6.775000000000184e-05, 6.784699999999935e-05, 6.745799999999941e-05, 6.74160000000007e-05, 6.788900000000153e-05, 6.743099999999974e-05, 6.733299999999928e-05, 6.773600000000227e-05, 6.781900000000021e-05, 6.762499999999824e-05, 6.727800000000048e-05, 6.784699999999935e-05, 6.726399999999744e-05, 6.761100000000214e-05, 6.801399999999819e-05, 6.759700000000257e-05, 6.766700000000042e-05, 6.786099999999892e-05, 6.794499999999981e-05, 6.749999999999812e-05, 6.79030000000011e-05, 6.794499999999981e-05, 6.741700000000017e-05, 6.737499999999799e-05, 6.809799999999908e-05, 6.743000000000027e-05, 6.736100000000189e-05, 6.797199999999948e-05, 6.731899999999971e-05, 6.740200000000113e-05, 6.797199999999948e-05, 6.781900000000021e-05, 6.797199999999948e-05, 6.77640000000014e-05, 6.727800000000048e-05, 6.758299999999953e-05, 6.786099999999892e-05, 6.818099999999702e-05, 6.816700000000092e-05, 6.743099999999974e-05, 6.793100000000024e-05, 6.768099999999999e-05, 6.786100000000239e-05, 6.809799999999908e-05, 6.749999999999812e-05, 6.787499999999849e-05, 6.77640000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.761" endtime="20201112 12:27:06.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.757" endtime="20201112 12:27:06.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.766" endtime="20201112 12:27:06.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.770" endtime="20201112 12:27:06.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.768" endtime="20201112 12:27:06.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.765" endtime="20201112 12:27:06.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.394" endtime="20201112 12:27:06.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.393" endtime="20201112 12:27:06.791"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.799" endtime="20201112 12:27:06.819"></status>
</kw>
<msg timestamp="20201112 12:27:06.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.798" endtime="20201112 12:27:06.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.820" endtime="20201112 12:27:06.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.823" endtime="20201112 12:27:06.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.795" endtime="20201112 12:27:06.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.793" endtime="20201112 12:27:06.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.833" endtime="20201112 12:27:07.118"></status>
</kw>
<msg timestamp="20201112 12:27:07.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.831" endtime="20201112 12:27:07.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.123" endtime="20201112 12:27:07.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.131" endtime="20201112 12:27:07.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.829" endtime="20201112 12:27:07.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.827" endtime="20201112 12:27:07.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.138" level="INFO">${RESULT} = [{'time': 0.019928833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.822199999999973e-05, 'source_diff': 6.822199999999973e-05}, {'time': 0.020003847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.134" endtime="20201112 12:27:07.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.151" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:07.139" endtime="20201112 12:27:07.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.156" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.155" endtime="20201112 12:27:07.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.158" level="INFO">VALUE: [6.822199999999973e-05, 6.905500000000189e-05, 6.862499999999924e-05, 6.822199999999973e-05, 6.906900000000146e-05, 6.919499999999759e-05, 6.901399999999919e-05, 6.897299999999995e-05, 6.824999999999887e-05, 6.882000000000069e-05, 6.919500000000106e-05, 6.837500000000246e-05, 6.827800000000148e-05, 6.854199999999783e-05, 6.908299999999756e-05, 6.812499999999874e-05, 6.83480000000028e-05, 6.888900000000253e-05, 6.87909999999986e-05, 6.837499999999899e-05, 6.829200000000105e-05, 6.908299999999756e-05, 6.838800000000256e-05, 6.886099999999992e-05, 6.811099999999917e-05, 6.816700000000092e-05, 6.862499999999924e-05, 6.869500000000056e-05, 6.868100000000099e-05, 6.919500000000106e-05, 6.836099999999942e-05, 6.838900000000203e-05, 6.869400000000109e-05, 6.874999999999937e-05, 6.838900000000203e-05, 6.858299999999706e-05, 6.82359999999993e-05, 6.899999999999962e-05, 6.826399999999844e-05, 6.858300000000053e-05, 6.884699999999688e-05, 6.858300000000053e-05, 6.905600000000137e-05, 6.832000000000019e-05, 6.844500000000031e-05, 6.887499999999949e-05, 6.869499999999709e-05, 6.893099999999777e-05, 6.87359999999998e-05, 6.873699999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.157" endtime="20201112 12:27:07.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.152" endtime="20201112 12:27:07.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.162" endtime="20201112 12:27:07.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.165" endtime="20201112 12:27:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.164" endtime="20201112 12:27:07.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.160" endtime="20201112 12:27:07.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.792" endtime="20201112 12:27:07.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.791" endtime="20201112 12:27:07.186"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.195" endtime="20201112 12:27:07.214"></status>
</kw>
<msg timestamp="20201112 12:27:07.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.193" endtime="20201112 12:27:07.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.215" endtime="20201112 12:27:07.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.218" endtime="20201112 12:27:07.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.190" endtime="20201112 12:27:07.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.188" endtime="20201112 12:27:07.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.228" endtime="20201112 12:27:07.513"></status>
</kw>
<msg timestamp="20201112 12:27:07.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.226" endtime="20201112 12:27:07.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.518" endtime="20201112 12:27:07.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.526" endtime="20201112 12:27:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.224" endtime="20201112 12:27:07.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.222" endtime="20201112 12:27:07.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.533" level="INFO">${RESULT} = [{'time': 0.019889597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.940299999999913e-05, 'source_diff': 6.940299999999913e-05}, {'time': 0.019965597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.529" endtime="20201112 12:27:07.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.546" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:07.534" endtime="20201112 12:27:07.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.551" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.550" endtime="20201112 12:27:07.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.553" level="INFO">VALUE: [6.940299999999913e-05, 7.00970000000016e-05, 6.926399999999944e-05, 6.929199999999858e-05, 6.982000000000169e-05, 6.958299999999806e-05, 7.015299999999988e-05, 7.012500000000074e-05, 6.92640000000029e-05, 6.983400000000126e-05, 6.926399999999944e-05, 7.016699999999945e-05, 7.012500000000074e-05, 6.968099999999852e-05, 6.975000000000037e-05, 6.936100000000042e-05, 6.94299999999988e-05, 6.937499999999999e-05, 6.947200000000098e-05, 6.986100000000092e-05, 7.019399999999912e-05, 6.980599999999865e-05, 6.994500000000181e-05, 7.006999999999847e-05, 6.99169999999992e-05, 6.948600000000055e-05, 6.933299999999781e-05, 6.92360000000003e-05, 6.998600000000105e-05, 7.020799999999869e-05, 6.948600000000055e-05, 7.017999999999955e-05, 6.991599999999973e-05, 6.955499999999892e-05, 6.97499999999969e-05, 6.991599999999973e-05, 6.959699999999763e-05, 6.951399999999969e-05, 6.956900000000196e-05, 6.950000000000012e-05, 6.930599999999815e-05, 6.99169999999992e-05, 6.977799999999951e-05, 6.9584000000001e-05, 6.956999999999797e-05, 6.938900000000303e-05, 6.929200000000205e-05, 6.980599999999865e-05, 6.967999999999905e-05, 7.008300000000203e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.552" endtime="20201112 12:27:07.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.547" endtime="20201112 12:27:07.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.557" endtime="20201112 12:27:07.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.560" endtime="20201112 12:27:07.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.559" endtime="20201112 12:27:07.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.555" endtime="20201112 12:27:07.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.187" endtime="20201112 12:27:07.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.186" endtime="20201112 12:27:07.581"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.590" endtime="20201112 12:27:07.609"></status>
</kw>
<msg timestamp="20201112 12:27:07.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.588" endtime="20201112 12:27:07.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.611" endtime="20201112 12:27:07.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.613" endtime="20201112 12:27:07.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.586" endtime="20201112 12:27:07.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.584" endtime="20201112 12:27:07.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.623" endtime="20201112 12:27:07.909"></status>
</kw>
<msg timestamp="20201112 12:27:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.622" endtime="20201112 12:27:07.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.914" endtime="20201112 12:27:07.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.922" endtime="20201112 12:27:07.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.619" endtime="20201112 12:27:07.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.617" endtime="20201112 12:27:07.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.929" level="INFO">${RESULT} = [{'time': 0.019871708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.08049999999967e-05, 'source_diff': 7.08049999999967e-05}, {'time': 0.019946736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:07.925" endtime="20201112 12:27:07.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.942" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:07.930" endtime="20201112 12:27:07.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.947" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.946" endtime="20201112 12:27:07.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.949" level="INFO">VALUE: [7.08049999999967e-05, 7.026400000000044e-05, 7.063900000000081e-05, 7.051400000000069e-05, 7.031899999999924e-05, 7.088900000000106e-05, 7.054199999999983e-05, 7.090300000000063e-05, 7.070800000000266e-05, 7.077799999999704e-05, 7.033400000000176e-05, 7.076400000000094e-05, 7.080599999999965e-05, 7.034800000000133e-05, 7.04169999999997e-05, 7.094399999999987e-05, 7.1069e-05, 7.051400000000069e-05, 7.034700000000185e-05, 7.038900000000056e-05, 7.100000000000162e-05, 7.118100000000002e-05, 7.04169999999997e-05, 7.031900000000271e-05, 7.112500000000174e-05, 7.055499999999992e-05, 7.051399999999722e-05, 7.118100000000002e-05, 7.072199999999876e-05, 7.063800000000134e-05, 7.056999999999897e-05, 7.047199999999851e-05, 7.044399999999937e-05, 7.093099999999977e-05, 7.075000000000137e-05, 7.047200000000198e-05, 7.016599999999998e-05, 7.094399999999987e-05, 7.034699999999838e-05, 7.044399999999937e-05, 7.022200000000173e-05, 7.059699999999863e-05, 7.034800000000133e-05, 7.025000000000087e-05, 7.070899999999866e-05, 7.080599999999965e-05, 7.086099999999845e-05, 7.102700000000128e-05, 7.080599999999965e-05, 7.011200000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.948" endtime="20201112 12:27:07.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.943" endtime="20201112 12:27:07.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.953" endtime="20201112 12:27:07.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.957" endtime="20201112 12:27:07.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.955" endtime="20201112 12:27:07.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.951" endtime="20201112 12:27:07.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.582" endtime="20201112 12:27:07.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.582" endtime="20201112 12:27:07.978"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.986" endtime="20201112 12:27:08.006"></status>
</kw>
<msg timestamp="20201112 12:27:08.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.985" endtime="20201112 12:27:08.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.007" endtime="20201112 12:27:08.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.010" endtime="20201112 12:27:08.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.982" endtime="20201112 12:27:08.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.980" endtime="20201112 12:27:08.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.020" endtime="20201112 12:27:08.305"></status>
</kw>
<msg timestamp="20201112 12:27:08.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.018" endtime="20201112 12:27:08.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.310" endtime="20201112 12:27:08.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.318" endtime="20201112 12:27:08.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.016" endtime="20201112 12:27:08.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.014" endtime="20201112 12:27:08.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.325" level="INFO">${RESULT} = [{'time': 0.019869792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.133399999999929e-05, 'source_diff': 7.133399999999929e-05}, {'time': 0.019946778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.321" endtime="20201112 12:27:08.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.339" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:08.326" endtime="20201112 12:27:08.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.344" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.343" endtime="20201112 12:27:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.346" level="INFO">VALUE: [7.133399999999929e-05, 7.187499999999902e-05, 7.136099999999895e-05, 7.161200000000215e-05, 7.147299999999898e-05, 7.201300000000271e-05, 7.191599999999826e-05, 7.15690000000005e-05, 7.192999999999783e-05, 7.206899999999752e-05, 7.181900000000074e-05, 7.14300000000008e-05, 7.126400000000144e-05, 7.16109999999992e-05, 7.138899999999809e-05, 7.193100000000077e-05, 7.212499999999927e-05, 7.188900000000206e-05, 7.177800000000151e-05, 7.205499999999795e-05, 7.149999999999865e-05, 7.137500000000199e-05, 7.143100000000027e-05, 7.136099999999895e-05, 7.215199999999894e-05, 7.155500000000092e-05, 7.200000000000262e-05, 7.183300000000031e-05, 7.187500000000249e-05, 7.192999999999783e-05, 7.168000000000105e-05, 7.167999999999758e-05, 7.126400000000144e-05, 7.14170000000007e-05, 7.176399999999847e-05, 7.172199999999976e-05, 7.190299999999816e-05, 7.16109999999992e-05, 7.176399999999847e-05, 7.131999999999972e-05, 7.155500000000092e-05, 7.186199999999893e-05, 7.219400000000112e-05, 7.184699999999988e-05, 7.170800000000019e-05, 7.148599999999908e-05, 7.13049999999972e-05, 7.19439999999974e-05, 7.187499999999902e-05, 7.208300000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.345" endtime="20201112 12:27:08.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.340" endtime="20201112 12:27:08.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.350" endtime="20201112 12:27:08.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.353" endtime="20201112 12:27:08.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.352" endtime="20201112 12:27:08.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.348" endtime="20201112 12:27:08.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.979" endtime="20201112 12:27:08.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.978" endtime="20201112 12:27:08.374"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.383" endtime="20201112 12:27:08.402"></status>
</kw>
<msg timestamp="20201112 12:27:08.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.381" endtime="20201112 12:27:08.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.404" endtime="20201112 12:27:08.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.406" endtime="20201112 12:27:08.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.379" endtime="20201112 12:27:08.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.376" endtime="20201112 12:27:08.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.416" endtime="20201112 12:27:08.702"></status>
</kw>
<msg timestamp="20201112 12:27:08.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.415" endtime="20201112 12:27:08.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.706" endtime="20201112 12:27:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.714" endtime="20201112 12:27:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.412" endtime="20201112 12:27:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.410" endtime="20201112 12:27:08.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.721" level="INFO">${RESULT} = [{'time': 0.019941806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.252799999999879e-05, 'source_diff': 7.252799999999879e-05}, {'time': 0.020018792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:08.718" endtime="20201112 12:27:08.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.735" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:08.722" endtime="20201112 12:27:08.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.740" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.738" endtime="20201112 12:27:08.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.742" level="INFO">VALUE: [7.252799999999879e-05, 7.316699999999898e-05, 7.297299999999701e-05, 7.212499999999927e-05, 7.27910000000026e-05, 7.29300000000023e-05, 7.236099999999995e-05, 7.286100000000045e-05, 7.248600000000008e-05, 7.226399999999897e-05, 7.265300000000238e-05, 7.305499999999895e-05, 7.237499999999952e-05, 7.313899999999984e-05, 7.280599999999818e-05, 7.209700000000013e-05, 7.286100000000045e-05, 7.223599999999983e-05, 7.279200000000208e-05, 7.230600000000115e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.317999999999908e-05, 7.317999999999908e-05, 7.272200000000076e-05, 7.237499999999952e-05, 7.28049999999987e-05, 7.237499999999952e-05, 7.270800000000119e-05, 7.300000000000015e-05, 7.21109999999997e-05, 7.301399999999972e-05, 7.234700000000038e-05, 7.225000000000287e-05, 7.297200000000101e-05, 7.27499999999999e-05, 7.234700000000038e-05, 7.244500000000084e-05, 7.300000000000015e-05, 7.230600000000115e-05, 7.316699999999898e-05, 7.236099999999995e-05, 7.230500000000167e-05, 7.230600000000115e-05, 7.269400000000162e-05, 7.254100000000235e-05, 7.243100000000127e-05, 7.301300000000024e-05, 7.30560000000019e-05, 7.222200000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.741" endtime="20201112 12:27:08.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.736" endtime="20201112 12:27:08.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.746" endtime="20201112 12:27:08.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.750" endtime="20201112 12:27:08.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.748" endtime="20201112 12:27:08.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.744" endtime="20201112 12:27:08.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.375" endtime="20201112 12:27:08.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.374" endtime="20201112 12:27:08.770"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.779" endtime="20201112 12:27:08.799"></status>
</kw>
<msg timestamp="20201112 12:27:08.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.778" endtime="20201112 12:27:08.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.800" endtime="20201112 12:27:08.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.803" endtime="20201112 12:27:08.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.775" endtime="20201112 12:27:08.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.773" endtime="20201112 12:27:08.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.813" endtime="20201112 12:27:09.098"></status>
</kw>
<msg timestamp="20201112 12:27:09.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.811" endtime="20201112 12:27:09.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019942514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.102" endtime="20201112 12:27:09.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.111" endtime="20201112 12:27:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.809" endtime="20201112 12:27:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.807" endtime="20201112 12:27:09.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.117" level="INFO">${RESULT} = [{'time': 0.020015778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.326399999999997e-05, 'source_diff': 7.326399999999997e-05}, {'time': 0.020093778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.114" endtime="20201112 12:27:09.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.131" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:09.118" endtime="20201112 12:27:09.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.135" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.134" endtime="20201112 12:27:09.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.138" level="INFO">VALUE: [7.326399999999997e-05, 7.347199999999804e-05, 7.418099999999955e-05, 7.402800000000029e-05, 7.405599999999943e-05, 7.32630000000005e-05, 7.319399999999865e-05, 7.348599999999761e-05, 7.362500000000077e-05, 7.329099999999963e-05, 7.337500000000052e-05, 7.392999999999983e-05, 7.32500000000004e-05, 7.382000000000222e-05, 7.355599999999893e-05, 7.400000000000115e-05, 7.338900000000009e-05, 7.405599999999943e-05, 7.386100000000145e-05, 7.362500000000077e-05, 7.413900000000084e-05, 7.34439999999989e-05, 7.354099999999988e-05, 7.31110000000007e-05, 7.381899999999927e-05, 7.32500000000004e-05, 7.409699999999866e-05, 7.342999999999933e-05, 7.407000000000247e-05, 7.381899999999927e-05, 7.3763999999997e-05, 7.366699999999948e-05, 7.405599999999943e-05, 7.382000000000222e-05, 7.373600000000133e-05, 7.379199999999961e-05, 7.394500000000234e-05, 7.381999999999875e-05, 7.39309999999993e-05, 7.386200000000093e-05, 7.381899999999927e-05, 7.418000000000008e-05, 7.367999999999958e-05, 7.337500000000052e-05, 7.342999999999933e-05, 7.329199999999911e-05, 7.416699999999998e-05, 7.38049999999997e-05, 7.356899999999902e-05, 7.343100000000227e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.136" endtime="20201112 12:27:09.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.132" endtime="20201112 12:27:09.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.141" endtime="20201112 12:27:09.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.145" endtime="20201112 12:27:09.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.143" endtime="20201112 12:27:09.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.140" endtime="20201112 12:27:09.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.771" endtime="20201112 12:27:09.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.771" endtime="20201112 12:27:09.166"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.174" endtime="20201112 12:27:09.194"></status>
</kw>
<msg timestamp="20201112 12:27:09.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.173" endtime="20201112 12:27:09.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.196" endtime="20201112 12:27:09.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.198" endtime="20201112 12:27:09.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.170" endtime="20201112 12:27:09.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.168" endtime="20201112 12:27:09.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.208" endtime="20201112 12:27:09.495"></status>
</kw>
<msg timestamp="20201112 12:27:09.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.207" endtime="20201112 12:27:09.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019777264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.499" endtime="20201112 12:27:09.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.507" endtime="20201112 12:27:09.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.204" endtime="20201112 12:27:09.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.202" endtime="20201112 12:27:09.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.514" level="INFO">${RESULT} = [{'time': 0.019852417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.515300000000141e-05, 'source_diff': 7.515300000000141e-05}, {'time': 0.019930417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.511" endtime="20201112 12:27:09.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.528" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:09.515" endtime="20201112 12:27:09.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.532" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.531" endtime="20201112 12:27:09.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.535" level="INFO">VALUE: [7.515300000000141e-05, 7.469499999999962e-05, 7.436100000000195e-05, 7.461099999999873e-05, 7.51249999999988e-05, 7.448600000000208e-05, 7.42500000000014e-05, 7.431899999999977e-05, 7.513899999999837e-05, 7.456900000000002e-05, 7.504199999999739e-05, 7.472200000000276e-05, 7.429200000000011e-05, 7.51249999999988e-05, 7.487500000000202e-05, 7.452799999999732e-05, 7.472299999999876e-05, 7.480600000000018e-05, 7.427799999999707e-05, 7.461099999999873e-05, 7.436100000000195e-05, 7.473699999999833e-05, 7.498599999999911e-05, 7.513900000000184e-05, 7.41110000000017e-05, 7.48050000000007e-05, 7.516600000000151e-05, 7.443000000000033e-05, 7.498600000000258e-05, 7.44309999999998e-05, 7.411099999999823e-05, 7.466700000000048e-05, 7.487499999999855e-05, 7.468100000000005e-05, 7.458399999999907e-05, 7.486099999999898e-05, 7.46110000000022e-05, 7.473600000000233e-05, 7.437499999999805e-05, 7.450000000000165e-05, 7.42500000000014e-05, 7.486099999999898e-05, 7.505500000000095e-05, 7.437499999999805e-05, 7.466700000000048e-05, 7.498599999999911e-05, 7.507e-05, 7.459800000000211e-05, 7.46249999999983e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.533" endtime="20201112 12:27:09.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.529" endtime="20201112 12:27:09.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.538" endtime="20201112 12:27:09.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.542" endtime="20201112 12:27:09.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.540" endtime="20201112 12:27:09.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.537" endtime="20201112 12:27:09.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.167" endtime="20201112 12:27:09.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.166" endtime="20201112 12:27:09.563"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.571" endtime="20201112 12:27:09.591"></status>
</kw>
<msg timestamp="20201112 12:27:09.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.570" endtime="20201112 12:27:09.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.592" endtime="20201112 12:27:09.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.595" endtime="20201112 12:27:09.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.567" endtime="20201112 12:27:09.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.565" endtime="20201112 12:27:09.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.605" endtime="20201112 12:27:09.891"></status>
</kw>
<msg timestamp="20201112 12:27:09.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.603" endtime="20201112 12:27:09.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.896" endtime="20201112 12:27:09.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.904" endtime="20201112 12:27:09.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.601" endtime="20201112 12:27:09.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.599" endtime="20201112 12:27:09.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.911" level="INFO">${RESULT} = [{'time': 0.019907194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.598600000000011e-05, 'source_diff': 7.598600000000011e-05}, {'time': 0.019988194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.907" endtime="20201112 12:27:09.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.925" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:09.912" endtime="20201112 12:27:09.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.930" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.929" endtime="20201112 12:27:09.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.932" level="INFO">VALUE: [7.598600000000011e-05, 7.609700000000066e-05, 7.58050000000017e-05, 7.530499999999773e-05, 7.587499999999955e-05, 7.538899999999862e-05, 7.566600000000201e-05, 7.61249999999998e-05, 7.54310000000008e-05, 7.532000000000025e-05, 7.532000000000025e-05, 7.548599999999961e-05, 7.536100000000295e-05, 7.59310000000013e-05, 7.563900000000234e-05, 7.556900000000102e-05, 7.529200000000111e-05, 7.583300000000084e-05, 7.61249999999998e-05, 7.52639999999985e-05, 7.537499999999905e-05, 7.597200000000054e-05, 7.606899999999805e-05, 7.526400000000197e-05, 7.559700000000016e-05, 7.586099999999998e-05, 7.554200000000136e-05, 7.568100000000105e-05, 7.580600000000118e-05, 7.565299999999844e-05, 7.59310000000013e-05, 7.619500000000112e-05, 7.550000000000265e-05, 7.59029999999987e-05, 7.574999999999943e-05, 7.586199999999946e-05, 7.559700000000016e-05, 7.591599999999879e-05, 7.581900000000127e-05, 7.554099999999841e-05, 7.529099999999816e-05, 7.611100000000023e-05, 7.555500000000145e-05, 7.563899999999887e-05, 7.604199999999839e-05, 7.555599999999746e-05, 7.583400000000032e-05, 7.59310000000013e-05, 7.509699999999966e-05, 7.53890000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.931" endtime="20201112 12:27:09.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.926" endtime="20201112 12:27:09.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.936" endtime="20201112 12:27:09.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.939" endtime="20201112 12:27:09.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.938" endtime="20201112 12:27:09.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.934" endtime="20201112 12:27:09.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.563" endtime="20201112 12:27:09.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.563" endtime="20201112 12:27:09.960"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.969" endtime="20201112 12:27:09.988"></status>
</kw>
<msg timestamp="20201112 12:27:09.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.967" endtime="20201112 12:27:09.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.990" endtime="20201112 12:27:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.992" endtime="20201112 12:27:09.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.965" endtime="20201112 12:27:09.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.963" endtime="20201112 12:27:09.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.003" endtime="20201112 12:27:10.289"></status>
</kw>
<msg timestamp="20201112 12:27:10.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.001" endtime="20201112 12:27:10.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.293" endtime="20201112 12:27:10.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.301" endtime="20201112 12:27:10.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.998" endtime="20201112 12:27:10.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.997" endtime="20201112 12:27:10.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.308" level="INFO">${RESULT} = [{'time': 0.019855986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.644399999999843e-05, 'source_diff': 7.644399999999843e-05}, {'time': 0.019937986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.304" endtime="20201112 12:27:10.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.321" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:10.309" endtime="20201112 12:27:10.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.326" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.325" endtime="20201112 12:27:10.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.328" level="INFO">VALUE: [7.644399999999843e-05, 7.623600000000036e-05, 7.669399999999868e-05, 7.636100000000048e-05, 7.720899999999822e-05, 7.691699999999926e-05, 7.698600000000111e-05, 7.695899999999797e-05, 7.655600000000193e-05, 7.66250000000003e-05, 7.648599999999714e-05, 7.637500000000005e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.645800000000147e-05, 7.683300000000184e-05, 7.642999999999886e-05, 7.684699999999794e-05, 7.630600000000168e-05, 7.720900000000169e-05, 7.718099999999908e-05, 7.634700000000091e-05, 7.694500000000187e-05, 7.632000000000125e-05, 7.711100000000123e-05, 7.706899999999905e-05, 7.719399999999918e-05, 7.623699999999983e-05, 7.706899999999905e-05, 7.709700000000166e-05, 7.687500000000055e-05, 7.66250000000003e-05, 7.624999999999993e-05, 7.643000000000233e-05, 7.637500000000005e-05, 7.624999999999993e-05, 7.69579999999985e-05, 7.722200000000179e-05, 7.637500000000005e-05, 7.636099999999701e-05, 7.698600000000111e-05, 7.654199999999889e-05, 7.66250000000003e-05, 7.641699999999876e-05, 7.64440000000019e-05, 7.680600000000218e-05, 7.652699999999985e-05, 7.654199999999889e-05, 7.61249999999998e-05, 7.668000000000258e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.327" endtime="20201112 12:27:10.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.322" endtime="20201112 12:27:10.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.332" endtime="20201112 12:27:10.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.335" endtime="20201112 12:27:10.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.334" endtime="20201112 12:27:10.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.330" endtime="20201112 12:27:10.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.961" endtime="20201112 12:27:10.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.961" endtime="20201112 12:27:10.356"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.365" endtime="20201112 12:27:10.384"></status>
</kw>
<msg timestamp="20201112 12:27:10.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.363" endtime="20201112 12:27:10.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.385" endtime="20201112 12:27:10.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.388" endtime="20201112 12:27:10.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.361" endtime="20201112 12:27:10.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.359" endtime="20201112 12:27:10.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.398" endtime="20201112 12:27:10.686"></status>
</kw>
<msg timestamp="20201112 12:27:10.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.396" endtime="20201112 12:27:10.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.691" endtime="20201112 12:27:10.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.699" endtime="20201112 12:27:10.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.394" endtime="20201112 12:27:10.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.392" endtime="20201112 12:27:10.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.706" level="INFO">${RESULT} = [{'time': 0.019954389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.787499999999808e-05, 'source_diff': 7.787499999999808e-05}, {'time': 0.020038347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.702" endtime="20201112 12:27:10.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.719" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:10.707" endtime="20201112 12:27:10.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.724" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.723" endtime="20201112 12:27:10.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.726" level="INFO">VALUE: [7.787499999999808e-05, 7.801400000000125e-05, 7.791600000000079e-05, 7.798600000000211e-05, 7.748600000000161e-05, 7.768000000000011e-05, 7.811100000000223e-05, 7.787500000000155e-05, 7.754199999999989e-05, 7.743099999999933e-05, 7.786099999999851e-05, 7.783399999999885e-05, 7.800000000000168e-05, 7.77909999999972e-05, 7.804199999999692e-05, 7.736200000000096e-05, 7.805599999999996e-05, 7.763900000000087e-05, 7.72640000000005e-05, 7.755499999999999e-05, 7.755499999999999e-05, 7.75830000000026e-05, 7.811099999999876e-05, 7.786100000000198e-05, 7.752800000000032e-05, 7.812499999999833e-05, 7.815300000000094e-05, 7.81389999999979e-05, 7.745899999999847e-05, 7.804200000000039e-05, 7.791700000000026e-05, 7.748599999999814e-05, 7.724999999999746e-05, 7.752800000000032e-05, 7.744399999999943e-05, 7.779200000000014e-05, 7.775000000000143e-05, 7.742999999999986e-05, 7.799999999999821e-05, 7.779100000000067e-05, 7.819499999999965e-05, 7.797199999999907e-05, 7.774999999999796e-05, 7.720799999999875e-05, 7.713900000000037e-05, 7.812499999999833e-05, 7.725000000000093e-05, 7.805599999999996e-05, 7.743099999999933e-05, 7.727800000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.725" endtime="20201112 12:27:10.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.720" endtime="20201112 12:27:10.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.730" endtime="20201112 12:27:10.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.733" endtime="20201112 12:27:10.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.732" endtime="20201112 12:27:10.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.728" endtime="20201112 12:27:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.357" endtime="20201112 12:27:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.357" endtime="20201112 12:27:10.754"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.763" endtime="20201112 12:27:10.783"></status>
</kw>
<msg timestamp="20201112 12:27:10.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.762" endtime="20201112 12:27:10.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.784" endtime="20201112 12:27:10.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.787" endtime="20201112 12:27:10.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.759" endtime="20201112 12:27:10.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.756" endtime="20201112 12:27:10.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.797" endtime="20201112 12:27:11.083"></status>
</kw>
<msg timestamp="20201112 12:27:11.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.795" endtime="20201112 12:27:11.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020753028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.087" endtime="20201112 12:27:11.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.095" endtime="20201112 12:27:11.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.793" endtime="20201112 12:27:11.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.791" endtime="20201112 12:27:11.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.102" level="INFO">${RESULT} = [{'time': 0.020831972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.894400000000093e-05, 'source_diff': 7.894400000000093e-05}, {'time': 0.020916014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.099" endtime="20201112 12:27:11.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.116" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:11.103" endtime="20201112 12:27:11.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.120" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.119" endtime="20201112 12:27:11.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.123" level="INFO">VALUE: [7.894400000000093e-05, 7.91389999999989e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.880600000000071e-05, 7.823599999999889e-05, 7.879200000000114e-05, 7.869500000000015e-05, 7.843099999999686e-05, 7.888900000000212e-05, 7.913799999999943e-05, 7.897200000000007e-05, 7.86250000000023e-05, 7.90970000000002e-05, 7.917999999999814e-05, 7.812499999999833e-05, 7.887499999999908e-05, 7.907000000000053e-05, 7.883399999999985e-05, 7.900000000000268e-05, 7.886099999999951e-05, 7.859700000000316e-05, 7.843100000000033e-05, 7.818000000000061e-05, 7.880599999999724e-05, 7.848599999999914e-05, 7.906899999999759e-05, 7.82229999999988e-05, 7.856900000000056e-05, 7.872199999999982e-05, 7.901399999999878e-05, 7.880500000000124e-05, 7.851400000000175e-05, 7.868000000000111e-05, 7.850000000000218e-05, 7.841700000000076e-05, 7.855600000000046e-05, 7.899999999999921e-05, 7.879200000000114e-05, 7.84449999999999e-05, 7.902800000000182e-05, 7.899999999999921e-05, 7.862499999999883e-05, 7.829200000000064e-05, 7.894400000000093e-05, 7.837500000000205e-05, 7.894399999999746e-05, 7.844400000000043e-05, 7.902799999999835e-05, 7.870800000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.121" endtime="20201112 12:27:11.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.117" endtime="20201112 12:27:11.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.126" endtime="20201112 12:27:11.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.130" endtime="20201112 12:27:11.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.128" endtime="20201112 12:27:11.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.125" endtime="20201112 12:27:11.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.755" endtime="20201112 12:27:11.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.754" endtime="20201112 12:27:11.151"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.159" endtime="20201112 12:27:11.179"></status>
</kw>
<msg timestamp="20201112 12:27:11.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.158" endtime="20201112 12:27:11.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.181" endtime="20201112 12:27:11.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.183" endtime="20201112 12:27:11.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.155" endtime="20201112 12:27:11.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.153" endtime="20201112 12:27:11.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.193" endtime="20201112 12:27:11.479"></status>
</kw>
<msg timestamp="20201112 12:27:11.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.192" endtime="20201112 12:27:11.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.484" endtime="20201112 12:27:11.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.492" endtime="20201112 12:27:11.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.189" endtime="20201112 12:27:11.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.187" endtime="20201112 12:27:11.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.499" level="INFO">${RESULT} = [{'time': 0.019895292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.9458999999997e-05, 'source_diff': 7.9458999999997e-05}, {'time': 0.019977278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:27:11.495" endtime="20201112 12:27:11.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.513" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:11.500" endtime="20201112 12:27:11.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.518" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.516" endtime="20201112 12:27:11.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.520" level="INFO">VALUE: [7.9458999999997e-05, 7.966700000000201e-05, 7.973599999999692e-05, 7.934700000000044e-05, 7.99169999999988e-05, 7.936100000000001e-05, 7.943000000000186e-05, 7.961100000000026e-05, 7.954099999999895e-05, 7.909699999999673e-05, 7.926399999999903e-05, 8.005499999999902e-05, 8.002799999999935e-05, 7.961100000000026e-05, 8.000000000000021e-05, 7.94450000000009e-05, 7.976399999999953e-05, 8.016699999999904e-05, 7.993100000000183e-05, 7.982000000000128e-05, 7.94030000000022e-05, 7.993000000000236e-05, 7.944400000000143e-05, 8.005499999999902e-05, 8.004099999999945e-05, 7.987500000000008e-05, 7.9458000000001e-05, 7.934700000000044e-05, 7.976399999999953e-05, 7.980599999999824e-05, 7.998600000000064e-05, 7.962499999999983e-05, 7.994499999999793e-05, 7.993100000000183e-05, 7.90970000000002e-05, 7.976399999999953e-05, 7.936100000000001e-05, 8.005600000000196e-05, 7.9458000000001e-05, 7.924999999999946e-05, 7.998600000000064e-05, 7.944399999999796e-05, 7.941600000000229e-05, 7.980499999999877e-05, 7.977800000000257e-05, 7.972200000000082e-05, 8.007000000000153e-05, 7.988899999999965e-05, 7.969500000000115e-05, 7.94450000000009e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.519" endtime="20201112 12:27:11.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.514" endtime="20201112 12:27:11.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.524" endtime="20201112 12:27:11.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.527" endtime="20201112 12:27:11.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.526" endtime="20201112 12:27:11.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.522" endtime="20201112 12:27:11.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.152" endtime="20201112 12:27:11.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.151" endtime="20201112 12:27:11.548"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.556" endtime="20201112 12:27:11.576"></status>
</kw>
<msg timestamp="20201112 12:27:11.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.555" endtime="20201112 12:27:11.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.577" endtime="20201112 12:27:11.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.580" endtime="20201112 12:27:11.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.552" endtime="20201112 12:27:11.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.550" endtime="20201112 12:27:11.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.590" endtime="20201112 12:27:11.876"></status>
</kw>
<msg timestamp="20201112 12:27:11.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.588" endtime="20201112 12:27:11.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.880" endtime="20201112 12:27:11.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.888" endtime="20201112 12:27:11.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.586" endtime="20201112 12:27:11.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.584" endtime="20201112 12:27:11.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.895" level="INFO">${RESULT} = [{'time': 0.019852931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.032000000000178e-05, 'source_diff': 8.032000000000178e-05}, {'time': 0.019936917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.892" endtime="20201112 12:27:11.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.908" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:11.896" endtime="20201112 12:27:11.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.913" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.912" endtime="20201112 12:27:11.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.915" level="INFO">VALUE: [8.032000000000178e-05, 8.080599999999924e-05, 8.076300000000106e-05, 8.020899999999775e-05, 8.056900000000256e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.119399999999971e-05, 8.087499999999762e-05, 8.105599999999949e-05, 8.105599999999949e-05, 8.090299999999676e-05, 8.030599999999874e-05, 8.107000000000253e-05, 8.049999999999724e-05, 8.075000000000096e-05, 8.100000000000121e-05, 8.105599999999949e-05, 8.118000000000014e-05, 8.048600000000114e-05, 8.040299999999972e-05, 8.067999999999964e-05, 8.087500000000108e-05, 8.087499999999762e-05, 8.075000000000096e-05, 8.106899999999959e-05, 8.065299999999997e-05, 8.105599999999949e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.093099999999936e-05, 8.037500000000058e-05, 8.076400000000053e-05, 8.118099999999961e-05, 8.054199999999942e-05, 8.058299999999866e-05, 8.036100000000101e-05, 8.115300000000047e-05, 8.105500000000002e-05, 8.087500000000108e-05, 8.067999999999964e-05, 8.059699999999823e-05, 8.105599999999949e-05, 8.069500000000215e-05, 8.098600000000164e-05, 8.09169999999998e-05, 8.037500000000058e-05, 8.009800000000067e-05, 8.086100000000151e-05, 8.098700000000111e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.914" endtime="20201112 12:27:11.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.909" endtime="20201112 12:27:11.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.919" endtime="20201112 12:27:11.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.922" endtime="20201112 12:27:11.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.921" endtime="20201112 12:27:11.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.917" endtime="20201112 12:27:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.549" endtime="20201112 12:27:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.548" endtime="20201112 12:27:11.943"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.952" endtime="20201112 12:27:11.972"></status>
</kw>
<msg timestamp="20201112 12:27:11.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.950" endtime="20201112 12:27:11.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.974" endtime="20201112 12:27:11.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.976" endtime="20201112 12:27:11.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.948" endtime="20201112 12:27:11.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.946" endtime="20201112 12:27:11.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.986" endtime="20201112 12:27:12.271"></status>
</kw>
<msg timestamp="20201112 12:27:12.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.985" endtime="20201112 12:27:12.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019933056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.276" endtime="20201112 12:27:12.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.284" endtime="20201112 12:27:12.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.982" endtime="20201112 12:27:12.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.980" endtime="20201112 12:27:12.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.291" level="INFO">${RESULT} = [{'time': 0.019933056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194499999999993e-05, 'source_diff': 8.194499999999993e-05}, {'time': 0.020020069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.287" endtime="20201112 12:27:12.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.304" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:12.292" endtime="20201112 12:27:12.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.309" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.308" endtime="20201112 12:27:12.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.311" level="INFO">VALUE: [8.194499999999993e-05, 8.212500000000234e-05, 8.144399999999996e-05, 8.11109999999983e-05, 8.204200000000092e-05, 8.200000000000221e-05, 8.179099999999773e-05, 8.213899999999844e-05, 8.220800000000028e-05, 8.127799999999713e-05, 8.131899999999984e-05, 8.202799999999788e-05, 8.156999999999956e-05, 8.137499999999812e-05, 8.198599999999917e-05, 8.130500000000027e-05, 8.126300000000156e-05, 8.186199999999852e-05, 8.174999999999849e-05, 8.2152000000002e-05, 8.18329999999999e-05, 8.186099999999905e-05, 8.144399999999996e-05, 8.108300000000263e-05, 8.19170000000008e-05, 8.136099999999855e-05, 8.148599999999867e-05, 8.126400000000103e-05, 8.136099999999855e-05, 8.173599999999892e-05, 8.10979999999982e-05, 8.175000000000196e-05, 8.137499999999812e-05, 8.168000000000064e-05, 8.137500000000158e-05, 8.14719999999991e-05, 8.144499999999943e-05, 8.109699999999873e-05, 8.123599999999842e-05, 8.179099999999773e-05, 8.191699999999733e-05, 8.218100000000061e-05, 8.215300000000147e-05, 8.181999999999981e-05, 8.130599999999974e-05, 8.126400000000103e-05, 8.155599999999999e-05, 8.137499999999812e-05, 8.172299999999882e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.310" endtime="20201112 12:27:12.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.305" endtime="20201112 12:27:12.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.315" endtime="20201112 12:27:12.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.318" endtime="20201112 12:27:12.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.317" endtime="20201112 12:27:12.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.313" endtime="20201112 12:27:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.944" endtime="20201112 12:27:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.944" endtime="20201112 12:27:12.339"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.348" endtime="20201112 12:27:12.367"></status>
</kw>
<msg timestamp="20201112 12:27:12.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.346" endtime="20201112 12:27:12.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.369" endtime="20201112 12:27:12.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.372" endtime="20201112 12:27:12.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.344" endtime="20201112 12:27:12.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.342" endtime="20201112 12:27:12.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.382" endtime="20201112 12:27:12.668"></status>
</kw>
<msg timestamp="20201112 12:27:12.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.380" endtime="20201112 12:27:12.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.672" endtime="20201112 12:27:12.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.680" endtime="20201112 12:27:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.378" endtime="20201112 12:27:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.376" endtime="20201112 12:27:12.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.687" level="INFO">${RESULT} = [{'time': 0.019952278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.258400000000013e-05, 'source_diff': 8.258400000000013e-05}, {'time': 0.020038292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.684" endtime="20201112 12:27:12.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.700" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:12.688" endtime="20201112 12:27:12.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.705" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.704" endtime="20201112 12:27:12.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.707" level="INFO">VALUE: [8.258400000000013e-05, 8.306999999999759e-05, 8.280599999999777e-05, 8.273599999999992e-05, 8.251299999999934e-05, 8.295800000000103e-05, 8.234799999999945e-05, 8.258300000000066e-05, 8.249999999999924e-05, 8.272200000000035e-05, 8.298600000000017e-05, 8.317999999999867e-05, 8.276399999999906e-05, 8.269500000000068e-05, 8.216700000000104e-05, 8.280600000000124e-05, 8.230599999999727e-05, 8.252800000000185e-05, 8.281999999999734e-05, 8.238899999999869e-05, 8.212499999999887e-05, 8.27369999999994e-05, 8.31110000000003e-05, 8.212499999999887e-05, 8.287499999999962e-05, 8.206900000000059e-05, 8.255499999999805e-05, 8.258300000000066e-05, 8.275000000000296e-05, 8.241699999999783e-05, 8.232000000000031e-05, 8.255600000000099e-05, 8.312499999999987e-05, 8.251400000000228e-05, 8.272200000000035e-05, 8.306999999999759e-05, 8.243100000000086e-05, 8.212500000000234e-05, 8.269400000000121e-05, 8.273599999999992e-05, 8.242999999999792e-05, 8.238899999999869e-05, 8.291699999999833e-05, 8.294400000000146e-05, 8.222199999999985e-05, 8.280600000000124e-05, 8.318100000000161e-05, 8.240299999999826e-05, 8.230600000000074e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.706" endtime="20201112 12:27:12.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.701" endtime="20201112 12:27:12.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.711" endtime="20201112 12:27:12.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.715" endtime="20201112 12:27:12.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.713" endtime="20201112 12:27:12.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.709" endtime="20201112 12:27:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.340" endtime="20201112 12:27:12.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.340" endtime="20201112 12:27:12.735"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.744" endtime="20201112 12:27:12.764"></status>
</kw>
<msg timestamp="20201112 12:27:12.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.742" endtime="20201112 12:27:12.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.765" endtime="20201112 12:27:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.768" endtime="20201112 12:27:12.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.740" endtime="20201112 12:27:12.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.738" endtime="20201112 12:27:12.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.778" endtime="20201112 12:27:13.064"></status>
</kw>
<msg timestamp="20201112 12:27:13.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.776" endtime="20201112 12:27:13.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.068" endtime="20201112 12:27:13.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.076" endtime="20201112 12:27:13.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.774" endtime="20201112 12:27:13.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.772" endtime="20201112 12:27:13.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.083" level="INFO">${RESULT} = [{'time': 0.019898472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.329099999999923e-05, 'source_diff': 8.329099999999923e-05}, {'time': 0.019984486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.080" endtime="20201112 12:27:13.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.097" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:13.084" endtime="20201112 12:27:13.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.102" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.101" endtime="20201112 12:27:13.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.104" level="INFO">VALUE: [8.329099999999923e-05, 8.373600000000092e-05, 8.394500000000193e-05, 8.357000000000156e-05, 8.323600000000042e-05, 8.347199999999763e-05, 8.406999999999859e-05, 8.413900000000044e-05, 8.375000000000049e-05, 8.417999999999967e-05, 8.393000000000289e-05, 8.36110000000008e-05, 8.397199999999813e-05, 8.388900000000019e-05, 8.397199999999813e-05, 8.327799999999913e-05, 8.332000000000131e-05, 8.354199999999895e-05, 8.350000000000024e-05, 8.326400000000303e-05, 8.386100000000105e-05, 8.400000000000074e-05, 8.330600000000174e-05, 8.332000000000131e-05, 8.355599999999852e-05, 8.316699999999858e-05, 8.394400000000246e-05, 8.331900000000184e-05, 8.329099999999923e-05, 8.344400000000196e-05, 8.358300000000166e-05, 8.36659999999996e-05, 8.363899999999994e-05, 8.386100000000105e-05, 8.326399999999956e-05, 8.341699999999883e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.338800000000021e-05, 8.326399999999956e-05, 8.386200000000052e-05, 8.336200000000002e-05, 8.363899999999994e-05, 8.39720000000016e-05, 8.354099999999948e-05, 8.379099999999973e-05, 8.324999999999999e-05, 8.340299999999926e-05, 8.357000000000156e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.103" endtime="20201112 12:27:13.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.098" endtime="20201112 12:27:13.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.112" endtime="20201112 12:27:13.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.116" endtime="20201112 12:27:13.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.114" endtime="20201112 12:27:13.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.111" endtime="20201112 12:27:13.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.736" endtime="20201112 12:27:13.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.736" endtime="20201112 12:27:13.137"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.145" endtime="20201112 12:27:13.166"></status>
</kw>
<msg timestamp="20201112 12:27:13.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.144" endtime="20201112 12:27:13.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.167" endtime="20201112 12:27:13.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.170" endtime="20201112 12:27:13.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.141" endtime="20201112 12:27:13.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.139" endtime="20201112 12:27:13.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.180" endtime="20201112 12:27:13.466"></status>
</kw>
<msg timestamp="20201112 12:27:13.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.178" endtime="20201112 12:27:13.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019924639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.470" endtime="20201112 12:27:13.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.478" endtime="20201112 12:27:13.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.175" endtime="20201112 12:27:13.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.174" endtime="20201112 12:27:13.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.485" level="INFO">${RESULT} = [{'time': 0.019924639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.452800000000038e-05, 'source_diff': 8.452800000000038e-05}, {'time': 0.020011625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.482" endtime="20201112 12:27:13.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.499" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:13.486" endtime="20201112 12:27:13.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.503" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.502" endtime="20201112 12:27:13.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.506" level="INFO">VALUE: [8.452800000000038e-05, 8.429200000000317e-05, 8.427800000000013e-05, 8.49309999999999e-05, 8.476400000000106e-05, 8.46249999999979e-05, 8.491700000000033e-05, 8.494500000000293e-05, 8.423599999999795e-05, 8.42370000000009e-05, 8.494399999999999e-05, 8.473599999999845e-05, 8.513900000000144e-05, 8.46660000000006e-05, 8.470799999999931e-05, 8.51799999999972e-05, 8.518000000000067e-05, 8.501400000000131e-05, 8.408300000000216e-05, 8.501400000000131e-05, 8.487500000000162e-05, 8.516700000000058e-05, 8.438900000000069e-05, 8.422299999999786e-05, 8.506900000000012e-05, 8.434700000000198e-05, 8.440300000000026e-05, 8.431899999999937e-05, 8.431899999999937e-05, 8.451400000000081e-05, 8.46110000000018e-05, 8.46530000000005e-05, 8.450000000000124e-05, 8.44309999999994e-05, 8.427800000000013e-05, 8.438900000000069e-05, 8.413800000000096e-05, 8.469500000000268e-05, 8.49729999999986e-05, 8.506900000000012e-05, 8.500000000000174e-05, 8.43469999999985e-05, 8.458299999999919e-05, 8.480499999999683e-05, 8.504200000000045e-05, 8.452800000000038e-05, 8.506900000000012e-05, 8.484700000000248e-05, 8.487499999999815e-05, 8.49859999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.504" endtime="20201112 12:27:13.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.500" endtime="20201112 12:27:13.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.509" endtime="20201112 12:27:13.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.513" endtime="20201112 12:27:13.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.511" endtime="20201112 12:27:13.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.508" endtime="20201112 12:27:13.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.138" endtime="20201112 12:27:13.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.137" endtime="20201112 12:27:13.534"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.543" endtime="20201112 12:27:13.562"></status>
</kw>
<msg timestamp="20201112 12:27:13.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.541" endtime="20201112 12:27:13.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.564" endtime="20201112 12:27:13.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.566" endtime="20201112 12:27:13.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.538" endtime="20201112 12:27:13.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.536" endtime="20201112 12:27:13.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.576" endtime="20201112 12:27:13.863"></status>
</kw>
<msg timestamp="20201112 12:27:13.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020323528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.574" endtime="20201112 12:27:13.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020323528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.867" endtime="20201112 12:27:13.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.875" endtime="20201112 12:27:13.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.572" endtime="20201112 12:27:13.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.570" endtime="20201112 12:27:13.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.882" level="INFO">${RESULT} = [{'time': 0.020323528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541700000000083e-05, 'source_diff': 8.541700000000083e-05}, {'time': 0.020412542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.879" endtime="20201112 12:27:13.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.896" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:13.883" endtime="20201112 12:27:13.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.900" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.899" endtime="20201112 12:27:13.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.903" level="INFO">VALUE: [8.541700000000083e-05, 8.544499999999997e-05, 8.574999999999902e-05, 8.544499999999997e-05, 8.56119999999988e-05, 8.563900000000194e-05, 8.602799999999841e-05, 8.545800000000006e-05, 8.576399999999859e-05, 8.619400000000124e-05, 8.580499999999783e-05, 8.524999999999852e-05, 8.576399999999859e-05, 8.54720000000031e-05, 8.537499999999865e-05, 8.557000000000009e-05, 8.61669999999981e-05, 8.54859999999992e-05, 8.587499999999915e-05, 8.566700000000108e-05, 8.523599999999895e-05, 8.604099999999851e-05, 8.573599999999945e-05, 8.531900000000037e-05, 8.529100000000123e-05, 8.588899999999872e-05, 8.540300000000126e-05, 8.615299999999854e-05, 8.605599999999755e-05, 8.574999999999902e-05, 8.569500000000022e-05, 8.544499999999997e-05, 8.537499999999865e-05, 8.55980000000027e-05, 8.605499999999808e-05, 8.602800000000188e-05, 8.619399999999777e-05, 8.53469999999995e-05, 8.525000000000199e-05, 8.616599999999863e-05, 8.56660000000016e-05, 8.608300000000069e-05, 8.557000000000009e-05, 8.504200000000045e-05, 8.554200000000095e-05, 8.524999999999852e-05, 8.537499999999865e-05, 8.570800000000031e-05, 8.573599999999945e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.901" endtime="20201112 12:27:13.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.897" endtime="20201112 12:27:13.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.906" endtime="20201112 12:27:13.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.910" endtime="20201112 12:27:13.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.908" endtime="20201112 12:27:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.905" endtime="20201112 12:27:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.534" endtime="20201112 12:27:13.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.534" endtime="20201112 12:27:13.931"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.939" endtime="20201112 12:27:13.960"></status>
</kw>
<msg timestamp="20201112 12:27:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.938" endtime="20201112 12:27:13.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.961" endtime="20201112 12:27:13.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.964" endtime="20201112 12:27:13.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.935" endtime="20201112 12:27:13.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.933" endtime="20201112 12:27:13.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.974" endtime="20201112 12:27:14.260"></status>
</kw>
<msg timestamp="20201112 12:27:14.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.972" endtime="20201112 12:27:14.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.264" endtime="20201112 12:27:14.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.273" endtime="20201112 12:27:14.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.970" endtime="20201112 12:27:14.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.968" endtime="20201112 12:27:14.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.279" level="INFO">${RESULT} = [{'time': 0.020440194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.705499999999908e-05, 'source_diff': 8.705499999999908e-05}, {'time': 0.020531278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.276" endtime="20201112 12:27:14.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.293" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:14.280" endtime="20201112 12:27:14.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.297" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.296" endtime="20201112 12:27:14.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.300" level="INFO">VALUE: [8.705499999999908e-05, 8.726400000000009e-05, 8.687500000000015e-05, 8.622200000000038e-05, 8.638900000000269e-05, 8.61249999999994e-05, 8.66669999999986e-05, 8.615299999999854e-05, 8.644500000000097e-05, 8.686100000000058e-05, 8.64730000000001e-05, 8.629199999999823e-05, 8.69730000000006e-05, 8.705599999999855e-05, 8.680499999999883e-05, 8.636100000000008e-05, 8.645900000000054e-05, 8.673600000000045e-05, 8.700000000000027e-05, 8.680499999999883e-05, 8.709699999999779e-05, 8.656900000000162e-05, 8.700000000000027e-05, 8.623599999999995e-05, 8.697299999999714e-05, 8.719499999999825e-05, 8.672200000000088e-05, 8.624999999999952e-05, 8.669500000000122e-05, 8.673599999999698e-05, 8.624999999999952e-05, 8.66249999999999e-05, 8.687500000000015e-05, 8.630499999999833e-05, 8.641599999999888e-05, 8.670799999999784e-05, 8.641699999999836e-05, 8.627799999999866e-05, 8.638899999999922e-05, 8.708399999999769e-05, 8.630600000000127e-05, 8.626399999999909e-05, 8.666700000000208e-05, 8.630600000000127e-05, 8.620900000000029e-05, 8.644400000000149e-05, 8.64310000000014e-05, 8.623599999999995e-05, 8.644400000000149e-05, 8.644399999999802e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.298" endtime="20201112 12:27:14.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.294" endtime="20201112 12:27:14.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.303" endtime="20201112 12:27:14.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.307" endtime="20201112 12:27:14.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.305" endtime="20201112 12:27:14.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.302" endtime="20201112 12:27:14.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.932" endtime="20201112 12:27:14.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.931" endtime="20201112 12:27:14.328"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.336" endtime="20201112 12:27:14.356"></status>
</kw>
<msg timestamp="20201112 12:27:14.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.335" endtime="20201112 12:27:14.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.358" endtime="20201112 12:27:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.360" endtime="20201112 12:27:14.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.332" endtime="20201112 12:27:14.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.330" endtime="20201112 12:27:14.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.371" endtime="20201112 12:27:14.655"></status>
</kw>
<msg timestamp="20201112 12:27:14.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.369" endtime="20201112 12:27:14.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.659" endtime="20201112 12:27:14.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.668" endtime="20201112 12:27:14.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.366" endtime="20201112 12:27:14.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.365" endtime="20201112 12:27:14.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.674" level="INFO">${RESULT} = [{'time': 0.019925139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.815300000000054e-05, 'source_diff': 8.815300000000054e-05}, {'time': 0.020019167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:14.671" endtime="20201112 12:27:14.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.689" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:14.675" endtime="20201112 12:27:14.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.694" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.693" endtime="20201112 12:27:14.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.696" level="INFO">VALUE: [8.815300000000054e-05, 8.820900000000229e-05, 8.73059999999988e-05, 8.763900000000047e-05, 8.750000000000077e-05, 8.813800000000149e-05, 8.795799999999909e-05, 8.729099999999976e-05, 8.792999999999995e-05, 8.769400000000274e-05, 8.81250000000014e-05, 8.78189999999994e-05, 8.816699999999664e-05, 8.737500000000065e-05, 8.758300000000219e-05, 8.818099999999968e-05, 8.724999999999705e-05, 8.81670000000001e-05, 8.761199999999733e-05, 8.784800000000148e-05, 8.819399999999977e-05, 8.71669999999991e-05, 8.792999999999995e-05, 8.727799999999966e-05, 8.715299999999954e-05, 8.725000000000052e-05, 8.782000000000234e-05, 8.724999999999705e-05, 8.748599999999773e-05, 8.768099999999918e-05, 8.784699999999854e-05, 8.775000000000102e-05, 8.750000000000077e-05, 8.768100000000265e-05, 8.819400000000324e-05, 8.794399999999952e-05, 8.790200000000081e-05, 8.711100000000083e-05, 8.773599999999798e-05, 8.788899999999725e-05, 8.800000000000127e-05, 8.804199999999998e-05, 8.820799999999934e-05, 8.734699999999804e-05, 8.755599999999905e-05, 8.805599999999955e-05, 8.811099999999836e-05, 8.793099999999943e-05, 8.811099999999836e-05, 8.787500000000115e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.695" endtime="20201112 12:27:14.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.690" endtime="20201112 12:27:14.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.700" endtime="20201112 12:27:14.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.703" endtime="20201112 12:27:14.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.702" endtime="20201112 12:27:14.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.698" endtime="20201112 12:27:14.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.329" endtime="20201112 12:27:14.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.328" endtime="20201112 12:27:14.724"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.732" endtime="20201112 12:27:14.753"></status>
</kw>
<msg timestamp="20201112 12:27:14.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.731" endtime="20201112 12:27:14.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.754" endtime="20201112 12:27:14.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.757" endtime="20201112 12:27:14.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.728" endtime="20201112 12:27:14.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.726" endtime="20201112 12:27:14.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.767" endtime="20201112 12:27:15.053"></status>
</kw>
<msg timestamp="20201112 12:27:15.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.765" endtime="20201112 12:27:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.057" endtime="20201112 12:27:15.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.065" endtime="20201112 12:27:15.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.763" endtime="20201112 12:27:15.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.761" endtime="20201112 12:27:15.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.072" level="INFO">${RESULT} = [{'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.907000000000012e-05, 'source_diff': 8.907000000000012e-05}, {'time': 0.020018944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.069" endtime="20201112 12:27:15.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:15.073" endtime="20201112 12:27:15.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.090" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.089" endtime="20201112 12:27:15.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.092" level="INFO">VALUE: [8.907000000000012e-05, 8.83189999999999e-05, 8.909699999999979e-05, 8.890299999999782e-05, 8.851400000000134e-05, 8.876399999999812e-05, 8.852800000000091e-05, 8.880500000000083e-05, 8.811099999999836e-05, 8.872199999999941e-05, 8.877799999999769e-05, 8.869499999999975e-05, 8.918100000000068e-05, 8.907000000000012e-05, 8.905600000000055e-05, 8.825000000000152e-05, 8.859699999999929e-05, 8.811099999999836e-05, 8.824999999999805e-05, 8.861099999999886e-05, 8.901399999999837e-05, 8.843000000000045e-05, 8.901400000000184e-05, 8.919400000000077e-05, 8.874999999999855e-05, 8.838900000000122e-05, 8.918100000000068e-05, 8.822199999999891e-05, 8.918100000000068e-05, 8.861099999999886e-05, 8.895800000000009e-05, 8.844400000000002e-05, 8.898599999999923e-05, 8.880500000000083e-05, 8.905500000000108e-05, 8.905499999999761e-05, 8.843000000000045e-05, 8.884699999999954e-05, 8.901400000000184e-05, 8.897199999999966e-05, 8.895899999999957e-05, 8.908399999999969e-05, 8.833300000000294e-05, 8.865200000000156e-05, 8.874999999999855e-05, 8.915300000000154e-05, 8.915200000000206e-05, 8.873599999999898e-05, 8.837499999999818e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.091" endtime="20201112 12:27:15.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.086" endtime="20201112 12:27:15.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.096" endtime="20201112 12:27:15.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.099" endtime="20201112 12:27:15.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.098" endtime="20201112 12:27:15.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.094" endtime="20201112 12:27:15.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.725" endtime="20201112 12:27:15.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.724" endtime="20201112 12:27:15.120"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.129" endtime="20201112 12:27:15.149"></status>
</kw>
<msg timestamp="20201112 12:27:15.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.127" endtime="20201112 12:27:15.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.151" endtime="20201112 12:27:15.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.153" endtime="20201112 12:27:15.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.125" endtime="20201112 12:27:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.123" endtime="20201112 12:27:15.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.163" endtime="20201112 12:27:15.448"></status>
</kw>
<msg timestamp="20201112 12:27:15.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.162" endtime="20201112 12:27:15.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.452" endtime="20201112 12:27:15.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.461" endtime="20201112 12:27:15.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.159" endtime="20201112 12:27:15.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.158" endtime="20201112 12:27:15.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.467" level="INFO">${RESULT} = [{'time': 0.019961347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.911099999999936e-05, 'source_diff': 8.911099999999936e-05}, {'time': 0.020056375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.464" endtime="20201112 12:27:15.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.481" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:15.469" endtime="20201112 12:27:15.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.485" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.484" endtime="20201112 12:27:15.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.488" level="INFO">VALUE: [8.911099999999936e-05, 8.99999999999998e-05, 8.962499999999943e-05, 8.932000000000037e-05, 8.977799999999869e-05, 8.998600000000023e-05, 8.959700000000029e-05, 8.955599999999758e-05, 8.993100000000143e-05, 9.001399999999937e-05, 8.93190000000009e-05, 8.98190000000014e-05, 9.005499999999861e-05, 8.936099999999961e-05, 9.020799999999787e-05, 8.976399999999912e-05, 9.005499999999861e-05, 8.955600000000105e-05, 9.004199999999851e-05, 8.932000000000037e-05, 8.955600000000105e-05, 8.936099999999961e-05, 8.977699999999922e-05, 8.967999999999823e-05, 9.009799999999679e-05, 8.936099999999961e-05, 8.987499999999968e-05, 9.001400000000284e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.923599999999948e-05, 9.002799999999894e-05, 8.969500000000075e-05, 8.972200000000041e-05, 8.983400000000044e-05, 8.912499999999893e-05, 8.958400000000019e-05, 8.926299999999915e-05, 8.925000000000252e-05, 8.937499999999918e-05, 8.929099999999829e-05, 8.966599999999866e-05, 8.98329999999975e-05, 8.955500000000158e-05, 8.930500000000133e-05, 8.952800000000191e-05, 8.926400000000209e-05, 8.9945000000001e-05, 8.911099999999936e-05, 8.936099999999961e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.487" endtime="20201112 12:27:15.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.482" endtime="20201112 12:27:15.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.492" endtime="20201112 12:27:15.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.495" endtime="20201112 12:27:15.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.493" endtime="20201112 12:27:15.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.490" endtime="20201112 12:27:15.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.121" endtime="20201112 12:27:15.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.121" endtime="20201112 12:27:15.516"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.524" endtime="20201112 12:27:15.545"></status>
</kw>
<msg timestamp="20201112 12:27:15.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.523" endtime="20201112 12:27:15.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.546" endtime="20201112 12:27:15.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.549" endtime="20201112 12:27:15.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.520" endtime="20201112 12:27:15.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.518" endtime="20201112 12:27:15.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.559" endtime="20201112 12:27:15.844"></status>
</kw>
<msg timestamp="20201112 12:27:15.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.557" endtime="20201112 12:27:15.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.849" endtime="20201112 12:27:15.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.857" endtime="20201112 12:27:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.555" endtime="20201112 12:27:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.553" endtime="20201112 12:27:15.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.864" level="INFO">${RESULT} = [{'time': 0.020002042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.119500000000225e-05, 'source_diff': 9.119500000000225e-05}, {'time': 0.020098014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.860" endtime="20201112 12:27:15.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.877" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:15.865" endtime="20201112 12:27:15.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.882" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.881" endtime="20201112 12:27:15.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.884" level="INFO">VALUE: [9.119500000000225e-05, 9.034700000000104e-05, 9.030599999999833e-05, 9.077700000000022e-05, 9.087499999999721e-05, 9.079199999999926e-05, 9.090299999999982e-05, 9.044399999999855e-05, 9.042999999999898e-05, 9.051399999999987e-05, 9.094400000000252e-05, 9.047200000000116e-05, 9.068100000000218e-05, 9.079200000000273e-05, 9.04450000000015e-05, 9.05000000000003e-05, 9.066699999999914e-05, 9.118099999999921e-05, 9.023600000000048e-05, 9.10000000000008e-05, 9.041599999999941e-05, 9.051399999999987e-05, 9.040299999999932e-05, 9.106899999999918e-05, 9.048600000000073e-05, 9.020799999999787e-05, 9.051399999999987e-05, 9.0945000000002e-05, 9.108400000000169e-05, 9.062500000000043e-05, 9.082000000000187e-05, 9.055600000000205e-05, 9.058300000000172e-05, 9.040299999999932e-05, 9.088900000000025e-05, 9.01389999999995e-05, 9.098600000000123e-05, 9.11939999999993e-05, 9.036099999999714e-05, 9.05000000000003e-05, 9.030599999999833e-05, 9.086100000000111e-05, 9.10000000000008e-05, 9.087499999999721e-05, 9.086100000000111e-05, 9.042999999999898e-05, 9.025000000000005e-05, 9.05130000000004e-05, 9.094399999999905e-05, 9.106899999999918e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.883" endtime="20201112 12:27:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.878" endtime="20201112 12:27:15.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.888" endtime="20201112 12:27:15.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.891" endtime="20201112 12:27:15.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.890" endtime="20201112 12:27:15.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.886" endtime="20201112 12:27:15.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.517" endtime="20201112 12:27:15.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.516" endtime="20201112 12:27:15.912"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.921" endtime="20201112 12:27:15.941"></status>
</kw>
<msg timestamp="20201112 12:27:15.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.919" endtime="20201112 12:27:15.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.943" endtime="20201112 12:27:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.945" endtime="20201112 12:27:15.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.917" endtime="20201112 12:27:15.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.915" endtime="20201112 12:27:15.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.955" endtime="20201112 12:27:16.241"></status>
</kw>
<msg timestamp="20201112 12:27:16.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.954" endtime="20201112 12:27:16.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.245" endtime="20201112 12:27:16.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.253" endtime="20201112 12:27:16.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.951" endtime="20201112 12:27:16.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.949" endtime="20201112 12:27:16.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.260" level="INFO">${RESULT} = [{'time': 0.019950014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.161099999999839e-05, 'source_diff': 9.161099999999839e-05}, {'time': 0.020048028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.257" endtime="20201112 12:27:16.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.274" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:16.261" endtime="20201112 12:27:16.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.279" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.278" endtime="20201112 12:27:16.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.282" level="INFO">VALUE: [9.161099999999839e-05, 9.198599999999876e-05, 9.162499999999796e-05, 9.14719999999987e-05, 9.165300000000057e-05, 9.198699999999824e-05, 9.194400000000005e-05, 9.148600000000173e-05, 9.212499999999846e-05, 9.161099999999839e-05, 9.129199999999976e-05, 9.186099999999864e-05, 9.205500000000061e-05, 9.155599999999958e-05, 9.134800000000151e-05, 9.179199999999679e-05, 9.144499999999903e-05, 9.168099999999971e-05, 9.208299999999975e-05, 9.206999999999965e-05, 9.181899999999993e-05, 9.137500000000118e-05, 9.184699999999907e-05, 9.211100000000236e-05, 9.21940000000003e-05, 9.179200000000026e-05, 9.173599999999851e-05, 9.13199999999989e-05, 9.148599999999826e-05, 9.20000000000018e-05, 9.1945000000003e-05, 9.204200000000051e-05, 9.212500000000193e-05, 9.218100000000021e-05, 9.181899999999993e-05, 9.166600000000066e-05, 9.127800000000019e-05, 9.184699999999907e-05, 9.15000000000013e-05, 9.204199999999704e-05, 9.137500000000118e-05, 9.159699999999882e-05, 9.14450000000025e-05, 9.129199999999976e-05, 9.13199999999989e-05, 9.140300000000032e-05, 9.187500000000168e-05, 9.157000000000262e-05, 9.14870000000012e-05, 9.211099999999889e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.280" endtime="20201112 12:27:16.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.275" endtime="20201112 12:27:16.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.285" endtime="20201112 12:27:16.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.289" endtime="20201112 12:27:16.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.287" endtime="20201112 12:27:16.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.284" endtime="20201112 12:27:16.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.913" endtime="20201112 12:27:16.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.912" endtime="20201112 12:27:16.309"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.318" endtime="20201112 12:27:16.339"></status>
</kw>
<msg timestamp="20201112 12:27:16.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.316" endtime="20201112 12:27:16.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.340" endtime="20201112 12:27:16.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.343" endtime="20201112 12:27:16.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.314" endtime="20201112 12:27:16.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.312" endtime="20201112 12:27:16.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.353" endtime="20201112 12:27:16.639"></status>
</kw>
<msg timestamp="20201112 12:27:16.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.351" endtime="20201112 12:27:16.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.644" endtime="20201112 12:27:16.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.652" endtime="20201112 12:27:16.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.349" endtime="20201112 12:27:16.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.347" endtime="20201112 12:27:16.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.659" level="INFO">${RESULT} = [{'time': 0.020028042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.240299999999785e-05, 'source_diff': 9.240299999999785e-05}, {'time': 0.020124042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.655" endtime="20201112 12:27:16.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.675" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:16.660" endtime="20201112 12:27:16.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.680" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.679" endtime="20201112 12:27:16.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.682" level="INFO">VALUE: [9.240299999999785e-05, 9.243100000000046e-05, 9.240199999999837e-05, 9.30139999999989e-05, 9.281900000000093e-05, 9.299999999999933e-05, 9.237500000000218e-05, 9.299999999999933e-05, 9.231900000000043e-05, 9.272199999999994e-05, 9.272199999999994e-05, 9.299999999999933e-05, 9.243100000000046e-05, 9.306900000000118e-05, 9.28200000000004e-05, 9.25000000000023e-05, 9.263899999999853e-05, 9.322200000000044e-05, 9.212500000000193e-05, 9.309700000000032e-05, 9.274999999999908e-05, 9.261099999999939e-05, 9.270800000000037e-05, 9.229200000000076e-05, 9.319500000000078e-05, 9.28200000000004e-05, 9.270899999999985e-05, 9.287499999999921e-05, 9.254100000000154e-05, 9.293100000000096e-05, 9.222299999999892e-05, 9.245800000000012e-05, 9.231899999999696e-05, 9.252800000000144e-05, 9.206900000000018e-05, 9.262499999999896e-05, 9.273599999999951e-05, 9.280599999999736e-05, 9.305600000000108e-05, 9.299999999999933e-05, 9.255600000000058e-05, 9.259699999999982e-05, 9.2639000000002e-05, 9.322200000000044e-05, 9.281899999999746e-05, 9.276399999999865e-05, 9.223600000000248e-05, 9.241599999999794e-05, 9.238900000000175e-05, 9.302799999999847e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.681" endtime="20201112 12:27:16.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.676" endtime="20201112 12:27:16.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.686" endtime="20201112 12:27:16.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.689" endtime="20201112 12:27:16.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.688" endtime="20201112 12:27:16.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.684" endtime="20201112 12:27:16.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.310" endtime="20201112 12:27:16.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.310" endtime="20201112 12:27:16.710"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.719" endtime="20201112 12:27:16.739"></status>
</kw>
<msg timestamp="20201112 12:27:16.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.717" endtime="20201112 12:27:16.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.741" endtime="20201112 12:27:16.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.743" endtime="20201112 12:27:16.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.715" endtime="20201112 12:27:16.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.713" endtime="20201112 12:27:16.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.753" endtime="20201112 12:27:17.039"></status>
</kw>
<msg timestamp="20201112 12:27:17.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.752" endtime="20201112 12:27:17.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.043" endtime="20201112 12:27:17.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.051" endtime="20201112 12:27:17.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.749" endtime="20201112 12:27:17.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.747" endtime="20201112 12:27:17.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.058" level="INFO">${RESULT} = [{'time': 0.020068125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.356899999999821e-05, 'source_diff': 9.356899999999821e-05}, {'time': 0.020168153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.055" endtime="20201112 12:27:17.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.071" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:17.059" endtime="20201112 12:27:17.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.076" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.075" endtime="20201112 12:27:17.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.078" level="INFO">VALUE: [9.356899999999821e-05, 9.402799999999947e-05, 9.355600000000158e-05, 9.330600000000133e-05, 9.357000000000115e-05, 9.405499999999914e-05, 9.337499999999971e-05, 9.336199999999961e-05, 9.41529999999996e-05, 9.366699999999867e-05, 9.327700000000272e-05, 9.38330000000015e-05, 9.380499999999889e-05, 9.34720000000007e-05, 9.366700000000214e-05, 9.341699999999842e-05, 9.358300000000125e-05, 9.387500000000021e-05, 9.375000000000008e-05, 9.343100000000146e-05, 9.312499999999946e-05, 9.376300000000018e-05, 9.368099999999824e-05, 9.376399999999965e-05, 9.387499999999674e-05, 9.352799999999897e-05, 9.348600000000026e-05, 9.419399999999883e-05, 9.362499999999996e-05, 9.337499999999971e-05, 9.344500000000103e-05, 9.348600000000026e-05, 9.40139999999999e-05, 9.361100000000039e-05, 9.40139999999999e-05, 9.386200000000011e-05, 9.330499999999839e-05, 9.326399999999915e-05, 9.366699999999867e-05, 9.411100000000089e-05, 9.341699999999842e-05, 9.311099999999989e-05, 9.344400000000155e-05, 9.324999999999958e-05, 9.398600000000076e-05, 9.400000000000033e-05, 9.319500000000078e-05, 9.355599999999811e-05, 9.329199999999829e-05, 9.363800000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.077" endtime="20201112 12:27:17.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.072" endtime="20201112 12:27:17.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.082" endtime="20201112 12:27:17.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.085" endtime="20201112 12:27:17.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.084" endtime="20201112 12:27:17.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.080" endtime="20201112 12:27:17.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.711" endtime="20201112 12:27:17.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.710" endtime="20201112 12:27:17.106"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.115" endtime="20201112 12:27:17.136"></status>
</kw>
<msg timestamp="20201112 12:27:17.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.113" endtime="20201112 12:27:17.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.137" endtime="20201112 12:27:17.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.140" endtime="20201112 12:27:17.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.111" endtime="20201112 12:27:17.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.109" endtime="20201112 12:27:17.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.150" endtime="20201112 12:27:17.435"></status>
</kw>
<msg timestamp="20201112 12:27:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.148" endtime="20201112 12:27:17.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019912194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020007208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.439" endtime="20201112 12:27:17.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.448" endtime="20201112 12:27:17.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.146" endtime="20201112 12:27:17.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.144" endtime="20201112 12:27:17.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.454" level="INFO">${RESULT} = [{'time': 0.020007208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.501399999999743e-05, 'source_diff': 9.501399999999743e-05}, {'time': 0.020106208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.451" endtime="20201112 12:27:17.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.468" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:17.455" endtime="20201112 12:27:17.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.472" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.471" endtime="20201112 12:27:17.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.475" level="INFO">VALUE: [9.501399999999743e-05, 9.487500000000121e-05, 9.467999999999976e-05, 9.479100000000032e-05, 9.491699999999992e-05, 9.463900000000053e-05, 9.425000000000058e-05, 9.501399999999743e-05, 9.49859999999983e-05, 9.44859999999978e-05, 9.499999999999786e-05, 9.518000000000026e-05, 9.484800000000154e-05, 9.519399999999983e-05, 9.487500000000121e-05, 9.467999999999976e-05, 9.431900000000243e-05, 9.493000000000001e-05, 9.498600000000176e-05, 9.518000000000026e-05, 9.462500000000096e-05, 9.462499999999749e-05, 9.440299999999985e-05, 9.509799999999832e-05, 9.475000000000108e-05, 9.487500000000121e-05, 9.469399999999933e-05, 9.454199999999954e-05, 9.462500000000096e-05, 9.419399999999883e-05, 9.450000000000083e-05, 9.469399999999933e-05, 9.454200000000301e-05, 9.487500000000121e-05, 9.523600000000201e-05, 9.516700000000017e-05, 9.481999999999893e-05, 9.491600000000044e-05, 9.448600000000126e-05, 9.448700000000074e-05, 9.467999999999976e-05, 9.479100000000032e-05, 9.518000000000026e-05, 9.490300000000035e-05, 9.475000000000108e-05, 9.48469999999986e-05, 9.524999999999811e-05, 9.434700000000157e-05, 9.512500000000146e-05, 9.433400000000147e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.473" endtime="20201112 12:27:17.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.469" endtime="20201112 12:27:17.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.478" endtime="20201112 12:27:17.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.482" endtime="20201112 12:27:17.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.480" endtime="20201112 12:27:17.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.477" endtime="20201112 12:27:17.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.107" endtime="20201112 12:27:17.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.107" endtime="20201112 12:27:17.503"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.511" endtime="20201112 12:27:17.532"></status>
</kw>
<msg timestamp="20201112 12:27:17.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.510" endtime="20201112 12:27:17.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.534" endtime="20201112 12:27:17.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.536" endtime="20201112 12:27:17.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.507" endtime="20201112 12:27:17.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.505" endtime="20201112 12:27:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.546" endtime="20201112 12:27:17.832"></status>
</kw>
<msg timestamp="20201112 12:27:17.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.545" endtime="20201112 12:27:17.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.836" endtime="20201112 12:27:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.845" endtime="20201112 12:27:17.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.542" endtime="20201112 12:27:17.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.540" endtime="20201112 12:27:17.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.852" level="INFO">${RESULT} = [{'time': 0.019997264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.566700000000067e-05, 'source_diff': 9.566700000000067e-05}, {'time': 0.02009725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:17.848" endtime="20201112 12:27:17.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.866" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:17.853" endtime="20201112 12:27:17.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.871" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.870" endtime="20201112 12:27:17.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.874" level="INFO">VALUE: [9.566700000000067e-05, 9.593100000000049e-05, 9.587500000000221e-05, 9.611099999999942e-05, 9.593100000000049e-05, 9.612500000000246e-05, 9.580600000000036e-05, 9.6027999999998e-05, 9.606899999999724e-05, 9.601399999999843e-05, 9.593000000000101e-05, 9.555500000000064e-05, 9.60409999999981e-05, 9.573599999999904e-05, 9.601399999999843e-05, 9.586100000000264e-05, 9.581999999999993e-05, 9.525000000000158e-05, 9.569499999999981e-05, 9.555600000000011e-05, 9.601299999999896e-05, 9.547300000000217e-05, 9.60409999999981e-05, 9.523599999999854e-05, 9.523600000000201e-05, 9.616599999999823e-05, 9.537500000000171e-05, 9.618099999999727e-05, 9.59859999999993e-05, 9.576399999999818e-05, 9.569499999999981e-05, 9.527800000000072e-05, 9.537500000000171e-05, 9.556999999999968e-05, 9.544400000000008e-05, 9.543000000000051e-05, 9.602800000000147e-05, 9.561099999999892e-05, 9.555500000000064e-05, 9.591600000000144e-05, 9.60140000000019e-05, 9.591700000000092e-05, 9.563899999999806e-05, 9.581999999999993e-05, 9.568100000000024e-05, 9.536099999999867e-05, 9.555600000000011e-05, 9.536199999999814e-05, 9.62080000000004e-05, 9.542999999999704e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.872" endtime="20201112 12:27:17.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.867" endtime="20201112 12:27:17.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.878" endtime="20201112 12:27:17.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.881" endtime="20201112 12:27:17.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.880" endtime="20201112 12:27:17.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.876" endtime="20201112 12:27:17.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.504" endtime="20201112 12:27:17.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.503" endtime="20201112 12:27:17.902"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.911" endtime="20201112 12:27:17.931"></status>
</kw>
<msg timestamp="20201112 12:27:17.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.909" endtime="20201112 12:27:17.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.933" endtime="20201112 12:27:17.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.935" endtime="20201112 12:27:17.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.907" endtime="20201112 12:27:17.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.905" endtime="20201112 12:27:17.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.945" endtime="20201112 12:27:18.231"></status>
</kw>
<msg timestamp="20201112 12:27:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01998125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:17.944" endtime="20201112 12:27:18.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01998125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:18.235" endtime="20201112 12:27:18.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.243" endtime="20201112 12:27:18.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.941" endtime="20201112 12:27:18.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.939" endtime="20201112 12:27:18.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.250" level="INFO">${RESULT} = [{'time': 0.020077958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.67080000000009e-05, 'source_diff': 9.67080000000009e-05}, {'time': 0.020176944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:18.247" endtime="20201112 12:27:18.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.263" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:18.251" endtime="20201112 12:27:18.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.268" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.267" endtime="20201112 12:27:18.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.271" level="INFO">VALUE: [9.67080000000009e-05, 9.636099999999967e-05, 9.680600000000136e-05, 9.668100000000124e-05, 9.612500000000246e-05, 9.673600000000004e-05, 9.712499999999999e-05, 9.612500000000246e-05, 9.706999999999771e-05, 9.677799999999875e-05, 9.704199999999857e-05, 9.688900000000278e-05, 9.644500000000056e-05, 9.71669999999987e-05, 9.71799999999988e-05, 9.631899999999749e-05, 9.655500000000164e-05, 9.676400000000265e-05, 9.701399999999943e-05, 9.694400000000158e-05, 9.625000000000258e-05, 9.624999999999911e-05, 9.622199999999997e-05, 9.68340000000005e-05, 9.662499999999949e-05, 9.713800000000009e-05, 9.654199999999807e-05, 9.676399999999918e-05, 9.691600000000244e-05, 9.643000000000151e-05, 9.69860000000003e-05, 9.67080000000009e-05, 9.63059999999974e-05, 9.687499999999974e-05, 9.688900000000278e-05, 9.693100000000149e-05, 9.708400000000075e-05, 9.622199999999997e-05, 9.638899999999881e-05, 9.688900000000278e-05, 9.662499999999949e-05, 9.677799999999875e-05, 9.713899999999956e-05, 9.688899999999931e-05, 9.679100000000232e-05, 9.695800000000115e-05, 9.61530000000016e-05, 9.643100000000099e-05, 9.688899999999931e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.269" endtime="20201112 12:27:18.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.264" endtime="20201112 12:27:18.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.318" endtime="20201112 12:27:18.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.322" endtime="20201112 12:27:18.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.320" endtime="20201112 12:27:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.316" endtime="20201112 12:27:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.903" endtime="20201112 12:27:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.903" endtime="20201112 12:27:18.343"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.351" endtime="20201112 12:27:18.371"></status>
</kw>
<msg timestamp="20201112 12:27:18.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.350" endtime="20201112 12:27:18.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.373" endtime="20201112 12:27:18.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.375" endtime="20201112 12:27:18.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.347" endtime="20201112 12:27:18.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.345" endtime="20201112 12:27:18.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.385" endtime="20201112 12:27:18.671"></status>
</kw>
<msg timestamp="20201112 12:27:18.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.384" endtime="20201112 12:27:18.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.675" endtime="20201112 12:27:18.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.683" endtime="20201112 12:27:18.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.381" endtime="20201112 12:27:18.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.380" endtime="20201112 12:27:18.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.690" level="INFO">${RESULT} = [{'time': 0.019997361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.815300000000013e-05, 'source_diff': 9.815300000000013e-05}, {'time': 0.020098389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.687" endtime="20201112 12:27:18.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.703" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:18.691" endtime="20201112 12:27:18.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.708" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.707" endtime="20201112 12:27:18.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.710" level="INFO">VALUE: [9.815300000000013e-05, 9.794500000000206e-05, 9.76669999999992e-05, 9.819500000000231e-05, 9.770900000000138e-05, 9.781999999999846e-05, 9.772200000000147e-05, 9.733300000000153e-05, 9.737499999999677e-05, 9.74860000000008e-05, 9.729099999999935e-05, 9.775000000000061e-05, 9.811100000000142e-05, 9.727799999999925e-05, 9.816700000000317e-05, 9.804200000000304e-05, 9.804199999999957e-05, 9.79860000000013e-05, 9.782000000000193e-05, 9.761100000000092e-05, 9.805599999999914e-05, 9.812500000000099e-05, 9.82080000000024e-05, 9.79860000000013e-05, 9.729100000000282e-05, 9.727799999999925e-05, 9.775000000000061e-05, 9.754199999999907e-05, 9.762500000000049e-05, 9.74860000000008e-05, 9.737499999999677e-05, 9.74860000000008e-05, 9.787500000000074e-05, 9.756999999999821e-05, 9.820799999999894e-05, 9.748700000000027e-05, 9.727799999999925e-05, 9.805499999999967e-05, 9.761100000000092e-05, 9.743100000000199e-05, 9.801400000000043e-05, 9.801400000000043e-05, 9.744499999999809e-05, 9.768100000000224e-05, 9.801400000000043e-05, 9.741700000000242e-05, 9.782000000000193e-05, 9.784800000000107e-05, 9.775000000000061e-05, 9.725000000000011e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.709" endtime="20201112 12:27:18.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.704" endtime="20201112 12:27:18.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.714" endtime="20201112 12:27:18.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.717" endtime="20201112 12:27:18.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.716" endtime="20201112 12:27:18.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.712" endtime="20201112 12:27:18.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.343" endtime="20201112 12:27:18.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.343" endtime="20201112 12:27:18.738"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.747" endtime="20201112 12:27:18.768"></status>
</kw>
<msg timestamp="20201112 12:27:18.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.745" endtime="20201112 12:27:18.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.769" endtime="20201112 12:27:18.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.772" endtime="20201112 12:27:18.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.743" endtime="20201112 12:27:18.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.741" endtime="20201112 12:27:18.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.782" endtime="20201112 12:27:19.083"></status>
</kw>
<msg timestamp="20201112 12:27:19.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.780" endtime="20201112 12:27:19.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.087" endtime="20201112 12:27:19.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.096" endtime="20201112 12:27:19.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.778" endtime="20201112 12:27:19.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.776" endtime="20201112 12:27:19.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.102" level="INFO">${RESULT} = [{'time': 0.019922389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.8721999999999e-05, 'source_diff': 9.8721999999999e-05}, {'time': 0.020025333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:27:19.099" endtime="20201112 12:27:19.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.116" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:19.103" endtime="20201112 12:27:19.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.120" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.119" endtime="20201112 12:27:19.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.123" level="INFO">VALUE: [9.8721999999999e-05, 9.874999999999814e-05, 9.900000000000186e-05, 9.869399999999987e-05, 9.901400000000143e-05, 9.815300000000013e-05, 9.897199999999926e-05, 9.855599999999964e-05, 9.869499999999934e-05, 9.859799999999835e-05, 9.894499999999959e-05, 9.881999999999946e-05, 9.856899999999974e-05, 9.859699999999888e-05, 9.854099999999713e-05, 9.881899999999999e-05, 9.91800000000008e-05, 9.888900000000131e-05, 9.906900000000024e-05, 9.89999999999984e-05, 9.851400000000093e-05, 9.840300000000038e-05, 9.843099999999952e-05, 9.891700000000045e-05, 9.894499999999959e-05, 9.920799999999994e-05, 9.887500000000174e-05, 9.901400000000143e-05, 9.893000000000055e-05, 9.894400000000012e-05, 9.831899999999949e-05, 9.919400000000037e-05, 9.88059999999999e-05, 9.8721999999999e-05, 9.825000000000111e-05, 9.893100000000002e-05, 9.86800000000003e-05, 9.918100000000027e-05, 9.897299999999873e-05, 9.850000000000136e-05, 9.848599999999832e-05, 9.84860000000018e-05, 9.898599999999882e-05, 9.869399999999987e-05, 9.83609999999982e-05, 9.824999999999764e-05, 9.913900000000156e-05, 9.918100000000027e-05, 9.887499999999827e-05, 9.829199999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.122" endtime="20201112 12:27:19.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.117" endtime="20201112 12:27:19.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.126" endtime="20201112 12:27:19.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.130" endtime="20201112 12:27:19.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.128" endtime="20201112 12:27:19.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.125" endtime="20201112 12:27:19.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.739" endtime="20201112 12:27:19.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.739" endtime="20201112 12:27:19.151"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.159" endtime="20201112 12:27:19.181"></status>
</kw>
<msg timestamp="20201112 12:27:19.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.158" endtime="20201112 12:27:19.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.182" endtime="20201112 12:27:19.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.185" endtime="20201112 12:27:19.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.155" endtime="20201112 12:27:19.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.153" endtime="20201112 12:27:19.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.195" endtime="20201112 12:27:19.480"></status>
</kw>
<msg timestamp="20201112 12:27:19.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.193" endtime="20201112 12:27:19.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.484" endtime="20201112 12:27:19.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.492" endtime="20201112 12:27:19.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.191" endtime="20201112 12:27:19.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.189" endtime="20201112 12:27:19.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.499" level="INFO">${RESULT} = [{'time': 0.019971486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943000000000105e-05, 'source_diff': 9.943000000000105e-05}, {'time': 0.020074472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.496" endtime="20201112 12:27:19.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.513" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:19.500" endtime="20201112 12:27:19.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.518" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.517" endtime="20201112 12:27:19.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.521" level="INFO">VALUE: [9.943000000000105e-05, 0.00010011099999999995, 0.00010015299999999866, 0.00010012499999999952, 9.931999999999996e-05, 9.938899999999834e-05, 9.998599999999983e-05, 9.931999999999996e-05, 0.00010005600000000114, 9.94999999999989e-05, 0.00010019400000000137, 9.961100000000292e-05, 9.980500000000142e-05, 9.966600000000173e-05, 9.956900000000074e-05, 9.979200000000132e-05, 9.934699999999963e-05, 9.973599999999957e-05, 9.987500000000274e-05, 9.988899999999884e-05, 9.96670000000012e-05, 9.973599999999957e-05, 9.955600000000064e-05, 9.956899999999727e-05, 9.95410000000016e-05, 9.99999999999994e-05, 9.920799999999994e-05, 9.930499999999745e-05, 9.983300000000056e-05, 9.923599999999907e-05, 9.98479999999996e-05, 9.994500000000059e-05, 9.983300000000056e-05, 9.936100000000267e-05, 9.948599999999932e-05, 9.933300000000006e-05, 9.967999999999783e-05, 9.931900000000049e-05, 9.974999999999914e-05, 9.977700000000228e-05, 9.992999999999808e-05, 9.944400000000062e-05, 9.970899999999991e-05, 9.993100000000102e-05, 0.00010005600000000114, 9.994500000000059e-05, 9.96809999999973e-05, 9.994500000000059e-05, 9.924999999999864e-05, 9.965300000000163e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.519" endtime="20201112 12:27:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.514" endtime="20201112 12:27:19.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.524" endtime="20201112 12:27:19.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.528" endtime="20201112 12:27:19.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.526" endtime="20201112 12:27:19.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.523" endtime="20201112 12:27:19.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.152" endtime="20201112 12:27:19.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.151" endtime="20201112 12:27:19.549"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.557" endtime="20201112 12:27:19.577"></status>
</kw>
<msg timestamp="20201112 12:27:19.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.556" endtime="20201112 12:27:19.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.579" endtime="20201112 12:27:19.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.581" endtime="20201112 12:27:19.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.553" endtime="20201112 12:27:19.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.551" endtime="20201112 12:27:19.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.591" endtime="20201112 12:27:19.877"></status>
</kw>
<msg timestamp="20201112 12:27:19.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:19.590" endtime="20201112 12:27:19.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:19.881" endtime="20201112 12:27:19.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.889" endtime="20201112 12:27:19.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.587" endtime="20201112 12:27:19.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.585" endtime="20201112 12:27:19.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.896" level="INFO">${RESULT} = [{'time': 0.019967194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010069400000000187, 'source_diff': 0.00010069400000000187}, {'time': 0.020073222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:19.893" endtime="20201112 12:27:19.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.910" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:19.897" endtime="20201112 12:27:19.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.914" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.913" endtime="20201112 12:27:19.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.917" level="INFO">VALUE: [0.00010069400000000187, 0.00010011099999999995, 0.00010056900000000174, 0.0001005549999999987, 0.00010012499999999952, 0.00010031900000000149, 0.00010034700000000063, 0.00010116699999999923, 0.00010023600000000008, 0.00010027799999999878, 0.00010105599999999867, 0.00010055599999999817, 0.00010107000000000171, 0.00010104099999999963, 0.00010117999999999933, 0.00010106899999999877, 0.00010061100000000045, 0.00010077799999999928, 0.00010076399999999971, 0.0001004999999999999, 0.00010088899999999984, 0.00010079099999999938, 0.00010038899999999934, 0.00010012499999999952, 0.00010073600000000058, 0.00010057000000000121, 0.0001003610000000002, 0.00010108299999999834, 0.0001010000000000004, 0.0001005410000000026, 0.00010056900000000174, 0.0001010000000000004, 0.00010048600000000033, 0.00010045800000000119, 0.00010012499999999952, 0.00010105600000000214, 0.00010090199999999994, 0.0001008060000000019, 0.00010118100000000227, 0.00010090299999999941, 0.00010062500000000002, 0.00010062500000000002, 0.00010042999999999858, 0.00010108399999999781, 0.00010037499999999977, 0.00010094500000000159, 0.00010040299999999891, 0.00010079099999999938, 0.00010043100000000152, 0.00010101399999999996]</msg>
<status status="PASS" starttime="20201112 12:27:19.916" endtime="20201112 12:27:19.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.911" endtime="20201112 12:27:19.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.921" endtime="20201112 12:27:19.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.924" endtime="20201112 12:27:19.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.922" endtime="20201112 12:27:19.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.919" endtime="20201112 12:27:19.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.549" endtime="20201112 12:27:19.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.549" endtime="20201112 12:27:19.945"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.953" endtime="20201112 12:27:19.974"></status>
</kw>
<msg timestamp="20201112 12:27:19.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.952" endtime="20201112 12:27:19.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.975" endtime="20201112 12:27:19.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.978" endtime="20201112 12:27:19.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.949" endtime="20201112 12:27:19.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.947" endtime="20201112 12:27:19.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.988" endtime="20201112 12:27:20.273"></status>
</kw>
<msg timestamp="20201112 12:27:20.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.986" endtime="20201112 12:27:20.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019981292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.278" endtime="20201112 12:27:20.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.286" endtime="20201112 12:27:20.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.984" endtime="20201112 12:27:20.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.982" endtime="20201112 12:27:20.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.292" level="INFO">${RESULT} = [{'time': 0.019981292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010122300000000098, 'source_diff': 0.00010122300000000098}, {'time': 0.020089292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.289" endtime="20201112 12:27:20.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:20.293" endtime="20201112 12:27:20.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.310" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.309" endtime="20201112 12:27:20.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.312" level="INFO">VALUE: [0.00010122300000000098, 0.0001020420000000001, 0.00010186099999999823, 0.00010212500000000152, 0.0001021939999999999, 0.0001015549999999997, 0.00010137500000000077, 0.00010111099999999748, 0.00010211099999999848, 0.00010206899999999977, 0.000101513999999997, 0.00010206999999999924, 0.00010147300000000123, 0.00010143100000000252, 0.00010137500000000077, 0.00010144499999999862, 0.00010111200000000042, 0.00010131899999999902, 0.00010184699999999866, 0.00010140299999999991, 0.0001020000000000014, 0.00010190300000000041, 0.00010161100000000145, 0.00010125000000000065, 0.00010188899999999737, 0.00010183399999999856, 0.00010177800000000028, 0.00010193099999999955, 0.00010202699999999759, 0.00010129200000000282, 0.0001015000000000009, 0.0001021939999999999, 0.00010198599999999836, 0.00010137500000000077, 0.00010213900000000109, 0.00010183299999999909, 0.00010191699999999998, 0.00010163900000000059, 0.00010183399999999856, 0.00010108400000000128, 0.00010130499999999945, 0.00010144499999999862, 0.00010167999999999983, 0.00010154100000000013, 0.00010218000000000033, 0.00010179100000000038, 0.00010219400000000337, 0.00010180499999999995, 0.00010125000000000065, 0.00010109700000000138]</msg>
<status status="PASS" starttime="20201112 12:27:20.311" endtime="20201112 12:27:20.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.306" endtime="20201112 12:27:20.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.316" endtime="20201112 12:27:20.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.320" endtime="20201112 12:27:20.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.318" endtime="20201112 12:27:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.314" endtime="20201112 12:27:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.946" endtime="20201112 12:27:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.945" endtime="20201112 12:27:20.340"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.349" endtime="20201112 12:27:20.370"></status>
</kw>
<msg timestamp="20201112 12:27:20.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.347" endtime="20201112 12:27:20.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.372" endtime="20201112 12:27:20.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.374" endtime="20201112 12:27:20.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.345" endtime="20201112 12:27:20.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.343" endtime="20201112 12:27:20.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.384" endtime="20201112 12:27:20.670"></status>
</kw>
<msg timestamp="20201112 12:27:20.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.383" endtime="20201112 12:27:20.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.674" endtime="20201112 12:27:20.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.682" endtime="20201112 12:27:20.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.380" endtime="20201112 12:27:20.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.378" endtime="20201112 12:27:20.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.689" level="INFO">${RESULT} = [{'time': 0.019954833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010316600000000176, 'source_diff': 0.00010316600000000176}, {'time': 0.020060861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.686" endtime="20201112 12:27:20.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.702" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:20.690" endtime="20201112 12:27:20.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.707" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.706" endtime="20201112 12:27:20.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.709" level="INFO">VALUE: [0.00010316600000000176, 0.00010233299999999959, 0.00010247199999999929, 0.00010316700000000123, 0.00010234699999999916, 0.0001025000000000019, 0.00010273600000000258, 0.00010238899999999787, 0.0001031810000000008, 0.00010236099999999873, 0.0001030139999999985, 0.0001025420000000006, 0.00010298699999999883, 0.0001026940000000004, 0.00010211099999999848, 0.0001022359999999986, 0.00010279099999999791, 0.00010236099999999873, 0.0001023199999999995, 0.00010209699999999891, 0.0001026940000000004, 0.00010299999999999893, 0.00010259700000000288, 0.0001027359999999991, 0.0001026940000000004, 0.00010231900000000002, 0.00010243000000000058, 0.0001029299999999976, 0.00010238899999999787, 0.00010280500000000095, 0.00010291700000000098, 0.00010277800000000128, 0.0001026810000000003, 0.00010261099999999898, 0.00010232000000000296, 0.00010262499999999855, 0.0001030559999999972, 0.00010224999999999818, 0.00010313900000000209, 0.00010256900000000027, 0.0001031940000000009, 0.00010256999999999974, 0.0001023610000000022, 0.00010298599999999936, 0.00010280600000000042, 0.00010288900000000184, 0.00010302800000000154, 0.00010263899999999812, 0.00010212499999999805, 0.00010261099999999898]</msg>
<status status="PASS" starttime="20201112 12:27:20.708" endtime="20201112 12:27:20.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.703" endtime="20201112 12:27:20.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.713" endtime="20201112 12:27:20.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.716" endtime="20201112 12:27:20.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.715" endtime="20201112 12:27:20.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.711" endtime="20201112 12:27:20.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.341" endtime="20201112 12:27:20.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.341" endtime="20201112 12:27:20.737"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.746" endtime="20201112 12:27:20.767"></status>
</kw>
<msg timestamp="20201112 12:27:20.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.744" endtime="20201112 12:27:20.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.768" endtime="20201112 12:27:20.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.771" endtime="20201112 12:27:20.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.742" endtime="20201112 12:27:20.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.740" endtime="20201112 12:27:20.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.781" endtime="20201112 12:27:21.067"></status>
</kw>
<msg timestamp="20201112 12:27:21.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.779" endtime="20201112 12:27:21.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019890792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.071" endtime="20201112 12:27:21.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.079" endtime="20201112 12:27:21.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.777" endtime="20201112 12:27:21.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.775" endtime="20201112 12:27:21.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.086" level="INFO">${RESULT} = [{'time': 0.019890792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010366700000000173, 'source_diff': 0.00010366700000000173}, {'time': 0.019998736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.083" endtime="20201112 12:27:21.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.100" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:21.087" endtime="20201112 12:27:21.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.105" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.104" endtime="20201112 12:27:21.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.107" level="INFO">VALUE: [0.00010366700000000173, 0.00010349999999999943, 0.00010415299999999919, 0.00010343099999999758, 0.00010344500000000062, 0.00010397200000000079, 0.00010408400000000081, 0.00010336099999999973, 0.000103820000000001, 0.00010347299999999976, 0.00010348599999999986, 0.00010365300000000216, 0.0001040550000000022, 0.00010344400000000115, 0.00010355499999999823, 0.00010379200000000185, 0.00010406900000000177, 0.00010324999999999918, 0.0001037360000000001, 0.00010406999999999778, 0.00010404199999999864, 0.0001041810000000018, 0.00010336099999999973, 0.00010368000000000183, 0.00010401400000000297, 0.00010416600000000276, 0.0001036940000000014, 0.00010381900000000152, 0.00010354199999999814, 0.00010340299999999844, 0.00010326399999999875, 0.00010405600000000167, 0.00010345900000000019, 0.00010394499999999765, 0.0001032359999999996, 0.00010363799999999965, 0.00010362499999999955, 0.00010333299999999712, 0.0001040139999999995, 0.00010367999999999836, 0.00010348599999999986, 0.0001035550000000017, 0.00010347299999999976, 0.00010311099999999948, 0.00010329200000000135, 0.00010416699999999876, 0.0001040559999999982, 0.00010334700000000016, 0.00010329200000000135, 0.00010367999999999836]</msg>
<status status="PASS" starttime="20201112 12:27:21.106" endtime="20201112 12:27:21.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.101" endtime="20201112 12:27:21.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.111" endtime="20201112 12:27:21.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.114" endtime="20201112 12:27:21.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.113" endtime="20201112 12:27:21.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.109" endtime="20201112 12:27:21.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.738" endtime="20201112 12:27:21.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.737" endtime="20201112 12:27:21.135"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.144" endtime="20201112 12:27:21.164"></status>
</kw>
<msg timestamp="20201112 12:27:21.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.142" endtime="20201112 12:27:21.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.166" endtime="20201112 12:27:21.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.168" endtime="20201112 12:27:21.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.139" endtime="20201112 12:27:21.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.137" endtime="20201112 12:27:21.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.178" endtime="20201112 12:27:21.464"></status>
</kw>
<msg timestamp="20201112 12:27:21.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.177" endtime="20201112 12:27:21.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019946014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.468" endtime="20201112 12:27:21.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.476" endtime="20201112 12:27:21.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.174" endtime="20201112 12:27:21.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.173" endtime="20201112 12:27:21.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.483" level="INFO">${RESULT} = [{'time': 0.020050889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010487499999999733, 'source_diff': 0.00010487499999999733}, {'time': 0.020158917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.480" endtime="20201112 12:27:21.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.496" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:21.484" endtime="20201112 12:27:21.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.501" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.500" endtime="20201112 12:27:21.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.503" level="INFO">VALUE: [0.00010487499999999733, 0.00010501399999999703, 0.00010412500000000005, 0.00010444500000000162, 0.00010450000000000043, 0.00010412500000000005, 0.00010455499999999923, 0.00010425000000000018, 0.00010522200000000204, 0.00010517999999999986, 0.00010498600000000136, 0.00010518099999999933, 0.00010486099999999776, 0.00010433299999999812, 0.00010495899999999822, 0.00010441699999999901, 0.00010429199999999889, 0.00010499999999999746, 0.00010441699999999901, 0.00010498599999999789, 0.00010444399999999868, 0.00010481899999999905, 0.00010456900000000227, 0.00010422199999999757, 0.00010426399999999975, 0.00010442999999999911, 0.00010483400000000156, 0.00010486100000000123, 0.00010526400000000075, 0.00010450000000000043, 0.0001048750000000008, 0.0001045689999999988, 0.00010480499999999948, 0.00010475000000000068, 0.00010462500000000055, 0.00010443099999999858, 0.00010459700000000141, 0.00010458399999999785, 0.00010523599999999814, 0.00010508400000000181, 0.00010499999999999746, 0.00010504199999999964, 0.00010431899999999855, 0.00010500000000000093, 0.00010497199999999832, 0.0001045550000000027, 0.0001051940000000029, 0.00010491600000000004, 0.00010458299999999837, 0.00010473599999999764]</msg>
<status status="PASS" starttime="20201112 12:27:21.502" endtime="20201112 12:27:21.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.497" endtime="20201112 12:27:21.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.507" endtime="20201112 12:27:21.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.510" endtime="20201112 12:27:21.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.509" endtime="20201112 12:27:21.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.505" endtime="20201112 12:27:21.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.136" endtime="20201112 12:27:21.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.135" endtime="20201112 12:27:21.531"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.540" endtime="20201112 12:27:21.561"></status>
</kw>
<msg timestamp="20201112 12:27:21.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.538" endtime="20201112 12:27:21.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.562" endtime="20201112 12:27:21.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.565" endtime="20201112 12:27:21.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.536" endtime="20201112 12:27:21.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.533" endtime="20201112 12:27:21.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.575" endtime="20201112 12:27:21.860"></status>
</kw>
<msg timestamp="20201112 12:27:21.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019845292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.573" endtime="20201112 12:27:21.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019845292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.864" endtime="20201112 12:27:21.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.872" endtime="20201112 12:27:21.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.571" endtime="20201112 12:27:21.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.569" endtime="20201112 12:27:21.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.879" level="INFO">${RESULT} = [{'time': 0.019951472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010618000000000086, 'source_diff': 0.00010618000000000086}, {'time': 0.020061472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:21.876" endtime="20201112 12:27:21.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:21.880" endtime="20201112 12:27:21.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.897" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.896" endtime="20201112 12:27:21.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.899" level="INFO">VALUE: [0.00010618000000000086, 0.00010605500000000073, 0.00010577800000000082, 0.00010604200000000064, 0.0001058339999999991, 0.00010523599999999814, 0.00010584699999999919, 0.00010623599999999914, 0.0001053620000000012, 0.00010568000000000036, 0.00010552700000000109, 0.00010584700000000266, 0.00010565200000000122, 0.00010544399999999968, 0.00010587499999999833, 0.00010549999999999796, 0.00010525000000000118, 0.00010549999999999796, 0.00010600000000000193, 0.00010509800000000138, 0.00010594499999999965, 0.00010563800000000165, 0.00010583299999999962, 0.00010547199999999882, 0.00010563900000000112, 0.00010575000000000168, 0.00010602699999999812, 0.00010552800000000057, 0.00010556999999999928, 0.00010562500000000155, 0.00010581900000000005, 0.0001058339999999991, 0.00010593100000000008, 0.00010570899999999897, 0.00010612499999999858, 0.00010601399999999803, 0.0001057499999999982, 0.00010591700000000051, 0.00010584700000000266, 0.00010593000000000061, 0.00010526400000000075, 0.0001058750000000018, 0.00010586099999999876, 0.00010581999999999953, 0.00010558299999999937, 0.00010511200000000095, 0.00010544400000000315, 0.00010533300000000259, 0.00010608299999999987, 0.00010605499999999726]</msg>
<status status="PASS" starttime="20201112 12:27:21.898" endtime="20201112 12:27:21.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.893" endtime="20201112 12:27:21.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.903" endtime="20201112 12:27:21.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.906" endtime="20201112 12:27:21.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.905" endtime="20201112 12:27:21.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.901" endtime="20201112 12:27:21.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.532" endtime="20201112 12:27:21.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.531" endtime="20201112 12:27:21.927"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.937" endtime="20201112 12:27:21.959"></status>
</kw>
<msg timestamp="20201112 12:27:21.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.935" endtime="20201112 12:27:21.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.960" endtime="20201112 12:27:21.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.963" endtime="20201112 12:27:21.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.933" endtime="20201112 12:27:21.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.930" endtime="20201112 12:27:21.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.973" endtime="20201112 12:27:22.258"></status>
</kw>
<msg timestamp="20201112 12:27:22.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.971" endtime="20201112 12:27:22.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.262" endtime="20201112 12:27:22.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.270" endtime="20201112 12:27:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.969" endtime="20201112 12:27:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.967" endtime="20201112 12:27:22.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.277" level="INFO">${RESULT} = [{'time': 0.021358333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010668000000000136, 'source_diff': 0.00010668000000000136}, {'time': 0.021468333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:22.274" endtime="20201112 12:27:22.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.290" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:22.278" endtime="20201112 12:27:22.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.295" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.294" endtime="20201112 12:27:22.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.297" level="INFO">VALUE: [0.00010668000000000136, 0.00010637499999999883, 0.00010704099999999869, 0.00010697200000000032, 0.00010638900000000187, 0.00010707000000000078, 0.00010648600000000286, 0.00010699999999999946, 0.00010670899999999997, 0.00010632000000000003, 0.00010680600000000096, 0.00010684700000000019, 0.00010699999999999946, 0.00010655500000000123, 0.00010616600000000129, 0.00010647199999999982, 0.00010706899999999783, 0.00010612500000000205, 0.00010705599999999774, 0.00010698599999999989, 0.00010672200000000007, 0.00010697199999999685, 0.00010631900000000055, 0.00010676400000000225, 0.00010690299999999847, 0.0001063889999999984, 0.00010717999999999839, 0.00010631900000000055, 0.00010719400000000143, 0.00010693100000000108, 0.00010713899999999915, 0.00010680599999999749, 0.00010643100000000058, 0.00010612499999999858, 0.0001067080000000005, 0.00010680600000000096, 0.00010699999999999946, 0.00010681900000000105, 0.00010630499999999751, 0.00010622200000000304, 0.00010632000000000003, 0.00010672200000000007, 0.00010697200000000032, 0.00010663899999999865, 0.00010668100000000083, 0.00010693100000000108, 0.0001068889999999989, 0.00010687499999999933, 0.00010681899999999758, 0.00010699999999999946]</msg>
<status status="PASS" starttime="20201112 12:27:22.296" endtime="20201112 12:27:22.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.291" endtime="20201112 12:27:22.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.301" endtime="20201112 12:27:22.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.304" endtime="20201112 12:27:22.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.302" endtime="20201112 12:27:22.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.299" endtime="20201112 12:27:22.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.929" endtime="20201112 12:27:22.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.928" endtime="20201112 12:27:22.325"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.333" endtime="20201112 12:27:22.354"></status>
</kw>
<msg timestamp="20201112 12:27:22.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.332" endtime="20201112 12:27:22.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.355" endtime="20201112 12:27:22.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.358" endtime="20201112 12:27:22.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.329" endtime="20201112 12:27:22.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.327" endtime="20201112 12:27:22.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.368" endtime="20201112 12:27:22.653"></status>
</kw>
<msg timestamp="20201112 12:27:22.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.366" endtime="20201112 12:27:22.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.658" endtime="20201112 12:27:22.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.666" endtime="20201112 12:27:22.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.364" endtime="20201112 12:27:22.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.362" endtime="20201112 12:27:22.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.672" level="INFO">${RESULT} = [{'time': 0.019941056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010731999999999756, 'source_diff': 0.00010731999999999756}, {'time': 0.020054042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:22.669" endtime="20201112 12:27:22.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.687" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:22.673" endtime="20201112 12:27:22.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.691" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.690" endtime="20201112 12:27:22.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.694" level="INFO">VALUE: [0.00010731999999999756, 0.00010773600000000064, 0.00010811200000000049, 0.00010793000000000261, 0.00010787500000000033, 0.00010761100000000051, 0.0001080690000000023, 0.00010744400000000168, 0.00010762500000000008, 0.00010748600000000039, 0.00010762500000000008, 0.00010737499999999983, 0.00010794499999999818, 0.00010736199999999974, 0.00010765300000000269, 0.00010737499999999983, 0.0001080829999999984, 0.00010763899999999965, 0.00010726400000000275, 0.00010743000000000211, 0.00010730599999999799, 0.00010726400000000275, 0.00010794500000000165, 0.00010823599999999767, 0.00010736100000000026, 0.00010784800000000067, 0.0001072499999999997, 0.00010795799999999828, 0.00010794400000000218, 0.00010736100000000026, 0.00010711100000000001, 0.0001080829999999984, 0.00010812500000000058, 0.00010800000000000046, 0.00010762500000000008, 0.00010794499999999818, 0.00010734700000000069, 0.00010779099999999944, 0.00010784699999999772, 0.00010784700000000119, 0.00010767999999999889, 0.00010781900000000205, 0.00010741599999999907, 0.00010794400000000218, 0.00010719399999999796, 0.00010749999999999996, 0.0001078889999999999, 0.00010777799999999935, 0.00010780599999999849, 0.00010763800000000018]</msg>
<status status="PASS" starttime="20201112 12:27:22.692" endtime="20201112 12:27:22.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.687" endtime="20201112 12:27:22.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.697" endtime="20201112 12:27:22.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.701" endtime="20201112 12:27:22.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.699" endtime="20201112 12:27:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.695" endtime="20201112 12:27:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.326" endtime="20201112 12:27:22.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.325" endtime="20201112 12:27:22.721"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.730" endtime="20201112 12:27:22.752"></status>
</kw>
<msg timestamp="20201112 12:27:22.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.728" endtime="20201112 12:27:22.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.753" endtime="20201112 12:27:22.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.756" endtime="20201112 12:27:22.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.726" endtime="20201112 12:27:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.724" endtime="20201112 12:27:22.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.766" endtime="20201112 12:27:23.051"></status>
</kw>
<msg timestamp="20201112 12:27:23.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.764" endtime="20201112 12:27:23.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.055" endtime="20201112 12:27:23.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.063" endtime="20201112 12:27:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.762" endtime="20201112 12:27:23.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.760" endtime="20201112 12:27:23.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.070" level="INFO">${RESULT} = [{'time': 0.019932458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001088890000000009, 'source_diff': 0.0001088890000000009}, {'time': 0.020045458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.067" endtime="20201112 12:27:23.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.083" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:23.071" endtime="20201112 12:27:23.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.088" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.087" endtime="20201112 12:27:23.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.090" level="INFO">VALUE: [0.0001088890000000009, 0.00010917999999999692, 0.00010886100000000176, 0.00010834699999999822, 0.00010900000000000146, 0.00010909700000000244, 0.0001090280000000006, 0.00010861100000000151, 0.00010873599999999817, 0.00010879199999999992, 0.00010818099999999886, 0.00010840299999999997, 0.0001088890000000009, 0.00010836100000000126, 0.00010920799999999953, 0.00010906899999999983, 0.00010880500000000001, 0.00010880600000000296, 0.0001086950000000024, 0.00010812500000000058, 0.00010870799999999903, 0.00010837500000000083, 0.00010855599999999924, 0.00010875000000000121, 0.00010815299999999972, 0.00010851400000000053, 0.00010875000000000121, 0.0001082500000000007, 0.00010898599999999842, 0.00010824999999999724, 0.00010837500000000083, 0.00010898600000000189, 0.00010881999999999906, 0.00010898699999999789, 0.00010862500000000108, 0.00010816699999999929, 0.00010872300000000154, 0.00010855499999999976, 0.00010919399999999996, 0.0001088890000000009, 0.00010842999999999964, 0.0001085829999999989, 0.00010836100000000126, 0.00010891700000000004, 0.00010837500000000083, 0.00010836100000000126, 0.00010858400000000185, 0.00010822300000000104, 0.00010913800000000168, 0.0001089159999999971]</msg>
<status status="PASS" starttime="20201112 12:27:23.089" endtime="20201112 12:27:23.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.084" endtime="20201112 12:27:23.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.094" endtime="20201112 12:27:23.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.097" endtime="20201112 12:27:23.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.096" endtime="20201112 12:27:23.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.092" endtime="20201112 12:27:23.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.722" endtime="20201112 12:27:23.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.722" endtime="20201112 12:27:23.118"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.127" endtime="20201112 12:27:23.148"></status>
</kw>
<msg timestamp="20201112 12:27:23.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.125" endtime="20201112 12:27:23.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.150" endtime="20201112 12:27:23.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.152" endtime="20201112 12:27:23.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.123" endtime="20201112 12:27:23.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.120" endtime="20201112 12:27:23.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.162" endtime="20201112 12:27:23.449"></status>
</kw>
<msg timestamp="20201112 12:27:23.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.161" endtime="20201112 12:27:23.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.453" endtime="20201112 12:27:23.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.461" endtime="20201112 12:27:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.158" endtime="20201112 12:27:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.156" endtime="20201112 12:27:23.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.468" level="INFO">${RESULT} = [{'time': 0.019958972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010937499999999836, 'source_diff': 0.00010937499999999836}, {'time': 0.020070986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.465" endtime="20201112 12:27:23.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.481" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:23.469" endtime="20201112 12:27:23.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.486" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.484" endtime="20201112 12:27:23.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.488" level="INFO">VALUE: [0.00010937499999999836, 0.00010948599999999892, 0.00010986099999999929, 0.00010965300000000122, 0.00011012499999999911, 0.00011012499999999911, 0.00010993100000000061, 0.00010982000000000006, 0.00010941699999999707, 0.00011012499999999911, 0.0001099159999999981, 0.00011001399999999856, 0.00010937500000000183, 0.00010924999999999824, 0.0001095699999999998, 0.00010936099999999879, 0.00010979200000000092, 0.00010976400000000178, 0.00010983300000000015, 0.0001094029999999975, 0.00010956900000000033, 0.00010957000000000328, 0.00010955500000000076, 0.00011005600000000074, 0.00010940300000000097, 0.00010937500000000183, 0.00011012499999999911, 0.00010986099999999929, 0.00010963899999999818, 0.00011019500000000043, 0.00010936200000000174, 0.00010965300000000122, 0.00010972299999999907, 0.00010987500000000233, 0.0001100280000000016, 0.00010947199999999935, 0.00011012499999999911, 0.00010957000000000328, 0.00010926400000000128, 0.0001095699999999998, 0.00010954200000000067, 0.000109208999999999, 0.00010931999999999956, 0.00010990199999999853, 0.00010973599999999917, 0.00010967999999999742, 0.00010983300000000015, 0.00010961099999999904, 0.00010931900000000008, 0.00010925000000000171]</msg>
<status status="PASS" starttime="20201112 12:27:23.487" endtime="20201112 12:27:23.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.482" endtime="20201112 12:27:23.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.492" endtime="20201112 12:27:23.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.495" endtime="20201112 12:27:23.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.493" endtime="20201112 12:27:23.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.490" endtime="20201112 12:27:23.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.119" endtime="20201112 12:27:23.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.118" endtime="20201112 12:27:23.516"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.525" endtime="20201112 12:27:23.546"></status>
</kw>
<msg timestamp="20201112 12:27:23.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.523" endtime="20201112 12:27:23.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.547" endtime="20201112 12:27:23.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.550" endtime="20201112 12:27:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.521" endtime="20201112 12:27:23.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.518" endtime="20201112 12:27:23.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.560" endtime="20201112 12:27:23.843"></status>
</kw>
<msg timestamp="20201112 12:27:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02002125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:23.558" endtime="20201112 12:27:23.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02002125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:23.848" endtime="20201112 12:27:23.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.856" endtime="20201112 12:27:23.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.556" endtime="20201112 12:27:23.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.554" endtime="20201112 12:27:23.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.862" level="INFO">${RESULT} = [{'time': 0.020132208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011095799999999781, 'source_diff': 0.00011095799999999781}, {'time': 0.020247194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:23.859" endtime="20201112 12:27:23.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.876" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:23.863" endtime="20201112 12:27:23.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.880" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.879" endtime="20201112 12:27:23.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.883" level="INFO">VALUE: [0.00011095799999999781, 0.00011073600000000017, 0.00011026400000000228, 0.00011030499999999804, 0.00011113899999999968, 0.00011023599999999967, 0.00011108299999999793, 0.00011052799999999863, 0.00011101399999999956, 0.00011030599999999752, 0.00011044500000000068, 0.00011082000000000106, 0.00011054100000000219, 0.00011054099999999872, 0.00011042999999999817, 0.00011062499999999961, 0.00011088899999999943, 0.00011118100000000186, 0.0001100700000000003, 0.0001107220000000006, 0.00011063899999999918, 0.0001108890000000029, 0.00011055600000000124, 0.00011044399999999774, 0.00011112499999999664, 0.00011117999999999892, 0.00011099999999999999, 0.00011119400000000196, 0.00011054099999999872, 0.00011024999999999924, 0.00011087499999999986, 0.00011036099999999979, 0.00011048599999999992, 0.00011105599999999827, 0.00011077799999999888, 0.00011101399999999956, 0.00011066599999999885, 0.00011048599999999992, 0.00011080500000000201, 0.00011056899999999786, 0.00011061100000000004, 0.0001110280000000026, 0.00011101399999999956, 0.00011101399999999956, 0.00011036099999999979, 0.00011106999999999784, 0.00011031900000000108, 0.00011041600000000207, 0.00011119400000000196, 0.00011070800000000103]</msg>
<status status="PASS" starttime="20201112 12:27:23.881" endtime="20201112 12:27:23.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.876" endtime="20201112 12:27:23.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.886" endtime="20201112 12:27:23.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.890" endtime="20201112 12:27:23.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.888" endtime="20201112 12:27:23.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.885" endtime="20201112 12:27:23.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.517" endtime="20201112 12:27:23.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.516" endtime="20201112 12:27:23.910"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.919" endtime="20201112 12:27:23.940"></status>
</kw>
<msg timestamp="20201112 12:27:23.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.917" endtime="20201112 12:27:23.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.941" endtime="20201112 12:27:23.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.944" endtime="20201112 12:27:23.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.915" endtime="20201112 12:27:23.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.913" endtime="20201112 12:27:23.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.954" endtime="20201112 12:27:24.239"></status>
</kw>
<msg timestamp="20201112 12:27:24.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.952" endtime="20201112 12:27:24.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.243" endtime="20201112 12:27:24.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.251" endtime="20201112 12:27:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.950" endtime="20201112 12:27:24.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.948" endtime="20201112 12:27:24.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.258" level="INFO">${RESULT} = [{'time': 0.019912306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011163900000000018, 'source_diff': 0.00011163900000000018}, {'time': 0.020027333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.255" endtime="20201112 12:27:24.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.272" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:24.259" endtime="20201112 12:27:24.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.277" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.276" endtime="20201112 12:27:24.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.279" level="INFO">VALUE: [0.00011163900000000018, 0.0001115830000000019, 0.0001120549999999998, 0.00011126399999999981, 0.00011184700000000172, 0.00011184699999999825, 0.00011216699999999982, 0.00011175000000000074, 0.00011125000000000024, 0.00011156999999999834, 0.00011199999999999752, 0.00011155599999999877, 0.00011154200000000267, 0.00011187500000000086, 0.0001117359999999977, 0.00011144400000000221, 0.00011174999999999727, 0.00011219400000000296, 0.00011137500000000036, 0.0001112220000000011, 0.0001120419999999997, 0.00011144500000000168, 0.00011194499999999871, 0.00011166700000000279, 0.00011201399999999709, 0.00011150000000000049, 0.00011216600000000035, 0.00011175000000000074, 0.00011174999999999727, 0.00011174999999999727, 0.00011211200000000102, 0.00011194399999999924, 0.00011186100000000129, 0.00011213900000000068, 0.00011206999999999884, 0.00011215200000000078, 0.00011144500000000168, 0.00011161200000000052, 0.00011181899999999911, 0.0001115549999999993, 0.00011181999999999859, 0.00011186099999999782, 0.00011212500000000111, 0.00011201400000000056, 0.00011145800000000178, 0.00011132000000000156, 0.00011197199999999838, 0.00011183300000000215, 0.00011138899999999993, 0.00011208299999999893]</msg>
<status status="PASS" starttime="20201112 12:27:24.278" endtime="20201112 12:27:24.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.273" endtime="20201112 12:27:24.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.283" endtime="20201112 12:27:24.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.286" endtime="20201112 12:27:24.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.285" endtime="20201112 12:27:24.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.281" endtime="20201112 12:27:24.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.911" endtime="20201112 12:27:24.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.911" endtime="20201112 12:27:24.307"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.316" endtime="20201112 12:27:24.338"></status>
</kw>
<msg timestamp="20201112 12:27:24.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.314" endtime="20201112 12:27:24.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.339" endtime="20201112 12:27:24.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.342" endtime="20201112 12:27:24.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.312" endtime="20201112 12:27:24.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.310" endtime="20201112 12:27:24.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.352" endtime="20201112 12:27:24.637"></status>
</kw>
<msg timestamp="20201112 12:27:24.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.350" endtime="20201112 12:27:24.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.641" endtime="20201112 12:27:24.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.650" endtime="20201112 12:27:24.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.347" endtime="20201112 12:27:24.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.346" endtime="20201112 12:27:24.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.656" level="INFO">${RESULT} = [{'time': 0.019889583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011262499999999814, 'source_diff': 0.00011262499999999814}, {'time': 0.020004611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:24.653" endtime="20201112 12:27:24.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.669" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:24.657" endtime="20201112 12:27:24.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.674" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.673" endtime="20201112 12:27:24.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.676" level="INFO">VALUE: [0.00011262499999999814, 0.00011249999999999802, 0.0001122359999999982, 0.00011304199999999723, 0.00011216699999999982, 0.00011276400000000131, 0.00011262499999999814, 0.00011277800000000088, 0.00011237500000000136, 0.00011319500000000343, 0.00011259799999999848, 0.00011230500000000004, 0.00011225000000000124, 0.00011251400000000106, 0.0001122220000000021, 0.00011273600000000217, 0.00011261099999999857, 0.00011297199999999938, 0.00011222300000000157, 0.00011274999999999827, 0.00011250000000000149, 0.00011222300000000157, 0.00011261099999999857, 0.00011237500000000136, 0.00011223600000000167, 0.00011269399999999999, 0.00011222199999999863, 0.00011231899999999961, 0.0001124160000000006, 0.00011258399999999891, 0.00011319499999999996, 0.00011268099999999989, 0.00011243099999999964, 0.00011247200000000235, 0.00011283400000000263, 0.0001130559999999968, 0.0001123749999999979, 0.00011247200000000235, 0.000112903000000001, 0.00011211100000000154, 0.00011281999999999959, 0.00011243100000000311, 0.0001122229999999981, 0.00011275000000000174, 0.00011258299999999943, 0.00011308299999999993, 0.00011280500000000054, 0.00011237500000000136, 0.00011256899999999986, 0.0001127220000000026]</msg>
<status status="PASS" starttime="20201112 12:27:24.675" endtime="20201112 12:27:24.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.670" endtime="20201112 12:27:24.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.680" endtime="20201112 12:27:24.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.683" endtime="20201112 12:27:24.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.682" endtime="20201112 12:27:24.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.678" endtime="20201112 12:27:24.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.308" endtime="20201112 12:27:24.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.308" endtime="20201112 12:27:24.704"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.713" endtime="20201112 12:27:24.734"></status>
</kw>
<msg timestamp="20201112 12:27:24.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.711" endtime="20201112 12:27:24.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.736" endtime="20201112 12:27:24.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.738" endtime="20201112 12:27:24.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.709" endtime="20201112 12:27:24.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.706" endtime="20201112 12:27:24.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.748" endtime="20201112 12:27:25.033"></status>
</kw>
<msg timestamp="20201112 12:27:25.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.747" endtime="20201112 12:27:25.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.037" endtime="20201112 12:27:25.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.045" endtime="20201112 12:27:25.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.744" endtime="20201112 12:27:25.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.742" endtime="20201112 12:27:25.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.052" level="INFO">${RESULT} = [{'time': 0.019905458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001137770000000024, 'source_diff': 0.0001137770000000024}, {'time': 0.020022472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.049" endtime="20201112 12:27:25.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.065" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.053" endtime="20201112 12:27:25.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.070" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.069" endtime="20201112 12:27:25.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.072" level="INFO">VALUE: [0.0001137770000000024, 0.00011374999999999927, 0.00011349999999999902, 0.00011355600000000077, 0.00011406999999999737, 0.00011336099999999932, 0.00011365299999999828, 0.00011347199999999988, 0.00011334799999999923, 0.00011361200000000252, 0.00011338899999999846, 0.00011337500000000236, 0.00011412500000000311, 0.00011326400000000181, 0.00011327800000000138, 0.00011351399999999859, 0.0001139169999999981, 0.00011413899999999921, 0.00011412499999999964, 0.00011349999999999902, 0.00011337500000000236, 0.00011341599999999813, 0.00011347199999999988, 0.0001132359999999992, 0.00011398599999999995, 0.00011401400000000256, 0.00011415300000000225, 0.00011413899999999921, 0.00011419500000000096, 0.00011393100000000114, 0.00011336100000000279, 0.00011366700000000132, 0.00011359799999999948, 0.00011383300000000068, 0.000113290999999998, 0.00011404099999999875, 0.00011379199999999798, 0.00011313900000000168, 0.0001132359999999992, 0.0001140420000000017, 0.00011345899999999978, 0.00011330600000000052, 0.00011412499999999964, 0.0001133749999999989, 0.00011355600000000077, 0.00011338900000000193, 0.00011381900000000111, 0.00011413899999999921, 0.00011381900000000111, 0.00011419400000000149]</msg>
<status status="PASS" starttime="20201112 12:27:25.071" endtime="20201112 12:27:25.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.066" endtime="20201112 12:27:25.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.076" endtime="20201112 12:27:25.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.079" endtime="20201112 12:27:25.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.078" endtime="20201112 12:27:25.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.074" endtime="20201112 12:27:25.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.705" endtime="20201112 12:27:25.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.704" endtime="20201112 12:27:25.100"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.109" endtime="20201112 12:27:25.131"></status>
</kw>
<msg timestamp="20201112 12:27:25.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.107" endtime="20201112 12:27:25.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.132" endtime="20201112 12:27:25.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.135" endtime="20201112 12:27:25.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.105" endtime="20201112 12:27:25.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.103" endtime="20201112 12:27:25.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.145" endtime="20201112 12:27:25.430"></status>
</kw>
<msg timestamp="20201112 12:27:25.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.143" endtime="20201112 12:27:25.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.434" endtime="20201112 12:27:25.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.442" endtime="20201112 12:27:25.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.141" endtime="20201112 12:27:25.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.139" endtime="20201112 12:27:25.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.449" level="INFO">${RESULT} = [{'time': 0.019951569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011411100000000007, 'source_diff': 0.00011411100000000007}, {'time': 0.020070611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.445" endtime="20201112 12:27:25.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.462" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.450" endtime="20201112 12:27:25.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.466" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.465" endtime="20201112 12:27:25.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.469" level="INFO">VALUE: [0.00011411100000000007, 0.0001150689999999989, 0.00011481899999999864, 0.0001142360000000002, 0.00011461100000000057, 0.00011458300000000143, 0.00011452799999999916, 0.00011482000000000159, 0.00011462500000000014, 0.0001142360000000002, 0.0001150559999999988, 0.00011488899999999996, 0.00011520799999999859, 0.00011422200000000063, 0.00011454099999999925, 0.0001147909999999995, 0.00011515300000000325, 0.00011488899999999996, 0.00011505600000000227, 0.00011450000000000002, 0.00011479199999999898, 0.00011455499999999882, 0.00011488899999999996, 0.00011450000000000002, 0.00011443000000000217, 0.00011501400000000009, 0.0001145420000000022, 0.00011448600000000045, 0.00011480599999999855, 0.00011488899999999996, 0.00011462500000000014, 0.00011513900000000021, 0.00011430600000000152, 0.00011412499999999964, 0.0001144299999999987, 0.00011444400000000174, 0.00011424999999999977, 0.00011498599999999748, 0.00011513900000000021, 0.00011518100000000239, 0.00011456999999999787, 0.00011507000000000184, 0.00011443099999999817, 0.00011518099999999892, 0.0001150689999999989, 0.00011430499999999857, 0.00011443000000000217, 0.00011451399999999959, 0.00011413899999999921, 0.00011454199999999873]</msg>
<status status="PASS" starttime="20201112 12:27:25.467" endtime="20201112 12:27:25.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.463" endtime="20201112 12:27:25.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.472" endtime="20201112 12:27:25.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.476" endtime="20201112 12:27:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.474" endtime="20201112 12:27:25.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.471" endtime="20201112 12:27:25.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.101" endtime="20201112 12:27:25.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.101" endtime="20201112 12:27:25.497"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.505" endtime="20201112 12:27:25.527"></status>
</kw>
<msg timestamp="20201112 12:27:25.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.504" endtime="20201112 12:27:25.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.529" endtime="20201112 12:27:25.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.531" endtime="20201112 12:27:25.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.501" endtime="20201112 12:27:25.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.499" endtime="20201112 12:27:25.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.541" endtime="20201112 12:27:25.827"></status>
</kw>
<msg timestamp="20201112 12:27:25.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.540" endtime="20201112 12:27:25.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.831" endtime="20201112 12:27:25.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.839" endtime="20201112 12:27:25.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.537" endtime="20201112 12:27:25.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.535" endtime="20201112 12:27:25.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.846" level="INFO">${RESULT} = [{'time': 0.019896736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011533300000000218, 'source_diff': 0.00011533300000000218}, {'time': 0.020016736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:25.843" endtime="20201112 12:27:25.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.860" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:25.847" endtime="20201112 12:27:25.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.865" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.864" endtime="20201112 12:27:25.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.867" level="INFO">VALUE: [0.00011533300000000218, 0.00011583299999999921, 0.00011511100000000107, 0.00011531899999999914, 0.00011623599999999873, 0.00011543100000000264, 0.0001159170000000001, 0.00011533400000000166, 0.00011619400000000002, 0.00011626400000000134, 0.00011602800000000066, 0.00011563899999999724, 0.00011580599999999955, 0.00011508299999999846, 0.00011598600000000195, 0.00011616700000000035, 0.00011563900000000071, 0.00011548600000000145, 0.00011608299999999946, 0.00011509699999999803, 0.00011583299999999921, 0.00011602800000000066, 0.00011575000000000127, 0.0001157499999999978, 0.00011575000000000127, 0.00011567999999999995, 0.00011576399999999737, 0.00011554199999999973, 0.00011565300000000028, 0.00011566699999999985, 0.00011612500000000164, 0.00011581899999999964, 0.00011604200000000023, 0.00011551400000000059, 0.00011554100000000025, 0.00011581999999999912, 0.0001156109999999981, 0.0001156109999999981, 0.00011547200000000188, 0.00011530600000000252, 0.00011616700000000035, 0.00011626400000000134, 0.00011576399999999737, 0.0001152499999999973, 0.00011529199999999948, 0.000115597000000002, 0.00011537499999999742, 0.00011526400000000034, 0.00011598600000000195, 0.0001159300000000002]</msg>
<status status="PASS" starttime="20201112 12:27:25.866" endtime="20201112 12:27:25.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.861" endtime="20201112 12:27:25.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.871" endtime="20201112 12:27:25.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.874" endtime="20201112 12:27:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.873" endtime="20201112 12:27:25.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.869" endtime="20201112 12:27:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.498" endtime="20201112 12:27:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.497" endtime="20201112 12:27:25.895"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.904" endtime="20201112 12:27:25.925"></status>
</kw>
<msg timestamp="20201112 12:27:25.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.902" endtime="20201112 12:27:25.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.926" endtime="20201112 12:27:25.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.929" endtime="20201112 12:27:25.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.900" endtime="20201112 12:27:25.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.898" endtime="20201112 12:27:25.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.939" endtime="20201112 12:27:26.225"></status>
</kw>
<msg timestamp="20201112 12:27:26.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.937" endtime="20201112 12:27:26.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.229" endtime="20201112 12:27:26.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.237" endtime="20201112 12:27:26.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.935" endtime="20201112 12:27:26.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.933" endtime="20201112 12:27:26.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.244" level="INFO">${RESULT} = [{'time': 0.019928153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011716700000000135, 'source_diff': 0.00011716700000000135}, {'time': 0.020048167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.241" endtime="20201112 12:27:26.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.257" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:26.245" endtime="20201112 12:27:26.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.262" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.261" endtime="20201112 12:27:26.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.264" level="INFO">VALUE: [0.00011716700000000135, 0.00011708399999999994, 0.0001164170000000006, 0.00011654100000000125, 0.00011654199999999726, 0.00011692999999999773, 0.00011687499999999892, 0.00011623599999999873, 0.00011638900000000146, 0.00011623599999999873, 0.00011676400000000184, 0.00011623599999999873, 0.00011704199999999776, 0.0001163750000000019, 0.0001164170000000006, 0.00011669400000000052, 0.00011693100000000067, 0.00011718000000000145, 0.00011618000000000045, 0.00011718000000000145, 0.0001164300000000007, 0.00011719400000000102, 0.00011709700000000003, 0.00011669499999999999, 0.00011718099999999745, 0.00011683399999999969, 0.00011662499999999867, 0.00011694400000000077, 0.0001164300000000007, 0.00011712499999999917, 0.0001160689999999999, 0.00011623599999999873, 0.00011687499999999892, 0.00011643100000000017, 0.00011623599999999873, 0.00011701399999999862, 0.00011656999999999987, 0.00011693100000000067, 0.00011645799999999984, 0.00011718000000000145, 0.0001169439999999973, 0.00011691599999999816, 0.00011690300000000153, 0.0001164170000000006, 0.0001168750000000024, 0.00011690299999999806, 0.0001167499999999988, 0.00011704200000000123, 0.00011633400000000266, 0.00011702700000000218]</msg>
<status status="PASS" starttime="20201112 12:27:26.263" endtime="20201112 12:27:26.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.258" endtime="20201112 12:27:26.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.268" endtime="20201112 12:27:26.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.271" endtime="20201112 12:27:26.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.270" endtime="20201112 12:27:26.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.266" endtime="20201112 12:27:26.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.896" endtime="20201112 12:27:26.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.896" endtime="20201112 12:27:26.292"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.301" endtime="20201112 12:27:26.323"></status>
</kw>
<msg timestamp="20201112 12:27:26.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.299" endtime="20201112 12:27:26.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.324" endtime="20201112 12:27:26.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.327" endtime="20201112 12:27:26.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.297" endtime="20201112 12:27:26.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.295" endtime="20201112 12:27:26.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.337" endtime="20201112 12:27:26.622"></status>
</kw>
<msg timestamp="20201112 12:27:26.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.335" endtime="20201112 12:27:26.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019861806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.626" endtime="20201112 12:27:26.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.634" endtime="20201112 12:27:26.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.333" endtime="20201112 12:27:26.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.331" endtime="20201112 12:27:26.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.641" level="INFO">${RESULT} = [{'time': 0.019979792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011798600000000048, 'source_diff': 0.00011798600000000048}, {'time': 0.020099806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:26.638" endtime="20201112 12:27:26.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.654" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:26.642" endtime="20201112 12:27:26.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.659" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.658" endtime="20201112 12:27:26.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.661" level="INFO">VALUE: [0.00011798600000000048, 0.00011765300000000228, 0.0001175699999999974, 0.00011801399999999962, 0.00011725000000000277, 0.00011736099999999985, 0.00011786100000000035, 0.00011776400000000284, 0.00011768000000000195, 0.00011818099999999845, 0.0001177499999999998, 0.00011794500000000124, 0.00011744400000000127, 0.00011812500000000017, 0.00011819399999999855, 0.0001172499999999993, 0.00011801399999999962, 0.00011726399999999887, 0.00011819399999999855, 0.00011797200000000091, 0.0001177499999999998, 0.00011779199999999851, 0.00011787499999999992, 0.0001173750000000029, 0.00011819400000000202, 0.00011729200000000148, 0.00011798600000000048, 0.00011812500000000017, 0.0001173049999999981, 0.00011751399999999912, 0.00011745800000000084, 0.00011779199999999851, 0.00011732000000000062, 0.00011747200000000041, 0.00011800000000000005, 0.00011791699999999863, 0.00011749999999999955, 0.00011755499999999836, 0.00011776399999999937, 0.00011733299999999725, 0.00011797200000000091, 0.0001176110000000001, 0.0001171109999999996, 0.00011749999999999955, 0.0001181110000000006, 0.00011748599999999998, 0.0001180560000000018, 0.00011731899999999768, 0.00011758300000000096, 0.00011731900000000114]</msg>
<status status="PASS" starttime="20201112 12:27:26.660" endtime="20201112 12:27:26.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.655" endtime="20201112 12:27:26.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.665" endtime="20201112 12:27:26.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.668" endtime="20201112 12:27:26.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.667" endtime="20201112 12:27:26.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.663" endtime="20201112 12:27:26.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.293" endtime="20201112 12:27:26.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.292" endtime="20201112 12:27:26.689"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.698" endtime="20201112 12:27:26.719"></status>
</kw>
<msg timestamp="20201112 12:27:26.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.696" endtime="20201112 12:27:26.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.721" endtime="20201112 12:27:26.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.723" endtime="20201112 12:27:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.694" endtime="20201112 12:27:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.692" endtime="20201112 12:27:26.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.733" endtime="20201112 12:27:27.019"></status>
</kw>
<msg timestamp="20201112 12:27:27.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.732" endtime="20201112 12:27:27.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.023" endtime="20201112 12:27:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.032" endtime="20201112 12:27:27.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.729" endtime="20201112 12:27:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.728" endtime="20201112 12:27:27.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.038" level="INFO">${RESULT} = [{'time': 0.019984069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011850000000000055, 'source_diff': 0.00011850000000000055}, {'time': 0.020105111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.035" endtime="20201112 12:27:27.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.052" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.039" endtime="20201112 12:27:27.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.056" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.055" endtime="20201112 12:27:27.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.059" level="INFO">VALUE: [0.00011850000000000055, 0.00011813899999999974, 0.0001183049999999991, 0.00011841699999999913, 0.0001188049999999996, 0.00011876400000000037, 0.00011886100000000135, 0.00011891699999999963, 0.00011901400000000062, 0.00011862500000000067, 0.00011897200000000191, 0.00011919400000000302, 0.00011827699999999997, 0.00011872200000000166, 0.00011852799999999969, 0.00011891600000000016, 0.0001184439999999988, 0.00011894400000000277, 0.00011872199999999819, 0.00011918099999999945, 0.00011841699999999913, 0.00011832000000000162, 0.00011884700000000178, 0.00011867999999999948, 0.00011904100000000029, 0.00011899999999999758, 0.00011836099999999738, 0.00011894499999999877, 0.00011905599999999933, 0.00011913899999999727, 0.00011813899999999974, 0.00011902800000000019, 0.00011836100000000085, 0.0001184309999999987, 0.00011837500000000042, 0.00011813899999999974, 0.00011831900000000214, 0.00011905599999999933, 0.00011898600000000148, 0.00011873600000000123, 0.000118389, 0.00011851400000000012, 0.00011844499999999827, 0.00011872200000000166, 0.00011827800000000291, 0.00011812500000000017, 0.00011866699999999938, 0.00011891600000000016, 0.0001190690000000029, 0.00011848600000000098]</msg>
<status status="PASS" starttime="20201112 12:27:27.057" endtime="20201112 12:27:27.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.053" endtime="20201112 12:27:27.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.062" endtime="20201112 12:27:27.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.066" endtime="20201112 12:27:27.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.064" endtime="20201112 12:27:27.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.061" endtime="20201112 12:27:27.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.690" endtime="20201112 12:27:27.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.690" endtime="20201112 12:27:27.086"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.095" endtime="20201112 12:27:27.117"></status>
</kw>
<msg timestamp="20201112 12:27:27.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.094" endtime="20201112 12:27:27.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.119" endtime="20201112 12:27:27.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.121" endtime="20201112 12:27:27.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.091" endtime="20201112 12:27:27.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.089" endtime="20201112 12:27:27.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.131" endtime="20201112 12:27:27.416"></status>
</kw>
<msg timestamp="20201112 12:27:27.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.130" endtime="20201112 12:27:27.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020044625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.420" endtime="20201112 12:27:27.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.428" endtime="20201112 12:27:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.127" endtime="20201112 12:27:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.125" endtime="20201112 12:27:27.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.435" level="INFO">${RESULT} = [{'time': 0.020044625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012016700000000088, 'source_diff': 0.00012016700000000088}, {'time': 0.020167694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.431" endtime="20201112 12:27:27.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.449" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.436" endtime="20201112 12:27:27.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.454" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.453" endtime="20201112 12:27:27.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.456" level="INFO">VALUE: [0.00012016700000000088, 0.00011987499999999846, 0.00011954099999999732, 0.00012004200000000076, 0.0001194439999999998, 0.0001194439999999998, 0.0001198050000000006, 0.00011963899999999777, 0.0001199440000000003, 0.00011954200000000026, 0.00012016700000000088, 0.00011965300000000081, 0.00011969499999999952, 0.0001201249999999987, 0.0001201110000000026, 0.00011983299999999975, 0.00011977700000000147, 0.00012008399999999947, 0.0001191249999999977, 0.0001196249999999982, 0.0001198050000000006, 0.00011955599999999983, 0.00012002800000000119, 0.0001196110000000021, 0.00011926400000000087, 0.00011927800000000044, 0.00011937499999999795, 0.00011949999999999808, 0.00011987499999999846, 0.00011963899999999777, 0.0001194439999999998, 0.00011956899999999993, 0.00011991699999999716, 0.00011966700000000038, 0.00011981999999999965, 0.00011997199999999944, 0.0001192500000000013, 0.00011966699999999691, 0.00011984700000000278, 0.00011947199999999894, 0.00011965300000000081, 0.000119389000000001, 0.00011929100000000054, 0.00012027700000000197, 0.00011986099999999889, 0.00011983399999999922, 0.00011998600000000248, 0.00011973599999999876, 0.00011965200000000134, 0.00011998599999999901]</msg>
<status status="PASS" starttime="20201112 12:27:27.455" endtime="20201112 12:27:27.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.450" endtime="20201112 12:27:27.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.460" endtime="20201112 12:27:27.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.463" endtime="20201112 12:27:27.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.462" endtime="20201112 12:27:27.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.458" endtime="20201112 12:27:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.087" endtime="20201112 12:27:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.087" endtime="20201112 12:27:27.484"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.493" endtime="20201112 12:27:27.514"></status>
</kw>
<msg timestamp="20201112 12:27:27.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.491" endtime="20201112 12:27:27.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.515" endtime="20201112 12:27:27.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.518" endtime="20201112 12:27:27.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.488" endtime="20201112 12:27:27.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.486" endtime="20201112 12:27:27.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.528" endtime="20201112 12:27:27.814"></status>
</kw>
<msg timestamp="20201112 12:27:27.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.526" endtime="20201112 12:27:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019917931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.818" endtime="20201112 12:27:27.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.826" endtime="20201112 12:27:27.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.524" endtime="20201112 12:27:27.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.522" endtime="20201112 12:27:27.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.833" level="INFO">${RESULT} = [{'time': 0.019917931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012055600000000083, 'source_diff': 0.00012055600000000083}, {'time': 0.020044958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:27.829" endtime="20201112 12:27:27.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.846" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:27.834" endtime="20201112 12:27:27.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.850" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.849" endtime="20201112 12:27:27.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.853" level="INFO">VALUE: [0.00012055600000000083, 0.00012102700000000272, 0.00012077799999999847, 0.00012087500000000292, 0.00012055499999999789, 0.00012094399999999783, 0.00012098600000000001, 0.00012074999999999933, 0.0001206249999999992, 0.0001206249999999992, 0.00012120800000000112, 0.00012105499999999839, 0.00012087499999999946, 0.00012012500000000217, 0.00012031900000000068, 0.00012013899999999827, 0.00012091699999999816, 0.00012099999999999958, 0.00012118099999999798, 0.00012102800000000219, 0.00012043099999999723, 0.00012069500000000052, 0.00012079100000000204, 0.00012043099999999723, 0.00012045899999999984, 0.00012058299999999703, 0.00012119400000000155, 0.00012099999999999958, 0.00012055600000000083, 0.00012032000000000015, 0.00012082000000000065, 0.00012061099999999964, 0.00012106999999999743, 0.00012098699999999948, 0.00012074999999999933, 0.0001207639999999989, 0.00012013900000000174, 0.00012058399999999997, 0.00012042999999999776, 0.00012080599999999761, 0.00012048599999999951, 0.00012083300000000075, 0.00012068100000000095, 0.00012063900000000224, 0.00012045800000000037, 0.00012055499999999789, 0.00012066600000000191, 0.00012119400000000155, 0.00012115299999999884, 0.00012083300000000075]</msg>
<status status="PASS" starttime="20201112 12:27:27.851" endtime="20201112 12:27:27.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.847" endtime="20201112 12:27:27.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.856" endtime="20201112 12:27:27.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.860" endtime="20201112 12:27:27.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.858" endtime="20201112 12:27:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.855" endtime="20201112 12:27:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.485" endtime="20201112 12:27:27.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.484" endtime="20201112 12:27:27.881"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.889" endtime="20201112 12:27:27.909"></status>
</kw>
<msg timestamp="20201112 12:27:27.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.888" endtime="20201112 12:27:27.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.911" endtime="20201112 12:27:27.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.913" endtime="20201112 12:27:27.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.885" endtime="20201112 12:27:27.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.883" endtime="20201112 12:27:27.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.923" endtime="20201112 12:27:28.209"></status>
</kw>
<msg timestamp="20201112 12:27:28.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020236472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.922" endtime="20201112 12:27:28.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020236472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.213" endtime="20201112 12:27:28.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.221" endtime="20201112 12:27:28.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.919" endtime="20201112 12:27:28.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.917" endtime="20201112 12:27:28.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.228" level="INFO">${RESULT} = [{'time': 0.020236472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012137499999999996, 'source_diff': 0.00012137499999999996}, {'time': 0.020362472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:28.225" endtime="20201112 12:27:28.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 12:27:28.229" endtime="20201112 12:27:28.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.246" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.245" endtime="20201112 12:27:28.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.248" level="INFO">VALUE: [0.00012137499999999996, 0.00012148600000000051, 0.00012205500000000286, 0.00012173600000000076, 0.00012206999999999843, 0.00012173600000000076, 0.0001212639999999994, 0.00012112500000000317, 0.00012205600000000233, 0.00012219399999999908, 0.00012204099999999982, 0.00012192999999999926, 0.00012212499999999724, 0.00012180599999999861, 0.00012201400000000015, 0.0001215700000000014, 0.00012155600000000183, 0.00012211099999999767, 0.00012163899999999978, 0.00012194500000000177, 0.00012200000000000058, 0.000121777, 0.0001221250000000007, 0.00012133299999999778, 0.00012205499999999939, 0.00012163899999999978, 0.00012136100000000039, 0.00012175000000000033, 0.00012198600000000101, 0.00012169500000000152, 0.00012154199999999879, 0.00012209700000000157, 0.00012184700000000132, 0.00012226399999999693, 0.00012193099999999873, 0.00012216699999999941, 0.00012187500000000046, 0.00012201400000000015, 0.00012109700000000057, 0.00012184699999999785, 0.00012133400000000072, 0.00012142999999999876, 0.00012130599999999811, 0.00012186100000000089, 0.00012205499999999939, 0.00012211100000000114, 0.00012206899999999896, 0.00012148599999999704, 0.00012187500000000046, 0.00012132000000000115]</msg>
<status status="PASS" starttime="20201112 12:27:28.247" endtime="20201112 12:27:28.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.242" endtime="20201112 12:27:28.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.252" endtime="20201112 12:27:28.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.255" endtime="20201112 12:27:28.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.254" endtime="20201112 12:27:28.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.250" endtime="20201112 12:27:28.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.882" endtime="20201112 12:27:28.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.881" endtime="20201112 12:27:28.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.595" endtime="20201112 12:27:28.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.281" endtime="20201112 12:27:28.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.279" endtime="20201112 12:27:28.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.278" endtime="20201112 12:27:28.301"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:48.520" endtime="20201112 12:27:28.301" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:07.429" endtime="20201112 12:27:28.305"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.362" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:28.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:29.337" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:28.361" endtime="20201112 12:27:29.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.340" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:29.339" endtime="20201112 12:27:29.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.360" endtime="20201112 12:27:29.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.343" endtime="20201112 12:27:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.342" endtime="20201112 12:27:29.528"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.540" endtime="20201112 12:27:29.560"></status>
</kw>
<msg timestamp="20201112 12:27:29.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.539" endtime="20201112 12:27:29.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.562" endtime="20201112 12:27:29.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.566" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:29.564" endtime="20201112 12:27:29.567"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:29.536" endtime="20201112 12:27:29.567"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:29.534" endtime="20201112 12:27:29.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.533" endtime="20201112 12:27:29.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:29.573" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:29.573" endtime="20201112 12:27:29.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.569" endtime="20201112 12:27:29.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.532" endtime="20201112 12:27:29.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.531" endtime="20201112 12:27:29.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.575" endtime="20201112 12:27:29.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.530" endtime="20201112 12:27:29.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.579" endtime="20201112 12:27:29.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.529" endtime="20201112 12:27:29.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.358" endtime="20201112 12:27:29.581"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.587" endtime="20201112 12:27:29.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.586" endtime="20201112 12:27:29.607"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.620" endtime="20201112 12:27:29.636"></status>
</kw>
<msg timestamp="20201112 12:27:29.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.619" endtime="20201112 12:27:29.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.638" endtime="20201112 12:27:29.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.642" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:29.640" endtime="20201112 12:27:29.643"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:29.616" endtime="20201112 12:27:29.643"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:29.614" endtime="20201112 12:27:29.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.612" endtime="20201112 12:27:29.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:29.648" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:29.647" endtime="20201112 12:27:29.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.645" endtime="20201112 12:27:29.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.612" endtime="20201112 12:27:29.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.611" endtime="20201112 12:27:29.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.650" endtime="20201112 12:27:29.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.610" endtime="20201112 12:27:29.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.608" endtime="20201112 12:27:29.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.584" endtime="20201112 12:27:29.652"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:29.656" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.666" endtime="20201112 12:27:31.743"></status>
</kw>
<msg timestamp="20201112 12:27:31.745" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 253313, 'wakeups': [263399, 273330, 283321, 293321, 303321, 313321, 32...</msg>
<status status="PASS" starttime="20201112 12:27:29.664" endtime="20201112 12:27:31.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 253313, 'wakeups': [263399, 273330, 283321, 293321, 303321, 313321, 32...</msg>
<status status="PASS" starttime="20201112 12:27:31.747" endtime="20201112 12:27:31.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.753" endtime="20201112 12:27:31.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.661" endtime="20201112 12:27:31.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.658" endtime="20201112 12:27:31.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.765" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [263399, 273330, 283321, 293321, 303321, 313321, 323321, 333321, 343321, 353321, 363321, 373321, 383321, 393321, 403321, 413321, 423321, 433321, 443321, 453321, 463321, 4...</msg>
<status status="PASS" starttime="20201112 12:27:31.761" endtime="20201112 12:27:31.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.773" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:31.771" endtime="20201112 12:27:31.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.778" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:31.776" endtime="20201112 12:27:31.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.766" endtime="20201112 12:27:31.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.788" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:31.786" endtime="20201112 12:27:31.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.792" level="INFO">VALUE: 253313</msg>
<status status="PASS" starttime="20201112 12:27:31.790" endtime="20201112 12:27:31.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.781" endtime="20201112 12:27:31.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.803" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:31.801" endtime="20201112 12:27:31.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.807" level="INFO">VALUE: [263399, 273330, 283321, 293321, 303321, 313321, 323321, 333321, 343321, 353321, 363321, 373321, 383321, 393321, 403321, 413321, 423321, 433321, 443321, 453321, 463321, 473321, 483321, 493321, 503321, 513321, 523321, 533321, 543321, 553321, 563321, 573321, 583321, 593321, 603321, 613321, 623321, 633321, 643321, 653321, 663321, 673321, 683321, 693321, 703321, 713321, 723321, 733321, 743321, 753321, 763321, 773321, 783321, 793321, 803321, 813321, 823321, 833321, 843321, 853321, 863321, 873321, 883321, 893321, 903321, 913321, 923321, 933321, 943321, 953321, 963321, 973321, 983321, 993321, 1003321, 1013321, 1023321, 1033321, 1043321, 1053321, 1063321, 1073321, 1083321, 1093321, 1103321, 1113321, 1123321, 1133321, 1143321, 1153321, 1163321, 1173321, 1183321, 1193321, 1203321, 1213321, 1223321, 1233321, 1243321, 1253321]</msg>
<status status="PASS" starttime="20201112 12:27:31.805" endtime="20201112 12:27:31.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.795" endtime="20201112 12:27:31.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.823" endtime="20201112 12:27:32.121"></status>
</kw>
<msg timestamp="20201112 12:27:32.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067942375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078029764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.820" endtime="20201112 12:27:32.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067942375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078029764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.125" endtime="20201112 12:27:32.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.133" endtime="20201112 12:27:32.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.814" endtime="20201112 12:27:32.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.811" endtime="20201112 12:27:32.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.160" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:32.136" endtime="20201112 12:27:32.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.164" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:32.163" endtime="20201112 12:27:32.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.167" level="INFO">VALUE: 0.067942375</msg>
<status status="PASS" starttime="20201112 12:27:32.166" endtime="20201112 12:27:32.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.161" endtime="20201112 12:27:32.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.172" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:32.171" endtime="20201112 12:27:32.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.174" level="INFO">VALUE: [0.078029764, 0.087957139, 0.097949069, 0.107949972, 0.117950931, 0.127951819, 0.13795275, 0.147953667, 0.157954611, 0.167955528, 0.177956458, 0.187957375, 0.197958319, 0.20795925, 0.217960153, 0.227961069, 0.237962014, 0.247962931, 0.257963847, 0.267964806, 0.277965681, 0.287966597, 0.297967542, 0.307968444, 0.317969389, 0.327970278, 0.337971222, 0.347972125, 0.357973056, 0.367973972, 0.377974903, 0.387975833, 0.397976819, 0.407977681, 0.417978611, 0.4279795, 0.437980444, 0.447981347, 0.457982319, 0.467983194, 0.477984153, 0.487985042, 0.497985972, 0.507986903, 0.517987819, 0.52798875, 0.537989667, 0.547990583, 0.557991514, 0.567992417, 0.577993375, 0.587994264, 0.597995236, 0.607996111, 0.617997056, 0.627997972, 0.637998889, 0.647999806, 0.658000736, 0.668001667, 0.678002583, 0.6880035, 0.698004486, 0.708005347, 0.718006292, 0.728007194, 0.738008125, 0.748009042, 0.758009986, 0.768010889, 0.778011819, 0.788012764, 0.798013667, 0.808014625, 0.818015514, 0.828016431, 0.838017361, 0.848018278, 0.858019222, 0.868020125, 0.878021056, 0.888022042, 0.898022903, 0.908023847, 0.918024778, 0.928025708, 0.938026625, 0.948027514, 0.958028458, 0.968029361, 0.978030361, 0.988031222, 0.998032153, 1.008033056, 1.018033986, 1.028034972, 1.038035861, 1.04803675, 1.058037694, 1.068038611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:32.173" endtime="20201112 12:27:32.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.168" endtime="20201112 12:27:32.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.178" endtime="20201112 12:27:32.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.181" endtime="20201112 12:27:32.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.179" endtime="20201112 12:27:32.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.176" endtime="20201112 12:27:32.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.657" endtime="20201112 12:27:32.202"></status>
</kw>
<msg timestamp="20201112 12:27:32.202" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.210" endtime="20201112 12:27:34.293"></status>
</kw>
<msg timestamp="20201112 12:27:34.294" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2797473, 'wakeups': [2807481, 2817481, 2827481, 2837481, 2847481, 2857...</msg>
<status status="PASS" starttime="20201112 12:27:32.209" endtime="20201112 12:27:34.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2797473, 'wakeups': [2807481, 2817481, 2827481, 2837481, 2847481, 2857...</msg>
<status status="PASS" starttime="20201112 12:27:34.297" endtime="20201112 12:27:34.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.303" endtime="20201112 12:27:34.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.206" endtime="20201112 12:27:34.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.204" endtime="20201112 12:27:34.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.314" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [2807481, 2817481, 2827481, 2837481, 2847481, 2857481, 2867481, 2877481, 2887481, 2897481, 2907481, 2917481, 2927481, 2937481, 2947481, 2957481, 2967481, 2977481, 2987481...</msg>
<status status="PASS" starttime="20201112 12:27:34.310" endtime="20201112 12:27:34.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.324" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:34.320" endtime="20201112 12:27:34.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.329" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:34.327" endtime="20201112 12:27:34.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.315" endtime="20201112 12:27:34.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.339" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:34.337" endtime="20201112 12:27:34.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.344" level="INFO">VALUE: 2797473</msg>
<status status="PASS" starttime="20201112 12:27:34.342" endtime="20201112 12:27:34.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.332" endtime="20201112 12:27:34.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.354" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:34.352" endtime="20201112 12:27:34.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.359" level="INFO">VALUE: [2807481, 2817481, 2827481, 2837481, 2847481, 2857481, 2867481, 2877481, 2887481, 2897481, 2907481, 2917481, 2927481, 2937481, 2947481, 2957481, 2967481, 2977481, 2987481, 2997481, 3007481, 3017481, 3027481, 3037481, 3047481, 3057481, 3067481, 3077481, 3087481, 3097481, 3107481, 3117481, 3127481, 3137481, 3147481, 3157481, 3167481, 3177481, 3187481, 3197481, 3207481, 3217481, 3227481, 3237481, 3247481, 3257481, 3267481, 3277481, 3287481, 3297481, 3307481, 3317481, 3327481, 3337481, 3347481, 3357481, 3367481, 3377481, 3387481, 3397481, 3407481, 3417481, 3427481, 3437481, 3447481, 3457481, 3467481, 3477481, 3487481, 3497481, 3507481, 3517481, 3527481, 3537481, 3547481, 3557481, 3567481, 3577481, 3587481, 3597481, 3607481, 3617481, 3627481, 3637481, 3647481, 3657481, 3667481, 3677481, 3687481, 3697481, 3707481, 3717481, 3727481, 3737481, 3747481, 3757481, 3767481, 3777481, 3787481, 3797481]</msg>
<status status="PASS" starttime="20201112 12:27:34.357" endtime="20201112 12:27:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.347" endtime="20201112 12:27:34.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.375" endtime="20201112 12:27:34.667"></status>
</kw>
<msg timestamp="20201112 12:27:34.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028335681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.371" endtime="20201112 12:27:34.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018326958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028335681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.671" endtime="20201112 12:27:34.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.678" endtime="20201112 12:27:34.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.366" endtime="20201112 12:27:34.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.362" endtime="20201112 12:27:34.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.705" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:34.682" endtime="20201112 12:27:34.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.710" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:34.709" endtime="20201112 12:27:34.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.712" level="INFO">VALUE: 0.018326958</msg>
<status status="PASS" starttime="20201112 12:27:34.711" endtime="20201112 12:27:34.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.706" endtime="20201112 12:27:34.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.717" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:34.716" endtime="20201112 12:27:34.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.720" level="INFO">VALUE: [0.028335681, 0.038336611, 0.048337514, 0.058338472, 0.068339361, 0.078340333, 0.088341236, 0.098342208, 0.108343069, 0.118343986, 0.128344917, 0.138345833, 0.14834675, 0.158347681, 0.168348583, 0.178349542, 0.188350444, 0.198351389, 0.208352292, 0.218353222, 0.228354125, 0.238355056, 0.248355972, 0.258356944, 0.268357819, 0.27835875, 0.288359667, 0.298360597, 0.308361528, 0.318362444, 0.328363361, 0.338364292, 0.348365208, 0.358366139, 0.368367097, 0.378368, 0.388368917, 0.398369833, 0.408370764, 0.418371681, 0.428372625, 0.438373556, 0.448374444, 0.458375403, 0.468376278, 0.478377222, 0.488378139, 0.498379069, 0.50838, 0.518380917, 0.528381847, 0.538382764, 0.548383722, 0.558384611, 0.568385528, 0.578386486, 0.588387375, 0.598388306, 0.608389222, 0.618390181, 0.628391069, 0.638392014, 0.648392986, 0.658393861, 0.668394778, 0.678395694, 0.688396611, 0.698397556, 0.708398458, 0.718399403, 0.728400319, 0.73840125, 0.748402167, 0.758403097, 0.768404, 0.778405, 0.788405847, 0.798406792, 0.808407694, 0.818408639, 0.828409569, 0.838410514, 0.848411403, 0.858412347, 0.868413264, 0.878414194, 0.888415097, 0.898416028, 0.908416958, 0.918417875, 0.928418806, 0.938419736, 0.948420639, 0.958421583, 0.968422486, 0.978423431, 0.988424333, 0.998425264, 1.008426181, 1.018427125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:34.719" endtime="20201112 12:27:34.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.714" endtime="20201112 12:27:34.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.727" endtime="20201112 12:27:34.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.731" endtime="20201112 12:27:34.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.729" endtime="20201112 12:27:34.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.726" endtime="20201112 12:27:34.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.203" endtime="20201112 12:27:34.752"></status>
</kw>
<msg timestamp="20201112 12:27:34.752" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.760" endtime="20201112 12:27:36.843"></status>
</kw>
<msg timestamp="20201112 12:27:36.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5347406, 'wakeups': [5357414, 5367414, 5377414, 5387414, 5397414, 5407...</msg>
<status status="PASS" starttime="20201112 12:27:34.758" endtime="20201112 12:27:36.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.850" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5347406, 'wakeups': [5357414, 5367414, 5377414, 5387414, 5397414, 5407...</msg>
<status status="PASS" starttime="20201112 12:27:36.846" endtime="20201112 12:27:36.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.852" endtime="20201112 12:27:36.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.756" endtime="20201112 12:27:36.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.754" endtime="20201112 12:27:36.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.863" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [5357414, 5367414, 5377414, 5387414, 5397414, 5407414, 5417414, 5427414, 5437414, 5447414, 5457414, 5467414, 5477414, 5487414, 5497414, 5507414, 5517414, 5527414, 5537414...</msg>
<status status="PASS" starttime="20201112 12:27:36.859" endtime="20201112 12:27:36.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.872" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:36.870" endtime="20201112 12:27:36.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.876" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:36.874" endtime="20201112 12:27:36.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.865" endtime="20201112 12:27:36.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.886" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:36.884" endtime="20201112 12:27:36.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.891" level="INFO">VALUE: 5347406</msg>
<status status="PASS" starttime="20201112 12:27:36.889" endtime="20201112 12:27:36.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.879" endtime="20201112 12:27:36.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.901" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:36.899" endtime="20201112 12:27:36.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.906" level="INFO">VALUE: [5357414, 5367414, 5377414, 5387414, 5397414, 5407414, 5417414, 5427414, 5437414, 5447414, 5457414, 5467414, 5477414, 5487414, 5497414, 5507414, 5517414, 5527414, 5537414, 5547414, 5557414, 5567414, 5577414, 5587414, 5597414, 5607414, 5617414, 5627414, 5637414, 5647414, 5657414, 5667414, 5677414, 5687414, 5697414, 5707414, 5717414, 5727414, 5737414, 5747414, 5757414, 5767414, 5777414, 5787414, 5797414, 5807414, 5817414, 5827414, 5837414, 5847414, 5857414, 5867414, 5877414, 5887414, 5897414, 5907414, 5917414, 5927414, 5937414, 5947414, 5957414, 5967414, 5977414, 5987414, 5997414, 6007414, 6017414, 6027414, 6037414, 6047414, 6057414, 6067414, 6077414, 6087414, 6097414, 6107414, 6117414, 6127414, 6137414, 6147414, 6157414, 6167414, 6177414, 6187414, 6197414, 6207414, 6217414, 6227414, 6237414, 6247414, 6257414, 6267414, 6277414, 6287414, 6297414, 6307414, 6317414, 6327414, 6337414, 6347414]</msg>
<status status="PASS" starttime="20201112 12:27:36.903" endtime="20201112 12:27:36.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.894" endtime="20201112 12:27:36.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.917" endtime="20201112 12:27:37.208"></status>
</kw>
<msg timestamp="20201112 12:27:37.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028325292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.915" endtime="20201112 12:27:37.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028325292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.212" endtime="20201112 12:27:37.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.220" endtime="20201112 12:27:37.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.912" endtime="20201112 12:27:37.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.909" endtime="20201112 12:27:37.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.247" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:37.223" endtime="20201112 12:27:37.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.252" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:37.251" endtime="20201112 12:27:37.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.254" level="INFO">VALUE: 0.018316208</msg>
<status status="PASS" starttime="20201112 12:27:37.253" endtime="20201112 12:27:37.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.248" endtime="20201112 12:27:37.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.259" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:37.258" endtime="20201112 12:27:37.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.261" level="INFO">VALUE: [0.028325292, 0.038326222, 0.048327139, 0.058328069, 0.068328986, 0.078329931, 0.088330861, 0.098331764, 0.108332681, 0.118333639, 0.128334514, 0.138335458, 0.148336375, 0.158337292, 0.168338222, 0.178339194, 0.188340056, 0.198341028, 0.208341903, 0.218342847, 0.228343736, 0.238344708, 0.248345583, 0.258346542, 0.268347444, 0.278348431, 0.288349278, 0.298350222, 0.308351125, 0.318352069, 0.328352986, 0.338353903, 0.348354833, 0.35835575, 0.368356667, 0.378357597, 0.388358514, 0.398359444, 0.408360361, 0.418361292, 0.428362208, 0.438363139, 0.448364069, 0.458364986, 0.468365931, 0.478366847, 0.488367792, 0.498368681, 0.508369597, 0.518370528, 0.528371444, 0.538372375, 0.548373292, 0.558374236, 0.568375139, 0.578376083, 0.588377, 0.598377972, 0.608378875, 0.618379764, 0.62838075, 0.638381625, 0.648382528, 0.658383458, 0.668384375, 0.678385319, 0.68838625, 0.698387167, 0.708388056, 0.718389, 0.728389917, 0.738390847, 0.74839175, 0.758392681, 0.768393611, 0.778394542, 0.788395444, 0.798396403, 0.808397292, 0.818398236, 0.828399139, 0.838400083, 0.848400986, 0.858401917, 0.868402819, 0.878403819, 0.888404667, 0.898405611, 0.908406528, 0.918407458, 0.928408403, 0.938409306, 0.948410278, 0.958411153, 0.968412056, 0.978412986, 0.988413903, 0.998414833, 1.00841575, 1.018416681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:37.260" endtime="20201112 12:27:37.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.255" endtime="20201112 12:27:37.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.264" endtime="20201112 12:27:37.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.268" endtime="20201112 12:27:37.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.266" endtime="20201112 12:27:37.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.263" endtime="20201112 12:27:37.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.753" endtime="20201112 12:27:37.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.655" endtime="20201112 12:27:37.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.654" endtime="20201112 12:27:37.289"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:37.292" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.301" endtime="20201112 12:27:39.384"></status>
</kw>
<msg timestamp="20201112 12:27:39.385" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7888670, 'wakeups': [7898699, 7908678, 7918685, 7928686, 7938686, 7948...</msg>
<status status="PASS" starttime="20201112 12:27:37.299" endtime="20201112 12:27:39.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7888670, 'wakeups': [7898699, 7908678, 7918685, 7928686, 7938686, 7948...</msg>
<status status="PASS" starttime="20201112 12:27:39.388" endtime="20201112 12:27:39.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.394" endtime="20201112 12:27:39.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.296" endtime="20201112 12:27:39.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.294" endtime="20201112 12:27:39.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.405" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [7898699, 7908678, 7918685, 7928686, 7938686, 7948686, 7958686, 7968686, 7978686, 7988686, 7998686, 8008686, 8018686, 8028686, 8038686, 8048686, 8058686, 8068686, 8078686...</msg>
<status status="PASS" starttime="20201112 12:27:39.401" endtime="20201112 12:27:39.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.413" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:39.411" endtime="20201112 12:27:39.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.418" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:39.416" endtime="20201112 12:27:39.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.407" endtime="20201112 12:27:39.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.428" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:39.426" endtime="20201112 12:27:39.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.432" level="INFO">VALUE: 7888670</msg>
<status status="PASS" starttime="20201112 12:27:39.430" endtime="20201112 12:27:39.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.421" endtime="20201112 12:27:39.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.443" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:39.441" endtime="20201112 12:27:39.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.447" level="INFO">VALUE: [7898699, 7908678, 7918685, 7928686, 7938686, 7948686, 7958686, 7968686, 7978686, 7988686, 7998686, 8008686, 8018686, 8028686, 8038686, 8048686, 8058686, 8068686, 8078686, 8088686, 8098686, 8108686, 8118686, 8128686, 8138686, 8148686, 8158686, 8168686, 8178686, 8188686, 8198686, 8208686, 8218686, 8228686, 8238686, 8248686, 8258686, 8268686, 8278686, 8288686, 8298686, 8308686, 8318686, 8328686, 8338686, 8348686, 8358686, 8368686, 8378686, 8388686, 8398686, 8408686, 8418686, 8428686, 8438686, 8448686, 8458686, 8468686, 8478686, 8488686, 8498686, 8508686, 8518686, 8528686, 8538686, 8548686, 8558686, 8568686, 8578686, 8588686, 8598686, 8608686, 8618686, 8628686, 8638686, 8648686, 8658686, 8668686, 8678686, 8688686, 8698686, 8708686, 8718686, 8728686, 8738686, 8748686, 8758686, 8768686, 8778686, 8788686, 8798686, 8808686, 8818686, 8828686, 8838686, 8848686, 8858686, 8868686, 8878686, 8888686]</msg>
<status status="PASS" starttime="20201112 12:27:39.445" endtime="20201112 12:27:39.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.435" endtime="20201112 12:27:39.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.463" endtime="20201112 12:27:39.759"></status>
</kw>
<msg timestamp="20201112 12:27:39.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032637903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.460" endtime="20201112 12:27:39.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032637903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.763" endtime="20201112 12:27:39.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.770" endtime="20201112 12:27:39.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.454" endtime="20201112 12:27:39.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.450" endtime="20201112 12:27:39.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.801" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:39.778" endtime="20201112 12:27:39.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.806" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:39.805" endtime="20201112 12:27:39.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.808" level="INFO">VALUE: 0.022607611</msg>
<status status="PASS" starttime="20201112 12:27:39.807" endtime="20201112 12:27:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.802" endtime="20201112 12:27:39.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.813" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:39.812" endtime="20201112 12:27:39.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.816" level="INFO">VALUE: [0.032637903, 0.042617639, 0.052625653, 0.062627583, 0.072628514, 0.082629444, 0.092630361, 0.102631292, 0.112632208, 0.122633125, 0.132634056, 0.142634986, 0.152635917, 0.162636819, 0.17263775, 0.18263875, 0.192639597, 0.202640597, 0.212641431, 0.222642389, 0.232643278, 0.242644236, 0.252645125, 0.262646069, 0.272647042, 0.282647903, 0.292648833, 0.30264975, 0.312650667, 0.322651611, 0.332652569, 0.342653444, 0.352654431, 0.362655333, 0.372656208, 0.382657153, 0.392658069, 0.402658986, 0.412659903, 0.422660833, 0.43266175, 0.442662681, 0.452663611, 0.462664528, 0.472665472, 0.482666389, 0.492667306, 0.502668236, 0.512669167, 0.522670083, 0.532671014, 0.542671917, 0.552672847, 0.562673847, 0.572674694, 0.582675625, 0.592676542, 0.602677556, 0.612678403, 0.622679319, 0.632680236, 0.642681167, 0.652682097, 0.662683014, 0.672683944, 0.682684861, 0.692685819, 0.702686792, 0.712687639, 0.722688556, 0.732689486, 0.742690417, 0.752691347, 0.762692264, 0.772693194, 0.782694111, 0.792695028, 0.802695958, 0.812696889, 0.822697806, 0.832698736, 0.842699667, 0.852700583, 0.862701528, 0.872702444, 0.882703361, 0.892704278, 0.902705222, 0.912706139, 0.922707097, 0.932707972, 0.942708917, 0.952709833, 0.962710764, 0.972711681, 0.982712653, 0.992713528, 1.002714444, 1.012715375, 1.022716333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:39.815" endtime="20201112 12:27:39.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.810" endtime="20201112 12:27:39.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.819" endtime="20201112 12:27:39.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.822" endtime="20201112 12:27:39.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.821" endtime="20201112 12:27:39.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.817" endtime="20201112 12:27:39.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.292" endtime="20201112 12:27:39.843"></status>
</kw>
<msg timestamp="20201112 12:27:39.843" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.851" endtime="20201112 12:27:41.945"></status>
</kw>
<msg timestamp="20201112 12:27:41.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10438623, 'wakeups': [10448639, 10458639, 10468639, 10478639, 10488639...</msg>
<status status="PASS" starttime="20201112 12:27:39.850" endtime="20201112 12:27:41.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10438623, 'wakeups': [10448639, 10458639, 10468639, 10478639, 10488639...</msg>
<status status="PASS" starttime="20201112 12:27:41.948" endtime="20201112 12:27:41.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.954" endtime="20201112 12:27:41.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.847" endtime="20201112 12:27:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.845" endtime="20201112 12:27:41.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.965" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [10448639, 10458639, 10468639, 10478639, 10488639, 10498639, 10508639, 10518639, 10528639, 10538639, 10548639, 10558639, 10568639, 10578639, 10588639, 10598639, 10608639,...</msg>
<status status="PASS" starttime="20201112 12:27:41.961" endtime="20201112 12:27:41.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.974" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:41.972" endtime="20201112 12:27:41.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.979" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:41.977" endtime="20201112 12:27:41.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.967" endtime="20201112 12:27:41.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.991" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:41.987" endtime="20201112 12:27:41.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.996" level="INFO">VALUE: 10438623</msg>
<status status="PASS" starttime="20201112 12:27:41.994" endtime="20201112 12:27:41.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.982" endtime="20201112 12:27:41.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.006" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.004" endtime="20201112 12:27:42.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.010" level="INFO">VALUE: [10448639, 10458639, 10468639, 10478639, 10488639, 10498639, 10508639, 10518639, 10528639, 10538639, 10548639, 10558639, 10568639, 10578639, 10588639, 10598639, 10608639, 10618639, 10628639, 10638639, 10648639, 10658639, 10668639, 10678639, 10688639, 10698639, 10708639, 10718639, 10728639, 10738639, 10748639, 10758639, 10768639, 10778639, 10788639, 10798639, 10808639, 10818639, 10828639, 10838639, 10848639, 10858639, 10868639, 10878639, 10888639, 10898639, 10908639, 10918639, 10928639, 10938639, 10948639, 10958639, 10968639, 10978639, 10988639, 10998639, 11008639, 11018639, 11028639, 11038639, 11048639, 11058639, 11068639, 11078639, 11088639, 11098639, 11108639, 11118639, 11128639, 11138639, 11148639, 11158639, 11168639, 11178639, 11188639, 11198639, 11208639, 11218639, 11228639, 11238639, 11248639, 11258639, 11268639, 11278639, 11288639, 11298639, 11308639, 11318639, 11328639, 11338639, 11348639, 11358639, 11368639, 11378639, 11388639, 11398639, 11408639, 11418639, 11428639, 11438639]</msg>
<status status="PASS" starttime="20201112 12:27:42.009" endtime="20201112 12:27:42.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.999" endtime="20201112 12:27:42.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.017" endtime="20201112 12:27:42.308"></status>
</kw>
<msg timestamp="20201112 12:27:42.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028361847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.016" endtime="20201112 12:27:42.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028361847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.312" endtime="20201112 12:27:42.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.319" endtime="20201112 12:27:42.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.013" endtime="20201112 12:27:42.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.011" endtime="20201112 12:27:42.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.346" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:42.323" endtime="20201112 12:27:42.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.351" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:42.350" endtime="20201112 12:27:42.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.353" level="INFO">VALUE: 0.018344569</msg>
<status status="PASS" starttime="20201112 12:27:42.352" endtime="20201112 12:27:42.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.347" endtime="20201112 12:27:42.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.358" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:42.357" endtime="20201112 12:27:42.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.361" level="INFO">VALUE: [0.028361847, 0.038362639, 0.048363569, 0.0583645, 0.068365417, 0.078366333, 0.088367264, 0.098368181, 0.108369125, 0.118370028, 0.128370958, 0.138371889, 0.148372819, 0.158373722, 0.168374667, 0.178375569, 0.1883765, 0.198377403, 0.208378375, 0.21837925, 0.228380181, 0.238381153, 0.248382014, 0.258382944, 0.268383861, 0.278384792, 0.288385708, 0.298386639, 0.308387556, 0.318388472, 0.328389417, 0.338390319, 0.34839125, 0.358392167, 0.368393097, 0.378394028, 0.388394944, 0.398395861, 0.408396792, 0.418397722, 0.428398639, 0.438399569, 0.448400486, 0.458401403, 0.468402319, 0.478403264, 0.488404167, 0.498405097, 0.508406028, 0.518407014, 0.528407875, 0.538408792, 0.548409708, 0.558410653, 0.568411611, 0.578412486, 0.588413403, 0.598414333, 0.608415264, 0.618416194, 0.628417097, 0.638418028, 0.648418958, 0.658419875, 0.668420806, 0.678421722, 0.688422639, 0.698423569, 0.708424486, 0.718425417, 0.728426347, 0.738427264, 0.748428194, 0.758429111, 0.768430028, 0.778430972, 0.788431875, 0.798432819, 0.808433722, 0.818434653, 0.828435583, 0.8384365, 0.848437431, 0.858438347, 0.868439319, 0.878440194, 0.888441125, 0.898442056, 0.908442972, 0.918443903, 0.928444819, 0.93844575, 0.948446681, 0.958447583, 0.968448514, 0.978449458, 0.988450361, 0.998451292, 1.008452236, 1.018453125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:42.360" endtime="20201112 12:27:42.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.354" endtime="20201112 12:27:42.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.365" endtime="20201112 12:27:42.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.368" endtime="20201112 12:27:42.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.367" endtime="20201112 12:27:42.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.363" endtime="20201112 12:27:42.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.844" endtime="20201112 12:27:42.389"></status>
</kw>
<msg timestamp="20201112 12:27:42.390" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.398" endtime="20201112 12:27:44.490"></status>
</kw>
<msg timestamp="20201112 12:27:44.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12985068, 'wakeups': [12995083, 13005084, 13015084, 13025084, 13035084...</msg>
<status status="PASS" starttime="20201112 12:27:42.396" endtime="20201112 12:27:44.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12985068, 'wakeups': [12995083, 13005084, 13015084, 13025084, 13035084...</msg>
<status status="PASS" starttime="20201112 12:27:44.494" endtime="20201112 12:27:44.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.500" endtime="20201112 12:27:44.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.394" endtime="20201112 12:27:44.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.392" endtime="20201112 12:27:44.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.511" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [12995083, 13005084, 13015084, 13025084, 13035084, 13045084, 13055084, 13065084, 13075084, 13085084, 13095084, 13105084, 13115084, 13125084, 13135084, 13145084, 13155084,...</msg>
<status status="PASS" starttime="20201112 12:27:44.507" endtime="20201112 12:27:44.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.520" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:44.517" endtime="20201112 12:27:44.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.524" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:44.522" endtime="20201112 12:27:44.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.513" endtime="20201112 12:27:44.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.534" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:44.532" endtime="20201112 12:27:44.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.539" level="INFO">VALUE: 12985068</msg>
<status status="PASS" starttime="20201112 12:27:44.537" endtime="20201112 12:27:44.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.527" endtime="20201112 12:27:44.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.549" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:44.547" endtime="20201112 12:27:44.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.554" level="INFO">VALUE: [12995083, 13005084, 13015084, 13025084, 13035084, 13045084, 13055084, 13065084, 13075084, 13085084, 13095084, 13105084, 13115084, 13125084, 13135084, 13145084, 13155084, 13165084, 13175084, 13185084, 13195084, 13205084, 13215084, 13225084, 13235084, 13245084, 13255084, 13265084, 13275084, 13285084, 13295084, 13305084, 13315084, 13325084, 13335084, 13345084, 13355084, 13365084, 13375084, 13385084, 13395084, 13405084, 13415084, 13425084, 13435084, 13445084, 13455084, 13465084, 13475084, 13485084, 13495084, 13505084, 13515084, 13525084, 13535084, 13545084, 13555084, 13565084, 13575084, 13585084, 13595084, 13605084, 13615084, 13625084, 13635084, 13645084, 13655084, 13665084, 13675084, 13685084, 13695084, 13705084, 13715084, 13725084, 13735084, 13745084, 13755084, 13765084, 13775084, 13785084, 13795084, 13805084, 13815084, 13825084, 13835084, 13845084, 13855084, 13865084, 13875084, 13885084, 13895084, 13905084, 13915084, 13925084, 13935084, 13945084, 13955084, 13965084, 13975084, 13985084]</msg>
<status status="PASS" starttime="20201112 12:27:44.551" endtime="20201112 12:27:44.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.542" endtime="20201112 12:27:44.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.570" endtime="20201112 12:27:44.866"></status>
</kw>
<msg timestamp="20201112 12:27:44.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018477458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028494236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.567" endtime="20201112 12:27:44.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018477458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028494236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.870" endtime="20201112 12:27:44.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.878" endtime="20201112 12:27:44.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.561" endtime="20201112 12:27:44.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.558" endtime="20201112 12:27:44.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.904" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:44.881" endtime="20201112 12:27:44.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.908" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:44.907" endtime="20201112 12:27:44.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.910" level="INFO">VALUE: 0.018477458</msg>
<status status="PASS" starttime="20201112 12:27:44.909" endtime="20201112 12:27:44.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.905" endtime="20201112 12:27:44.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.916" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:44.915" endtime="20201112 12:27:44.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.918" level="INFO">VALUE: [0.028494236, 0.038496028, 0.048496958, 0.058497903, 0.068498847, 0.078499722, 0.088500667, 0.098501597, 0.108502514, 0.118503431, 0.128504403, 0.138505264, 0.148506181, 0.158507111, 0.168508042, 0.178508944, 0.188509875, 0.198510792, 0.208511736, 0.218512639, 0.228513556, 0.238514486, 0.248515403, 0.258516333, 0.26851725, 0.278518222, 0.288519097, 0.298520028, 0.308520958, 0.318521875, 0.328522806, 0.338523708, 0.348524653, 0.358525556, 0.3685265, 0.378527403, 0.388528333, 0.39852925, 0.408530208, 0.418531111, 0.428532028, 0.438532944, 0.448533875, 0.458534792, 0.468535736, 0.478536639, 0.488537569, 0.4985385, 0.508539417, 0.518540333, 0.528541264, 0.538542181, 0.548543139, 0.558544028, 0.568544958, 0.578545903, 0.588546806, 0.598547736, 0.608548653, 0.618549569, 0.628550514, 0.638551417, 0.648552361, 0.658553264, 0.668554222, 0.678555111, 0.688556056, 0.698556958, 0.708557889, 0.718558806, 0.72855975, 0.738560653, 0.748561597, 0.758562542, 0.768563431, 0.778564375, 0.788565278, 0.798566222, 0.808567139, 0.818568056, 0.828569014, 0.838569903, 0.848570819, 0.858571778, 0.868572667, 0.878573597, 0.888574528, 0.898575444, 0.908576361, 0.918577333, 0.928578222, 0.938579139, 0.948580069, 0.958580986, 0.968581903, 0.978582833, 0.988583778, 0.998584694, 1.008585611, 1.018586528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:44.917" endtime="20201112 12:27:44.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.912" endtime="20201112 12:27:44.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.921" endtime="20201112 12:27:44.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.924" endtime="20201112 12:27:44.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.923" endtime="20201112 12:27:44.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.919" endtime="20201112 12:27:44.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.390" endtime="20201112 12:27:44.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.290" endtime="20201112 12:27:44.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.290" endtime="20201112 12:27:44.950"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:44.953" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.962" endtime="20201112 12:27:47.055"></status>
</kw>
<msg timestamp="20201112 12:27:47.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15549007, 'wakeups': [15559032, 15569032, 15579031, 15589031, 15599031...</msg>
<status status="PASS" starttime="20201112 12:27:44.960" endtime="20201112 12:27:47.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.062" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15549007, 'wakeups': [15559032, 15569032, 15579031, 15589031, 15599031...</msg>
<status status="PASS" starttime="20201112 12:27:47.058" endtime="20201112 12:27:47.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.064" endtime="20201112 12:27:47.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.956" endtime="20201112 12:27:47.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.955" endtime="20201112 12:27:47.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.075" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [15559032, 15569032, 15579031, 15589031, 15599031, 15609031, 15619031, 15629031, 15639031, 15649031, 15659031, 15669031, 15679031, 15689031, 15699031, 15709031, 15719031,...</msg>
<status status="PASS" starttime="20201112 12:27:47.071" endtime="20201112 12:27:47.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.084" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:47.082" endtime="20201112 12:27:47.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.088" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:47.086" endtime="20201112 12:27:47.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.077" endtime="20201112 12:27:47.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.098" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.096" endtime="20201112 12:27:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.103" level="INFO">VALUE: 15549007</msg>
<status status="PASS" starttime="20201112 12:27:47.101" endtime="20201112 12:27:47.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.091" endtime="20201112 12:27:47.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.113" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.111" endtime="20201112 12:27:47.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.118" level="INFO">VALUE: [15559032, 15569032, 15579031, 15589031, 15599031, 15609031, 15619031, 15629031, 15639031, 15649031, 15659031, 15669031, 15679031, 15689031, 15699031, 15709031, 15719031, 15729031, 15739031, 15749031, 15759031, 15769031, 15779031, 15789031, 15799031, 15809031, 15819031, 15829031, 15839031, 15849031, 15859031, 15869031, 15879031, 15889031, 15899031, 15909031, 15919031, 15929031, 15939031, 15949031, 15959031, 15969031, 15979031, 15989031, 15999031, 16009031, 16019031, 16029031, 16039031, 16049031, 16059031, 16069031, 16079031, 16089031, 16099031, 16109031, 16119031, 16129031, 16139031, 16149031, 16159031, 16169031, 16179031, 16189031, 16199031, 16209031, 16219031, 16229031, 16239031, 16249031, 16259031, 16269031, 16279031, 16289031, 16299031, 16309031, 16319031, 16329031, 16339031, 16349031, 16359031, 16369031, 16379031, 16389031, 16399031, 16409031, 16419031, 16429031, 16439031, 16449031, 16459031, 16469031, 16479031, 16489031, 16499031, 16509031, 16519031, 16529031, 16539031, 16549031]</msg>
<status status="PASS" starttime="20201112 12:27:47.115" endtime="20201112 12:27:47.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.106" endtime="20201112 12:27:47.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.126" endtime="20201112 12:27:47.417"></status>
</kw>
<msg timestamp="20201112 12:27:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026462056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036488181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.124" endtime="20201112 12:27:47.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026462056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036488181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.421" endtime="20201112 12:27:47.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.429" endtime="20201112 12:27:47.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.122" endtime="20201112 12:27:47.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.120" endtime="20201112 12:27:47.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.456" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:47.432" endtime="20201112 12:27:47.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.461" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:47.460" endtime="20201112 12:27:47.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.463" level="INFO">VALUE: 0.026462056</msg>
<status status="PASS" starttime="20201112 12:27:47.462" endtime="20201112 12:27:47.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.457" endtime="20201112 12:27:47.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.468" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:47.467" endtime="20201112 12:27:47.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.470" level="INFO">VALUE: [0.036488181, 0.046489694, 0.056489569, 0.066490528, 0.076491431, 0.086492347, 0.096493264, 0.106494194, 0.116495111, 0.126496042, 0.136496944, 0.146497889, 0.156498792, 0.166499736, 0.176500639, 0.186501583, 0.196502486, 0.206503417, 0.216504347, 0.226505333, 0.236506194, 0.246507111, 0.256508028, 0.266508986, 0.276509875, 0.286510819, 0.296511708, 0.306512653, 0.316513583, 0.3265145, 0.336515403, 0.346516347, 0.356517306, 0.366518208, 0.376519111, 0.386520111, 0.396520944, 0.406521917, 0.416522792, 0.426523736, 0.436524639, 0.446525611, 0.456526486, 0.466527444, 0.476528333, 0.486529278, 0.496530194, 0.506531139, 0.516532042, 0.526532986, 0.536533917, 0.546534819, 0.556535736, 0.566536694, 0.576537569, 0.586538514, 0.596539417, 0.606540361, 0.616541264, 0.626542208, 0.636543111, 0.646544111, 0.656544986, 0.666545917, 0.676546833, 0.686547778, 0.696548681, 0.706549611, 0.716550514, 0.726551472, 0.736552361, 0.746553361, 0.756554208, 0.766555139, 0.776556056, 0.786557028, 0.796557903, 0.806558833, 0.816559764, 0.826560681, 0.836561597, 0.846562556, 0.856563444, 0.866564389, 0.876565306, 0.886566222, 0.896567139, 0.906568069, 0.916568986, 0.926569931, 0.936570833, 0.946571778, 0.956572681, 0.966573625, 0.976574528, 0.986575472, 0.996576389, 1.006577319, 1.016578222, 1.026579167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:47.469" endtime="20201112 12:27:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.464" endtime="20201112 12:27:47.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.473" endtime="20201112 12:27:47.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.477" endtime="20201112 12:27:47.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.475" endtime="20201112 12:27:47.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.472" endtime="20201112 12:27:47.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.953" endtime="20201112 12:27:47.498"></status>
</kw>
<msg timestamp="20201112 12:27:47.498" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.506" endtime="20201112 12:27:49.599"></status>
</kw>
<msg timestamp="20201112 12:27:49.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18093104, 'wakeups': [18103129, 18113129, 18123128, 18133128, 18143128...</msg>
<status status="PASS" starttime="20201112 12:27:47.504" endtime="20201112 12:27:49.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.607" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18093104, 'wakeups': [18103129, 18113129, 18123128, 18133128, 18143128...</msg>
<status status="PASS" starttime="20201112 12:27:49.603" endtime="20201112 12:27:49.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.609" endtime="20201112 12:27:49.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.502" endtime="20201112 12:27:49.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.500" endtime="20201112 12:27:49.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.620" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [18103129, 18113129, 18123128, 18133128, 18143128, 18153128, 18163128, 18173128, 18183128, 18193128, 18203128, 18213128, 18223128, 18233128, 18243128, 18253128, 18263128,...</msg>
<status status="PASS" starttime="20201112 12:27:49.616" endtime="20201112 12:27:49.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.629" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:49.627" endtime="20201112 12:27:49.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.633" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:49.631" endtime="20201112 12:27:49.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.622" endtime="20201112 12:27:49.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.646" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:49.644" endtime="20201112 12:27:49.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.650" level="INFO">VALUE: 18093104</msg>
<status status="PASS" starttime="20201112 12:27:49.648" endtime="20201112 12:27:49.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.636" endtime="20201112 12:27:49.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.661" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:49.658" endtime="20201112 12:27:49.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.665" level="INFO">VALUE: [18103129, 18113129, 18123128, 18133128, 18143128, 18153128, 18163128, 18173128, 18183128, 18193128, 18203128, 18213128, 18223128, 18233128, 18243128, 18253128, 18263128, 18273128, 18283128, 18293128, 18303128, 18313128, 18323128, 18333128, 18343128, 18353128, 18363128, 18373128, 18383128, 18393128, 18403128, 18413128, 18423128, 18433128, 18443128, 18453128, 18463128, 18473128, 18483128, 18493128, 18503128, 18513128, 18523128, 18533128, 18543128, 18553128, 18563128, 18573128, 18583128, 18593128, 18603128, 18613128, 18623128, 18633128, 18643128, 18653128, 18663128, 18673128, 18683128, 18693128, 18703128, 18713128, 18723128, 18733128, 18743128, 18753128, 18763128, 18773128, 18783128, 18793128, 18803128, 18813128, 18823128, 18833128, 18843128, 18853128, 18863128, 18873128, 18883128, 18893128, 18903128, 18913128, 18923128, 18933128, 18943128, 18953128, 18963128, 18973128, 18983128, 18993128, 19003128, 19013128, 19023128, 19033128, 19043128, 19053128, 19063128, 19073128, 19083128, 19093128]</msg>
<status status="PASS" starttime="20201112 12:27:49.663" endtime="20201112 12:27:49.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.653" endtime="20201112 12:27:49.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.677" endtime="20201112 12:27:49.969"></status>
</kw>
<msg timestamp="20201112 12:27:49.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028230222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.676" endtime="20201112 12:27:49.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018204264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028230222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.973" endtime="20201112 12:27:49.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.980" endtime="20201112 12:27:49.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.672" endtime="20201112 12:27:49.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.668" endtime="20201112 12:27:49.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.007" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:49.984" endtime="20201112 12:27:50.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.016" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:50.015" endtime="20201112 12:27:50.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.018" level="INFO">VALUE: 0.018204264</msg>
<status status="PASS" starttime="20201112 12:27:50.017" endtime="20201112 12:27:50.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.012" endtime="20201112 12:27:50.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.024" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:50.023" endtime="20201112 12:27:50.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.027" level="INFO">VALUE: [0.028230222, 0.038231694, 0.048231681, 0.058232556, 0.068233458, 0.078234403, 0.088235319, 0.098236264, 0.108237208, 0.118238083, 0.128239069, 0.138239931, 0.148240833, 0.158241778, 0.168242681, 0.178243653, 0.188244528, 0.198245486, 0.208246375, 0.218247319, 0.228248222, 0.238249153, 0.248250083, 0.258251014, 0.268251903, 0.278252847, 0.288253764, 0.298254694, 0.308255597, 0.318256556, 0.328257444, 0.338258403, 0.348259292, 0.358260222, 0.368261153, 0.378262111, 0.388263, 0.398263917, 0.408264833, 0.418265764, 0.428266694, 0.438267625, 0.448268528, 0.458269472, 0.468270375, 0.478271306, 0.488272222, 0.498273153, 0.508274083, 0.518275, 0.528275917, 0.538276875, 0.548277778, 0.558278694, 0.568279611, 0.578280542, 0.588281514, 0.598282431, 0.608283347, 0.61828425, 0.628285153, 0.638286153, 0.648287014, 0.658287931, 0.668288861, 0.678289792, 0.688290708, 0.698291625, 0.708292542, 0.718293472, 0.728294417, 0.738295333, 0.748296236, 0.758297181, 0.768298097, 0.778299014, 0.788299944, 0.798300917, 0.808301778, 0.818302708, 0.828303625, 0.838304556, 0.848305472, 0.858306417, 0.868307319, 0.87830825, 0.888309167, 0.898310097, 0.908311014, 0.918311944, 0.928312861, 0.938313806, 0.948314708, 0.958315653, 0.968316597, 0.978317556, 0.988318403, 0.998319361, 1.00832025, 1.018321181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:50.026" endtime="20201112 12:27:50.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.020" endtime="20201112 12:27:50.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.030" endtime="20201112 12:27:50.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.033" endtime="20201112 12:27:50.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.032" endtime="20201112 12:27:50.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.028" endtime="20201112 12:27:50.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.498" endtime="20201112 12:27:50.054"></status>
</kw>
<msg timestamp="20201112 12:27:50.054" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.062" endtime="20201112 12:27:52.156"></status>
</kw>
<msg timestamp="20201112 12:27:52.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20649709, 'wakeups': [20659735, 20669734, 20679733, 20689733, 20699733...</msg>
<status status="PASS" starttime="20201112 12:27:50.061" endtime="20201112 12:27:52.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.163" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20649709, 'wakeups': [20659735, 20669734, 20679733, 20689733, 20699733...</msg>
<status status="PASS" starttime="20201112 12:27:52.159" endtime="20201112 12:27:52.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.165" endtime="20201112 12:27:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.058" endtime="20201112 12:27:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.056" endtime="20201112 12:27:52.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.176" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [20659735, 20669734, 20679733, 20689733, 20699733, 20709733, 20719733, 20729733, 20739733, 20749733, 20759733, 20769733, 20779733, 20789733, 20799733, 20809733, 20819733,...</msg>
<status status="PASS" starttime="20201112 12:27:52.172" endtime="20201112 12:27:52.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.185" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:52.183" endtime="20201112 12:27:52.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.189" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:52.187" endtime="20201112 12:27:52.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.178" endtime="20201112 12:27:52.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.200" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.198" endtime="20201112 12:27:52.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.205" level="INFO">VALUE: 20649709</msg>
<status status="PASS" starttime="20201112 12:27:52.203" endtime="20201112 12:27:52.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.193" endtime="20201112 12:27:52.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.215" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.213" endtime="20201112 12:27:52.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.220" level="INFO">VALUE: [20659735, 20669734, 20679733, 20689733, 20699733, 20709733, 20719733, 20729733, 20739733, 20749733, 20759733, 20769733, 20779733, 20789733, 20799733, 20809733, 20819733, 20829733, 20839733, 20849733, 20859733, 20869733, 20879733, 20889733, 20899733, 20909733, 20919733, 20929733, 20939733, 20949733, 20959733, 20969733, 20979733, 20989733, 20999733, 21009733, 21019733, 21029733, 21039733, 21049733, 21059733, 21069733, 21079733, 21089733, 21099733, 21109733, 21119733, 21129733, 21139733, 21149733, 21159733, 21169733, 21179733, 21189733, 21199733, 21209733, 21219733, 21229733, 21239733, 21249733, 21259733, 21269733, 21279733, 21289733, 21299733, 21309733, 21319733, 21329733, 21339733, 21349733, 21359733, 21369733, 21379733, 21389733, 21399733, 21409733, 21419733, 21429733, 21439733, 21449733, 21459733, 21469733, 21479733, 21489733, 21499733, 21509733, 21519733, 21529733, 21539733, 21549733, 21559733, 21569733, 21579733, 21589733, 21599733, 21609733, 21619733, 21629733, 21639733, 21649733]</msg>
<status status="PASS" starttime="20201112 12:27:52.217" endtime="20201112 12:27:52.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.208" endtime="20201112 12:27:52.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.237" endtime="20201112 12:27:52.533"></status>
</kw>
<msg timestamp="20201112 12:27:52.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028301181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.232" endtime="20201112 12:27:52.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028301181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.537" endtime="20201112 12:27:52.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.544" endtime="20201112 12:27:52.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.227" endtime="20201112 12:27:52.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.223" endtime="20201112 12:27:52.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.571" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:52.547" endtime="20201112 12:27:52.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.575" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:27:52.574" endtime="20201112 12:27:52.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.577" level="INFO">VALUE: 0.018274972</msg>
<status status="PASS" starttime="20201112 12:27:52.576" endtime="20201112 12:27:52.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.572" endtime="20201112 12:27:52.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.583" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:52.582" endtime="20201112 12:27:52.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.585" level="INFO">VALUE: [0.028301181, 0.038301667, 0.048301569, 0.058302472, 0.068303417, 0.078304333, 0.088305278, 0.098306167, 0.108307111, 0.118308056, 0.128309, 0.138309861, 0.148310875, 0.158311708, 0.168312667, 0.178313542, 0.188314486, 0.198315431, 0.208316319, 0.21831725, 0.228318167, 0.238319083, 0.248320014, 0.258320931, 0.268321861, 0.278322778, 0.288323722, 0.298324639, 0.308325583, 0.318326472, 0.328327417, 0.338328333, 0.348329264, 0.358330153, 0.368331097, 0.378332, 0.388332944, 0.398333889, 0.408334792, 0.418335694, 0.428336653, 0.438337542, 0.4483385, 0.458339389, 0.468340361, 0.478341236, 0.488342194, 0.498343097, 0.508344028, 0.518344931, 0.528345875, 0.538346778, 0.548347736, 0.558348639, 0.568349653, 0.578350486, 0.588351458, 0.598352333, 0.608353264, 0.618354167, 0.628355111, 0.638356042, 0.648357, 0.658357931, 0.668358806, 0.678359722, 0.688360653, 0.698361583, 0.708362528, 0.718363431, 0.728364347, 0.738365278, 0.748366208, 0.758367111, 0.768368056, 0.778368972, 0.788369903, 0.798370861, 0.80837175, 0.818372653, 0.828373583, 0.838374514, 0.848375431, 0.858376347, 0.868377278, 0.878378194, 0.888379139, 0.898380042, 0.908380972, 0.918381889, 0.928382833, 0.938383736, 0.948384681, 0.958385611, 0.968386528, 0.978387431, 0.988388375, 0.998389278, 1.008390222, 1.018391125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:52.584" endtime="20201112 12:27:52.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.579" endtime="20201112 12:27:52.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.589" endtime="20201112 12:27:52.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.592" endtime="20201112 12:27:52.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.591" endtime="20201112 12:27:52.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.587" endtime="20201112 12:27:52.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.055" endtime="20201112 12:27:52.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.951" endtime="20201112 12:27:52.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.950" endtime="20201112 12:27:52.613"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:52.616" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.625" endtime="20201112 12:27:54.718"></status>
</kw>
<msg timestamp="20201112 12:27:54.719" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23212201, 'wakeups': [23222237, 23232235, 23242235, 23252235, 23262235...</msg>
<status status="PASS" starttime="20201112 12:27:52.622" endtime="20201112 12:27:54.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23212201, 'wakeups': [23222237, 23232235, 23242235, 23252235, 23262235...</msg>
<status status="PASS" starttime="20201112 12:27:54.721" endtime="20201112 12:27:54.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.728" endtime="20201112 12:27:54.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.620" endtime="20201112 12:27:54.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.618" endtime="20201112 12:27:54.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.739" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [23222237, 23232235, 23242235, 23252235, 23262235, 23272235, 23282235, 23292235, 23302235, 23312235, 23322235, 23332235, 23342235, 23352235, 23362235, 23372235, 23382235,...</msg>
<status status="PASS" starttime="20201112 12:27:54.735" endtime="20201112 12:27:54.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.748" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:54.746" endtime="20201112 12:27:54.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.752" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:54.750" endtime="20201112 12:27:54.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.741" endtime="20201112 12:27:54.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.762" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:27:54.760" endtime="20201112 12:27:54.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.767" level="INFO">VALUE: 23212201</msg>
<status status="PASS" starttime="20201112 12:27:54.765" endtime="20201112 12:27:54.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.755" endtime="20201112 12:27:54.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.777" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:54.775" endtime="20201112 12:27:54.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.782" level="INFO">VALUE: [23222237, 23232235, 23242235, 23252235, 23262235, 23272235, 23282235, 23292235, 23302235, 23312235, 23322235, 23332235, 23342235, 23352235, 23362235, 23372235, 23382235, 23392235, 23402235, 23412235, 23422235, 23432235, 23442235, 23452235, 23462235, 23472235, 23482235, 23492235, 23502235, 23512235, 23522235, 23532235, 23542235, 23552235, 23562235, 23572235, 23582235, 23592235, 23602235, 23612235, 23622235, 23632235, 23642235, 23652235, 23662235, 23672235, 23682235, 23692235, 23702235, 23712235, 23722235, 23732235, 23742235, 23752235, 23762235, 23772235, 23782235, 23792235, 23802235, 23812235, 23822235, 23832235, 23842235, 23852235, 23862235, 23872235, 23882235, 23892235, 23902235, 23912235, 23922235, 23932235, 23942235, 23952235, 23962235, 23972235, 23982235, 23992235, 24002235, 24012235, 24022235, 24032235, 24042235, 24052235, 24062235, 24072235, 24082235, 24092235, 24102235, 24112235, 24122235, 24132235, 24142235, 24152235, 24162235, 24172235, 24182235, 24192235, 24202235, 24212235]</msg>
<status status="PASS" starttime="20201112 12:27:54.779" endtime="20201112 12:27:54.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.770" endtime="20201112 12:27:54.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.798" endtime="20201112 12:27:55.093"></status>
</kw>
<msg timestamp="20201112 12:27:55.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032101833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.795" endtime="20201112 12:27:55.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032101833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.097" endtime="20201112 12:27:55.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.104" endtime="20201112 12:27:55.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.789" endtime="20201112 12:27:55.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.786" endtime="20201112 12:27:55.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.131" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:55.108" endtime="20201112 12:27:55.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.136" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:27:55.135" endtime="20201112 12:27:55.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.138" level="INFO">VALUE: 0.022065472</msg>
<status status="PASS" starttime="20201112 12:27:55.137" endtime="20201112 12:27:55.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.132" endtime="20201112 12:27:55.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.143" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:55.142" endtime="20201112 12:27:55.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.146" level="INFO">VALUE: [0.032101833, 0.042101, 0.052101917, 0.062102833, 0.07210375, 0.082104694, 0.092105597, 0.102106528, 0.112107444, 0.122108361, 0.132109292, 0.142110208, 0.152111139, 0.162112083, 0.172112972, 0.182113931, 0.192114819, 0.202115736, 0.212116736, 0.222117597, 0.2321185, 0.2421195, 0.252120347, 0.262121292, 0.272122194, 0.282123125, 0.292124056, 0.302125, 0.312125917, 0.322126847, 0.33212775, 0.342128653, 0.352129583, 0.3621305, 0.372131431, 0.382132347, 0.392133264, 0.402134208, 0.412135111, 0.422136042, 0.432136958, 0.442137889, 0.452138806, 0.46213975, 0.472140653, 0.482141583, 0.4921425, 0.502143431, 0.512144347, 0.522145278, 0.532146194, 0.542147125, 0.552148042, 0.562148986, 0.572149889, 0.582150819, 0.59215175, 0.602152681, 0.612153583, 0.622154528, 0.632155431, 0.642156375, 0.652157292, 0.66215825, 0.672159153, 0.682160056, 0.692160986, 0.702161944, 0.712162847, 0.72216375, 0.732164681, 0.742165611, 0.752166528, 0.762167472, 0.772168361, 0.782169292, 0.792170208, 0.802171181, 0.812172056, 0.822172972, 0.832173903, 0.842174861, 0.852175736, 0.862176667, 0.872177583, 0.882178528, 0.892179431, 0.902180347, 0.912181347, 0.922182194, 0.932183125, 0.942184042, 0.952185028, 0.962185903, 0.972186806, 0.982187736, 0.992188653, 1.002189583, 1.0121905, 1.022191431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:55.145" endtime="20201112 12:27:55.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.140" endtime="20201112 12:27:55.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.149" endtime="20201112 12:27:55.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.152" endtime="20201112 12:27:55.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.151" endtime="20201112 12:27:55.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.147" endtime="20201112 12:27:55.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.616" endtime="20201112 12:27:55.173"></status>
</kw>
<msg timestamp="20201112 12:27:55.173" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.181" endtime="20201112 12:27:57.279"></status>
</kw>
<msg timestamp="20201112 12:27:57.281" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25773166, 'wakeups': [25783201, 25793200, 25803200, 25813200, 25823200...</msg>
<status status="PASS" starttime="20201112 12:27:55.180" endtime="20201112 12:27:57.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.286" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25773166, 'wakeups': [25783201, 25793200, 25803200, 25813200, 25823200...</msg>
<status status="PASS" starttime="20201112 12:27:57.283" endtime="20201112 12:27:57.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.289" endtime="20201112 12:27:57.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.177" endtime="20201112 12:27:57.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.175" endtime="20201112 12:27:57.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.300" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [25783201, 25793200, 25803200, 25813200, 25823200, 25833200, 25843200, 25853200, 25863200, 25873200, 25883200, 25893200, 25903200, 25913200, 25923200, 25933200, 25943200,...</msg>
<status status="PASS" starttime="20201112 12:27:57.296" endtime="20201112 12:27:57.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.309" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:57.306" endtime="20201112 12:27:57.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.313" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:57.311" endtime="20201112 12:27:57.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.302" endtime="20201112 12:27:57.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.321" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:27:57.320" endtime="20201112 12:27:57.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.324" level="INFO">VALUE: 25773166</msg>
<status status="PASS" starttime="20201112 12:27:57.323" endtime="20201112 12:27:57.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.316" endtime="20201112 12:27:57.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.329" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:57.328" endtime="20201112 12:27:57.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.331" level="INFO">VALUE: [25783201, 25793200, 25803200, 25813200, 25823200, 25833200, 25843200, 25853200, 25863200, 25873200, 25883200, 25893200, 25903200, 25913200, 25923200, 25933200, 25943200, 25953200, 25963200, 25973200, 25983200, 25993200, 26003200, 26013200, 26023200, 26033200, 26043200, 26053200, 26063200, 26073200, 26083200, 26093200, 26103200, 26113200, 26123200, 26133200, 26143200, 26153200, 26163200, 26173200, 26183200, 26193200, 26203200, 26213200, 26223200, 26233200, 26243200, 26253200, 26263200, 26273200, 26283200, 26293200, 26303200, 26313200, 26323200, 26333200, 26343200, 26353200, 26363200, 26373200, 26383200, 26393200, 26403200, 26413200, 26423200, 26433200, 26443200, 26453200, 26463200, 26473200, 26483200, 26493200, 26503200, 26513200, 26523200, 26533200, 26543200, 26553200, 26563200, 26573200, 26583200, 26593200, 26603200, 26613200, 26623200, 26633200, 26643200, 26653200, 26663200, 26673200, 26683200, 26693200, 26703200, 26713200, 26723200, 26733200, 26743200, 26753200, 26763200, 26773200]</msg>
<status status="PASS" starttime="20201112 12:27:57.330" endtime="20201112 12:27:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.325" endtime="20201112 12:27:57.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.338" endtime="20201112 12:27:57.629"></status>
</kw>
<msg timestamp="20201112 12:27:57.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032929736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.337" endtime="20201112 12:27:57.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032929736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.633" endtime="20201112 12:27:57.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.641" endtime="20201112 12:27:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.334" endtime="20201112 12:27:57.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.332" endtime="20201112 12:27:57.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.668" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:27:57.644" endtime="20201112 12:27:57.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.672" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:27:57.671" endtime="20201112 12:27:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.674" level="INFO">VALUE: 0.022893597</msg>
<status status="PASS" starttime="20201112 12:27:57.673" endtime="20201112 12:27:57.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.669" endtime="20201112 12:27:57.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.680" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:57.679" endtime="20201112 12:27:57.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.683" level="INFO">VALUE: [0.032929736, 0.042929931, 0.052930861, 0.062931778, 0.072932681, 0.082933625, 0.092934542, 0.102935458, 0.112936375, 0.122937306, 0.132938222, 0.142939167, 0.152940069, 0.162941014, 0.172941944, 0.182942889, 0.192943792, 0.202944708, 0.212945625, 0.222946611, 0.232947472, 0.242948403, 0.252949319, 0.26295025, 0.272951181, 0.282952097, 0.292953014, 0.302953958, 0.312954903, 0.322955778, 0.332956708, 0.342957653, 0.352958542, 0.362959486, 0.372960389, 0.382961319, 0.39296225, 0.402963167, 0.412964083, 0.422965014, 0.432965931, 0.442966847, 0.452967792, 0.462968722, 0.472969625, 0.482970556, 0.492971458, 0.502972417, 0.512973306, 0.522974236, 0.532975167, 0.542976083, 0.552977, 0.562977944, 0.572978847, 0.582979792, 0.592980694, 0.602981625, 0.612982569, 0.622983472, 0.632984403, 0.642985306, 0.652986236, 0.662987167, 0.672988083, 0.682989, 0.692989931, 0.702990861, 0.712991778, 0.722992722, 0.732993708, 0.742994569, 0.752995472, 0.762996403, 0.772997333, 0.782998264, 0.792999167, 0.803000097, 0.813001014, 0.823001958, 0.833002875, 0.843003806, 0.853004778, 0.863005653, 0.873006569, 0.883007486, 0.893008403, 0.903009361, 0.91301025, 0.92301125, 0.933012097, 0.943013028, 0.953014028, 0.963014889, 0.973015792, 0.983016778, 0.993017639, 1.003018583, 1.013019542, 1.023020417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:57.682" endtime="20201112 12:27:57.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.676" endtime="20201112 12:27:57.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.686" endtime="20201112 12:27:57.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.689" endtime="20201112 12:27:57.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.688" endtime="20201112 12:27:57.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.684" endtime="20201112 12:27:57.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.174" endtime="20201112 12:27:57.710"></status>
</kw>
<msg timestamp="20201112 12:27:57.710" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.718" endtime="20201112 12:27:59.811"></status>
</kw>
<msg timestamp="20201112 12:27:59.812" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28305628, 'wakeups': [28315664, 28325662, 28335662, 28345662, 28355662...</msg>
<status status="PASS" starttime="20201112 12:27:57.717" endtime="20201112 12:27:59.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28305628, 'wakeups': [28315664, 28325662, 28335662, 28345662, 28355662...</msg>
<status status="PASS" starttime="20201112 12:27:59.815" endtime="20201112 12:27:59.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.821" endtime="20201112 12:27:59.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.714" endtime="20201112 12:27:59.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.712" endtime="20201112 12:27:59.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.832" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28315664, 28325662, 28335662, 28345662, 28355662, 28365662, 28375662, 28385662, 28395662, 28405662, 28415662, 28425662, 28435662, 28445662, 28455662, 28465662, 28475662,...</msg>
<status status="PASS" starttime="20201112 12:27:59.828" endtime="20201112 12:27:59.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.842" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:59.840" endtime="20201112 12:27:59.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.847" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:59.845" endtime="20201112 12:27:59.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.834" endtime="20201112 12:27:59.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.858" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:27:59.856" endtime="20201112 12:27:59.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.861" level="INFO">VALUE: 28305628</msg>
<status status="PASS" starttime="20201112 12:27:59.860" endtime="20201112 12:27:59.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.850" endtime="20201112 12:27:59.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.866" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:59.865" endtime="20201112 12:27:59.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.869" level="INFO">VALUE: [28315664, 28325662, 28335662, 28345662, 28355662, 28365662, 28375662, 28385662, 28395662, 28405662, 28415662, 28425662, 28435662, 28445662, 28455662, 28465662, 28475662, 28485662, 28495662, 28505662, 28515662, 28525662, 28535662, 28545662, 28555662, 28565662, 28575662, 28585662, 28595662, 28605662, 28615662, 28625662, 28635662, 28645662, 28655662, 28665662, 28675662, 28685662, 28695662, 28705662, 28715662, 28725662, 28735662, 28745662, 28755662, 28765662, 28775662, 28785662, 28795662, 28805662, 28815662, 28825662, 28835662, 28845662, 28855662, 28865662, 28875662, 28885662, 28895662, 28905662, 28915662, 28925662, 28935662, 28945662, 28955662, 28965662, 28975662, 28985662, 28995662, 29005662, 29015662, 29025662, 29035662, 29045662, 29055662, 29065662, 29075662, 29085662, 29095662, 29105662, 29115662, 29125662, 29135662, 29145662, 29155662, 29165662, 29175662, 29185662, 29195662, 29205662, 29215662, 29225662, 29235662, 29245662, 29255662, 29265662, 29275662, 29285662, 29295662, 29305662]</msg>
<status status="PASS" starttime="20201112 12:27:59.867" endtime="20201112 12:27:59.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.863" endtime="20201112 12:27:59.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.876" endtime="20201112 12:28:00.168"></status>
</kw>
<msg timestamp="20201112 12:28:00.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01823, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028266472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:27:59.874" endtime="20201112 12:28:00.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01823, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028266472, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:28:00.172" endtime="20201112 12:28:00.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.179" endtime="20201112 12:28:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.872" endtime="20201112 12:28:00.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.870" endtime="20201112 12:28:00.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.205" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:00.183" endtime="20201112 12:28:00.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.210" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:00.209" endtime="20201112 12:28:00.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.212" level="INFO">VALUE: 0.01823</msg>
<status status="PASS" starttime="20201112 12:28:00.211" endtime="20201112 12:28:00.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.206" endtime="20201112 12:28:00.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.217" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:00.216" endtime="20201112 12:28:00.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.224" level="INFO">VALUE: [0.028266472, 0.038265611, 0.048266542, 0.058267458, 0.068268375, 0.078269306, 0.088270236, 0.098271139, 0.108272069, 0.118272986, 0.128273931, 0.138274847, 0.148275764, 0.158276694, 0.168277611, 0.178278528, 0.188279458, 0.198280361, 0.208281292, 0.218282208, 0.228283139, 0.238284056, 0.248284986, 0.258285903, 0.268286819, 0.27828775, 0.288288681, 0.298289667, 0.308290528, 0.318291528, 0.328292375, 0.338293306, 0.348294222, 0.358295139, 0.368296056, 0.378296986, 0.388297958, 0.398298819, 0.40829975, 0.418300708, 0.428301597, 0.438302514, 0.448303444, 0.458304375, 0.468305292, 0.478306222, 0.488307139, 0.498308069, 0.508309028, 0.518309972, 0.528310833, 0.53831175, 0.548312708, 0.558313597, 0.568314528, 0.578315458, 0.588316375, 0.598317292, 0.608318222, 0.618319153, 0.628320083, 0.638320986, 0.648321931, 0.658322833, 0.668323778, 0.678324681, 0.688325681, 0.698326528, 0.708327472, 0.718328472, 0.728329319, 0.738330236, 0.748331153, 0.758332083, 0.768333014, 0.778333931, 0.788334847, 0.798335792, 0.808336694, 0.818337639, 0.828338542, 0.838339472, 0.848340389, 0.858341347, 0.86834225, 0.878343181, 0.888344097, 0.898345014, 0.908345931, 0.918346875, 0.928347778, 0.938348722, 0.948349625, 0.958350556, 0.968351472, 0.978352403, 0.988353333, 0.998354264, 1.008355181, 1.018356125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:00.218" endtime="20201112 12:28:00.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.213" endtime="20201112 12:28:00.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.228" endtime="20201112 12:28:00.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.231" endtime="20201112 12:28:00.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.230" endtime="20201112 12:28:00.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.226" endtime="20201112 12:28:00.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.711" endtime="20201112 12:28:00.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.614" endtime="20201112 12:28:00.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.614" endtime="20201112 12:28:00.252"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:00.255" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.264" endtime="20201112 12:28:02.357"></status>
</kw>
<msg timestamp="20201112 12:28:02.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30851174, 'wakeups': [30861222, 30871220, 30881219, 30891219, 30901219...</msg>
<status status="PASS" starttime="20201112 12:28:00.262" endtime="20201112 12:28:02.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30851174, 'wakeups': [30861222, 30871220, 30881219, 30891219, 30901219...</msg>
<status status="PASS" starttime="20201112 12:28:02.360" endtime="20201112 12:28:02.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.366" endtime="20201112 12:28:02.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.259" endtime="20201112 12:28:02.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.257" endtime="20201112 12:28:02.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.377" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [30861222, 30871220, 30881219, 30891219, 30901219, 30911219, 30921219, 30931219, 30941219, 30951219, 30961219, 30971219, 30981219, 30991219, 31001219, 31011219, 31021219,...</msg>
<status status="PASS" starttime="20201112 12:28:02.373" endtime="20201112 12:28:02.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.386" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:02.384" endtime="20201112 12:28:02.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:02.388" endtime="20201112 12:28:02.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.379" endtime="20201112 12:28:02.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.401" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:02.399" endtime="20201112 12:28:02.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.405" level="INFO">VALUE: 30851174</msg>
<status status="PASS" starttime="20201112 12:28:02.403" endtime="20201112 12:28:02.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.393" endtime="20201112 12:28:02.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.416" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:02.414" endtime="20201112 12:28:02.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.421" level="INFO">VALUE: [30861222, 30871220, 30881219, 30891219, 30901219, 30911219, 30921219, 30931219, 30941219, 30951219, 30961219, 30971219, 30981219, 30991219, 31001219, 31011219, 31021219, 31031219, 31041219, 31051219, 31061219, 31071219, 31081219, 31091219, 31101219, 31111219, 31121219, 31131219, 31141219, 31151219, 31161219, 31171219, 31181219, 31191219, 31201219, 31211219, 31221219, 31231219, 31241219, 31251219, 31261219, 31271219, 31281219, 31291219, 31301219, 31311219, 31321219, 31331219, 31341219, 31351219, 31361219, 31371219, 31381219, 31391219, 31401219, 31411219, 31421219, 31431219, 31441219, 31451219, 31461219, 31471219, 31481219, 31491219, 31501219, 31511219, 31521219, 31531219, 31541219, 31551219, 31561219, 31571219, 31581219, 31591219, 31601219, 31611219, 31621219, 31631219, 31641219, 31651219, 31661219, 31671219, 31681219, 31691219, 31701219, 31711219, 31721219, 31731219, 31741219, 31751219, 31761219, 31771219, 31781219, 31791219, 31801219, 31811219, 31821219, 31831219, 31841219, 31851219]</msg>
<status status="PASS" starttime="20201112 12:28:02.418" endtime="20201112 12:28:02.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.408" endtime="20201112 12:28:02.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.432" endtime="20201112 12:28:02.722"></status>
</kw>
<msg timestamp="20201112 12:28:02.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032091069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.430" endtime="20201112 12:28:02.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032091069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.725" endtime="20201112 12:28:02.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.733" endtime="20201112 12:28:02.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.428" endtime="20201112 12:28:02.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.424" endtime="20201112 12:28:02.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.760" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:02.736" endtime="20201112 12:28:02.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.765" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:02.764" endtime="20201112 12:28:02.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.767" level="INFO">VALUE: 0.022042556</msg>
<status status="PASS" starttime="20201112 12:28:02.766" endtime="20201112 12:28:02.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.761" endtime="20201112 12:28:02.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.772" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:02.771" endtime="20201112 12:28:02.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.774" level="INFO">VALUE: [0.032091069, 0.042089903, 0.052089833, 0.062090764, 0.072091667, 0.082092625, 0.092093514, 0.102094458, 0.112095389, 0.122096292, 0.132097236, 0.142098139, 0.152099042, 0.1621, 0.172100889, 0.182101833, 0.19210275, 0.202103681, 0.212104597, 0.222105514, 0.2321065, 0.242107361, 0.252108278, 0.262109222, 0.272110125, 0.282111056, 0.292111972, 0.302112903, 0.312113819, 0.322114778, 0.332115667, 0.342116639, 0.352117583, 0.362118444, 0.372119361, 0.382120292, 0.392121194, 0.402122139, 0.412123042, 0.422124042, 0.432124889, 0.442125833, 0.452126736, 0.462127694, 0.472128597, 0.482129528, 0.492130444, 0.502131375, 0.512132278, 0.522133222, 0.532134139, 0.542135069, 0.552135986, 0.562136917, 0.572137833, 0.582138764, 0.592139681, 0.602140625, 0.612141556, 0.622142514, 0.632143375, 0.642144306, 0.652145236, 0.662146153, 0.672147069, 0.682148, 0.692148917, 0.702149847, 0.712150764, 0.722151694, 0.732152611, 0.742153542, 0.752154458, 0.762155389, 0.772156306, 0.782157236, 0.792158153, 0.802159111, 0.81216, 0.822160958, 0.832161875, 0.842162792, 0.852163708, 0.862164639, 0.872165542, 0.882166514, 0.892167389, 0.902168347, 0.91216925, 0.922170208, 0.932171083, 0.942172028, 0.952172944, 0.962173875, 0.972174806, 0.982175736, 0.992176667, 1.002177569, 1.012178542, 1.022179417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:02.773" endtime="20201112 12:28:02.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.768" endtime="20201112 12:28:02.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.778" endtime="20201112 12:28:02.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.782" endtime="20201112 12:28:02.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.780" endtime="20201112 12:28:02.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.776" endtime="20201112 12:28:02.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.255" endtime="20201112 12:28:02.802"></status>
</kw>
<msg timestamp="20201112 12:28:02.803" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.811" endtime="20201112 12:28:04.903"></status>
</kw>
<msg timestamp="20201112 12:28:04.905" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33397927, 'wakeups': [33407975, 33417973, 33427972, 33437972, 33447972...</msg>
<status status="PASS" starttime="20201112 12:28:02.809" endtime="20201112 12:28:04.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33397927, 'wakeups': [33407975, 33417973, 33427972, 33437972, 33447972...</msg>
<status status="PASS" starttime="20201112 12:28:04.907" endtime="20201112 12:28:04.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.913" endtime="20201112 12:28:04.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.806" endtime="20201112 12:28:04.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.804" endtime="20201112 12:28:04.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.924" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [33407975, 33417973, 33427972, 33437972, 33447972, 33457972, 33467972, 33477972, 33487972, 33497972, 33507972, 33517972, 33527972, 33537972, 33547972, 33557972, 33567972,...</msg>
<status status="PASS" starttime="20201112 12:28:04.920" endtime="20201112 12:28:04.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.932" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:04.930" endtime="20201112 12:28:04.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.937" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:04.935" endtime="20201112 12:28:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.926" endtime="20201112 12:28:04.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.949" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:04.947" endtime="20201112 12:28:04.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.954" level="INFO">VALUE: 33397927</msg>
<status status="PASS" starttime="20201112 12:28:04.952" endtime="20201112 12:28:04.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.940" endtime="20201112 12:28:04.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.965" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:04.963" endtime="20201112 12:28:04.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.970" level="INFO">VALUE: [33407975, 33417973, 33427972, 33437972, 33447972, 33457972, 33467972, 33477972, 33487972, 33497972, 33507972, 33517972, 33527972, 33537972, 33547972, 33557972, 33567972, 33577972, 33587972, 33597972, 33607972, 33617972, 33627972, 33637972, 33647972, 33657972, 33667972, 33677972, 33687972, 33697972, 33707972, 33717972, 33727972, 33737972, 33747972, 33757972, 33767972, 33777972, 33787972, 33797972, 33807972, 33817972, 33827972, 33837972, 33847972, 33857972, 33867972, 33877972, 33887972, 33897972, 33907972, 33917972, 33927972, 33937972, 33947972, 33957972, 33967972, 33977972, 33987972, 33997972, 34007972, 34017972, 34027972, 34037972, 34047972, 34057972, 34067972, 34077972, 34087972, 34097972, 34107972, 34117972, 34127972, 34137972, 34147972, 34157972, 34167972, 34177972, 34187972, 34197972, 34207972, 34217972, 34227972, 34237972, 34247972, 34257972, 34267972, 34277972, 34287972, 34297972, 34307972, 34317972, 34327972, 34337972, 34347972, 34357972, 34367972, 34377972, 34387972, 34397972]</msg>
<status status="PASS" starttime="20201112 12:28:04.967" endtime="20201112 12:28:04.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.957" endtime="20201112 12:28:04.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.986" endtime="20201112 12:28:05.277"></status>
</kw>
<msg timestamp="20201112 12:28:05.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018333319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028382028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.983" endtime="20201112 12:28:05.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018333319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028382028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.281" endtime="20201112 12:28:05.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.288" endtime="20201112 12:28:05.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.977" endtime="20201112 12:28:05.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.973" endtime="20201112 12:28:05.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.314" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:05.292" endtime="20201112 12:28:05.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.319" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:05.318" endtime="20201112 12:28:05.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.321" level="INFO">VALUE: 0.018333319</msg>
<status status="PASS" starttime="20201112 12:28:05.320" endtime="20201112 12:28:05.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.315" endtime="20201112 12:28:05.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.327" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:05.325" endtime="20201112 12:28:05.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.329" level="INFO">VALUE: [0.028382028, 0.038380833, 0.048380764, 0.058381653, 0.068382597, 0.078383514, 0.088384431, 0.098385347, 0.108386278, 0.118387194, 0.128388125, 0.138389028, 0.148389958, 0.158390875, 0.168391847, 0.178392722, 0.188393681, 0.198394569, 0.2083955, 0.218396403, 0.228397361, 0.238398264, 0.248399181, 0.258400097, 0.268401028, 0.278401958, 0.288402875, 0.298403792, 0.308404722, 0.318405625, 0.328406569, 0.338407486, 0.348408417, 0.358409333, 0.36841025, 0.378411208, 0.388412097, 0.398413014, 0.408413958, 0.418414875, 0.428415819, 0.438416708, 0.448417667, 0.458418556, 0.468419486, 0.478420417, 0.488421333, 0.498422319, 0.508423194, 0.518424097, 0.528425028, 0.538425944, 0.548426889, 0.558427792, 0.568428736, 0.578429653, 0.588430597, 0.598431528, 0.608432417, 0.618433333, 0.628434264, 0.638435181, 0.648436111, 0.658437014, 0.668437972, 0.678438861, 0.688439819, 0.698440708, 0.708441667, 0.718442556, 0.728443514, 0.738444431, 0.748445347, 0.75844625, 0.768447208, 0.778448097, 0.788449042, 0.798449944, 0.808450889, 0.818451792, 0.828452736, 0.838453681, 0.848454583, 0.8584555, 0.868456444, 0.878457361, 0.888458292, 0.898459194, 0.908460139, 0.918461028, 0.928461986, 0.938462875, 0.948463819, 0.958464764, 0.968465667, 0.978466569, 0.988467514, 0.998468444, 1.008469361, 1.018470278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:05.328" endtime="20201112 12:28:05.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.322" endtime="20201112 12:28:05.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.333" endtime="20201112 12:28:05.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.336" endtime="20201112 12:28:05.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.334" endtime="20201112 12:28:05.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.331" endtime="20201112 12:28:05.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.803" endtime="20201112 12:28:05.357"></status>
</kw>
<msg timestamp="20201112 12:28:05.357" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.365" endtime="20201112 12:28:07.457"></status>
</kw>
<msg timestamp="20201112 12:28:07.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35952224, 'wakeups': [35962272, 35972270, 35982269, 35992269, 36002269...</msg>
<status status="PASS" starttime="20201112 12:28:05.363" endtime="20201112 12:28:07.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.465" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 35952224, 'wakeups': [35962272, 35972270, 35982269, 35992269, 36002269...</msg>
<status status="PASS" starttime="20201112 12:28:07.461" endtime="20201112 12:28:07.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.468" endtime="20201112 12:28:07.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.361" endtime="20201112 12:28:07.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.359" endtime="20201112 12:28:07.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.479" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [35962272, 35972270, 35982269, 35992269, 36002269, 36012269, 36022269, 36032269, 36042269, 36052269, 36062269, 36072269, 36082269, 36092269, 36102269, 36112269, 36122269,...</msg>
<status status="PASS" starttime="20201112 12:28:07.475" endtime="20201112 12:28:07.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.487" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:07.485" endtime="20201112 12:28:07.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.492" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:07.490" endtime="20201112 12:28:07.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.481" endtime="20201112 12:28:07.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.502" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:07.500" endtime="20201112 12:28:07.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.506" level="INFO">VALUE: 35952224</msg>
<status status="PASS" starttime="20201112 12:28:07.504" endtime="20201112 12:28:07.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.495" endtime="20201112 12:28:07.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.517" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:07.515" endtime="20201112 12:28:07.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.521" level="INFO">VALUE: [35962272, 35972270, 35982269, 35992269, 36002269, 36012269, 36022269, 36032269, 36042269, 36052269, 36062269, 36072269, 36082269, 36092269, 36102269, 36112269, 36122269, 36132269, 36142269, 36152269, 36162269, 36172269, 36182269, 36192269, 36202269, 36212269, 36222269, 36232269, 36242269, 36252269, 36262269, 36272269, 36282269, 36292269, 36302269, 36312269, 36322269, 36332269, 36342269, 36352269, 36362269, 36372269, 36382269, 36392269, 36402269, 36412269, 36422269, 36432269, 36442269, 36452269, 36462269, 36472269, 36482269, 36492269, 36502269, 36512269, 36522269, 36532269, 36542269, 36552269, 36562269, 36572269, 36582269, 36592269, 36602269, 36612269, 36622269, 36632269, 36642269, 36652269, 36662269, 36672269, 36682269, 36692269, 36702269, 36712269, 36722269, 36732269, 36742269, 36752269, 36762269, 36772269, 36782269, 36792269, 36802269, 36812269, 36822269, 36832269, 36842269, 36852269, 36862269, 36872269, 36882269, 36892269, 36902269, 36912269, 36922269, 36932269, 36942269, 36952269]</msg>
<status status="PASS" starttime="20201112 12:28:07.519" endtime="20201112 12:28:07.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.510" endtime="20201112 12:28:07.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.537" endtime="20201112 12:28:07.831"></status>
</kw>
<msg timestamp="20201112 12:28:07.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028371778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.534" endtime="20201112 12:28:07.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028371778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.835" endtime="20201112 12:28:07.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.842" endtime="20201112 12:28:07.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.528" endtime="20201112 12:28:07.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.525" endtime="20201112 12:28:07.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.868" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:07.846" endtime="20201112 12:28:07.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.873" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:07.872" endtime="20201112 12:28:07.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.875" level="INFO">VALUE: 0.018322625</msg>
<status status="PASS" starttime="20201112 12:28:07.874" endtime="20201112 12:28:07.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.870" endtime="20201112 12:28:07.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.881" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:07.880" endtime="20201112 12:28:07.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.883" level="INFO">VALUE: [0.028371778, 0.038370625, 0.048370542, 0.058371458, 0.068372389, 0.078373306, 0.088374236, 0.098375139, 0.108376083, 0.118376986, 0.128377917, 0.138378917, 0.148379792, 0.158380708, 0.168381611, 0.178382528, 0.188383472, 0.198384361, 0.208385306, 0.218386208, 0.228387153, 0.238388056, 0.248388986, 0.258389903, 0.268390847, 0.278391764, 0.288392694, 0.298393597, 0.308394528, 0.318395486, 0.328396375, 0.338397292, 0.348398236, 0.358399139, 0.368400069, 0.378400986, 0.388401931, 0.398402819, 0.408403764, 0.418404667, 0.428405625, 0.438406514, 0.448407458, 0.458408375, 0.468409375, 0.478410208, 0.488411153, 0.498412097, 0.508413, 0.518413903, 0.528414847, 0.538415778, 0.548416694, 0.558417597, 0.568418542, 0.578419444, 0.588420389, 0.598421306, 0.608422236, 0.618423139, 0.628424097, 0.638425014, 0.648425944, 0.658426847, 0.668427792, 0.678428694, 0.688429625, 0.698430542, 0.708431486, 0.718432389, 0.728433319, 0.738434222, 0.748435181, 0.758436083, 0.768437056, 0.778437931, 0.788438889, 0.798439764, 0.808440708, 0.818441611, 0.828442583, 0.838443472, 0.848444403, 0.858445319, 0.86844625, 0.878447167, 0.888448111, 0.898449014, 0.908449944, 0.918450861, 0.928451806, 0.938452708, 0.948453639, 0.958454556, 0.9684555, 0.978456403, 0.988457333, 0.99845825, 1.008459181, 1.018460097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:07.882" endtime="20201112 12:28:07.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.877" endtime="20201112 12:28:07.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.886" endtime="20201112 12:28:07.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.889" endtime="20201112 12:28:07.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.888" endtime="20201112 12:28:07.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.884" endtime="20201112 12:28:07.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.357" endtime="20201112 12:28:07.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.253" endtime="20201112 12:28:07.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.253" endtime="20201112 12:28:07.911"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:07.913" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.923" endtime="20201112 12:28:10.016"></status>
</kw>
<msg timestamp="20201112 12:28:10.017" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38510120, 'wakeups': [38520179, 38530177, 38540177, 38550177, 38560177...</msg>
<status status="PASS" starttime="20201112 12:28:07.921" endtime="20201112 12:28:10.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38510120, 'wakeups': [38520179, 38530177, 38540177, 38550177, 38560177...</msg>
<status status="PASS" starttime="20201112 12:28:10.019" endtime="20201112 12:28:10.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.025" endtime="20201112 12:28:10.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.917" endtime="20201112 12:28:10.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.915" endtime="20201112 12:28:10.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.036" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [38520179, 38530177, 38540177, 38550177, 38560177, 38570177, 38580177, 38590177, 38600177, 38610177, 38620177, 38630177, 38640177, 38650177, 38660177, 38670177, 38680177,...</msg>
<status status="PASS" starttime="20201112 12:28:10.032" endtime="20201112 12:28:10.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.046" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:10.043" endtime="20201112 12:28:10.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.050" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:10.048" endtime="20201112 12:28:10.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.038" endtime="20201112 12:28:10.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.060" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.058" endtime="20201112 12:28:10.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.065" level="INFO">VALUE: 38510120</msg>
<status status="PASS" starttime="20201112 12:28:10.063" endtime="20201112 12:28:10.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.053" endtime="20201112 12:28:10.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.075" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.073" endtime="20201112 12:28:10.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.081" level="INFO">VALUE: [38520179, 38530177, 38540177, 38550177, 38560177, 38570177, 38580177, 38590177, 38600177, 38610177, 38620177, 38630177, 38640177, 38650177, 38660177, 38670177, 38680177, 38690177, 38700177, 38710177, 38720177, 38730177, 38740177, 38750177, 38760177, 38770177, 38780177, 38790177, 38800177, 38810177, 38820177, 38830177, 38840177, 38850177, 38860177, 38870177, 38880177, 38890177, 38900177, 38910177, 38920177, 38930177, 38940177, 38950177, 38960177, 38970177, 38980177, 38990177, 39000177, 39010177, 39020177, 39030177, 39040177, 39050177, 39060177, 39070177, 39080177, 39090177, 39100177, 39110177, 39120177, 39130177, 39140177, 39150177, 39160177, 39170177, 39180177, 39190177, 39200177, 39210177, 39220177, 39230177, 39240177, 39250177, 39260177, 39270177, 39280177, 39290177, 39300177, 39310177, 39320177, 39330177, 39340177, 39350177, 39360177, 39370177, 39380177, 39390177, 39400177, 39410177, 39420177, 39430177, 39440177, 39450177, 39460177, 39470177, 39480177, 39490177, 39500177, 39510177]</msg>
<status status="PASS" starttime="20201112 12:28:10.078" endtime="20201112 12:28:10.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.068" endtime="20201112 12:28:10.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.097" endtime="20201112 12:28:10.391"></status>
</kw>
<msg timestamp="20201112 12:28:10.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032765931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.094" endtime="20201112 12:28:10.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032765931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.395" endtime="20201112 12:28:10.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.402" endtime="20201112 12:28:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.088" endtime="20201112 12:28:10.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.084" endtime="20201112 12:28:10.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.429" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:10.406" endtime="20201112 12:28:10.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.434" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:10.433" endtime="20201112 12:28:10.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.436" level="INFO">VALUE: 0.022705486</msg>
<status status="PASS" starttime="20201112 12:28:10.435" endtime="20201112 12:28:10.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.430" endtime="20201112 12:28:10.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.441" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:10.440" endtime="20201112 12:28:10.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.443" level="INFO">VALUE: [0.032765931, 0.042764597, 0.0527655, 0.062766431, 0.072767347, 0.082768319, 0.092769194, 0.102770125, 0.112771028, 0.122771958, 0.132772889, 0.142773806, 0.152774722, 0.162775639, 0.172776569, 0.182777486, 0.192778403, 0.202779347, 0.21278025, 0.222781181, 0.232782097, 0.242783014, 0.252783986, 0.262784875, 0.272785792, 0.282786708, 0.292787625, 0.302788569, 0.312789486, 0.322790403, 0.332791333, 0.342792236, 0.352793167, 0.362794083, 0.372795042, 0.382795944, 0.392796861, 0.402797778, 0.412798708, 0.422799625, 0.432800583, 0.442801486, 0.452802431, 0.462803319, 0.472804236, 0.482805167, 0.492806083, 0.502807014, 0.512807931, 0.522808847, 0.532809778, 0.542810694, 0.552811625, 0.562812542, 0.572813472, 0.582814389, 0.592815333, 0.60281625, 0.612817167, 0.622818083, 0.632819028, 0.642819944, 0.652820847, 0.662821778, 0.672822694, 0.682823625, 0.692824542, 0.702825472, 0.712826389, 0.722827333, 0.732828236, 0.742829167, 0.752830097, 0.762831014, 0.772831931, 0.782832861, 0.792833847, 0.802834708, 0.812835625, 0.822836569, 0.832837486, 0.842838417, 0.852839319, 0.86284025, 0.872841167, 0.882842097, 0.892843028, 0.902843944, 0.912844903, 0.922845792, 0.932846708, 0.942847639, 0.952848569, 0.962849472, 0.972850403, 0.982851319, 0.99285225, 1.002853222, 1.012854111, 1.022855014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:10.442" endtime="20201112 12:28:10.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.437" endtime="20201112 12:28:10.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.447" endtime="20201112 12:28:10.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.451" endtime="20201112 12:28:10.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.449" endtime="20201112 12:28:10.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.445" endtime="20201112 12:28:10.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.914" endtime="20201112 12:28:10.471"></status>
</kw>
<msg timestamp="20201112 12:28:10.472" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.480" endtime="20201112 12:28:12.572"></status>
</kw>
<msg timestamp="20201112 12:28:12.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41066835, 'wakeups': [41076896, 41086894, 41096892, 41106892, 41116892...</msg>
<status status="PASS" starttime="20201112 12:28:10.478" endtime="20201112 12:28:12.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.579" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41066835, 'wakeups': [41076896, 41086894, 41096892, 41106892, 41116892...</msg>
<status status="PASS" starttime="20201112 12:28:12.576" endtime="20201112 12:28:12.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.582" endtime="20201112 12:28:12.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.475" endtime="20201112 12:28:12.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.473" endtime="20201112 12:28:12.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.593" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [41076896, 41086894, 41096892, 41106892, 41116892, 41126892, 41136892, 41146892, 41156892, 41166892, 41176892, 41186892, 41196892, 41206892, 41216892, 41226892, 41236892,...</msg>
<status status="PASS" starttime="20201112 12:28:12.589" endtime="20201112 12:28:12.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.601" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:12.599" endtime="20201112 12:28:12.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.606" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:12.604" endtime="20201112 12:28:12.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.594" endtime="20201112 12:28:12.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.616" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:12.614" endtime="20201112 12:28:12.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.623" level="INFO">VALUE: 41066835</msg>
<status status="PASS" starttime="20201112 12:28:12.621" endtime="20201112 12:28:12.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.609" endtime="20201112 12:28:12.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.633" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:12.631" endtime="20201112 12:28:12.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.638" level="INFO">VALUE: [41076896, 41086894, 41096892, 41106892, 41116892, 41126892, 41136892, 41146892, 41156892, 41166892, 41176892, 41186892, 41196892, 41206892, 41216892, 41226892, 41236892, 41246892, 41256892, 41266892, 41276892, 41286892, 41296892, 41306892, 41316892, 41326892, 41336892, 41346892, 41356892, 41366892, 41376892, 41386892, 41396892, 41406892, 41416892, 41426892, 41436892, 41446892, 41456892, 41466892, 41476892, 41486892, 41496892, 41506892, 41516892, 41526892, 41536892, 41546892, 41556892, 41566892, 41576892, 41586892, 41596892, 41606892, 41616892, 41626892, 41636892, 41646892, 41656892, 41666892, 41676892, 41686892, 41696892, 41706892, 41716892, 41726892, 41736892, 41746892, 41756892, 41766892, 41776892, 41786892, 41796892, 41806892, 41816892, 41826892, 41836892, 41846892, 41856892, 41866892, 41876892, 41886892, 41896892, 41906892, 41916892, 41926892, 41936892, 41946892, 41956892, 41966892, 41976892, 41986892, 41996892, 42006892, 42016892, 42026892, 42036892, 42046892, 42056892, 42066892]</msg>
<status status="PASS" starttime="20201112 12:28:12.635" endtime="20201112 12:28:12.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.626" endtime="20201112 12:28:12.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.647" endtime="20201112 12:28:12.938"></status>
</kw>
<msg timestamp="20201112 12:28:12.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028369778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.646" endtime="20201112 12:28:12.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018307931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028369778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.942" endtime="20201112 12:28:12.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.949" endtime="20201112 12:28:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.643" endtime="20201112 12:28:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.641" endtime="20201112 12:28:12.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.975" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:12.952" endtime="20201112 12:28:12.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.980" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:12.979" endtime="20201112 12:28:12.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.982" level="INFO">VALUE: 0.018307931</msg>
<status status="PASS" starttime="20201112 12:28:12.981" endtime="20201112 12:28:12.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.976" endtime="20201112 12:28:12.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.987" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:12.986" endtime="20201112 12:28:12.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.990" level="INFO">VALUE: [0.028369778, 0.038368931, 0.048367861, 0.058368778, 0.068369694, 0.078370611, 0.088371556, 0.0983725, 0.108373389, 0.118374306, 0.128375236, 0.138376139, 0.148377083, 0.158377986, 0.168378944, 0.178379833, 0.18838075, 0.198381681, 0.208382597, 0.218383528, 0.228384444, 0.238385375, 0.248386292, 0.258387208, 0.268388139, 0.278389069, 0.288389972, 0.298390903, 0.308391819, 0.31839275, 0.32839375, 0.338394597, 0.348395514, 0.358396444, 0.368397361, 0.378398333, 0.388399208, 0.398400139, 0.408401056, 0.418402, 0.428402889, 0.438403833, 0.448404736, 0.458405681, 0.468406597, 0.478407514, 0.488408431, 0.498409361, 0.508410292, 0.518411208, 0.528412139, 0.538413056, 0.548413972, 0.558414903, 0.568415833, 0.57841675, 0.588417694, 0.598418611, 0.608419528, 0.618420431, 0.628421361, 0.638422333, 0.648423222, 0.658424125, 0.668425056, 0.678425986, 0.688426903, 0.698427819, 0.70842875, 0.718429667, 0.728430597, 0.738431514, 0.748432444, 0.758433361, 0.768434292, 0.778435208, 0.788436139, 0.798437056, 0.808437986, 0.818438903, 0.828439819, 0.83844075, 0.848441667, 0.858442597, 0.868443514, 0.878444458, 0.888445361, 0.898446292, 0.908447208, 0.918448153, 0.928449069, 0.93845, 0.948450903, 0.958451833, 0.96845275, 0.978453681, 0.988454597, 0.998455542, 1.008456458, 1.018457403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:12.989" endtime="20201112 12:28:12.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.983" endtime="20201112 12:28:12.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.993" endtime="20201112 12:28:12.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.997" endtime="20201112 12:28:13.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.995" endtime="20201112 12:28:13.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.992" endtime="20201112 12:28:13.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.472" endtime="20201112 12:28:13.018"></status>
</kw>
<msg timestamp="20201112 12:28:13.018" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.026" endtime="20201112 12:28:15.119"></status>
</kw>
<msg timestamp="20201112 12:28:15.120" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43613107, 'wakeups': [43623167, 43633164, 43643164, 43653164, 43663164...</msg>
<status status="PASS" starttime="20201112 12:28:13.024" endtime="20201112 12:28:15.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.127" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43613107, 'wakeups': [43623167, 43633164, 43643164, 43653164, 43663164...</msg>
<status status="PASS" starttime="20201112 12:28:15.123" endtime="20201112 12:28:15.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.129" endtime="20201112 12:28:15.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.022" endtime="20201112 12:28:15.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.020" endtime="20201112 12:28:15.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.140" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [43623167, 43633164, 43643164, 43653164, 43663164, 43673164, 43683164, 43693164, 43703164, 43713164, 43723164, 43733164, 43743164, 43753164, 43763164, 43773164, 43783164,...</msg>
<status status="PASS" starttime="20201112 12:28:15.136" endtime="20201112 12:28:15.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.149" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:15.147" endtime="20201112 12:28:15.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.153" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:15.151" endtime="20201112 12:28:15.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.142" endtime="20201112 12:28:15.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.164" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.162" endtime="20201112 12:28:15.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.168" level="INFO">VALUE: 43613107</msg>
<status status="PASS" starttime="20201112 12:28:15.166" endtime="20201112 12:28:15.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.156" endtime="20201112 12:28:15.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.178" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.176" endtime="20201112 12:28:15.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.183" level="INFO">VALUE: [43623167, 43633164, 43643164, 43653164, 43663164, 43673164, 43683164, 43693164, 43703164, 43713164, 43723164, 43733164, 43743164, 43753164, 43763164, 43773164, 43783164, 43793164, 43803164, 43813164, 43823164, 43833164, 43843164, 43853164, 43863164, 43873164, 43883164, 43893164, 43903164, 43913164, 43923164, 43933164, 43943164, 43953164, 43963164, 43973164, 43983164, 43993164, 44003164, 44013164, 44023164, 44033164, 44043164, 44053164, 44063164, 44073164, 44083164, 44093164, 44103164, 44113164, 44123164, 44133164, 44143164, 44153164, 44163164, 44173164, 44183164, 44193164, 44203164, 44213164, 44223164, 44233164, 44243164, 44253164, 44263164, 44273164, 44283164, 44293164, 44303164, 44313164, 44323164, 44333164, 44343164, 44353164, 44363164, 44373164, 44383164, 44393164, 44403164, 44413164, 44423164, 44433164, 44443164, 44453164, 44463164, 44473164, 44483164, 44493164, 44503164, 44513164, 44523164, 44533164, 44543164, 44553164, 44563164, 44573164, 44583164, 44593164, 44603164, 44613164]</msg>
<status status="PASS" starttime="20201112 12:28:15.181" endtime="20201112 12:28:15.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.171" endtime="20201112 12:28:15.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.200" endtime="20201112 12:28:15.494"></status>
</kw>
<msg timestamp="20201112 12:28:15.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018421917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028482569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.196" endtime="20201112 12:28:15.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018421917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028482569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.498" endtime="20201112 12:28:15.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.506" endtime="20201112 12:28:15.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.190" endtime="20201112 12:28:15.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.186" endtime="20201112 12:28:15.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.532" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:15.509" endtime="20201112 12:28:15.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.537" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:15.536" endtime="20201112 12:28:15.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.539" level="INFO">VALUE: 0.018421917</msg>
<status status="PASS" starttime="20201112 12:28:15.538" endtime="20201112 12:28:15.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.533" endtime="20201112 12:28:15.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.544" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:15.543" endtime="20201112 12:28:15.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.546" level="INFO">VALUE: [0.028482569, 0.038480222, 0.048481153, 0.058482069, 0.068483, 0.078483931, 0.088484875, 0.098485778, 0.108486681, 0.118487597, 0.128488569, 0.138489444, 0.148490361, 0.158491292, 0.168492208, 0.178493139, 0.188494056, 0.198494986, 0.208495903, 0.218496819, 0.22849775, 0.238498722, 0.248499583, 0.258500528, 0.268501444, 0.278502361, 0.288503292, 0.298504222, 0.308505194, 0.318506056, 0.328507, 0.338507917, 0.348508819, 0.358509778, 0.368510694, 0.378511597, 0.388512528, 0.398513444, 0.408514375, 0.418515319, 0.428516222, 0.438517139, 0.448518069, 0.458519, 0.468519931, 0.478520917, 0.488521778, 0.498522694, 0.508523611, 0.518524542, 0.528525444, 0.538526375, 0.548527292, 0.558528222, 0.568529139, 0.578530056, 0.588531, 0.598531903, 0.608532819, 0.61853375, 0.628534667, 0.638535611, 0.648536528, 0.658537431, 0.668538361, 0.678539292, 0.688540208, 0.698541139, 0.708542042, 0.718542972, 0.728543903, 0.738544819, 0.748545764, 0.758546681, 0.768547583, 0.778548514, 0.788549431, 0.798550347, 0.808551292, 0.81855225, 0.828553167, 0.838554056, 0.848555, 0.858555889, 0.868556806, 0.878557736, 0.888558667, 0.898559583, 0.908560514, 0.918561431, 0.928562361, 0.938563278, 0.948564194, 0.958565153, 0.968566056, 0.978566972, 0.988567903, 0.998568833, 1.008569736, 1.018570653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:15.545" endtime="20201112 12:28:15.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.540" endtime="20201112 12:28:15.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.550" endtime="20201112 12:28:15.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.553" endtime="20201112 12:28:15.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.552" endtime="20201112 12:28:15.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.548" endtime="20201112 12:28:15.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.018" endtime="20201112 12:28:15.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.912" endtime="20201112 12:28:15.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.911" endtime="20201112 12:28:15.574"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:15.577" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.586" endtime="20201112 12:28:17.678"></status>
</kw>
<msg timestamp="20201112 12:28:17.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46172961, 'wakeups': [46183036, 46193035, 46203033, 46213034, 46223033...</msg>
<status status="PASS" starttime="20201112 12:28:15.584" endtime="20201112 12:28:17.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.685" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46172961, 'wakeups': [46183036, 46193035, 46203033, 46213034, 46223033...</msg>
<status status="PASS" starttime="20201112 12:28:17.682" endtime="20201112 12:28:17.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.688" endtime="20201112 12:28:17.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.581" endtime="20201112 12:28:17.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.579" endtime="20201112 12:28:17.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.699" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [46183036, 46193035, 46203033, 46213034, 46223033, 46233033, 46243034, 46253033, 46263033, 46273034, 46283033, 46293033, 46303034, 46313033, 46323033, 46333034, 46343033,...</msg>
<status status="PASS" starttime="20201112 12:28:17.695" endtime="20201112 12:28:17.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.713" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:17.711" endtime="20201112 12:28:17.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.717" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:17.715" endtime="20201112 12:28:17.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.706" endtime="20201112 12:28:17.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.728" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:17.725" endtime="20201112 12:28:17.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.732" level="INFO">VALUE: 46172961</msg>
<status status="PASS" starttime="20201112 12:28:17.730" endtime="20201112 12:28:17.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.720" endtime="20201112 12:28:17.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.741" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:17.740" endtime="20201112 12:28:17.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.744" level="INFO">VALUE: [46183036, 46193035, 46203033, 46213034, 46223033, 46233033, 46243034, 46253033, 46263033, 46273034, 46283033, 46293033, 46303034, 46313033, 46323033, 46333034, 46343033, 46353033, 46363034, 46373033, 46383033, 46393034, 46403033, 46413033, 46423034, 46433033, 46443033, 46453034, 46463033, 46473033, 46483034, 46493033, 46503033, 46513034, 46523033, 46533033, 46543034, 46553033, 46563033, 46573034, 46583033, 46593033, 46603034, 46613033, 46623033, 46633034, 46643033, 46653033, 46663034, 46673033, 46683033, 46693034, 46703033, 46713033, 46723034, 46733033, 46743033, 46753034, 46763033, 46773033, 46783034, 46793033, 46803033, 46813034, 46823033, 46833033, 46843034, 46853033, 46863033, 46873034, 46883033, 46893033, 46903034, 46913033, 46923033, 46933034, 46943033, 46953033, 46963034, 46973033, 46983033, 46993034, 47003033, 47013033, 47023034, 47033033, 47043033, 47053034, 47063033, 47073033, 47083034, 47093033, 47103033, 47113034, 47123033, 47133033, 47143034, 47153033, 47163033, 47173034]</msg>
<status status="PASS" starttime="20201112 12:28:17.742" endtime="20201112 12:28:17.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.735" endtime="20201112 12:28:17.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.751" endtime="20201112 12:28:18.041"></status>
</kw>
<msg timestamp="20201112 12:28:18.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032000153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:17.749" endtime="20201112 12:28:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032000153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:18.045" endtime="20201112 12:28:18.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.052" endtime="20201112 12:28:18.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.747" endtime="20201112 12:28:18.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.745" endtime="20201112 12:28:18.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:18.079" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:18.056" endtime="20201112 12:28:18.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.084" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:18.083" endtime="20201112 12:28:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.086" level="INFO">VALUE: 0.021924833</msg>
<status status="PASS" starttime="20201112 12:28:18.085" endtime="20201112 12:28:18.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.080" endtime="20201112 12:28:18.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.091" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:18.090" endtime="20201112 12:28:18.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:18.094" level="INFO">VALUE: [0.032000153, 0.041999972, 0.051999569, 0.062000819, 0.072000736, 0.082002347, 0.092003583, 0.102003542, 0.112005097, 0.122006347, 0.132006278, 0.142007903, 0.152009111, 0.162009042, 0.172010639, 0.182011875, 0.192011806, 0.202013458, 0.212014653, 0.222014583, 0.232016181, 0.242017431, 0.252017375, 0.262018944, 0.272020181, 0.282020111, 0.292021694, 0.302022944, 0.312022889, 0.322024472, 0.332025722, 0.342025653, 0.35202725, 0.362028486, 0.372028403, 0.382030042, 0.39203125, 0.402031222, 0.412032806, 0.422034042, 0.432033944, 0.442035542, 0.452036792, 0.462036722, 0.472038347, 0.482039556, 0.492039486, 0.502041097, 0.512042333, 0.52204225, 0.532043861, 0.542045097, 0.552045028, 0.562046653, 0.572047875, 0.582047806, 0.592049389, 0.602050639, 0.612050556, 0.622052167, 0.632053403, 0.642053347, 0.652054944, 0.662056181, 0.672056097, 0.682057708, 0.692058944, 0.702058875, 0.712060472, 0.722061722, 0.732061639, 0.74206325, 0.752064486, 0.762064431, 0.772066056, 0.782067264, 0.792067194, 0.802068778, 0.812070028, 0.822069958, 0.832071556, 0.842072819, 0.852072736, 0.862074319, 0.872075569, 0.882075514, 0.892077097, 0.902078333, 0.912078278, 0.922079931, 0.932081125, 0.942081111, 0.952082625, 0.962083875, 0.972083806, 0.982085403, 0.992086653, 1.002086597, 1.012088222, 1.022089417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:18.093" endtime="20201112 12:28:18.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.087" endtime="20201112 12:28:18.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.097" endtime="20201112 12:28:18.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:18.101" endtime="20201112 12:28:18.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.099" endtime="20201112 12:28:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.095" endtime="20201112 12:28:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.577" endtime="20201112 12:28:18.121"></status>
</kw>
<msg timestamp="20201112 12:28:18.122" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:18.130" endtime="20201112 12:28:20.223"></status>
</kw>
<msg timestamp="20201112 12:28:20.224" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48716994, 'wakeups': [48727069, 48737068, 48747066, 48757067, 48767066...</msg>
<status status="PASS" starttime="20201112 12:28:18.128" endtime="20201112 12:28:20.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.230" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48716994, 'wakeups': [48727069, 48737068, 48747066, 48757067, 48767066...</msg>
<status status="PASS" starttime="20201112 12:28:20.226" endtime="20201112 12:28:20.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.232" endtime="20201112 12:28:20.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.126" endtime="20201112 12:28:20.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.124" endtime="20201112 12:28:20.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.243" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [48727069, 48737068, 48747066, 48757067, 48767066, 48777066, 48787067, 48797066, 48807066, 48817067, 48827066, 48837066, 48847067, 48857066, 48867066, 48877067, 48887066,...</msg>
<status status="PASS" starttime="20201112 12:28:20.239" endtime="20201112 12:28:20.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.252" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:20.250" endtime="20201112 12:28:20.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.256" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:20.254" endtime="20201112 12:28:20.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.245" endtime="20201112 12:28:20.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.269" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:20.266" endtime="20201112 12:28:20.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.273" level="INFO">VALUE: 48716994</msg>
<status status="PASS" starttime="20201112 12:28:20.271" endtime="20201112 12:28:20.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.259" endtime="20201112 12:28:20.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.283" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:20.281" endtime="20201112 12:28:20.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.289" level="INFO">VALUE: [48727069, 48737068, 48747066, 48757067, 48767066, 48777066, 48787067, 48797066, 48807066, 48817067, 48827066, 48837066, 48847067, 48857066, 48867066, 48877067, 48887066, 48897066, 48907067, 48917066, 48927066, 48937067, 48947066, 48957066, 48967067, 48977066, 48987066, 48997067, 49007066, 49017066, 49027067, 49037066, 49047066, 49057067, 49067066, 49077066, 49087067, 49097066, 49107066, 49117067, 49127066, 49137066, 49147067, 49157066, 49167066, 49177067, 49187066, 49197066, 49207067, 49217066, 49227066, 49237067, 49247066, 49257066, 49267067, 49277066, 49287066, 49297067, 49307066, 49317066, 49327067, 49337066, 49347066, 49357067, 49367066, 49377066, 49387067, 49397066, 49407066, 49417067, 49427066, 49437066, 49447067, 49457066, 49467066, 49477067, 49487066, 49497066, 49507067, 49517066, 49527066, 49537067, 49547066, 49557066, 49567067, 49577066, 49587066, 49597067, 49607066, 49617066, 49627067, 49637066, 49647066, 49657067, 49667066, 49677066, 49687067, 49697066, 49707066, 49717067]</msg>
<status status="PASS" starttime="20201112 12:28:20.286" endtime="20201112 12:28:20.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.276" endtime="20201112 12:28:20.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.305" endtime="20201112 12:28:20.597"></status>
</kw>
<msg timestamp="20201112 12:28:20.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01839475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028470403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:20.302" endtime="20201112 12:28:20.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01839475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028470403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:20.601" endtime="20201112 12:28:20.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.608" endtime="20201112 12:28:20.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.296" endtime="20201112 12:28:20.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.292" endtime="20201112 12:28:20.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:20.635" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:20.611" endtime="20201112 12:28:20.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.639" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:20.638" endtime="20201112 12:28:20.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.642" level="INFO">VALUE: 0.01839475</msg>
<status status="PASS" starttime="20201112 12:28:20.641" endtime="20201112 12:28:20.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.636" endtime="20201112 12:28:20.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.648" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:20.647" endtime="20201112 12:28:20.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.650" level="INFO">VALUE: [0.028470403, 0.038470264, 0.048469875, 0.058471111, 0.068471042, 0.078472653, 0.088473875, 0.098473875, 0.108475403, 0.118476639, 0.128476583, 0.138478167, 0.148479417, 0.158479333, 0.168481, 0.178482181, 0.188482097, 0.198483694, 0.208484944, 0.218484875, 0.228486458, 0.238487708, 0.248487639, 0.258489236, 0.268490472, 0.278490417, 0.288492, 0.298493236, 0.308493167, 0.318494778, 0.328496014, 0.338495931, 0.348497569, 0.358498819, 0.368498694, 0.378500306, 0.388501542, 0.398501486, 0.408503083, 0.418504333, 0.428504236, 0.438505833, 0.448507083, 0.458507, 0.468508597, 0.478509847, 0.488509778, 0.498511403, 0.508512639, 0.518512542, 0.528514153, 0.538515389, 0.548515319, 0.558516931, 0.568518167, 0.578518111, 0.588519736, 0.598520931, 0.608520847, 0.618522514, 0.628523694, 0.638523625, 0.648525236, 0.658526472, 0.668526389, 0.678527986, 0.688529236, 0.698529167, 0.708530764, 0.718532014, 0.728531931, 0.738533528, 0.748534778, 0.758534708, 0.768536319, 0.778537569, 0.788537472, 0.798539069, 0.808540319, 0.818540306, 0.828541847, 0.838543083, 0.848543014, 0.858544653, 0.868545861, 0.878545778, 0.888547375, 0.898548625, 0.908548569, 0.918550153, 0.928551403, 0.938551319, 0.948552917, 0.958554167, 0.968554097, 0.978555708, 0.988556944, 0.998556861, 1.008558472, 1.018559708] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:20.649" endtime="20201112 12:28:20.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.644" endtime="20201112 12:28:20.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.653" endtime="20201112 12:28:20.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.656" endtime="20201112 12:28:20.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.655" endtime="20201112 12:28:20.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.651" endtime="20201112 12:28:20.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:18.122" endtime="20201112 12:28:20.677"></status>
</kw>
<msg timestamp="20201112 12:28:20.678" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.686" endtime="20201112 12:28:22.780"></status>
</kw>
<msg timestamp="20201112 12:28:22.781" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51272928, 'wakeups': [51283003, 51293002, 51303000, 51313001, 51323000...</msg>
<status status="PASS" starttime="20201112 12:28:20.684" endtime="20201112 12:28:22.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.787" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51272928, 'wakeups': [51283003, 51293002, 51303000, 51313001, 51323000...</msg>
<status status="PASS" starttime="20201112 12:28:22.783" endtime="20201112 12:28:22.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.789" endtime="20201112 12:28:22.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.682" endtime="20201112 12:28:22.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.680" endtime="20201112 12:28:22.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.800" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [51283003, 51293002, 51303000, 51313001, 51323000, 51333000, 51343001, 51353000, 51363000, 51373001, 51383000, 51393000, 51403001, 51413000, 51423000, 51433001, 51443000,...</msg>
<status status="PASS" starttime="20201112 12:28:22.796" endtime="20201112 12:28:22.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.809" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:22.806" endtime="20201112 12:28:22.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.813" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:22.811" endtime="20201112 12:28:22.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.802" endtime="20201112 12:28:22.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.823" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:22.821" endtime="20201112 12:28:22.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.827" level="INFO">VALUE: 51272928</msg>
<status status="PASS" starttime="20201112 12:28:22.826" endtime="20201112 12:28:22.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.816" endtime="20201112 12:28:22.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.838" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:22.836" endtime="20201112 12:28:22.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.843" level="INFO">VALUE: [51283003, 51293002, 51303000, 51313001, 51323000, 51333000, 51343001, 51353000, 51363000, 51373001, 51383000, 51393000, 51403001, 51413000, 51423000, 51433001, 51443000, 51453000, 51463001, 51473000, 51483000, 51493001, 51503000, 51513000, 51523001, 51533000, 51543000, 51553001, 51563000, 51573000, 51583001, 51593000, 51603000, 51613001, 51623000, 51633000, 51643001, 51653000, 51663000, 51673001, 51683000, 51693000, 51703001, 51713000, 51723000, 51733001, 51743000, 51753000, 51763001, 51773000, 51783000, 51793001, 51803000, 51813000, 51823001, 51833000, 51843000, 51853001, 51863000, 51873000, 51883001, 51893000, 51903000, 51913001, 51923000, 51933000, 51943001, 51953000, 51963000, 51973001, 51983000, 51993000, 52003001, 52013000, 52023000, 52033001, 52043000, 52053000, 52063001, 52073000, 52083000, 52093001, 52103000, 52113000, 52123001, 52133000, 52143000, 52153001, 52163000, 52173000, 52183001, 52193000, 52203000, 52213001, 52223000, 52233000, 52243001, 52253000, 52263000, 52273001]</msg>
<status status="PASS" starttime="20201112 12:28:22.840" endtime="20201112 12:28:22.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.831" endtime="20201112 12:28:22.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.860" endtime="20201112 12:28:23.152"></status>
</kw>
<msg timestamp="20201112 12:28:23.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01871, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028785278, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:28:22.857" endtime="20201112 12:28:23.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01871, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028785278, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:28:23.160" endtime="20201112 12:28:23.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.167" endtime="20201112 12:28:23.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.849" endtime="20201112 12:28:23.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.846" endtime="20201112 12:28:23.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:23.194" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:23.171" endtime="20201112 12:28:23.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.198" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:23.197" endtime="20201112 12:28:23.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.200" level="INFO">VALUE: 0.01871</msg>
<status status="PASS" starttime="20201112 12:28:23.199" endtime="20201112 12:28:23.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.194" endtime="20201112 12:28:23.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.205" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:23.204" endtime="20201112 12:28:23.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.208" level="INFO">VALUE: [0.028785278, 0.038785167, 0.048784764, 0.058786028, 0.068785931, 0.078787528, 0.088788764, 0.098788708, 0.108790292, 0.118791542, 0.128791472, 0.138793056, 0.148794319, 0.158794222, 0.168795819, 0.178797069, 0.188796986, 0.198798583, 0.208799833, 0.218799778, 0.228801389, 0.238802611, 0.248802514, 0.258804125, 0.268805361, 0.278805347, 0.288806875, 0.298808125, 0.308808056, 0.318809653, 0.328810889, 0.338810819, 0.348812417, 0.358813667, 0.368813583, 0.378815181, 0.388816431, 0.398816361, 0.408817944, 0.418819194, 0.428819111, 0.438820722, 0.448821958, 0.458821917, 0.468823486, 0.478824736, 0.488824667, 0.498826278, 0.508827569, 0.518827417, 0.528829028, 0.538830278, 0.548830222, 0.558831806, 0.568833042, 0.578832958, 0.588834556, 0.598835819, 0.608835736, 0.618837333, 0.628838583, 0.6388385, 0.648840097, 0.658841347, 0.668841264, 0.678842861, 0.688844153, 0.698844042, 0.708845639, 0.718846889, 0.728846806, 0.738848403, 0.748849667, 0.758849583, 0.768851167, 0.778852431, 0.788852347, 0.798853944, 0.808855194, 0.818855111, 0.828856708, 0.838858, 0.848857889, 0.858859486, 0.868860722, 0.878860722, 0.888862319, 0.898863514, 0.908863417, 0.918865014, 0.928866333, 0.938866194, 0.948867792, 0.958869056, 0.968868958, 0.978870583, 0.988871806, 0.99887175, 1.008873333, 1.018874569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:23.207" endtime="20201112 12:28:23.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.202" endtime="20201112 12:28:23.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.211" endtime="20201112 12:28:23.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:23.214" endtime="20201112 12:28:23.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.213" endtime="20201112 12:28:23.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.209" endtime="20201112 12:28:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.678" endtime="20201112 12:28:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.575" endtime="20201112 12:28:23.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.575" endtime="20201112 12:28:23.235"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:23.238" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.247" endtime="20201112 12:28:25.340"></status>
</kw>
<msg timestamp="20201112 12:28:25.341" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53834212, 'wakeups': [53844301, 53854299, 53864299, 53874299, 53884299...</msg>
<status status="PASS" starttime="20201112 12:28:23.245" endtime="20201112 12:28:25.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53834212, 'wakeups': [53844301, 53854299, 53864299, 53874299, 53884299...</msg>
<status status="PASS" starttime="20201112 12:28:25.344" endtime="20201112 12:28:25.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.350" endtime="20201112 12:28:25.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.243" endtime="20201112 12:28:25.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.240" endtime="20201112 12:28:25.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.361" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [53844301, 53854299, 53864299, 53874299, 53884299, 53894299, 53904299, 53914299, 53924299, 53934299, 53944299, 53954299, 53964299, 53974299, 53984299, 53994299, 54004299,...</msg>
<status status="PASS" starttime="20201112 12:28:25.357" endtime="20201112 12:28:25.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.370" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:25.368" endtime="20201112 12:28:25.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.374" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:25.372" endtime="20201112 12:28:25.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.363" endtime="20201112 12:28:25.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.384" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.382" endtime="20201112 12:28:25.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.389" level="INFO">VALUE: 53834212</msg>
<status status="PASS" starttime="20201112 12:28:25.387" endtime="20201112 12:28:25.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.377" endtime="20201112 12:28:25.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.399" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.397" endtime="20201112 12:28:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.404" level="INFO">VALUE: [53844301, 53854299, 53864299, 53874299, 53884299, 53894299, 53904299, 53914299, 53924299, 53934299, 53944299, 53954299, 53964299, 53974299, 53984299, 53994299, 54004299, 54014299, 54024299, 54034299, 54044299, 54054299, 54064299, 54074299, 54084299, 54094299, 54104299, 54114299, 54124299, 54134299, 54144299, 54154299, 54164299, 54174299, 54184299, 54194299, 54204299, 54214299, 54224299, 54234299, 54244299, 54254299, 54264299, 54274299, 54284299, 54294299, 54304299, 54314299, 54324299, 54334299, 54344299, 54354299, 54364299, 54374299, 54384299, 54394299, 54404299, 54414299, 54424299, 54434299, 54444299, 54454299, 54464299, 54474299, 54484299, 54494299, 54504299, 54514299, 54524299, 54534299, 54544299, 54554299, 54564299, 54574299, 54584299, 54594299, 54604299, 54614299, 54624299, 54634299, 54644299, 54654299, 54664299, 54674299, 54684299, 54694299, 54704299, 54714299, 54724299, 54734299, 54744299, 54754299, 54764299, 54774299, 54784299, 54794299, 54804299, 54814299, 54824299, 54834299]</msg>
<status status="PASS" starttime="20201112 12:28:25.402" endtime="20201112 12:28:25.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.392" endtime="20201112 12:28:25.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.421" endtime="20201112 12:28:25.713"></status>
</kw>
<msg timestamp="20201112 12:28:25.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032176264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:25.417" endtime="20201112 12:28:25.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032176264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:25.716" endtime="20201112 12:28:25.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.724" endtime="20201112 12:28:25.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.411" endtime="20201112 12:28:25.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.407" endtime="20201112 12:28:25.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.751" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:25.727" endtime="20201112 12:28:25.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.756" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.755" endtime="20201112 12:28:25.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.758" level="INFO">VALUE: 0.0220865</msg>
<status status="PASS" starttime="20201112 12:28:25.757" endtime="20201112 12:28:25.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.753" endtime="20201112 12:28:25.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.764" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.763" endtime="20201112 12:28:25.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.766" level="INFO">VALUE: [0.032176264, 0.04217525, 0.052176153, 0.062177083, 0.072178, 0.082178931, 0.092179847, 0.102180764, 0.112181694, 0.122182625, 0.132183528, 0.142184458, 0.152185375, 0.162186292, 0.172187222, 0.182188139, 0.192189056, 0.20219, 0.212190944, 0.222191833, 0.23219275, 0.242193667, 0.252194597, 0.262195528, 0.272196458, 0.282197361, 0.292198278, 0.30219925, 0.312200125, 0.322201042, 0.332201972, 0.342202903, 0.352203833, 0.36220475, 0.372205653, 0.382206583, 0.392207514, 0.402208431, 0.412209347, 0.422210278, 0.432211194, 0.442212111, 0.452213042, 0.462214, 0.472214889, 0.482215806, 0.492216736, 0.502217708, 0.512218583, 0.522219542, 0.532220431, 0.542221347, 0.552222264, 0.562223194, 0.572224125, 0.582225069, 0.592225958, 0.602226889, 0.612227833, 0.622228722, 0.632229653, 0.642230583, 0.6522315, 0.662232417, 0.672233389, 0.682234278, 0.692235194, 0.702236125, 0.712237042, 0.722237958, 0.732238889, 0.742239806, 0.752240736, 0.762241667, 0.772242569, 0.7822435, 0.792244417, 0.802245347, 0.812246278, 0.822247194, 0.832248125, 0.842249042, 0.852249958, 0.862250889, 0.872251806, 0.882252764, 0.892253708, 0.902254583, 0.9122555, 0.922256444, 0.932257347, 0.942258264, 0.952259194, 0.962260125, 0.972261042, 0.982261958, 0.992262931, 1.002263806, 1.012264722, 1.022265667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:25.765" endtime="20201112 12:28:25.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.760" endtime="20201112 12:28:25.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.769" endtime="20201112 12:28:25.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.773" endtime="20201112 12:28:25.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.771" endtime="20201112 12:28:25.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.767" endtime="20201112 12:28:25.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.239" endtime="20201112 12:28:25.793"></status>
</kw>
<msg timestamp="20201112 12:28:25.793" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.802" endtime="20201112 12:28:27.894"></status>
</kw>
<msg timestamp="20201112 12:28:27.895" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56388775, 'wakeups': [56398864, 56408862, 56418862, 56428862, 56438862...</msg>
<status status="PASS" starttime="20201112 12:28:25.800" endtime="20201112 12:28:27.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56388775, 'wakeups': [56398864, 56408862, 56418862, 56428862, 56438862...</msg>
<status status="PASS" starttime="20201112 12:28:27.898" endtime="20201112 12:28:27.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.904" endtime="20201112 12:28:27.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.797" endtime="20201112 12:28:27.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.795" endtime="20201112 12:28:27.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.915" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [56398864, 56408862, 56418862, 56428862, 56438862, 56448862, 56458862, 56468862, 56478862, 56488862, 56498862, 56508862, 56518862, 56528862, 56538862, 56548862, 56558862,...</msg>
<status status="PASS" starttime="20201112 12:28:27.911" endtime="20201112 12:28:27.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.925" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:27.923" endtime="20201112 12:28:27.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.930" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:27.928" endtime="20201112 12:28:27.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.916" endtime="20201112 12:28:27.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.941" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:27.939" endtime="20201112 12:28:27.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.945" level="INFO">VALUE: 56388775</msg>
<status status="PASS" starttime="20201112 12:28:27.943" endtime="20201112 12:28:27.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.933" endtime="20201112 12:28:27.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.955" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:27.953" endtime="20201112 12:28:27.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.960" level="INFO">VALUE: [56398864, 56408862, 56418862, 56428862, 56438862, 56448862, 56458862, 56468862, 56478862, 56488862, 56498862, 56508862, 56518862, 56528862, 56538862, 56548862, 56558862, 56568862, 56578862, 56588862, 56598862, 56608862, 56618862, 56628862, 56638862, 56648862, 56658862, 56668862, 56678862, 56688862, 56698862, 56708862, 56718862, 56728862, 56738862, 56748862, 56758862, 56768862, 56778862, 56788862, 56798862, 56808862, 56818862, 56828862, 56838862, 56848862, 56858862, 56868862, 56878862, 56888862, 56898862, 56908862, 56918862, 56928862, 56938862, 56948862, 56958862, 56968862, 56978862, 56988862, 56998862, 57008862, 57018862, 57028862, 57038862, 57048862, 57058862, 57068862, 57078862, 57088862, 57098862, 57108862, 57118862, 57128862, 57138862, 57148862, 57158862, 57168862, 57178862, 57188862, 57198862, 57208862, 57218862, 57228862, 57238862, 57248862, 57258862, 57268862, 57278862, 57288862, 57298862, 57308862, 57318862, 57328862, 57338862, 57348862, 57358862, 57368862, 57378862, 57388862]</msg>
<status status="PASS" starttime="20201112 12:28:27.958" endtime="20201112 12:28:27.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.948" endtime="20201112 12:28:27.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.973" endtime="20201112 12:28:28.263"></status>
</kw>
<msg timestamp="20201112 12:28:28.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02840375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:27.971" endtime="20201112 12:28:28.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018313764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02840375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:28.267" endtime="20201112 12:28:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.274" endtime="20201112 12:28:28.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.967" endtime="20201112 12:28:28.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.963" endtime="20201112 12:28:28.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.301" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:28.278" endtime="20201112 12:28:28.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.305" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.304" endtime="20201112 12:28:28.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.307" level="INFO">VALUE: 0.018313764</msg>
<status status="PASS" starttime="20201112 12:28:28.306" endtime="20201112 12:28:28.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.302" endtime="20201112 12:28:28.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.313" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.312" endtime="20201112 12:28:28.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.315" level="INFO">VALUE: [0.02840375, 0.038402722, 0.048403653, 0.058404583, 0.068405486, 0.078406417, 0.088407333, 0.098408278, 0.108409194, 0.118410111, 0.128411083, 0.138411944, 0.148412861, 0.158413778, 0.168414736, 0.178415625, 0.188416556, 0.198417472, 0.208418403, 0.218419319, 0.228420236, 0.238421153, 0.248422083, 0.258423014, 0.268423986, 0.278424861, 0.288425778, 0.298426708, 0.308427625, 0.318428542, 0.3284295, 0.338430375, 0.348431319, 0.358432222, 0.368433167, 0.378434069, 0.388434986, 0.398435917, 0.408436833, 0.418437778, 0.428438681, 0.438439597, 0.448440542, 0.458441444, 0.468442389, 0.478443292, 0.488444208, 0.498445139, 0.508446056, 0.518447, 0.528447903, 0.538448833, 0.548449764, 0.558450681, 0.568451611, 0.578452542, 0.588453458, 0.598454361, 0.608455292, 0.618456208, 0.628457153, 0.638458069, 0.648458986, 0.658459903, 0.668460833, 0.67846175, 0.688462681, 0.698463625, 0.708464528, 0.718465444, 0.728466389, 0.738467292, 0.748468236, 0.758469153, 0.768470056, 0.778470986, 0.788471917, 0.798472819, 0.808473764, 0.818474667, 0.828475667, 0.838476542, 0.848477458, 0.858478361, 0.868479292, 0.878480208, 0.888481139, 0.898482056, 0.908482986, 0.918483958, 0.928484819, 0.93848575, 0.948486681, 0.958487653, 0.968488528, 0.978489458, 0.988490361, 0.998491292, 1.008492208, 1.018493125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:28.314" endtime="20201112 12:28:28.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.309" endtime="20201112 12:28:28.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.322" endtime="20201112 12:28:28.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.326" endtime="20201112 12:28:28.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.324" endtime="20201112 12:28:28.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.321" endtime="20201112 12:28:28.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.794" endtime="20201112 12:28:28.347"></status>
</kw>
<msg timestamp="20201112 12:28:28.347" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.355" endtime="20201112 12:28:30.449"></status>
</kw>
<msg timestamp="20201112 12:28:30.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58942145, 'wakeups': [58952234, 58962232, 58972232, 58982232, 58992232...</msg>
<status status="PASS" starttime="20201112 12:28:28.353" endtime="20201112 12:28:30.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58942145, 'wakeups': [58952234, 58962232, 58972232, 58982232, 58992232...</msg>
<status status="PASS" starttime="20201112 12:28:30.452" endtime="20201112 12:28:30.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.458" endtime="20201112 12:28:30.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.351" endtime="20201112 12:28:30.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.349" endtime="20201112 12:28:30.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.469" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [58952234, 58962232, 58972232, 58982232, 58992232, 59002232, 59012232, 59022232, 59032232, 59042232, 59052232, 59062232, 59072232, 59082232, 59092232, 59102232, 59112232,...</msg>
<status status="PASS" starttime="20201112 12:28:30.465" endtime="20201112 12:28:30.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.477" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:30.475" endtime="20201112 12:28:30.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.482" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:30.480" endtime="20201112 12:28:30.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.471" endtime="20201112 12:28:30.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.492" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.490" endtime="20201112 12:28:30.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.497" level="INFO">VALUE: 58942145</msg>
<status status="PASS" starttime="20201112 12:28:30.495" endtime="20201112 12:28:30.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.485" endtime="20201112 12:28:30.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.507" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.505" endtime="20201112 12:28:30.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.514" level="INFO">VALUE: [58952234, 58962232, 58972232, 58982232, 58992232, 59002232, 59012232, 59022232, 59032232, 59042232, 59052232, 59062232, 59072232, 59082232, 59092232, 59102232, 59112232, 59122232, 59132232, 59142232, 59152232, 59162232, 59172232, 59182232, 59192232, 59202232, 59212232, 59222232, 59232232, 59242232, 59252232, 59262232, 59272232, 59282232, 59292232, 59302232, 59312232, 59322232, 59332232, 59342232, 59352232, 59362232, 59372232, 59382232, 59392232, 59402232, 59412232, 59422232, 59432232, 59442232, 59452232, 59462232, 59472232, 59482232, 59492232, 59502232, 59512232, 59522232, 59532232, 59542232, 59552232, 59562232, 59572232, 59582232, 59592232, 59602232, 59612232, 59622232, 59632232, 59642232, 59652232, 59662232, 59672232, 59682232, 59692232, 59702232, 59712232, 59722232, 59732232, 59742232, 59752232, 59762232, 59772232, 59782232, 59792232, 59802232, 59812232, 59822232, 59832232, 59842232, 59852232, 59862232, 59872232, 59882232, 59892232, 59902232, 59912232, 59922232, 59932232, 59942232]</msg>
<status status="PASS" starttime="20201112 12:28:30.509" endtime="20201112 12:28:30.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.500" endtime="20201112 12:28:30.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.531" endtime="20201112 12:28:30.823"></status>
</kw>
<msg timestamp="20201112 12:28:30.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018353333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028443292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.528" endtime="20201112 12:28:30.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018353333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028443292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.827" endtime="20201112 12:28:30.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.834" endtime="20201112 12:28:30.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.522" endtime="20201112 12:28:30.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.517" endtime="20201112 12:28:30.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.861" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:30.838" endtime="20201112 12:28:30.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.865" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.864" endtime="20201112 12:28:30.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.867" level="INFO">VALUE: 0.018353333</msg>
<status status="PASS" starttime="20201112 12:28:30.866" endtime="20201112 12:28:30.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.862" endtime="20201112 12:28:30.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.873" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.872" endtime="20201112 12:28:30.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.875" level="INFO">VALUE: [0.028443292, 0.038442278, 0.048443194, 0.058444097, 0.068445042, 0.078446, 0.088446861, 0.098447806, 0.108448778, 0.118449639, 0.128450569, 0.138451486, 0.148452389, 0.158453319, 0.168454236, 0.178455181, 0.188456097, 0.198457, 0.208457931, 0.218458861, 0.228459764, 0.238460694, 0.248461611, 0.258462542, 0.268463458, 0.278464375, 0.288465306, 0.29846625, 0.308467139, 0.318468069, 0.328468986, 0.338469917, 0.348470833, 0.358471764, 0.368472681, 0.378473611, 0.388474528, 0.398475458, 0.408476375, 0.418477292, 0.428478236, 0.438479153, 0.448480111, 0.458480986, 0.468481903, 0.478482875, 0.48848375, 0.498484681, 0.508485597, 0.518486528, 0.528487444, 0.538488389, 0.548489292, 0.558490278, 0.568491153, 0.578492069, 0.588492986, 0.598493917, 0.608494833, 0.618495819, 0.628496681, 0.638497597, 0.648498528, 0.658499444, 0.668500375, 0.678501306, 0.688502208, 0.698503139, 0.708504056, 0.718505042, 0.728505903, 0.738506847, 0.748507833, 0.758508681, 0.768509653, 0.778510528, 0.788511444, 0.798512375, 0.808513306, 0.818514222, 0.828515153, 0.838516069, 0.848517, 0.858517903, 0.868518833, 0.878519819, 0.888520681, 0.898521611, 0.908522556, 0.918523444, 0.928524375, 0.938525306, 0.948526278, 0.958527153, 0.968528069, 0.978529, 0.988529903, 0.998530847, 1.00853175, 1.018532694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:30.874" endtime="20201112 12:28:30.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.869" endtime="20201112 12:28:30.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.878" endtime="20201112 12:28:30.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.882" endtime="20201112 12:28:30.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.880" endtime="20201112 12:28:30.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.876" endtime="20201112 12:28:30.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.347" endtime="20201112 12:28:30.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.236" endtime="20201112 12:28:30.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.236" endtime="20201112 12:28:30.904"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:30.906" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.915" endtime="20201112 12:28:33.008"></status>
</kw>
<msg timestamp="20201112 12:28:33.009" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61501865, 'wakeups': [61511969, 61521966, 61531966, 61541966, 61551966...</msg>
<status status="PASS" starttime="20201112 12:28:30.913" endtime="20201112 12:28:33.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61501865, 'wakeups': [61511969, 61521966, 61531966, 61541966, 61551966...</msg>
<status status="PASS" starttime="20201112 12:28:33.011" endtime="20201112 12:28:33.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.017" endtime="20201112 12:28:33.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.910" endtime="20201112 12:28:33.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.908" endtime="20201112 12:28:33.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.028" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [61511969, 61521966, 61531966, 61541966, 61551966, 61561966, 61571966, 61581966, 61591966, 61601966, 61611966, 61621966, 61631966, 61641966, 61651966, 61661966, 61671966,...</msg>
<status status="PASS" starttime="20201112 12:28:33.024" endtime="20201112 12:28:33.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.037" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:33.035" endtime="20201112 12:28:33.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.041" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:33.039" endtime="20201112 12:28:33.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.030" endtime="20201112 12:28:33.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.051" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.049" endtime="20201112 12:28:33.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.056" level="INFO">VALUE: 61501865</msg>
<status status="PASS" starttime="20201112 12:28:33.054" endtime="20201112 12:28:33.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.044" endtime="20201112 12:28:33.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.066" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.064" endtime="20201112 12:28:33.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.071" level="INFO">VALUE: [61511969, 61521966, 61531966, 61541966, 61551966, 61561966, 61571966, 61581966, 61591966, 61601966, 61611966, 61621966, 61631966, 61641966, 61651966, 61661966, 61671966, 61681966, 61691966, 61701966, 61711966, 61721966, 61731966, 61741966, 61751966, 61761966, 61771966, 61781966, 61791966, 61801966, 61811966, 61821966, 61831966, 61841966, 61851966, 61861966, 61871966, 61881966, 61891966, 61901966, 61911966, 61921966, 61931966, 61941966, 61951966, 61961966, 61971966, 61981966, 61991966, 62001966, 62011966, 62021966, 62031966, 62041966, 62051966, 62061966, 62071966, 62081966, 62091966, 62101966, 62111966, 62121966, 62131966, 62141966, 62151966, 62161966, 62171966, 62181966, 62191966, 62201966, 62211966, 62221966, 62231966, 62241966, 62251966, 62261966, 62271966, 62281966, 62291966, 62301966, 62311966, 62321966, 62331966, 62341966, 62351966, 62361966, 62371966, 62381966, 62391966, 62401966, 62411966, 62421966, 62431966, 62441966, 62451966, 62461966, 62471966, 62481966, 62491966, 62501966]</msg>
<status status="PASS" starttime="20201112 12:28:33.068" endtime="20201112 12:28:33.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.059" endtime="20201112 12:28:33.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.086" endtime="20201112 12:28:33.380"></status>
</kw>
<msg timestamp="20201112 12:28:33.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.083" endtime="20201112 12:28:33.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031644125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.384" endtime="20201112 12:28:33.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.392" endtime="20201112 12:28:33.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.078" endtime="20201112 12:28:33.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.074" endtime="20201112 12:28:33.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.418" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:33.395" endtime="20201112 12:28:33.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.423" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.422" endtime="20201112 12:28:33.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.425" level="INFO">VALUE: 0.021538819</msg>
<status status="PASS" starttime="20201112 12:28:33.424" endtime="20201112 12:28:33.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.419" endtime="20201112 12:28:33.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.430" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.429" endtime="20201112 12:28:33.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.432" level="INFO">VALUE: [0.031644125, 0.041641486, 0.051642431, 0.061643361, 0.071644264, 0.081645181, 0.091646083, 0.101647028, 0.111647972, 0.121648931, 0.131649792, 0.141650722, 0.151651625, 0.161652569, 0.171653458, 0.181654389, 0.191655319, 0.201656236, 0.211657167, 0.221658083, 0.231659042, 0.241659931, 0.251660833, 0.261661778, 0.271662694, 0.281663653, 0.291664597, 0.301665458, 0.311666375, 0.321667306, 0.331668222, 0.341669153, 0.351670069, 0.361671, 0.371671903, 0.381672847, 0.391673764, 0.401674708, 0.411675597, 0.421676556, 0.431677444, 0.441678403, 0.451679292, 0.461680236, 0.471681139, 0.481682083, 0.491683, 0.501683917, 0.511684861, 0.521685778, 0.531686694, 0.541687625, 0.551688569, 0.561689458, 0.571690375, 0.581691319, 0.591692278, 0.601693153, 0.611694069, 0.621695, 0.631695917, 0.641696847, 0.651697792, 0.661698708, 0.671699639, 0.681700542, 0.691701458, 0.701702389, 0.711703319, 0.721704236, 0.731705153, 0.741706125, 0.751707014, 0.761707931, 0.771708861, 0.781709778, 0.791710681, 0.801711639, 0.811712542, 0.821713472, 0.831714375, 0.841715333, 0.851716222, 0.861717208, 0.871718069, 0.881719014, 0.891719931, 0.901720889, 0.911721764, 0.921722708, 0.931723611, 0.941724556, 0.951725472, 0.961726417, 0.971727319, 0.98172825, 0.991729153, 1.001730111, 1.011731014, 1.021731944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:33.431" endtime="20201112 12:28:33.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.426" endtime="20201112 12:28:33.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.435" endtime="20201112 12:28:33.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.439" endtime="20201112 12:28:33.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.437" endtime="20201112 12:28:33.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.434" endtime="20201112 12:28:33.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.907" endtime="20201112 12:28:33.460"></status>
</kw>
<msg timestamp="20201112 12:28:33.460" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.469" endtime="20201112 12:28:35.562"></status>
</kw>
<msg timestamp="20201112 12:28:35.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64056090, 'wakeups': [64066194, 64076191, 64086191, 64096191, 64106191...</msg>
<status status="PASS" starttime="20201112 12:28:33.466" endtime="20201112 12:28:35.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64056090, 'wakeups': [64066194, 64076191, 64086191, 64096191, 64106191...</msg>
<status status="PASS" starttime="20201112 12:28:35.565" endtime="20201112 12:28:35.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.571" endtime="20201112 12:28:35.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.464" endtime="20201112 12:28:35.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.462" endtime="20201112 12:28:35.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.582" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [64066194, 64076191, 64086191, 64096191, 64106191, 64116191, 64126191, 64136191, 64146191, 64156191, 64166191, 64176191, 64186191, 64196191, 64206191, 64216191, 64226191,...</msg>
<status status="PASS" starttime="20201112 12:28:35.578" endtime="20201112 12:28:35.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.592" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:35.590" endtime="20201112 12:28:35.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.596" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:35.594" endtime="20201112 12:28:35.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.585" endtime="20201112 12:28:35.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.606" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.604" endtime="20201112 12:28:35.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.611" level="INFO">VALUE: 64056090</msg>
<status status="PASS" starttime="20201112 12:28:35.609" endtime="20201112 12:28:35.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.599" endtime="20201112 12:28:35.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.621" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.619" endtime="20201112 12:28:35.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.626" level="INFO">VALUE: [64066194, 64076191, 64086191, 64096191, 64106191, 64116191, 64126191, 64136191, 64146191, 64156191, 64166191, 64176191, 64186191, 64196191, 64206191, 64216191, 64226191, 64236191, 64246191, 64256191, 64266191, 64276191, 64286191, 64296191, 64306191, 64316191, 64326191, 64336191, 64346191, 64356191, 64366191, 64376191, 64386191, 64396191, 64406191, 64416191, 64426191, 64436191, 64446191, 64456191, 64466191, 64476191, 64486191, 64496191, 64506191, 64516191, 64526191, 64536191, 64546191, 64556191, 64566191, 64576191, 64586191, 64596191, 64606191, 64616191, 64626191, 64636191, 64646191, 64656191, 64666191, 64676191, 64686191, 64696191, 64706191, 64716191, 64726191, 64736191, 64746191, 64756191, 64766191, 64776191, 64786191, 64796191, 64806191, 64816191, 64826191, 64836191, 64846191, 64856191, 64866191, 64876191, 64886191, 64896191, 64906191, 64916191, 64926191, 64936191, 64946191, 64956191, 64966191, 64976191, 64986191, 64996191, 65006191, 65016191, 65026191, 65036191, 65046191, 65056191]</msg>
<status status="PASS" starttime="20201112 12:28:35.624" endtime="20201112 12:28:35.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.614" endtime="20201112 12:28:35.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.636" endtime="20201112 12:28:35.927"></status>
</kw>
<msg timestamp="20201112 12:28:35.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019197931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.635" endtime="20201112 12:28:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019197931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.930" endtime="20201112 12:28:35.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.938" endtime="20201112 12:28:35.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.632" endtime="20201112 12:28:35.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.630" endtime="20201112 12:28:35.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.965" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:35.941" endtime="20201112 12:28:35.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.970" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.969" endtime="20201112 12:28:35.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.972" level="INFO">VALUE: 0.019197931</msg>
<status status="PASS" starttime="20201112 12:28:35.971" endtime="20201112 12:28:35.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.966" endtime="20201112 12:28:35.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.977" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.976" endtime="20201112 12:28:35.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.980" level="INFO">VALUE: [0.029303583, 0.039300986, 0.049301861, 0.059302792, 0.069303708, 0.079304639, 0.089305542, 0.099306486, 0.109307375, 0.119308319, 0.129309222, 0.139310153, 0.149311069, 0.159312, 0.169312903, 0.179313847, 0.189314806, 0.199315681, 0.209316611, 0.219317528, 0.229318431, 0.239319389, 0.249320278, 0.259321222, 0.269322125, 0.279323056, 0.289323972, 0.299324903, 0.309325819, 0.319326764, 0.329327653, 0.339328583, 0.349329542, 0.359330444, 0.369331361, 0.379332278, 0.389333208, 0.399334125, 0.409335028, 0.419335986, 0.429336875, 0.439337819, 0.449338722, 0.459339653, 0.469340569, 0.4793415, 0.489342417, 0.499343361, 0.509344264, 0.519345194, 0.529346111, 0.539347056, 0.549347958, 0.559348889, 0.569349792, 0.57935075, 0.589351639, 0.599352583, 0.609353528, 0.619354417, 0.629355375, 0.639356264, 0.649357181, 0.659358125, 0.669359097, 0.679359958, 0.689360875, 0.699361847, 0.709362736, 0.719363694, 0.729364569, 0.739365514, 0.749366403, 0.759367361, 0.769368264, 0.779369208, 0.789370097, 0.799371042, 0.809371944, 0.819372903, 0.829373792, 0.839374736, 0.849375639, 0.859376569, 0.869377486, 0.879378431, 0.889379333, 0.899380264, 0.909381181, 0.919382125, 0.929383042, 0.939383972, 0.949384903, 0.959385819, 0.969386722, 0.979387653, 0.989388556, 0.999389514, 1.009390403, 1.019391347] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:35.979" endtime="20201112 12:28:35.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.973" endtime="20201112 12:28:35.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.983" endtime="20201112 12:28:35.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.987" endtime="20201112 12:28:36.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.985" endtime="20201112 12:28:36.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.982" endtime="20201112 12:28:36.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.461" endtime="20201112 12:28:36.007"></status>
</kw>
<msg timestamp="20201112 12:28:36.008" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.016" endtime="20201112 12:28:38.109"></status>
</kw>
<msg timestamp="20201112 12:28:38.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66602914, 'wakeups': [66613018, 66623015, 66633015, 66643015, 66653015...</msg>
<status status="PASS" starttime="20201112 12:28:36.014" endtime="20201112 12:28:38.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.116" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66602914, 'wakeups': [66613018, 66623015, 66633015, 66643015, 66653015...</msg>
<status status="PASS" starttime="20201112 12:28:38.112" endtime="20201112 12:28:38.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.118" endtime="20201112 12:28:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.012" endtime="20201112 12:28:38.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.010" endtime="20201112 12:28:38.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.129" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [66613018, 66623015, 66633015, 66643015, 66653015, 66663015, 66673015, 66683015, 66693015, 66703015, 66713015, 66723015, 66733015, 66743015, 66753015, 66763015, 66773015,...</msg>
<status status="PASS" starttime="20201112 12:28:38.125" endtime="20201112 12:28:38.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.138" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:38.136" endtime="20201112 12:28:38.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.142" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:38.140" endtime="20201112 12:28:38.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.131" endtime="20201112 12:28:38.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.153" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.151" endtime="20201112 12:28:38.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.159" level="INFO">VALUE: 66602914</msg>
<status status="PASS" starttime="20201112 12:28:38.155" endtime="20201112 12:28:38.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.145" endtime="20201112 12:28:38.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.170" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.167" endtime="20201112 12:28:38.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.175" level="INFO">VALUE: [66613018, 66623015, 66633015, 66643015, 66653015, 66663015, 66673015, 66683015, 66693015, 66703015, 66713015, 66723015, 66733015, 66743015, 66753015, 66763015, 66773015, 66783015, 66793015, 66803015, 66813015, 66823015, 66833015, 66843015, 66853015, 66863015, 66873015, 66883015, 66893015, 66903015, 66913015, 66923015, 66933015, 66943015, 66953015, 66963015, 66973015, 66983015, 66993015, 67003015, 67013015, 67023015, 67033015, 67043015, 67053015, 67063015, 67073015, 67083015, 67093015, 67103015, 67113015, 67123015, 67133015, 67143015, 67153015, 67163015, 67173015, 67183015, 67193015, 67203015, 67213015, 67223015, 67233015, 67243015, 67253015, 67263015, 67273015, 67283015, 67293015, 67303015, 67313015, 67323015, 67333015, 67343015, 67353015, 67363015, 67373015, 67383015, 67393015, 67403015, 67413015, 67423015, 67433015, 67443015, 67453015, 67463015, 67473015, 67483015, 67493015, 67503015, 67513015, 67523015, 67533015, 67543015, 67553015, 67563015, 67573015, 67583015, 67593015, 67603015]</msg>
<status status="PASS" starttime="20201112 12:28:38.173" endtime="20201112 12:28:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.162" endtime="20201112 12:28:38.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.190" endtime="20201112 12:28:38.479"></status>
</kw>
<msg timestamp="20201112 12:28:38.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01839825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028503819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:38.187" endtime="20201112 12:28:38.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01839825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028503819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:38.483" endtime="20201112 12:28:38.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.490" endtime="20201112 12:28:38.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.182" endtime="20201112 12:28:38.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.178" endtime="20201112 12:28:38.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.517" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:38.494" endtime="20201112 12:28:38.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.521" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.520" endtime="20201112 12:28:38.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.523" level="INFO">VALUE: 0.01839825</msg>
<status status="PASS" starttime="20201112 12:28:38.522" endtime="20201112 12:28:38.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.518" endtime="20201112 12:28:38.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.529" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.528" endtime="20201112 12:28:38.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.532" level="INFO">VALUE: [0.028503819, 0.038501194, 0.048502097, 0.058503028, 0.068503931, 0.078504875, 0.088505778, 0.098506708, 0.108507625, 0.118508569, 0.128509486, 0.138510431, 0.148511319, 0.15851225, 0.168513153, 0.178514083, 0.188515, 0.198515944, 0.208516889, 0.218517778, 0.228518708, 0.238519611, 0.248520528, 0.258521458, 0.268522375, 0.278523319, 0.288524222, 0.298525181, 0.308526056, 0.318527014, 0.328527903, 0.338528847, 0.34852975, 0.35853075, 0.368531597, 0.378532528, 0.388533444, 0.398534375, 0.408535278, 0.418536264, 0.428537125, 0.438538097, 0.448538972, 0.458539958, 0.468540833, 0.478541778, 0.488542667, 0.498543639, 0.508544514, 0.518545458, 0.528546375, 0.538547292, 0.548548222, 0.558549153, 0.568550056, 0.578551, 0.588551917, 0.598552833, 0.608553764, 0.618554681, 0.628555611, 0.638556528, 0.648557431, 0.658558389, 0.668559278, 0.678560236, 0.688561125, 0.698562069, 0.708562986, 0.718563917, 0.728564833, 0.738565792, 0.748566667, 0.758567597, 0.768568528, 0.778569458, 0.788570375, 0.798571292, 0.808572208, 0.818573153, 0.828574056, 0.838575, 0.848575917, 0.858576833, 0.868577764, 0.878578681, 0.888579597, 0.898580528, 0.908581458, 0.918582375, 0.928583306, 0.938584222, 0.948585139, 0.958586069, 0.968587, 0.978587931, 0.988588833, 0.998589806, 1.008590667, 1.018591611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:38.531" endtime="20201112 12:28:38.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.525" endtime="20201112 12:28:38.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.535" endtime="20201112 12:28:38.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.538" endtime="20201112 12:28:38.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.537" endtime="20201112 12:28:38.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.533" endtime="20201112 12:28:38.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.008" endtime="20201112 12:28:38.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.905" endtime="20201112 12:28:38.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.904" endtime="20201112 12:28:38.564"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:38.567" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.575" endtime="20201112 12:28:40.668"></status>
</kw>
<msg timestamp="20201112 12:28:40.669" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69162256, 'wakeups': [69172372, 69182371, 69192371, 69202371, 692123...</msg>
<status status="PASS" starttime="20201112 12:28:38.573" endtime="20201112 12:28:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69162256, 'wakeups': [69172372, 69182371, 69192371, 69202371, 692123...</msg>
<status status="PASS" starttime="20201112 12:28:40.672" endtime="20201112 12:28:40.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.677" endtime="20201112 12:28:40.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.571" endtime="20201112 12:28:40.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.569" endtime="20201112 12:28:40.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.688" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [69172372, 69182371, 69192371, 69202371, 69212371, 69222371, 69232371, 69242371, 69252371, 69262371, 69272371, 69282371, 69292371, 69302371, 69312371, 69322371, 69332371...</msg>
<status status="PASS" starttime="20201112 12:28:40.684" endtime="20201112 12:28:40.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.697" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:40.695" endtime="20201112 12:28:40.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.701" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:40.699" endtime="20201112 12:28:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.690" endtime="20201112 12:28:40.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.712" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:40.710" endtime="20201112 12:28:40.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.716" level="INFO">VALUE: 69162256</msg>
<status status="PASS" starttime="20201112 12:28:40.714" endtime="20201112 12:28:40.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.704" endtime="20201112 12:28:40.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.726" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:40.724" endtime="20201112 12:28:40.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.731" level="INFO">VALUE: [69172372, 69182371, 69192371, 69202371, 69212371, 69222371, 69232371, 69242371, 69252371, 69262371, 69272371, 69282371, 69292371, 69302371, 69312371, 69322371, 69332371, 69342371, 69352371, 69362371, 69372371, 69382371, 69392371, 69402371, 69412371, 69422371, 69432371, 69442371, 69452371, 69462371, 69472371, 69482371, 69492371, 69502371, 69512371, 69522371, 69532371, 69542371, 69552371, 69562371, 69572371, 69582371, 69592371, 69602371, 69612371, 69622371, 69632371, 69642371, 69652371, 69662371, 69672371, 69682371, 69692371, 69702371, 69712371, 69722371, 69732371, 69742371, 69752371, 69762371, 69772371, 69782371, 69792371, 69802371, 69812371, 69822371, 69832371, 69842371, 69852371, 69862371, 69872371, 69882371, 69892371, 69902371, 69912371, 69922371, 69932371, 69942371, 69952371, 69962371, 69972371, 69982371, 69992371, 70002371, 70012371, 70022371, 70032371, 70042371, 70052371, 70062371, 70072371, 70082371, 70092371, 70102371, 70112371, 70122371, 70132371, 70142371, 70152371, 70162371]</msg>
<status status="PASS" starttime="20201112 12:28:40.729" endtime="20201112 12:28:40.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.719" endtime="20201112 12:28:40.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.740" endtime="20201112 12:28:41.032"></status>
</kw>
<msg timestamp="20201112 12:28:41.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036328111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.737" endtime="20201112 12:28:41.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026210694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036328111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.036" endtime="20201112 12:28:41.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.044" endtime="20201112 12:28:41.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.734" endtime="20201112 12:28:41.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.733" endtime="20201112 12:28:41.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.071" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:41.047" endtime="20201112 12:28:41.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.075" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.074" endtime="20201112 12:28:41.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.077" level="INFO">VALUE: 0.026210694</msg>
<status status="PASS" starttime="20201112 12:28:41.076" endtime="20201112 12:28:41.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.071" endtime="20201112 12:28:41.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.083" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.082" endtime="20201112 12:28:41.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.085" level="INFO">VALUE: [0.036328111, 0.04632775, 0.056328667, 0.066329569, 0.076330514, 0.086331417, 0.096332375, 0.106333278, 0.116334194, 0.126335111, 0.136336097, 0.146336944, 0.156337944, 0.166338792, 0.176339722, 0.186340639, 0.196341569, 0.2063425, 0.216343417, 0.226344333, 0.236345264, 0.246346167, 0.256347111, 0.266348014, 0.276348972, 0.286349875, 0.296350806, 0.306351708, 0.316352681, 0.326353556, 0.336354528, 0.346355444, 0.356356333, 0.366357264, 0.376358194, 0.386359097, 0.396360028, 0.406360944, 0.416361875, 0.426362778, 0.436363736, 0.446364625, 0.456365569, 0.466366472, 0.476367417, 0.486368375, 0.496369264, 0.506370181, 0.516371153, 0.526372056, 0.536372972, 0.546373861, 0.556374806, 0.56637575, 0.576376653, 0.586377556, 0.5963785, 0.606379417, 0.616380347, 0.626381264, 0.636382264, 0.646383097, 0.656384056, 0.666384986, 0.676385889, 0.686386806, 0.696387736, 0.706388653, 0.716389597, 0.726390486, 0.736391431, 0.746392333, 0.756393278, 0.766394194, 0.776395139, 0.786396028, 0.796396972, 0.806397889, 0.816398889, 0.826399764, 0.836400667, 0.846401597, 0.8564025, 0.866403417, 0.876404403, 0.886405264, 0.896406208, 0.906407125, 0.916408042, 0.926408972, 0.936409903, 0.946410806, 0.956411736, 0.966412653, 0.976413597, 0.9864145, 0.996415486, 1.006416347, 1.016417292, 1.026418208] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:41.084" endtime="20201112 12:28:41.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.079" endtime="20201112 12:28:41.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.088" endtime="20201112 12:28:41.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.091" endtime="20201112 12:28:41.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.090" endtime="20201112 12:28:41.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.086" endtime="20201112 12:28:41.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.568" endtime="20201112 12:28:41.112"></status>
</kw>
<msg timestamp="20201112 12:28:41.112" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.121" endtime="20201112 12:28:43.215"></status>
</kw>
<msg timestamp="20201112 12:28:43.216" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71708522, 'wakeups': [71718640, 71728637, 71738637, 71748637, 717586...</msg>
<status status="PASS" starttime="20201112 12:28:41.119" endtime="20201112 12:28:43.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.223" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71708522, 'wakeups': [71718640, 71728637, 71738637, 71748637, 717586...</msg>
<status status="PASS" starttime="20201112 12:28:43.218" endtime="20201112 12:28:43.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.225" endtime="20201112 12:28:43.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.116" endtime="20201112 12:28:43.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.114" endtime="20201112 12:28:43.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.236" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [71718640, 71728637, 71738637, 71748637, 71758637, 71768637, 71778637, 71788637, 71798637, 71808637, 71818637, 71828637, 71838637, 71848637, 71858637, 71868637, 71878637...</msg>
<status status="PASS" starttime="20201112 12:28:43.232" endtime="20201112 12:28:43.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.245" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:43.243" endtime="20201112 12:28:43.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.249" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:43.247" endtime="20201112 12:28:43.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.238" endtime="20201112 12:28:43.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.260" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.257" endtime="20201112 12:28:43.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.264" level="INFO">VALUE: 71708522</msg>
<status status="PASS" starttime="20201112 12:28:43.262" endtime="20201112 12:28:43.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.252" endtime="20201112 12:28:43.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.274" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.272" endtime="20201112 12:28:43.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.279" level="INFO">VALUE: [71718640, 71728637, 71738637, 71748637, 71758637, 71768637, 71778637, 71788637, 71798637, 71808637, 71818637, 71828637, 71838637, 71848637, 71858637, 71868637, 71878637, 71888637, 71898637, 71908637, 71918637, 71928637, 71938637, 71948637, 71958637, 71968637, 71978637, 71988637, 71998637, 72008637, 72018637, 72028637, 72038637, 72048637, 72058637, 72068637, 72078637, 72088637, 72098637, 72108637, 72118637, 72128637, 72138637, 72148637, 72158637, 72168637, 72178637, 72188637, 72198637, 72208637, 72218637, 72228637, 72238637, 72248637, 72258637, 72268637, 72278637, 72288637, 72298637, 72308637, 72318637, 72328637, 72338637, 72348637, 72358637, 72368637, 72378637, 72388637, 72398637, 72408637, 72418637, 72428637, 72438637, 72448637, 72458637, 72468637, 72478637, 72488637, 72498637, 72508637, 72518637, 72528637, 72538637, 72548637, 72558637, 72568637, 72578637, 72588637, 72598637, 72608637, 72618637, 72628637, 72638637, 72648637, 72658637, 72668637, 72678637, 72688637, 72698637, 72708637]</msg>
<status status="PASS" starttime="20201112 12:28:43.276" endtime="20201112 12:28:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.267" endtime="20201112 12:28:43.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.294" endtime="20201112 12:28:43.585"></status>
</kw>
<msg timestamp="20201112 12:28:43.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029508694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.291" endtime="20201112 12:28:43.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029508694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.589" endtime="20201112 12:28:43.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.596" endtime="20201112 12:28:43.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.286" endtime="20201112 12:28:43.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.282" endtime="20201112 12:28:43.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.623" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:43.600" endtime="20201112 12:28:43.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.632" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.631" endtime="20201112 12:28:43.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.634" level="INFO">VALUE: 0.019390056</msg>
<status status="PASS" starttime="20201112 12:28:43.633" endtime="20201112 12:28:43.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.629" endtime="20201112 12:28:43.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.640" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.639" endtime="20201112 12:28:43.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.642" level="INFO">VALUE: [0.029508694, 0.039506444, 0.049507333, 0.059508222, 0.069509181, 0.079510083, 0.089511, 0.099511931, 0.109512847, 0.119513764, 0.129514708, 0.139515597, 0.149516542, 0.159517444, 0.169518375, 0.179519306, 0.189520222, 0.199521139, 0.209522069, 0.219522986, 0.229523931, 0.239524833, 0.249525764, 0.259526681, 0.269527625, 0.279528528, 0.289529458, 0.299530389, 0.309531306, 0.319532222, 0.329533153, 0.339534069, 0.349535014, 0.359535917, 0.369536847, 0.379537806, 0.389538722, 0.399539625, 0.409540556, 0.419541458, 0.429542431, 0.439543319, 0.449544292, 0.459545139, 0.469546083, 0.479546986, 0.489547917, 0.499548833, 0.509549778, 0.519550694, 0.529551611, 0.539552528, 0.549553472, 0.559554375, 0.569555306, 0.579556222, 0.589557153, 0.599558056, 0.609559, 0.619559903, 0.629560833, 0.639561736, 0.649562667, 0.659563611, 0.669564514, 0.679565431, 0.689566361, 0.699567292, 0.709568208, 0.719569111, 0.729570056, 0.739570958, 0.749571917, 0.759572806, 0.769573736, 0.779574653, 0.789575583, 0.7995765, 0.809577431, 0.819578347, 0.829579278, 0.83958025, 0.849581139, 0.859582056, 0.869583, 0.879583889, 0.889584833, 0.89958575, 0.909586694, 0.919587583, 0.929588528, 0.939589417, 0.949590361, 0.959591278, 0.969592222, 0.979593194, 0.989594056, 0.999594958, 1.009595903, 1.019596806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:43.641" endtime="20201112 12:28:43.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.636" endtime="20201112 12:28:43.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.645" endtime="20201112 12:28:43.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.649" endtime="20201112 12:28:43.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.647" endtime="20201112 12:28:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.643" endtime="20201112 12:28:43.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.113" endtime="20201112 12:28:43.669"></status>
</kw>
<msg timestamp="20201112 12:28:43.670" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.678" endtime="20201112 12:28:45.771"></status>
</kw>
<msg timestamp="20201112 12:28:45.772" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74264899, 'wakeups': [74275016, 74285014, 74295014, 74305014, 743150...</msg>
<status status="PASS" starttime="20201112 12:28:43.676" endtime="20201112 12:28:45.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.778" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74264899, 'wakeups': [74275016, 74285014, 74295014, 74305014, 743150...</msg>
<status status="PASS" starttime="20201112 12:28:45.774" endtime="20201112 12:28:45.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.780" endtime="20201112 12:28:45.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.673" endtime="20201112 12:28:45.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.672" endtime="20201112 12:28:45.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.791" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [74275016, 74285014, 74295014, 74305014, 74315014, 74325014, 74335014, 74345014, 74355014, 74365014, 74375014, 74385014, 74395014, 74405014, 74415014, 74425014, 74435014...</msg>
<status status="PASS" starttime="20201112 12:28:45.787" endtime="20201112 12:28:45.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.800" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:45.797" endtime="20201112 12:28:45.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.804" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:45.802" endtime="20201112 12:28:45.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.793" endtime="20201112 12:28:45.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.815" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:45.813" endtime="20201112 12:28:45.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.821" level="INFO">VALUE: 74264899</msg>
<status status="PASS" starttime="20201112 12:28:45.817" endtime="20201112 12:28:45.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.808" endtime="20201112 12:28:45.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.832" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:45.830" endtime="20201112 12:28:45.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.837" level="INFO">VALUE: [74275016, 74285014, 74295014, 74305014, 74315014, 74325014, 74335014, 74345014, 74355014, 74365014, 74375014, 74385014, 74395014, 74405014, 74415014, 74425014, 74435014, 74445014, 74455014, 74465014, 74475014, 74485014, 74495014, 74505014, 74515014, 74525014, 74535014, 74545014, 74555014, 74565014, 74575014, 74585014, 74595014, 74605014, 74615014, 74625014, 74635014, 74645014, 74655014, 74665014, 74675014, 74685014, 74695014, 74705014, 74715014, 74725014, 74735014, 74745014, 74755014, 74765014, 74775014, 74785014, 74795014, 74805014, 74815014, 74825014, 74835014, 74845014, 74855014, 74865014, 74875014, 74885014, 74895014, 74905014, 74915014, 74925014, 74935014, 74945014, 74955014, 74965014, 74975014, 74985014, 74995014, 75005014, 75015014, 75025014, 75035014, 75045014, 75055014, 75065014, 75075014, 75085014, 75095014, 75105014, 75115014, 75125014, 75135014, 75145014, 75155014, 75165014, 75175014, 75185014, 75195014, 75205014, 75215014, 75225014, 75235014, 75245014, 75255014, 75265014]</msg>
<status status="PASS" starttime="20201112 12:28:45.835" endtime="20201112 12:28:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.825" endtime="20201112 12:28:45.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.854" endtime="20201112 12:28:46.146"></status>
</kw>
<msg timestamp="20201112 12:28:46.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028616875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:45.850" endtime="20201112 12:28:46.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028616875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:46.150" endtime="20201112 12:28:46.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.157" endtime="20201112 12:28:46.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.845" endtime="20201112 12:28:46.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.841" endtime="20201112 12:28:46.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.184" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 12:28:46.161" endtime="20201112 12:28:46.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.188" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.187" endtime="20201112 12:28:46.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.191" level="INFO">VALUE: 0.0184985</msg>
<status status="PASS" starttime="20201112 12:28:46.190" endtime="20201112 12:28:46.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.185" endtime="20201112 12:28:46.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.196" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.195" endtime="20201112 12:28:46.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.199" level="INFO">VALUE: [0.028616875, 0.038615597, 0.048616514, 0.058617431, 0.068618375, 0.078619278, 0.088620208, 0.098621111, 0.108622042, 0.118622958, 0.128623903, 0.138624806, 0.148625736, 0.158626653, 0.168627569, 0.1786285, 0.188629431, 0.198630319, 0.208631278, 0.218632167, 0.228633097, 0.238634014, 0.248634944, 0.258635861, 0.268636806, 0.278637694, 0.288638639, 0.298639556, 0.308640556, 0.318641403, 0.328642333, 0.338643236, 0.348644167, 0.358645083, 0.368646028, 0.378646931, 0.388647861, 0.398648792, 0.408649708, 0.418650611, 0.428651597, 0.438652458, 0.448653431, 0.458654319, 0.468655236, 0.478656167, 0.488657111, 0.498658, 0.508658931, 0.518659833, 0.528660819, 0.538661681, 0.548662625, 0.558663556, 0.568664472, 0.578665403, 0.588666306, 0.598667222, 0.608668167, 0.618669069, 0.62867, 0.638670931, 0.648671847, 0.658672764, 0.668673708, 0.678674611, 0.688675556, 0.698676458, 0.708677403, 0.718678306, 0.72867925, 0.738680139, 0.748681083, 0.758681986, 0.768682917, 0.778683847, 0.788684778, 0.798685694, 0.808686625, 0.818687542, 0.828688458, 0.838689375, 0.848690306, 0.858691236, 0.868692153, 0.878693083, 0.888694069, 0.898694917, 0.908695847, 0.918696778, 0.928697708, 0.938698597, 0.948699542, 0.958700444, 0.968701389, 0.978702347, 0.98870325, 0.998704139, 1.008705097, 1.018706] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:46.198" endtime="20201112 12:28:46.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.192" endtime="20201112 12:28:46.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.202" endtime="20201112 12:28:46.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.206" endtime="20201112 12:28:46.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.204" endtime="20201112 12:28:46.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.201" endtime="20201112 12:28:46.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.670" endtime="20201112 12:28:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.565" endtime="20201112 12:28:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.565" endtime="20201112 12:28:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.653" endtime="20201112 12:28:46.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:29.581" endtime="20201112 12:28:46.228" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:28.316" endtime="20201112 12:28:46.231"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:44.049" endtime="20201112 12:28:46.248"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
