<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:59.080" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:59.638" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:59.647" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:00.753" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:59.637" endtime="20201112 12:26:00.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.756" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:00.754" endtime="20201112 12:26:00.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.635" endtime="20201112 12:26:00.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.759" endtime="20201112 12:26:00.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.758" endtime="20201112 12:26:00.943"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.956" endtime="20201112 12:26:00.970"></status>
</kw>
<msg timestamp="20201112 12:26:00.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.954" endtime="20201112 12:26:00.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.973" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:00.972" endtime="20201112 12:26:00.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:00.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:00.975" endtime="20201112 12:26:00.977"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.952" endtime="20201112 12:26:00.978"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:00.949" endtime="20201112 12:26:00.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.948" endtime="20201112 12:26:00.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:00.982" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:00.982" endtime="20201112 12:26:00.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.979" endtime="20201112 12:26:00.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.947" endtime="20201112 12:26:00.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.946" endtime="20201112 12:26:00.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.984" endtime="20201112 12:26:00.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.945" endtime="20201112 12:26:00.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:00.987" endtime="20201112 12:26:00.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.943" endtime="20201112 12:26:00.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:59.633" endtime="20201112 12:26:00.989"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:00.995" endtime="20201112 12:26:01.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.994" endtime="20201112 12:26:01.016"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.030" endtime="20201112 12:26:01.043"></status>
</kw>
<msg timestamp="20201112 12:26:01.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.028" endtime="20201112 12:26:01.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.045" endtime="20201112 12:26:01.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:01.047" endtime="20201112 12:26:01.049"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:01.026" endtime="20201112 12:26:01.050"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:01.023" endtime="20201112 12:26:01.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.022" endtime="20201112 12:26:01.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:01.054" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:01.054" endtime="20201112 12:26:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.052" endtime="20201112 12:26:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.021" endtime="20201112 12:26:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.020" endtime="20201112 12:26:01.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.056" endtime="20201112 12:26:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.018" endtime="20201112 12:26:01.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.016" endtime="20201112 12:26:01.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:00.992" endtime="20201112 12:26:01.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.066" endtime="20201112 12:26:01.077"></status>
</kw>
<msg timestamp="20201112 12:26:01.077" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.064" endtime="20201112 12:26:01.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.080" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.078" endtime="20201112 12:26:01.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.081" endtime="20201112 12:26:01.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.062" endtime="20201112 12:26:01.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.060" endtime="20201112 12:26:01.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.087" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:26:01.086" endtime="20201112 12:26:01.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.089" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:26:01.088" endtime="20201112 12:26:01.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.084" endtime="20201112 12:26:01.090"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:00.990" endtime="20201112 12:26:01.091" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:59.189" endtime="20201112 12:26:01.094"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.149" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:01.157" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:02.390" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:01.148" endtime="20201112 12:26:02.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.394" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:02.392" endtime="20201112 12:26:02.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.147" endtime="20201112 12:26:02.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.397" endtime="20201112 12:26:02.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.396" endtime="20201112 12:26:02.618"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.631" endtime="20201112 12:26:02.645"></status>
</kw>
<msg timestamp="20201112 12:26:02.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.629" endtime="20201112 12:26:02.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.646" endtime="20201112 12:26:02.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:02.649" endtime="20201112 12:26:02.651"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.627" endtime="20201112 12:26:02.652"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.624" endtime="20201112 12:26:02.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.623" endtime="20201112 12:26:02.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:02.656" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:02.656" endtime="20201112 12:26:02.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.653" endtime="20201112 12:26:02.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.622" endtime="20201112 12:26:02.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.622" endtime="20201112 12:26:02.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.658" endtime="20201112 12:26:02.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.621" endtime="20201112 12:26:02.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.661" endtime="20201112 12:26:02.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.619" endtime="20201112 12:26:02.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.145" endtime="20201112 12:26:02.663"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:02.669" endtime="20201112 12:26:02.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.667" endtime="20201112 12:26:02.689"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.702" endtime="20201112 12:26:02.716"></status>
</kw>
<msg timestamp="20201112 12:26:02.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.700" endtime="20201112 12:26:02.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.719" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.717" endtime="20201112 12:26:02.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.722" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:02.720" endtime="20201112 12:26:02.722"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.698" endtime="20201112 12:26:02.723"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:02.695" endtime="20201112 12:26:02.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.694" endtime="20201112 12:26:02.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:02.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:02.727" endtime="20201112 12:26:02.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.724" endtime="20201112 12:26:02.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.693" endtime="20201112 12:26:02.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.692" endtime="20201112 12:26:02.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.729" endtime="20201112 12:26:02.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.691" endtime="20201112 12:26:02.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.689" endtime="20201112 12:26:02.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.666" endtime="20201112 12:26:02.733"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:02.735" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.743" endtime="20201112 12:26:02.752"></status>
</kw>
<msg timestamp="20201112 12:26:02.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.741" endtime="20201112 12:26:02.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:02.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:02.754" endtime="20201112 12:26:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.756" endtime="20201112 12:26:02.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.738" endtime="20201112 12:26:02.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.737" endtime="20201112 12:26:02.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:02.765" endtime="20201112 12:26:03.051"></status>
</kw>
<msg timestamp="20201112 12:26:03.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063674375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063676264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:02.764" endtime="20201112 12:26:03.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063674375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063676264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.054" endtime="20201112 12:26:03.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.059" endtime="20201112 12:26:03.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.761" endtime="20201112 12:26:03.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.760" endtime="20201112 12:26:03.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.066" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.064" endtime="20201112 12:26:03.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.070" level="INFO">VALUE: [{'time': 0.063674375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063676264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.063677875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.063679583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.063681097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.514000000008009e-06, 'source_diff': 1.514000000008009e-06}, {'time': 0.063682653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.063684556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.063686375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.063687778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.06368975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.0636915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.063693306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000069687e-06, 'source_diff': 1.8060000000069687e-06}, {'time': 0.063695222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999990703e-06, 'source_diff': 1.915999999990703e-06}, {'time': 0.06369675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.063698361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.063700319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9580000000102293e-06, 'source_diff': 1.9580000000102293e-06}, {'time': 0.063702208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.063703639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4310000000100631e-06, 'source_diff': 1.4310000000100631e-06}, {'time': 0.063705181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.541999999993271e-06, 'source_diff': 1.541999999993271e-06}, {'time': 0.063707167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9859999999954914e-06, 'source_diff': 1.9859999999954914e-06}, {'time': 0.063708792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.063710556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.063711958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4019999999975719e-06, 'source_diff': 1.4019999999975719e-06}, {'time': 0.063713736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7780000000078289e-06, 'source_diff': 1.7780000000078289e-06}, {'time': 0.063715486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.063716958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.063718375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4169999999896765e-06, 'source_diff': 1.4169999999896765e-06}, {'time': 0.063720014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000116034e-06, 'source_diff': 1.6390000000116034e-06}, {'time': 0.063721681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.063723667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9859999999954914e-06, 'source_diff': 1.9859999999954914e-06}, {'time': 0.063725486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.063726958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.063728875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9170000000040543e-06, 'source_diff': 1.9170000000040543e-06}, {'time': 0.063730292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4169999999896765e-06, 'source_diff': 1.4169999999896765e-06}, {'time': 0.063732208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000045807e-06, 'source_diff': 1.9160000000045807e-06}, {'time': 0.063734056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9440000000037205e-06, 'source_diff': 1.9440000000037205e-06}, {'time': 0.063737569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5689999999929372e-06, 'source_diff': 1.5689999999929372e-06}, {'time': 0.063739486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9170000000040543e-06, 'source_diff': 1.9170000000040543e-06}, {'time': 0.063741, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.514000000008009e-06, 'source_diff': 1.514000000008009e-06}, {'time': 0.063742819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.063744458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.063746056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999915506e-06, 'source_diff': 1.5979999999915506e-06}, {'time': 0.063747792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.063749764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.063751667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.063753444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000083552e-06, 'source_diff': 1.7770000000083552e-06}, {'time': 0.063755056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}, {'time': 0.063756667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.063758375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.067" endtime="20201112 12:26:03.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.062" endtime="20201112 12:26:03.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.085" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.071" endtime="20201112 12:26:03.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.089" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.088" endtime="20201112 12:26:03.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.092" level="INFO">VALUE: {'sourcediff': [0, 1.8889999999910367e-06, 1.6109999999985858e-06, 1.7080000000030404e-06, 1.514000000008009e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.4029999999970455e-06, 1.9720000000028604e-06, 1.7499999999948113e-06, 1.8060000000069687e-06, 1.915999999990703e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.9580000000102293e-06, 1.8889999999910367e-06, 1.4310000000100631e-06, 1.541999999993271e-06, 1.9859999999954914e-06, 1.6250000000050946e-06, 1.76400000000132e-06, 1.4019999999975719e-06, 1.7780000000078289e-06, 1.7499999999948113e-06, 1.4720000000023603e-06, 1.4169999999896765e-06, 1.6390000000116034e-06, 1.6669999999968654e-06, 1.9859999999954914e-06, 1.819000000000126e-06, 1.4720000000023603e-06, 1.9170000000040543e-06, 1.4169999999896765e-06, 1.9160000000045807e-06, 1.8479999999987395e-06, 1.9440000000037205e-06, 1.5689999999929372e-06, 1.9170000000040543e-06, 1.514000000008009e-06, 1.819000000000126e-06, 1.6389999999977256e-06, 1.5979999999915506e-06, 1.7360000000021802e-06, 1.9720000000028604e-06, 1.9029999999975455e-06, 1.7770000000083552e-06, 1.6119999999980594e-06, 1.6109999999985858e-06, 1.7080000000030404e-06], 'eventtime': [0.063674375, 0.063676264, 0.063677875, 0.063679583, 0.063681097, 0.063682653, 0.063684556, 0.063686375, 0.063687778, 0.06368975, 0.0636915, 0.063693306, 0.063695222, 0.06369675, 0.063698361, 0.063700319, 0.063702208, 0.063703639, 0.063705181, 0.063707167, 0.063708792, 0.063710556, 0.063711958, 0.063713736, 0.063715486, 0.063716958, 0.063718375, 0.063720014, 0.063721681, 0.063723667, 0.063725486, 0.063726958, 0.063728875, 0.063730292, 0.063732208, 0.063734056, 0.063736, 0.063737569, 0.063739486, 0.063741, 0.063742819, 0.063744458, 0.063746056, 0.063747792, 0.063749764, 0.063751667, 0.063753444, 0.063755056, 0.063756667, 0.063758375], 'source_diff': [0, 1.8889999999910367e-06, 1.6109999999985858e-06, 1.7080000000030404e-06, 1.514000000008009e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.4029999999970455e-06, 1.9720000000028604e-06, 1.7499999999948113e-06, 1.8060000000069687e-06, 1.915999999990703e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.9580000000102293e-06, 1.8889999999910367e-06, 1.4310000000100631e-06, 1.541999999993271e-06, 1.9859999999954914e-06, 1.6250000000050946e-06, 1.76400000000132e-06, 1.4019999999975719e-06, 1.7780000000078289e-06, 1.7499999999948113e-06, 1.4720000000023603e-06, 1.4169999999896765e-06, 1.6390000000116034e-06, 1.6669999999968654e-06, 1.9859999999954914e-06, 1.819000000000126e-06, 1.4720000000023603e-06, 1.9170000000040543e-06, 1.4169999999896765e-06, 1.9160000000045807e-06, 1.8479999999987395e-06, 1.9440000000037205e-06, 1.5689999999929372e-06, 1.9170000000040543e-06, 1.514000000008009e-06, 1.819000000000126e-06, 1.6389999999977256e-06, 1.5979999999915506e-06, 1.7360000000021802e-06, 1.9720000000028604e-06, 1.9029999999975455e-06, 1.7770000000083552e-06, 1.6119999999980594e-06, 1.6109999999985858e-06, 1.7080000000030404e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:03.090" endtime="20201112 12:26:03.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.086" endtime="20201112 12:26:03.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.096" level="INFO">${RESULT} = [{'time': 0.063676264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.063679583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.094" endtime="20201112 12:26:03.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.104" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.097" endtime="20201112 12:26:03.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.109" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.108" endtime="20201112 12:26:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.111" level="INFO">VALUE: [1.8889999999910367e-06, 1.7080000000030404e-06, 1.5559999999997798e-06, 1.819000000000126e-06, 1.9720000000028604e-06, 1.8060000000069687e-06, 1.52800000000064e-06, 1.9580000000102293e-06, 1.4310000000100631e-06, 1.9859999999954914e-06, 1.76400000000132e-06, 1.7780000000078289e-06, 1.4720000000023603e-06, 1.6390000000116034e-06, 1.9859999999954914e-06, 1.4720000000023603e-06, 1.4169999999896765e-06, 1.8479999999987395e-06, 1.5689999999929372e-06, 1.514000000008009e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.9029999999975455e-06, 1.6119999999980594e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.110" endtime="20201112 12:26:03.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.105" endtime="20201112 12:26:03.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.114" endtime="20201112 12:26:03.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.117" endtime="20201112 12:26:03.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.116" endtime="20201112 12:26:03.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.112" endtime="20201112 12:26:03.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.735" endtime="20201112 12:26:03.138"></status>
</kw>
<msg timestamp="20201112 12:26:03.138" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.146" endtime="20201112 12:26:03.157"></status>
</kw>
<msg timestamp="20201112 12:26:03.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.145" endtime="20201112 12:26:03.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.158" endtime="20201112 12:26:03.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.161" endtime="20201112 12:26:03.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.142" endtime="20201112 12:26:03.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.140" endtime="20201112 12:26:03.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.170" endtime="20201112 12:26:03.445"></status>
</kw>
<msg timestamp="20201112 12:26:03.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018816958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.168" endtime="20201112 12:26:03.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018816958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.448" endtime="20201112 12:26:03.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.453" endtime="20201112 12:26:03.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.166" endtime="20201112 12:26:03.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.164" endtime="20201112 12:26:03.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.460" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.459" endtime="20201112 12:26:03.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.463" level="INFO">VALUE: [{'time': 0.018815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018816958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018818847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018820292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018823653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018826708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018828181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018829736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018831722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018833208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018834931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018836764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018838694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018840556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.018842056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018843875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.0188455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018847014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018848736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018850597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018852042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018853944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018855347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018857333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018860639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018862056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018864014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018865444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018867042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018868903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018870639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018872028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018874222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194000000000501e-06, 'source_diff': 2.194000000000501e-06}, {'time': 0.018875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018877458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018879431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018881375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018884833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018886222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018888028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018889806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018891625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018893097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018895028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018898417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.461" endtime="20201112 12:26:03.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.456" endtime="20201112 12:26:03.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.489" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.477" endtime="20201112 12:26:03.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.493" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.492" endtime="20201112 12:26:03.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.496" level="INFO">VALUE: {'sourcediff': [0, 1.8470000000027353e-06, 1.8889999999979756e-06, 1.4449999999992247e-06, 1.832999999999696e-06, 1.52800000000064e-06, 1.403000000000515e-06, 1.6520000000012913e-06, 1.4729999999983645e-06, 1.5550000000003061e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.7229999999986145e-06, 1.832999999999696e-06, 1.930000000000681e-06, 1.862000000001779e-06, 1.4999999999980307e-06, 1.819000000000126e-06, 1.6250000000016251e-06, 1.5139999999976006e-06, 1.7220000000026103e-06, 1.8609999999988358e-06, 1.4449999999992247e-06, 1.9020000000015413e-06, 1.403000000000515e-06, 1.985999999998961e-06, 1.8339999999991696e-06, 1.4719999999988909e-06, 1.4170000000000849e-06, 1.957999999999821e-06, 1.4300000000001811e-06, 1.598000000001959e-06, 1.8609999999988358e-06, 1.7360000000021802e-06, 1.3889999999974756e-06, 2.194000000000501e-06, 1.4309999999996548e-06, 1.8050000000005562e-06, 1.9729999999988646e-06, 1.944000000000251e-06, 1.7920000000004599e-06, 1.6660000000008612e-06, 1.389000000000945e-06, 1.8060000000000298e-06, 1.7779999999974205e-06, 1.819000000000126e-06, 1.4720000000023603e-06, 1.931000000000155e-06, 1.457999999999321e-06, 1.931000000000155e-06], 'eventtime': [0.018815111, 0.018816958, 0.018818847, 0.018820292, 0.018822125, 0.018823653, 0.018825056, 0.018826708, 0.018828181, 0.018829736, 0.018831722, 0.018833208, 0.018834931, 0.018836764, 0.018838694, 0.018840556, 0.018842056, 0.018843875, 0.0188455, 0.018847014, 0.018848736, 0.018850597, 0.018852042, 0.018853944, 0.018855347, 0.018857333, 0.018859167, 0.018860639, 0.018862056, 0.018864014, 0.018865444, 0.018867042, 0.018868903, 0.018870639, 0.018872028, 0.018874222, 0.018875653, 0.018877458, 0.018879431, 0.018881375, 0.018883167, 0.018884833, 0.018886222, 0.018888028, 0.018889806, 0.018891625, 0.018893097, 0.018895028, 0.018896486, 0.018898417], 'source_diff': [0, 1.8470000000027353e-06, 1.8889999999979756e-06, 1.4449999999992247e-06, 1.832999999999696e-06, 1.52800000000064e-06, 1.403000000000515e-06, 1.6520000000012913e-06, 1.4729999999983645e-06, 1.5550000000003061e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.7229999999986145e-06, 1.832999999999696e-06, 1.930000000000681e-06, 1.862000000001779e-06, 1.4999999999980307e-06, 1.819000000000126e-06, 1.6250000000016251e-06, 1.5139999999976006e-06, 1.7220000000026103e-06, 1.8609999999988358e-06, 1.4449999999992247e-06, 1.9020000000015413e-06, 1.403000000000515e-06, 1.985999999998961e-06, 1.8339999999991696e-06, 1.4719999999988909e-06, 1.4170000000000849e-06, 1.957999999999821e-06, 1.4300000000001811e-06, 1.598000000001959e-06, 1.8609999999988358e-06, 1.7360000000021802e-06, 1.3889999999974756e-06, 2.194000000000501e-06, 1.4309999999996548e-06, 1.8050000000005562e-06, 1.9729999999988646e-06, 1.944000000000251e-06, 1.7920000000004599e-06, 1.6660000000008612e-06, 1.389000000000945e-06, 1.8060000000000298e-06, 1.7779999999974205e-06, 1.819000000000126e-06, 1.4720000000023603e-06, 1.931000000000155e-06, 1.457999999999321e-06, 1.931000000000155e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:03.494" endtime="20201112 12:26:03.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.490" endtime="20201112 12:26:03.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.501" level="INFO">${RESULT} = [{'time': 0.018816958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018820292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:03.498" endtime="20201112 12:26:03.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.510" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.502" endtime="20201112 12:26:03.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.514" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.513" endtime="20201112 12:26:03.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.517" level="INFO">VALUE: [1.8470000000027353e-06, 1.4449999999992247e-06, 1.52800000000064e-06, 1.6520000000012913e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.832999999999696e-06, 1.862000000001779e-06, 1.819000000000126e-06, 1.5139999999976006e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.985999999998961e-06, 1.4719999999988909e-06, 1.957999999999821e-06, 1.598000000001959e-06, 1.7360000000021802e-06, 2.194000000000501e-06, 1.8050000000005562e-06, 1.944000000000251e-06, 1.6660000000008612e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.931000000000155e-06, 1.931000000000155e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.516" endtime="20201112 12:26:03.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.511" endtime="20201112 12:26:03.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.520" endtime="20201112 12:26:03.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.523" endtime="20201112 12:26:03.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.522" endtime="20201112 12:26:03.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.518" endtime="20201112 12:26:03.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.139" endtime="20201112 12:26:03.544"></status>
</kw>
<msg timestamp="20201112 12:26:03.544" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.552" endtime="20201112 12:26:03.561"></status>
</kw>
<msg timestamp="20201112 12:26:03.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.550" endtime="20201112 12:26:03.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.563" endtime="20201112 12:26:03.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.565" endtime="20201112 12:26:03.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.548" endtime="20201112 12:26:03.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.546" endtime="20201112 12:26:03.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.575" endtime="20201112 12:26:03.863"></status>
</kw>
<msg timestamp="20201112 12:26:03.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018119347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018121403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.573" endtime="20201112 12:26:03.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018119347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018121403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:03.866" endtime="20201112 12:26:03.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.872" endtime="20201112 12:26:03.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.570" endtime="20201112 12:26:03.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.568" endtime="20201112 12:26:03.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.878" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:03.877" endtime="20201112 12:26:03.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.882" level="INFO">VALUE: [{'time': 0.018119347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018121403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018123042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018124722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018126486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018128333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018129903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.01813175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018133167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018135417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25000000000225e-06, 'source_diff': 2.25000000000225e-06}, {'time': 0.018136917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018138569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018140486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018142139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018143667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018145569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018147111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018148847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018152111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.018155736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018157403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018159236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018161125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018163069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018164778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018166708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018168347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018170083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018171681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018173597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018175333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018176764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4310000000031242e-06, 'source_diff': 1.4310000000031242e-06}, {'time': 0.018178167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.018179736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018181472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018183458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018185292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018186944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018188681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.018190458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018192194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018194028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018195708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018197236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018198792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018200236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.018202208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018203847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:03.879" endtime="20201112 12:26:03.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.875" endtime="20201112 12:26:03.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:03.897" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.884" endtime="20201112 12:26:03.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.900" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:03.899" endtime="20201112 12:26:03.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.903" level="INFO">VALUE: {'sourcediff': [0, 2.05600000000028e-06, 1.6389999999977256e-06, 1.6800000000004311e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 2.25000000000225e-06, 1.4999999999980307e-06, 1.6520000000012913e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.5279999999971705e-06, 1.9020000000015413e-06, 1.5420000000002099e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.8200000000030692e-06, 1.8049999999970867e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.944000000000251e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.5979999999984895e-06, 1.9160000000011113e-06, 1.7359999999987108e-06, 1.4310000000031242e-06, 1.4029999999970455e-06, 1.568999999999876e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.8339999999991696e-06, 1.6520000000012913e-06, 1.7370000000016539e-06, 1.7769999999979469e-06, 1.7359999999987108e-06, 1.834000000002639e-06, 1.6800000000004311e-06, 1.5279999999971705e-06, 1.5559999999997798e-06, 1.4440000000032205e-06, 1.971999999999391e-06, 1.6389999999977256e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018119347, 0.018121403, 0.018123042, 0.018124722, 0.018126486, 0.018128333, 0.018129903, 0.01813175, 0.018133167, 0.018135417, 0.018136917, 0.018138569, 0.018140486, 0.018142139, 0.018143667, 0.018145569, 0.018147111, 0.018148847, 0.018150389, 0.018152111, 0.018153931, 0.018155736, 0.018157403, 0.018159236, 0.018161125, 0.018163069, 0.018164778, 0.018166708, 0.018168347, 0.018170083, 0.018171681, 0.018173597, 0.018175333, 0.018176764, 0.018178167, 0.018179736, 0.018181472, 0.018183458, 0.018185292, 0.018186944, 0.018188681, 0.018190458, 0.018192194, 0.018194028, 0.018195708, 0.018197236, 0.018198792, 0.018200236, 0.018202208, 0.018203847], 'source_diff': [0, 2.05600000000028e-06, 1.6389999999977256e-06, 1.6800000000004311e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 2.25000000000225e-06, 1.4999999999980307e-06, 1.6520000000012913e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.5279999999971705e-06, 1.9020000000015413e-06, 1.5420000000002099e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.7219999999991409e-06, 1.8200000000030692e-06, 1.8049999999970867e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.944000000000251e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.5979999999984895e-06, 1.9160000000011113e-06, 1.7359999999987108e-06, 1.4310000000031242e-06, 1.4029999999970455e-06, 1.568999999999876e-06, 1.7360000000021802e-06, 1.985999999998961e-06, 1.8339999999991696e-06, 1.6520000000012913e-06, 1.7370000000016539e-06, 1.7769999999979469e-06, 1.7359999999987108e-06, 1.834000000002639e-06, 1.6800000000004311e-06, 1.5279999999971705e-06, 1.5559999999997798e-06, 1.4440000000032205e-06, 1.971999999999391e-06, 1.6389999999977256e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:03.901" endtime="20201112 12:26:03.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.897" endtime="20201112 12:26:03.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:03.908" level="INFO">${RESULT} = [{'time': 0.018121403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018124722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:03.905" endtime="20201112 12:26:03.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:03.916" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:03.909" endtime="20201112 12:26:03.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.920" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:03.919" endtime="20201112 12:26:03.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.922" level="INFO">VALUE: [2.05600000000028e-06, 1.6800000000004311e-06, 1.846999999999266e-06, 1.846999999999266e-06, 2.25000000000225e-06, 1.6520000000012913e-06, 1.653000000000765e-06, 1.9020000000015413e-06, 1.7359999999987108e-06, 1.7219999999991409e-06, 1.8049999999970867e-06, 1.832999999999696e-06, 1.944000000000251e-06, 1.930000000000681e-06, 1.7359999999987108e-06, 1.9160000000011113e-06, 1.4310000000031242e-06, 1.568999999999876e-06, 1.985999999998961e-06, 1.6520000000012913e-06, 1.7769999999979469e-06, 1.834000000002639e-06, 1.5279999999971705e-06, 1.4440000000032205e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201112 12:26:03.921" endtime="20201112 12:26:03.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.917" endtime="20201112 12:26:03.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.926" endtime="20201112 12:26:03.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:03.929" endtime="20201112 12:26:03.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.928" endtime="20201112 12:26:03.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.924" endtime="20201112 12:26:03.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.545" endtime="20201112 12:26:03.950"></status>
</kw>
<msg timestamp="20201112 12:26:03.950" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.958" endtime="20201112 12:26:03.968"></status>
</kw>
<msg timestamp="20201112 12:26:03.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.956" endtime="20201112 12:26:03.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:03.971" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:03.970" endtime="20201112 12:26:03.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.972" endtime="20201112 12:26:03.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.953" endtime="20201112 12:26:03.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.952" endtime="20201112 12:26:03.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:03.981" endtime="20201112 12:26:04.244"></status>
</kw>
<msg timestamp="20201112 12:26:04.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01913125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019132931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:03.979" endtime="20201112 12:26:04.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01913125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019132931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:04.247" endtime="20201112 12:26:04.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.253" endtime="20201112 12:26:04.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.977" endtime="20201112 12:26:04.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.975" endtime="20201112 12:26:04.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.259" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.258" endtime="20201112 12:26:04.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.263" level="INFO">VALUE: [{'time': 0.01913125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019132931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019134458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019136417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.019138, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019139917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019141806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019143486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019146986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019148694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019150208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019152125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019153875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019155347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019157153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019158625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019160472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019162444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019164222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019165708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019167653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019169431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019171375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019173236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019174875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019176333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019177736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019179389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019180986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019182542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.0191845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019186278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019187681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019189181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019190694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.019192583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019194556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.019196208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.019197667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.019199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.019201236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019203083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019204583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019206236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019208111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019211458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019213194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019214611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:04.260" endtime="20201112 12:26:04.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.256" endtime="20201112 12:26:04.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.278" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.265" endtime="20201112 12:26:04.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.281" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:04.281" endtime="20201112 12:26:04.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.285" level="INFO">VALUE: {'sourcediff': [0, 1.6809999999999048e-06, 1.5270000000011663e-06, 1.9589999999992946e-06, 1.582999999999446e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.51400000000107e-06, 1.707999999999571e-06, 1.5139999999976006e-06, 1.917000000000585e-06, 1.7500000000017502e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.8470000000027353e-06, 1.971999999999391e-06, 1.77800000000089e-06, 1.4859999999984608e-06, 1.9449999999997247e-06, 1.77800000000089e-06, 1.944000000000251e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.457999999999321e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.957999999999821e-06, 1.77800000000089e-06, 1.403000000000515e-06, 1.4999999999980307e-06, 1.5130000000015964e-06, 1.8889999999979756e-06, 1.973000000002334e-06, 1.6519999999978219e-06, 1.459000000002264e-06, 1.8049999999970867e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.4859999999984608e-06, 1.8610000000023053e-06, 1.7359999999987108e-06, 1.4170000000000849e-06], 'eventtime': [0.01913125, 0.019132931, 0.019134458, 0.019136417, 0.019138, 0.019139917, 0.019141806, 0.019143486, 0.019145472, 0.019146986, 0.019148694, 0.019150208, 0.019152125, 0.019153875, 0.019155347, 0.019157153, 0.019158625, 0.019160472, 0.019162444, 0.019164222, 0.019165708, 0.019167653, 0.019169431, 0.019171375, 0.019173236, 0.019174875, 0.019176333, 0.019177736, 0.019179389, 0.019180986, 0.019182542, 0.0191845, 0.019186278, 0.019187681, 0.019189181, 0.019190694, 0.019192583, 0.019194556, 0.019196208, 0.019197667, 0.019199472, 0.019201236, 0.019203083, 0.019204583, 0.019206236, 0.019208111, 0.019209597, 0.019211458, 0.019213194, 0.019214611], 'source_diff': [0, 1.6809999999999048e-06, 1.5270000000011663e-06, 1.9589999999992946e-06, 1.582999999999446e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.6800000000004311e-06, 1.985999999998961e-06, 1.51400000000107e-06, 1.707999999999571e-06, 1.5139999999976006e-06, 1.917000000000585e-06, 1.7500000000017502e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.8470000000027353e-06, 1.971999999999391e-06, 1.77800000000089e-06, 1.4859999999984608e-06, 1.9449999999997247e-06, 1.77800000000089e-06, 1.944000000000251e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.457999999999321e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.957999999999821e-06, 1.77800000000089e-06, 1.403000000000515e-06, 1.4999999999980307e-06, 1.5130000000015964e-06, 1.8889999999979756e-06, 1.973000000002334e-06, 1.6519999999978219e-06, 1.459000000002264e-06, 1.8049999999970867e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.4859999999984608e-06, 1.8610000000023053e-06, 1.7359999999987108e-06, 1.4170000000000849e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:04.283" endtime="20201112 12:26:04.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.279" endtime="20201112 12:26:04.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.289" level="INFO">${RESULT} = [{'time': 0.019132931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019136417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.286" endtime="20201112 12:26:04.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.297" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.290" endtime="20201112 12:26:04.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:04.300" endtime="20201112 12:26:04.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.303" level="INFO">VALUE: [1.6809999999999048e-06, 1.9589999999992946e-06, 1.917000000000585e-06, 1.6800000000004311e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.8470000000027353e-06, 1.77800000000089e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.639000000001195e-06, 1.403000000000515e-06, 1.5969999999990159e-06, 1.957999999999821e-06, 1.403000000000515e-06, 1.5130000000015964e-06, 1.973000000002334e-06, 1.459000000002264e-06, 1.76400000000132e-06, 1.5000000000015001e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.4170000000000849e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.302" endtime="20201112 12:26:04.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.298" endtime="20201112 12:26:04.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.307" endtime="20201112 12:26:04.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.310" endtime="20201112 12:26:04.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.309" endtime="20201112 12:26:04.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.305" endtime="20201112 12:26:04.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:03.951" endtime="20201112 12:26:04.331"></status>
</kw>
<msg timestamp="20201112 12:26:04.331" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.339" endtime="20201112 12:26:04.349"></status>
</kw>
<msg timestamp="20201112 12:26:04.350" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.338" endtime="20201112 12:26:04.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.352" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.351" endtime="20201112 12:26:04.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.353" endtime="20201112 12:26:04.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.335" endtime="20201112 12:26:04.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.333" endtime="20201112 12:26:04.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.362" endtime="20201112 12:26:04.631"></status>
</kw>
<msg timestamp="20201112 12:26:04.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.361" endtime="20201112 12:26:04.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.634" endtime="20201112 12:26:04.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.639" endtime="20201112 12:26:04.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.358" endtime="20201112 12:26:04.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.356" endtime="20201112 12:26:04.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.646" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.645" endtime="20201112 12:26:04.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.649" level="INFO">VALUE: [{'time': 0.018952583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018954139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018955792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018957583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018959236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018961167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018962944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018964444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018965847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018967722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018969167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018971028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018972819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018974653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018976264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018977875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018979458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018981208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018982917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018984792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018986292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018988097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018989625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018991222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018992806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018994236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018996111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018997792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018999444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019001306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.019002833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019004736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019006431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019007986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019009736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019011639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019013639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019015181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.019018403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.019019875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019021389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019023042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019024958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.019026528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019028431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019030222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019031681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.019033361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.019035097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:04.647" endtime="20201112 12:26:04.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.642" endtime="20201112 12:26:04.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.665" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.652" endtime="20201112 12:26:04.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.668" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:04.667" endtime="20201112 12:26:04.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.671" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.5559999999997798e-06, 1.653000000000765e-06, 1.7910000000009862e-06, 1.653000000000765e-06, 1.931000000000155e-06, 1.7769999999979469e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.8749999999984057e-06, 1.4449999999992247e-06, 1.8610000000023053e-06, 1.7909999999975168e-06, 1.834000000002639e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.8050000000005562e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.584000000002389e-06, 1.4300000000001811e-06, 1.8749999999984057e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.8619999999983095e-06, 1.5270000000011663e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.5550000000003061e-06, 1.7499999999982807e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.5420000000002099e-06, 1.7630000000018464e-06, 1.4589999999987946e-06, 1.4719999999988909e-06, 1.51400000000107e-06, 1.653000000000765e-06, 1.9160000000011113e-06, 1.5699999999993497e-06, 1.9029999999975455e-06, 1.7910000000009862e-06, 1.459000000002264e-06, 1.6799999999969617e-06, 1.7360000000021802e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018952583, 0.018954139, 0.018955792, 0.018957583, 0.018959236, 0.018961167, 0.018962944, 0.018964444, 0.018965847, 0.018967722, 0.018969167, 0.018971028, 0.018972819, 0.018974653, 0.018976264, 0.018977875, 0.018979458, 0.018981208, 0.018982917, 0.018984792, 0.018986292, 0.018988097, 0.018989625, 0.018991222, 0.018992806, 0.018994236, 0.018996111, 0.018997792, 0.018999444, 0.019001306, 0.019002833, 0.019004736, 0.019006431, 0.019007986, 0.019009736, 0.019011639, 0.019013639, 0.019015181, 0.019016944, 0.019018403, 0.019019875, 0.019021389, 0.019023042, 0.019024958, 0.019026528, 0.019028431, 0.019030222, 0.019031681, 0.019033361, 0.019035097], 'source_diff': [0, 1.5559999999997798e-06, 1.653000000000765e-06, 1.7910000000009862e-06, 1.653000000000765e-06, 1.931000000000155e-06, 1.7769999999979469e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.8749999999984057e-06, 1.4449999999992247e-06, 1.8610000000023053e-06, 1.7909999999975168e-06, 1.834000000002639e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.582999999999446e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.8050000000005562e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.584000000002389e-06, 1.4300000000001811e-06, 1.8749999999984057e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.8619999999983095e-06, 1.5270000000011663e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.5550000000003061e-06, 1.7499999999982807e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.5420000000002099e-06, 1.7630000000018464e-06, 1.4589999999987946e-06, 1.4719999999988909e-06, 1.51400000000107e-06, 1.653000000000765e-06, 1.9160000000011113e-06, 1.5699999999993497e-06, 1.9029999999975455e-06, 1.7910000000009862e-06, 1.459000000002264e-06, 1.6799999999969617e-06, 1.7360000000021802e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:04.669" endtime="20201112 12:26:04.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.665" endtime="20201112 12:26:04.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:04.676" level="INFO">${RESULT} = [{'time': 0.018954139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018957583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:04.673" endtime="20201112 12:26:04.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:04.685" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.677" endtime="20201112 12:26:04.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.689" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:04.688" endtime="20201112 12:26:04.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.691" level="INFO">VALUE: [1.5559999999997798e-06, 1.7910000000009862e-06, 1.931000000000155e-06, 1.5000000000015001e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.6110000000020552e-06, 1.7499999999982807e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.5969999999990159e-06, 1.4300000000001811e-06, 1.6809999999999048e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.5550000000003061e-06, 1.903000000001015e-06, 1.5420000000002099e-06, 1.4589999999987946e-06, 1.51400000000107e-06, 1.9160000000011113e-06, 1.9029999999975455e-06, 1.459000000002264e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201112 12:26:04.690" endtime="20201112 12:26:04.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.685" endtime="20201112 12:26:04.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.694" endtime="20201112 12:26:04.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:04.698" endtime="20201112 12:26:04.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.696" endtime="20201112 12:26:04.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.693" endtime="20201112 12:26:04.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.332" endtime="20201112 12:26:04.718"></status>
</kw>
<msg timestamp="20201112 12:26:04.719" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.727" endtime="20201112 12:26:04.737"></status>
</kw>
<msg timestamp="20201112 12:26:04.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.725" endtime="20201112 12:26:04.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.738" endtime="20201112 12:26:04.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.741" endtime="20201112 12:26:04.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.723" endtime="20201112 12:26:04.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.720" endtime="20201112 12:26:04.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.749" endtime="20201112 12:26:05.014"></status>
</kw>
<msg timestamp="20201112 12:26:05.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019195069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.748" endtime="20201112 12:26:05.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019195069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.017" endtime="20201112 12:26:05.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.022" endtime="20201112 12:26:05.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.745" endtime="20201112 12:26:05.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.744" endtime="20201112 12:26:05.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.029" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.028" endtime="20201112 12:26:05.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.032" level="INFO">VALUE: [{'time': 0.019193611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019195069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019196653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.019198375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019199847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019201597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019203097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019204514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019207681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.019210903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.019212569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.019214375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019216181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019217931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019219569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.019221417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.019223333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019224958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019226458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019228347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019230292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019232222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019234208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019235847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019237319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019239, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019240833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.01924225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019244083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019245764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019249528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019251125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019252625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019254236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019256181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019257889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019259458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019261375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019262792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019264375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019266069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019267514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.019268944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019270667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019272417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019273861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019275417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:05.030" endtime="20201112 12:26:05.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.025" endtime="20201112 12:26:05.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.047" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.035" endtime="20201112 12:26:05.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.051" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.050" endtime="20201112 12:26:05.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.054" level="INFO">VALUE: {'sourcediff': [0, 1.457999999999321e-06, 1.584000000002389e-06, 1.7219999999991409e-06, 1.4719999999988909e-06, 1.7500000000017502e-06, 1.4999999999980307e-06, 1.4170000000000849e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.7769999999979469e-06, 1.4450000000026941e-06, 1.6659999999973918e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.637999999998252e-06, 1.848000000002209e-06, 1.915999999997642e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.9449999999997247e-06, 1.930000000000681e-06, 1.985999999998961e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.4170000000000849e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.9449999999997247e-06, 1.5970000000024853e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.9449999999997247e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.917000000000585e-06, 1.4170000000000849e-06, 1.582999999999446e-06, 1.694000000000001e-06, 1.4449999999992247e-06, 1.4300000000001811e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.443999999999751e-06, 1.5559999999997798e-06], 'eventtime': [0.019193611, 0.019195069, 0.019196653, 0.019198375, 0.019199847, 0.019201597, 0.019203097, 0.019204514, 0.019206, 0.019207681, 0.019209458, 0.019210903, 0.019212569, 0.019214375, 0.019216181, 0.019217931, 0.019219569, 0.019221417, 0.019223333, 0.019224958, 0.019226458, 0.019228347, 0.019230292, 0.019232222, 0.019234208, 0.019235847, 0.019237319, 0.019239, 0.019240833, 0.01924225, 0.019244083, 0.019245764, 0.019247583, 0.019249528, 0.019251125, 0.019252625, 0.019254236, 0.019256181, 0.019257889, 0.019259458, 0.019261375, 0.019262792, 0.019264375, 0.019266069, 0.019267514, 0.019268944, 0.019270667, 0.019272417, 0.019273861, 0.019275417], 'source_diff': [0, 1.457999999999321e-06, 1.584000000002389e-06, 1.7219999999991409e-06, 1.4719999999988909e-06, 1.7500000000017502e-06, 1.4999999999980307e-06, 1.4170000000000849e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.7769999999979469e-06, 1.4450000000026941e-06, 1.6659999999973918e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.637999999998252e-06, 1.848000000002209e-06, 1.915999999997642e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.9449999999997247e-06, 1.930000000000681e-06, 1.985999999998961e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.4170000000000849e-06, 1.832999999999696e-06, 1.6809999999999048e-06, 1.819000000000126e-06, 1.9449999999997247e-06, 1.5970000000024853e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.9449999999997247e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.917000000000585e-06, 1.4170000000000849e-06, 1.582999999999446e-06, 1.694000000000001e-06, 1.4449999999992247e-06, 1.4300000000001811e-06, 1.7229999999986145e-06, 1.7500000000017502e-06, 1.443999999999751e-06, 1.5559999999997798e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.052" endtime="20201112 12:26:05.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.048" endtime="20201112 12:26:05.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.059" level="INFO">${RESULT} = [{'time': 0.019195069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019198375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.056" endtime="20201112 12:26:05.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.067" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.059" endtime="20201112 12:26:05.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.071" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.070" endtime="20201112 12:26:05.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.073" level="INFO">VALUE: [1.457999999999321e-06, 1.7219999999991409e-06, 1.7500000000017502e-06, 1.4170000000000849e-06, 1.6809999999999048e-06, 1.4450000000026941e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.848000000002209e-06, 1.6250000000016251e-06, 1.889000000001445e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.4170000000000849e-06, 1.6809999999999048e-06, 1.9449999999997247e-06, 1.4999999999980307e-06, 1.9449999999997247e-06, 1.568999999999876e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.4300000000001811e-06, 1.7500000000017502e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.072" endtime="20201112 12:26:05.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.067" endtime="20201112 12:26:05.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.076" endtime="20201112 12:26:05.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.080" endtime="20201112 12:26:05.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.078" endtime="20201112 12:26:05.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.075" endtime="20201112 12:26:05.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.719" endtime="20201112 12:26:05.101"></status>
</kw>
<msg timestamp="20201112 12:26:05.101" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.109" endtime="20201112 12:26:05.118"></status>
</kw>
<msg timestamp="20201112 12:26:05.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.107" endtime="20201112 12:26:05.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.120" endtime="20201112 12:26:05.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.122" endtime="20201112 12:26:05.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.105" endtime="20201112 12:26:05.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.103" endtime="20201112 12:26:05.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.131" endtime="20201112 12:26:05.401"></status>
</kw>
<msg timestamp="20201112 12:26:05.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018122361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.130" endtime="20201112 12:26:05.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018122361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.404" endtime="20201112 12:26:05.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.409" endtime="20201112 12:26:05.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.127" endtime="20201112 12:26:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.125" endtime="20201112 12:26:05.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.417" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.416" endtime="20201112 12:26:05.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.421" level="INFO">VALUE: [{'time': 0.018120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018122361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018123986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018125556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018127361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018128792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018130597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018132333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018134125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018135861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018137431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018138847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018140361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018141986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018143667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018145458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018146847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018148681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018150528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018152097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018154028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018155958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018157708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018159611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018161333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018163111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018165042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018166722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018168444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018169931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018171597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018173306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018175153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018176569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018177958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018179986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018181583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.01818325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018184847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018186667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018188347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018190153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018191847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018193611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018195278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018196681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018198375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018200375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018202042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018203917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:05.418" endtime="20201112 12:26:05.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.413" endtime="20201112 12:26:05.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.437" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.424" endtime="20201112 12:26:05.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.441" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.440" endtime="20201112 12:26:05.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.445" level="INFO">VALUE: {'sourcediff': [0, 1.985999999998961e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.8050000000005562e-06, 1.4309999999996548e-06, 1.8049999999970867e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.5699999999993497e-06, 1.4160000000006112e-06, 1.51400000000107e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.389000000000945e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.930000000000681e-06, 1.7500000000017502e-06, 1.9029999999975455e-06, 1.7220000000026103e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.4870000000014039e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.846999999999266e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 2.0279999999976706e-06, 1.5970000000024853e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.7639999999978506e-06, 1.6670000000003349e-06, 1.403000000000515e-06, 1.694000000000001e-06, 2.000000000002e-06, 1.6670000000003349e-06, 1.8749999999984057e-06], 'eventtime': [0.018120375, 0.018122361, 0.018123986, 0.018125556, 0.018127361, 0.018128792, 0.018130597, 0.018132333, 0.018134125, 0.018135861, 0.018137431, 0.018138847, 0.018140361, 0.018141986, 0.018143667, 0.018145458, 0.018146847, 0.018148681, 0.018150528, 0.018152097, 0.018154028, 0.018155958, 0.018157708, 0.018159611, 0.018161333, 0.018163111, 0.018165042, 0.018166722, 0.018168444, 0.018169931, 0.018171597, 0.018173306, 0.018175153, 0.018176569, 0.018177958, 0.018179986, 0.018181583, 0.01818325, 0.018184847, 0.018186667, 0.018188347, 0.018190153, 0.018191847, 0.018193611, 0.018195278, 0.018196681, 0.018198375, 0.018200375, 0.018202042, 0.018203917], 'source_diff': [0, 1.985999999998961e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.8050000000005562e-06, 1.4309999999996548e-06, 1.8049999999970867e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.5699999999993497e-06, 1.4160000000006112e-06, 1.51400000000107e-06, 1.6249999999981557e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.389000000000945e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.930000000000681e-06, 1.7500000000017502e-06, 1.9029999999975455e-06, 1.7220000000026103e-06, 1.7779999999974205e-06, 1.931000000000155e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.4870000000014039e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.846999999999266e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 2.0279999999976706e-06, 1.5970000000024853e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.8199999999995997e-06, 1.6800000000004311e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.7639999999978506e-06, 1.6670000000003349e-06, 1.403000000000515e-06, 1.694000000000001e-06, 2.000000000002e-06, 1.6670000000003349e-06, 1.8749999999984057e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.442" endtime="20201112 12:26:05.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.438" endtime="20201112 12:26:05.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.449" level="INFO">${RESULT} = [{'time': 0.018122361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018125556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.447" endtime="20201112 12:26:05.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.458" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.450" endtime="20201112 12:26:05.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.462" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.461" endtime="20201112 12:26:05.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.465" level="INFO">VALUE: [1.985999999998961e-06, 1.5699999999993497e-06, 1.4309999999996548e-06, 1.7360000000021802e-06, 1.7359999999987108e-06, 1.4160000000006112e-06, 1.6249999999981557e-06, 1.7910000000009862e-06, 1.8339999999991696e-06, 1.568999999999876e-06, 1.930000000000681e-06, 1.9029999999975455e-06, 1.7779999999974205e-06, 1.6800000000004311e-06, 1.4870000000014039e-06, 1.7089999999990446e-06, 1.4160000000006112e-06, 2.0279999999976706e-06, 1.6670000000003349e-06, 1.8199999999995997e-06, 1.8060000000000298e-06, 1.7639999999978506e-06, 1.403000000000515e-06, 2.000000000002e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.463" endtime="20201112 12:26:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.459" endtime="20201112 12:26:05.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.468" endtime="20201112 12:26:05.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.472" endtime="20201112 12:26:05.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.470" endtime="20201112 12:26:05.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.467" endtime="20201112 12:26:05.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.102" endtime="20201112 12:26:05.493"></status>
</kw>
<msg timestamp="20201112 12:26:05.493" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.501" endtime="20201112 12:26:05.510"></status>
</kw>
<msg timestamp="20201112 12:26:05.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.499" endtime="20201112 12:26:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.512" endtime="20201112 12:26:05.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.515" endtime="20201112 12:26:05.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.497" endtime="20201112 12:26:05.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.495" endtime="20201112 12:26:05.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.524" endtime="20201112 12:26:05.793"></status>
</kw>
<msg timestamp="20201112 12:26:05.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018793583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.522" endtime="20201112 12:26:05.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018793583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018795222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.796" endtime="20201112 12:26:05.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.801" endtime="20201112 12:26:05.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.520" endtime="20201112 12:26:05.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.518" endtime="20201112 12:26:05.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.808" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.807" endtime="20201112 12:26:05.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.812" level="INFO">VALUE: [{'time': 0.018793583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018795222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018796889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018798889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018800486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018802139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018803542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018805292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018807264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018809069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018810736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018812569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018814167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018816125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018817625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018819083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018820556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018822056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018823597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018825181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018826819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.01882875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9309999999966854e-06, 'source_diff': 1.9309999999966854e-06}, {'time': 0.018830181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4310000000031242e-06, 'source_diff': 1.4310000000031242e-06}, {'time': 0.018831819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018835542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018837375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018838958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018840389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018842361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018844278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018846014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018847569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018849069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018850556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018852306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018854208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018855694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018857528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018859458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018861347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018863083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018864903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018866431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018870083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018871708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018873486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018874917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4310000000031242e-06, 'source_diff': 1.4310000000031242e-06}, {'time': 0.018876861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:05.809" endtime="20201112 12:26:05.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.805" endtime="20201112 12:26:05.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.829" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.814" endtime="20201112 12:26:05.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.833" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.832" endtime="20201112 12:26:05.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.836" level="INFO">VALUE: {'sourcediff': [0, 1.639000000001195e-06, 1.6670000000003349e-06, 1.9999999999985307e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.403000000000515e-06, 1.7500000000017502e-06, 1.971999999999391e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.5979999999984895e-06, 1.957999999999821e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.4729999999983645e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.5839999999989196e-06, 1.6380000000017214e-06, 1.9309999999966854e-06, 1.4310000000031242e-06, 1.637999999998252e-06, 1.917000000000585e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.582999999999446e-06, 1.4309999999996548e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.7360000000021802e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.4870000000014039e-06, 1.7499999999982807e-06, 1.9020000000015413e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.930000000000681e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.8199999999995997e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.6250000000016251e-06, 1.7779999999974205e-06, 1.4310000000031242e-06, 1.944000000000251e-06], 'eventtime': [0.018793583, 0.018795222, 0.018796889, 0.018798889, 0.018800486, 0.018802139, 0.018803542, 0.018805292, 0.018807264, 0.018809069, 0.018810736, 0.018812569, 0.018814167, 0.018816125, 0.018817625, 0.018819083, 0.018820556, 0.018822056, 0.018823597, 0.018825181, 0.018826819, 0.01882875, 0.018830181, 0.018831819, 0.018833736, 0.018835542, 0.018837375, 0.018838958, 0.018840389, 0.018842361, 0.018844278, 0.018846014, 0.018847569, 0.018849069, 0.018850556, 0.018852306, 0.018854208, 0.018855694, 0.018857528, 0.018859458, 0.018861347, 0.018863083, 0.018864903, 0.018866431, 0.018868125, 0.018870083, 0.018871708, 0.018873486, 0.018874917, 0.018876861], 'source_diff': [0, 1.639000000001195e-06, 1.6670000000003349e-06, 1.9999999999985307e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.403000000000515e-06, 1.7500000000017502e-06, 1.971999999999391e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.5979999999984895e-06, 1.957999999999821e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.4729999999983645e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.5839999999989196e-06, 1.6380000000017214e-06, 1.9309999999966854e-06, 1.4310000000031242e-06, 1.637999999998252e-06, 1.917000000000585e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.582999999999446e-06, 1.4309999999996548e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.7360000000021802e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.4870000000014039e-06, 1.7499999999982807e-06, 1.9020000000015413e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.930000000000681e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.8199999999995997e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.6250000000016251e-06, 1.7779999999974205e-06, 1.4310000000031242e-06, 1.944000000000251e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.834" endtime="20201112 12:26:05.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.830" endtime="20201112 12:26:05.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.840" level="INFO">${RESULT} = [{'time': 0.018795222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018798889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.838" endtime="20201112 12:26:05.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.849" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.841" endtime="20201112 12:26:05.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.853" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.852" endtime="20201112 12:26:05.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.856" level="INFO">VALUE: [1.639000000001195e-06, 1.9999999999985307e-06, 1.6529999999972955e-06, 1.7500000000017502e-06, 1.8050000000005562e-06, 1.832999999999696e-06, 1.957999999999821e-06, 1.457999999999321e-06, 1.5000000000015001e-06, 1.5839999999989196e-06, 1.9309999999966854e-06, 1.637999999998252e-06, 1.8060000000000298e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.7360000000021802e-06, 1.4999999999980307e-06, 1.7499999999982807e-06, 1.4859999999984608e-06, 1.930000000000681e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.957999999999821e-06, 1.7779999999974205e-06, 1.944000000000251e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.854" endtime="20201112 12:26:05.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.850" endtime="20201112 12:26:05.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.859" endtime="20201112 12:26:05.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.863" endtime="20201112 12:26:05.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.861" endtime="20201112 12:26:05.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.857" endtime="20201112 12:26:05.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.493" endtime="20201112 12:26:05.883"></status>
</kw>
<msg timestamp="20201112 12:26:05.884" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.892" endtime="20201112 12:26:05.901"></status>
</kw>
<msg timestamp="20201112 12:26:05.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.890" endtime="20201112 12:26:05.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.902" endtime="20201112 12:26:05.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.905" endtime="20201112 12:26:05.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.887" endtime="20201112 12:26:05.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.886" endtime="20201112 12:26:05.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.914" endtime="20201112 12:26:06.184"></status>
</kw>
<msg timestamp="20201112 12:26:06.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.913" endtime="20201112 12:26:06.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.187" endtime="20201112 12:26:06.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.193" endtime="20201112 12:26:06.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.910" endtime="20201112 12:26:06.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.908" endtime="20201112 12:26:06.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.200" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.199" endtime="20201112 12:26:06.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.203" level="INFO">VALUE: [{'time': 0.018568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018572375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.018573903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.01857575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018577458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.018579097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018581014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018582958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018584847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018586319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018587819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018591014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018592847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018594417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018596264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018598111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018599514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018601292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018603097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018604583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018607528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018609139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018610778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018612333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018613722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018615875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018617333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018619264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018621139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018625028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018626972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018628444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018629903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018631667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018633083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018634542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018636056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018637736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018639639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018641264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018642736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018644417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018645986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018647764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018649472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018651042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.201" endtime="20201112 12:26:06.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.196" endtime="20201112 12:26:06.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.219" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.206" endtime="20201112 12:26:06.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.223" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.222" endtime="20201112 12:26:06.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.226" level="INFO">VALUE: {'sourcediff': [0, 1.4729999999983645e-06, 2.208000000000071e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.917000000000585e-06, 1.944000000000251e-06, 1.889000000001445e-06, 1.4719999999988909e-06, 1.4999999999980307e-06, 1.709000000002514e-06, 1.4859999999984608e-06, 1.832999999999696e-06, 1.5699999999993497e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.403000000000515e-06, 1.7779999999974205e-06, 1.8050000000005562e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.459000000002264e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.5549999999968367e-06, 1.389000000000945e-06, 2.153000000001265e-06, 1.457999999999321e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 2.02800000000114e-06, 1.8609999999988358e-06, 1.944000000000251e-06, 1.4720000000023603e-06, 1.4589999999987946e-06, 1.76400000000132e-06, 1.4160000000006112e-06, 1.4589999999987946e-06, 1.51400000000107e-06, 1.6799999999969617e-06, 1.903000000001015e-06, 1.6250000000016251e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.5699999999993497e-06], 'eventtime': [0.018568694, 0.018570167, 0.018572375, 0.018573903, 0.01857575, 0.018577458, 0.018579097, 0.018581014, 0.018582958, 0.018584847, 0.018586319, 0.018587819, 0.018589528, 0.018591014, 0.018592847, 0.018594417, 0.018596264, 0.018598111, 0.018599514, 0.018601292, 0.018603097, 0.018604583, 0.018606069, 0.018607528, 0.018609139, 0.018610778, 0.018612333, 0.018613722, 0.018615875, 0.018617333, 0.018619264, 0.018621139, 0.018623167, 0.018625028, 0.018626972, 0.018628444, 0.018629903, 0.018631667, 0.018633083, 0.018634542, 0.018636056, 0.018637736, 0.018639639, 0.018641264, 0.018642736, 0.018644417, 0.018645986, 0.018647764, 0.018649472, 0.018651042], 'source_diff': [0, 1.4729999999983645e-06, 2.208000000000071e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.917000000000585e-06, 1.944000000000251e-06, 1.889000000001445e-06, 1.4719999999988909e-06, 1.4999999999980307e-06, 1.709000000002514e-06, 1.4859999999984608e-06, 1.832999999999696e-06, 1.5699999999993497e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.403000000000515e-06, 1.7779999999974205e-06, 1.8050000000005562e-06, 1.4860000000019302e-06, 1.4859999999984608e-06, 1.459000000002264e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.5549999999968367e-06, 1.389000000000945e-06, 2.153000000001265e-06, 1.457999999999321e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 2.02800000000114e-06, 1.8609999999988358e-06, 1.944000000000251e-06, 1.4720000000023603e-06, 1.4589999999987946e-06, 1.76400000000132e-06, 1.4160000000006112e-06, 1.4589999999987946e-06, 1.51400000000107e-06, 1.6799999999969617e-06, 1.903000000001015e-06, 1.6250000000016251e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.5699999999993497e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:06.224" endtime="20201112 12:26:06.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.220" endtime="20201112 12:26:06.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.231" level="INFO">${RESULT} = [{'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018573903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.228" endtime="20201112 12:26:06.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.239" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.232" endtime="20201112 12:26:06.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.243" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.242" endtime="20201112 12:26:06.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.246" level="INFO">VALUE: [1.4729999999983645e-06, 1.52800000000064e-06, 1.7080000000030404e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.4999999999980307e-06, 1.4859999999984608e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.7779999999974205e-06, 1.4860000000019302e-06, 1.459000000002264e-06, 1.639000000001195e-06, 1.389000000000945e-06, 1.457999999999321e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.4720000000023603e-06, 1.76400000000132e-06, 1.4589999999987946e-06, 1.6799999999969617e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.244" endtime="20201112 12:26:06.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.240" endtime="20201112 12:26:06.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.249" endtime="20201112 12:26:06.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.253" endtime="20201112 12:26:06.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.251" endtime="20201112 12:26:06.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.248" endtime="20201112 12:26:06.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.884" endtime="20201112 12:26:06.274"></status>
</kw>
<msg timestamp="20201112 12:26:06.274" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.282" endtime="20201112 12:26:06.291"></status>
</kw>
<msg timestamp="20201112 12:26:06.291" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.280" endtime="20201112 12:26:06.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.292" endtime="20201112 12:26:06.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.295" endtime="20201112 12:26:06.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.277" endtime="20201112 12:26:06.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.276" endtime="20201112 12:26:06.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.305" endtime="20201112 12:26:06.575"></status>
</kw>
<msg timestamp="20201112 12:26:06.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018865583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.303" endtime="20201112 12:26:06.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018865583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.578" endtime="20201112 12:26:06.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.583" endtime="20201112 12:26:06.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.300" endtime="20201112 12:26:06.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.298" endtime="20201112 12:26:06.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.589" endtime="20201112 12:26:06.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.594" level="INFO">VALUE: [{'time': 0.018864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018865583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018867264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.018868819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018870528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018871944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.01887375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018875319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018877028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.01887875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.01888075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018882194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018883917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018885375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018887167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018888528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.018890347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8189999999966566e-06, 'source_diff': 1.8189999999966566e-06}, {'time': 0.018891875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018893514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018895194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018897014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018898931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018900375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.01890225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018904014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018905875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018907347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018908889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018910403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018911819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018913458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018915417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018916972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018918486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018920292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8059999999965604e-06, 'source_diff': 1.8059999999965604e-06}, {'time': 0.018922153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018925319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018926903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018928847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018930736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018932514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018933931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018935292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018937375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.018939278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018941167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018942931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018944458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018946181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.591" endtime="20201112 12:26:06.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.587" endtime="20201112 12:26:06.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.609" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.596" endtime="20201112 12:26:06.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.613" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.612" endtime="20201112 12:26:06.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.617" level="INFO">VALUE: {'sourcediff': [0, 1.4859999999984608e-06, 1.6810000000033742e-06, 1.5549999999968367e-06, 1.709000000002514e-06, 1.4160000000006112e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.7089999999990446e-06, 1.7219999999991409e-06, 2.000000000002e-06, 1.443999999999751e-06, 1.7229999999986145e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.3610000000018052e-06, 1.8189999999966566e-06, 1.52800000000064e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.917000000000585e-06, 1.443999999999751e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.4160000000006112e-06, 1.639000000001195e-06, 1.9589999999992946e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.8059999999965604e-06, 1.8610000000023053e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.944000000000251e-06, 1.889000000001445e-06, 1.77800000000089e-06, 1.4170000000000849e-06, 1.3609999999983358e-06, 2.082999999999946e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.7229999999986145e-06], 'eventtime': [0.018864097, 0.018865583, 0.018867264, 0.018868819, 0.018870528, 0.018871944, 0.01887375, 0.018875319, 0.018877028, 0.01887875, 0.01888075, 0.018882194, 0.018883917, 0.018885375, 0.018887167, 0.018888528, 0.018890347, 0.018891875, 0.018893514, 0.018895194, 0.018897014, 0.018898931, 0.018900375, 0.01890225, 0.018904014, 0.018905875, 0.018907347, 0.018908889, 0.018910403, 0.018911819, 0.018913458, 0.018915417, 0.018916972, 0.018918486, 0.018920292, 0.018922153, 0.018923708, 0.018925319, 0.018926903, 0.018928847, 0.018930736, 0.018932514, 0.018933931, 0.018935292, 0.018937375, 0.018939278, 0.018941167, 0.018942931, 0.018944458, 0.018946181], 'source_diff': [0, 1.4859999999984608e-06, 1.6810000000033742e-06, 1.5549999999968367e-06, 1.709000000002514e-06, 1.4160000000006112e-06, 1.8060000000000298e-06, 1.568999999999876e-06, 1.7089999999990446e-06, 1.7219999999991409e-06, 2.000000000002e-06, 1.443999999999751e-06, 1.7229999999986145e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.3610000000018052e-06, 1.8189999999966566e-06, 1.52800000000064e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.917000000000585e-06, 1.443999999999751e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.4720000000023603e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.4160000000006112e-06, 1.639000000001195e-06, 1.9589999999992946e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.8059999999965604e-06, 1.8610000000023053e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5839999999989196e-06, 1.944000000000251e-06, 1.889000000001445e-06, 1.77800000000089e-06, 1.4170000000000849e-06, 1.3609999999983358e-06, 2.082999999999946e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.76400000000132e-06, 1.5270000000011663e-06, 1.7229999999986145e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:06.614" endtime="20201112 12:26:06.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.610" endtime="20201112 12:26:06.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.621" level="INFO">${RESULT} = [{'time': 0.018865583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018868819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:06.619" endtime="20201112 12:26:06.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.630" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.622" endtime="20201112 12:26:06.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.634" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.633" endtime="20201112 12:26:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.636" level="INFO">VALUE: [1.4859999999984608e-06, 1.5549999999968367e-06, 1.4160000000006112e-06, 1.568999999999876e-06, 1.7219999999991409e-06, 1.443999999999751e-06, 1.457999999999321e-06, 1.3610000000018052e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.5420000000002099e-06, 1.4160000000006112e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.8610000000023053e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.77800000000089e-06, 1.3609999999983358e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.7229999999986145e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.635" endtime="20201112 12:26:06.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.631" endtime="20201112 12:26:06.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.640" endtime="20201112 12:26:06.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.643" endtime="20201112 12:26:06.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.642" endtime="20201112 12:26:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.638" endtime="20201112 12:26:06.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.274" endtime="20201112 12:26:06.664"></status>
</kw>
<msg timestamp="20201112 12:26:06.665" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.673" endtime="20201112 12:26:06.682"></status>
</kw>
<msg timestamp="20201112 12:26:06.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.671" endtime="20201112 12:26:06.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.683" endtime="20201112 12:26:06.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.686" endtime="20201112 12:26:06.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.668" endtime="20201112 12:26:06.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.667" endtime="20201112 12:26:06.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.697" endtime="20201112 12:26:06.965"></status>
</kw>
<msg timestamp="20201112 12:26:06.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:06.695" endtime="20201112 12:26:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:06.968" endtime="20201112 12:26:06.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.974" endtime="20201112 12:26:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.692" endtime="20201112 12:26:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.690" endtime="20201112 12:26:06.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.981" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.980" endtime="20201112 12:26:06.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.984" level="INFO">VALUE: [{'time': 0.018929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018933278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018934792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018936278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018937931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018939486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018941458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018943306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018944819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018946375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018948083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01894975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018951319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.01895275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018954236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018955792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018957625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.0189595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018961375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018962875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018964458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018965958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018967542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018969292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018970917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018972833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018974306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018976264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018978181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018979806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018981417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018983264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018984681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018986264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018987875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018989278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.018991431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018993236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018994708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018996542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018998444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.019000194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019001625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019003389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019005194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019007139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019008806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019010403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019012069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.982" endtime="20201112 12:26:06.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.977" endtime="20201112 12:26:06.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.001" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.987" endtime="20201112 12:26:07.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.005" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.004" endtime="20201112 12:26:07.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.008" level="INFO">VALUE: {'sourcediff': [0, 1.889000000001445e-06, 1.77800000000089e-06, 1.5139999999976006e-06, 1.4860000000019302e-06, 1.653000000000765e-06, 1.5549999999968367e-06, 1.9720000000028604e-06, 1.8479999999987395e-06, 1.5130000000015964e-06, 1.5559999999997798e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.568999999999876e-06, 1.4309999999996548e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.582999999999446e-06, 1.5000000000015001e-06, 1.5839999999989196e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.9160000000011113e-06, 1.4729999999983645e-06, 1.957999999999821e-06, 1.917000000000585e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.4029999999970455e-06, 2.153000000001265e-06, 1.8050000000005562e-06, 1.4719999999988909e-06, 1.834000000002639e-06, 1.901999999998072e-06, 1.7500000000017502e-06, 1.4309999999996548e-06, 1.7639999999978506e-06, 1.8050000000005562e-06, 1.9449999999997247e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.6660000000008612e-06], 'eventtime': [0.018929611, 0.0189315, 0.018933278, 0.018934792, 0.018936278, 0.018937931, 0.018939486, 0.018941458, 0.018943306, 0.018944819, 0.018946375, 0.018948083, 0.01894975, 0.018951319, 0.01895275, 0.018954236, 0.018955792, 0.018957625, 0.0189595, 0.018961375, 0.018962875, 0.018964458, 0.018965958, 0.018967542, 0.018969292, 0.018970917, 0.018972833, 0.018974306, 0.018976264, 0.018978181, 0.018979806, 0.018981417, 0.018983264, 0.018984681, 0.018986264, 0.018987875, 0.018989278, 0.018991431, 0.018993236, 0.018994708, 0.018996542, 0.018998444, 0.019000194, 0.019001625, 0.019003389, 0.019005194, 0.019007139, 0.019008806, 0.019010403, 0.019012069], 'source_diff': [0, 1.889000000001445e-06, 1.77800000000089e-06, 1.5139999999976006e-06, 1.4860000000019302e-06, 1.653000000000765e-06, 1.5549999999968367e-06, 1.9720000000028604e-06, 1.8479999999987395e-06, 1.5130000000015964e-06, 1.5559999999997798e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.568999999999876e-06, 1.4309999999996548e-06, 1.4859999999984608e-06, 1.5559999999997798e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.582999999999446e-06, 1.5000000000015001e-06, 1.5839999999989196e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.9160000000011113e-06, 1.4729999999983645e-06, 1.957999999999821e-06, 1.917000000000585e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 1.4029999999970455e-06, 2.153000000001265e-06, 1.8050000000005562e-06, 1.4719999999988909e-06, 1.834000000002639e-06, 1.901999999998072e-06, 1.7500000000017502e-06, 1.4309999999996548e-06, 1.7639999999978506e-06, 1.8050000000005562e-06, 1.9449999999997247e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.6660000000008612e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:07.006" endtime="20201112 12:26:07.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.002" endtime="20201112 12:26:07.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.013" level="INFO">${RESULT} = [{'time': 0.0189315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018934792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:07.010" endtime="20201112 12:26:07.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.021" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.014" endtime="20201112 12:26:07.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.026" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.024" endtime="20201112 12:26:07.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.028" level="INFO">VALUE: [1.889000000001445e-06, 1.5139999999976006e-06, 1.653000000000765e-06, 1.9720000000028604e-06, 1.5130000000015964e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.4729999999983645e-06, 1.917000000000585e-06, 1.6110000000020552e-06, 1.4170000000000849e-06, 1.6110000000020552e-06, 2.153000000001265e-06, 1.4719999999988909e-06, 1.901999999998072e-06, 1.4309999999996548e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.027" endtime="20201112 12:26:07.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.022" endtime="20201112 12:26:07.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.031" endtime="20201112 12:26:07.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.035" endtime="20201112 12:26:07.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.033" endtime="20201112 12:26:07.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.030" endtime="20201112 12:26:07.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.665" endtime="20201112 12:26:07.056"></status>
</kw>
<msg timestamp="20201112 12:26:07.056" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.065" endtime="20201112 12:26:07.074"></status>
</kw>
<msg timestamp="20201112 12:26:07.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.063" endtime="20201112 12:26:07.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.076" endtime="20201112 12:26:07.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.078" endtime="20201112 12:26:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.060" endtime="20201112 12:26:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.058" endtime="20201112 12:26:07.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.088" endtime="20201112 12:26:07.356"></status>
</kw>
<msg timestamp="20201112 12:26:07.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.086" endtime="20201112 12:26:07.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.359" endtime="20201112 12:26:07.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.365" endtime="20201112 12:26:07.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.083" endtime="20201112 12:26:07.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.081" endtime="20201112 12:26:07.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.372" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.371" endtime="20201112 12:26:07.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.375" level="INFO">VALUE: [{'time': 0.019783903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019787444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019789278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019791083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019792694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019794639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019796319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019799722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019801431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.019803139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019804708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019806653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019808597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.0198105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019813708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.019815167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.019816625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.01981825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019820194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019821694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019823472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019826597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019833319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.019835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019836667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019838167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019839722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019841208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019843083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019844806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019846514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019848125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019850056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019851722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.019853347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019855028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019856583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019858556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.019860514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019862111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019863903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019865319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019866792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:07.373" endtime="20201112 12:26:07.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.368" endtime="20201112 12:26:07.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.391" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.378" endtime="20201112 12:26:07.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.395" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.394" endtime="20201112 12:26:07.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.399" level="INFO">VALUE: {'sourcediff': [0, 1.7360000000021802e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.8050000000005562e-06, 1.6109999999985858e-06, 1.9449999999997247e-06, 1.6800000000004311e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.903000000001015e-06, 1.5559999999997798e-06, 1.6519999999978219e-06, 1.459000000002264e-06, 1.457999999999321e-06, 1.6249999999981557e-06, 1.944000000000251e-06, 1.5000000000015001e-06, 1.77800000000089e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.5420000000002099e-06, 1.6519999999978219e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.4859999999984608e-06, 1.8750000000018752e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.6110000000020552e-06, 1.931000000000155e-06, 1.6659999999973918e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.5550000000003061e-06, 1.9729999999988646e-06, 1.957999999999821e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.4160000000006112e-06, 1.473000000001834e-06], 'eventtime': [0.019783903, 0.019785639, 0.019787444, 0.019789278, 0.019791083, 0.019792694, 0.019794639, 0.019796319, 0.019797903, 0.019799722, 0.019801431, 0.019803139, 0.019804708, 0.019806653, 0.019808597, 0.0198105, 0.019812056, 0.019813708, 0.019815167, 0.019816625, 0.01981825, 0.019820194, 0.019821694, 0.019823472, 0.019825042, 0.019826597, 0.019828347, 0.019830125, 0.019831667, 0.019833319, 0.019835, 0.019836667, 0.019838167, 0.019839722, 0.019841208, 0.019843083, 0.019844806, 0.019846514, 0.019848125, 0.019850056, 0.019851722, 0.019853347, 0.019855028, 0.019856583, 0.019858556, 0.019860514, 0.019862111, 0.019863903, 0.019865319, 0.019866792], 'source_diff': [0, 1.7360000000021802e-06, 1.8050000000005562e-06, 1.8339999999991696e-06, 1.8050000000005562e-06, 1.6109999999985858e-06, 1.9449999999997247e-06, 1.6800000000004311e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.903000000001015e-06, 1.5559999999997798e-06, 1.6519999999978219e-06, 1.459000000002264e-06, 1.457999999999321e-06, 1.6249999999981557e-06, 1.944000000000251e-06, 1.5000000000015001e-06, 1.77800000000089e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.5420000000002099e-06, 1.6519999999978219e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.4859999999984608e-06, 1.8750000000018752e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.6110000000020552e-06, 1.931000000000155e-06, 1.6659999999973918e-06, 1.6250000000016251e-06, 1.6809999999999048e-06, 1.5550000000003061e-06, 1.9729999999988646e-06, 1.957999999999821e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.4160000000006112e-06, 1.473000000001834e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:07.396" endtime="20201112 12:26:07.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.392" endtime="20201112 12:26:07.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.403" level="INFO">${RESULT} = [{'time': 0.019785639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019789278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:07.400" endtime="20201112 12:26:07.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.411" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.404" endtime="20201112 12:26:07.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.416" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.415" endtime="20201112 12:26:07.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.418" level="INFO">VALUE: [1.7360000000021802e-06, 1.8339999999991696e-06, 1.6109999999985858e-06, 1.6800000000004311e-06, 1.819000000000126e-06, 1.707999999999571e-06, 1.9449999999997247e-06, 1.903000000001015e-06, 1.6519999999978219e-06, 1.457999999999321e-06, 1.944000000000251e-06, 1.77800000000089e-06, 1.5550000000003061e-06, 1.77800000000089e-06, 1.6519999999978219e-06, 1.6670000000003349e-06, 1.5550000000003061e-06, 1.8750000000018752e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.5550000000003061e-06, 1.957999999999821e-06, 1.7920000000004599e-06, 1.473000000001834e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.417" endtime="20201112 12:26:07.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.412" endtime="20201112 12:26:07.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.422" endtime="20201112 12:26:07.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.425" endtime="20201112 12:26:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.424" endtime="20201112 12:26:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.420" endtime="20201112 12:26:07.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.057" endtime="20201112 12:26:07.447"></status>
</kw>
<msg timestamp="20201112 12:26:07.447" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.457" endtime="20201112 12:26:07.466"></status>
</kw>
<msg timestamp="20201112 12:26:07.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.455" endtime="20201112 12:26:07.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.468" endtime="20201112 12:26:07.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.470" endtime="20201112 12:26:07.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.452" endtime="20201112 12:26:07.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.450" endtime="20201112 12:26:07.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.480" endtime="20201112 12:26:07.743"></status>
</kw>
<msg timestamp="20201112 12:26:07.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020933125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.478" endtime="20201112 12:26:07.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020933125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.746" endtime="20201112 12:26:07.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.752" endtime="20201112 12:26:07.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.476" endtime="20201112 12:26:07.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.474" endtime="20201112 12:26:07.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.758" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.757" endtime="20201112 12:26:07.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.762" level="INFO">VALUE: [{'time': 0.020931694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020933125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.020934819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.020936319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.020938014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.020939958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.020941556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.020943014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.020944486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.020946125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.020947861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.020949819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.020951542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.020952986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.020954778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.020956694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.020958292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.020960236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.020962042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.020963819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.020965361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5419999999967404e-06, 'source_diff': 1.5419999999967404e-06}, {'time': 0.020967042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.020968639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.020970361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.020972028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.020973444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.020975181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.020976667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.020978167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.020979847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.020981333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.020983097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.02098475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.020986306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.020988306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.020990125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8189999999966566e-06, 'source_diff': 1.8189999999966566e-06}, {'time': 0.020991778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.020993694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.020995417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.02099725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.020999194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.021000806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.021002736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.021004208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.021006014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.021007861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.021009347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.021011153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.021013083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.021014694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:07.760" endtime="20201112 12:26:07.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.755" endtime="20201112 12:26:07.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.778" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.765" endtime="20201112 12:26:07.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.782" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.781" endtime="20201112 12:26:07.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.785" level="INFO">VALUE: {'sourcediff': [0, 1.4309999999996548e-06, 1.694000000000001e-06, 1.4999999999980307e-06, 1.6950000000029442e-06, 1.944000000000251e-06, 1.5979999999984895e-06, 1.457999999999321e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.7360000000021802e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.443999999999751e-06, 1.7920000000004599e-06, 1.9160000000011113e-06, 1.5979999999984895e-06, 1.944000000000251e-06, 1.8060000000000298e-06, 1.7770000000014163e-06, 1.5419999999967404e-06, 1.6810000000033742e-06, 1.5969999999990159e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.4160000000006112e-06, 1.7369999999981844e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.6800000000004311e-06, 1.4860000000019302e-06, 1.7639999999978506e-06, 1.653000000000765e-06, 1.5559999999997798e-06, 2.000000000002e-06, 1.8189999999966566e-06, 1.653000000000765e-06, 1.9160000000011113e-06, 1.7229999999986145e-06, 1.832999999999696e-06, 1.944000000000251e-06, 1.6120000000015289e-06, 1.930000000000681e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.4860000000019302e-06, 1.8060000000000298e-06, 1.9299999999972117e-06, 1.6110000000020552e-06], 'eventtime': [0.020931694, 0.020933125, 0.020934819, 0.020936319, 0.020938014, 0.020939958, 0.020941556, 0.020943014, 0.020944486, 0.020946125, 0.020947861, 0.020949819, 0.020951542, 0.020952986, 0.020954778, 0.020956694, 0.020958292, 0.020960236, 0.020962042, 0.020963819, 0.020965361, 0.020967042, 0.020968639, 0.020970361, 0.020972028, 0.020973444, 0.020975181, 0.020976667, 0.020978167, 0.020979847, 0.020981333, 0.020983097, 0.02098475, 0.020986306, 0.020988306, 0.020990125, 0.020991778, 0.020993694, 0.020995417, 0.02099725, 0.020999194, 0.021000806, 0.021002736, 0.021004208, 0.021006014, 0.021007861, 0.021009347, 0.021011153, 0.021013083, 0.021014694], 'source_diff': [0, 1.4309999999996548e-06, 1.694000000000001e-06, 1.4999999999980307e-06, 1.6950000000029442e-06, 1.944000000000251e-06, 1.5979999999984895e-06, 1.457999999999321e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.7360000000021802e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.443999999999751e-06, 1.7920000000004599e-06, 1.9160000000011113e-06, 1.5979999999984895e-06, 1.944000000000251e-06, 1.8060000000000298e-06, 1.7770000000014163e-06, 1.5419999999967404e-06, 1.6810000000033742e-06, 1.5969999999990159e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.4160000000006112e-06, 1.7369999999981844e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.6800000000004311e-06, 1.4860000000019302e-06, 1.7639999999978506e-06, 1.653000000000765e-06, 1.5559999999997798e-06, 2.000000000002e-06, 1.8189999999966566e-06, 1.653000000000765e-06, 1.9160000000011113e-06, 1.7229999999986145e-06, 1.832999999999696e-06, 1.944000000000251e-06, 1.6120000000015289e-06, 1.930000000000681e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.4860000000019302e-06, 1.8060000000000298e-06, 1.9299999999972117e-06, 1.6110000000020552e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:07.783" endtime="20201112 12:26:07.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.779" endtime="20201112 12:26:07.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.790" level="INFO">${RESULT} = [{'time': 0.020933125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.020936319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:07.787" endtime="20201112 12:26:07.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.799" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.791" endtime="20201112 12:26:07.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.803" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.802" endtime="20201112 12:26:07.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.805" level="INFO">VALUE: [1.4309999999996548e-06, 1.4999999999980307e-06, 1.944000000000251e-06, 1.457999999999321e-06, 1.639000000001195e-06, 1.957999999999821e-06, 1.443999999999751e-06, 1.9160000000011113e-06, 1.944000000000251e-06, 1.7770000000014163e-06, 1.6810000000033742e-06, 1.7219999999991409e-06, 1.4160000000006112e-06, 1.4860000000019302e-06, 1.6800000000004311e-06, 1.7639999999978506e-06, 1.5559999999997798e-06, 1.8189999999966566e-06, 1.9160000000011113e-06, 1.832999999999696e-06, 1.6120000000015289e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6110000000020552e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.804" endtime="20201112 12:26:07.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.800" endtime="20201112 12:26:07.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.809" endtime="20201112 12:26:07.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.812" endtime="20201112 12:26:07.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.811" endtime="20201112 12:26:07.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.807" endtime="20201112 12:26:07.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.448" endtime="20201112 12:26:07.833"></status>
</kw>
<msg timestamp="20201112 12:26:07.833" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.841" endtime="20201112 12:26:07.852"></status>
</kw>
<msg timestamp="20201112 12:26:07.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.840" endtime="20201112 12:26:07.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.853" endtime="20201112 12:26:07.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.856" endtime="20201112 12:26:07.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.837" endtime="20201112 12:26:07.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.835" endtime="20201112 12:26:07.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.865" endtime="20201112 12:26:08.135"></status>
</kw>
<msg timestamp="20201112 12:26:08.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018876431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.864" endtime="20201112 12:26:08.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018876431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.138" endtime="20201112 12:26:08.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.144" endtime="20201112 12:26:08.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.861" endtime="20201112 12:26:08.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.859" endtime="20201112 12:26:08.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.150" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.149" endtime="20201112 12:26:08.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.154" level="INFO">VALUE: [{'time': 0.018874583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018876431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018878097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018879806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018881347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018883375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018885097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018886944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018888431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.01889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018891833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018893375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018894792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018896736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018898264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.01890025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018902264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018904042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018905694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018907667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018909569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018911208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018912681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.018914236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018917597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018918958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018920708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018922458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018924278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018926167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018927903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018929431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018931181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018933097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018934764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018936542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018938292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018940139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018941778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018943542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018945444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018947417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.018949028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018950653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018952625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018954514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018956042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018957708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018959611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.152" endtime="20201112 12:26:08.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.147" endtime="20201112 12:26:08.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.171" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.157" endtime="20201112 12:26:08.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.175" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.174" endtime="20201112 12:26:08.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.178" level="INFO">VALUE: {'sourcediff': [0, 1.8479999999987395e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.5410000000007362e-06, 2.02800000000114e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.4870000000014039e-06, 1.568999999999876e-06, 1.832999999999696e-06, 1.5420000000002099e-06, 1.4170000000000849e-06, 1.944000000000251e-06, 1.52800000000064e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.77800000000089e-06, 1.6520000000012913e-06, 1.9729999999988646e-06, 1.9020000000015413e-06, 1.6389999999977256e-06, 1.473000000001834e-06, 1.5550000000003061e-06, 1.3889999999974756e-06, 1.9720000000028604e-06, 1.3609999999983358e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.9160000000011113e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.8470000000027353e-06, 1.6389999999977256e-06, 1.76400000000132e-06, 1.901999999998072e-06, 1.973000000002334e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.971999999999391e-06, 1.8889999999979756e-06, 1.52800000000064e-06, 1.6660000000008612e-06, 1.903000000001015e-06], 'eventtime': [0.018874583, 0.018876431, 0.018878097, 0.018879806, 0.018881347, 0.018883375, 0.018885097, 0.018886944, 0.018888431, 0.01889, 0.018891833, 0.018893375, 0.018894792, 0.018896736, 0.018898264, 0.01890025, 0.018902264, 0.018904042, 0.018905694, 0.018907667, 0.018909569, 0.018911208, 0.018912681, 0.018914236, 0.018915625, 0.018917597, 0.018918958, 0.018920708, 0.018922458, 0.018924278, 0.018926167, 0.018927903, 0.018929431, 0.018931181, 0.018933097, 0.018934764, 0.018936542, 0.018938292, 0.018940139, 0.018941778, 0.018943542, 0.018945444, 0.018947417, 0.018949028, 0.018950653, 0.018952625, 0.018954514, 0.018956042, 0.018957708, 0.018959611], 'source_diff': [0, 1.8479999999987395e-06, 1.6660000000008612e-06, 1.7089999999990446e-06, 1.5410000000007362e-06, 2.02800000000114e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.4870000000014039e-06, 1.568999999999876e-06, 1.832999999999696e-06, 1.5420000000002099e-06, 1.4170000000000849e-06, 1.944000000000251e-06, 1.52800000000064e-06, 1.985999999998961e-06, 2.0139999999981006e-06, 1.77800000000089e-06, 1.6520000000012913e-06, 1.9729999999988646e-06, 1.9020000000015413e-06, 1.6389999999977256e-06, 1.473000000001834e-06, 1.5550000000003061e-06, 1.3889999999974756e-06, 1.9720000000028604e-06, 1.3609999999983358e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.8199999999995997e-06, 1.889000000001445e-06, 1.7359999999987108e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.9160000000011113e-06, 1.6670000000003349e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.8470000000027353e-06, 1.6389999999977256e-06, 1.76400000000132e-06, 1.901999999998072e-06, 1.973000000002334e-06, 1.6109999999985858e-06, 1.6250000000016251e-06, 1.971999999999391e-06, 1.8889999999979756e-06, 1.52800000000064e-06, 1.6660000000008612e-06, 1.903000000001015e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.176" endtime="20201112 12:26:08.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.172" endtime="20201112 12:26:08.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.183" level="INFO">${RESULT} = [{'time': 0.018876431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018879806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.180" endtime="20201112 12:26:08.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.191" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.184" endtime="20201112 12:26:08.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.196" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.195" endtime="20201112 12:26:08.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.198" level="INFO">VALUE: [1.8479999999987395e-06, 1.7089999999990446e-06, 2.02800000000114e-06, 1.846999999999266e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.944000000000251e-06, 1.985999999998961e-06, 1.77800000000089e-06, 1.9729999999988646e-06, 1.6389999999977256e-06, 1.5550000000003061e-06, 1.9720000000028604e-06, 1.7500000000017502e-06, 1.8199999999995997e-06, 1.7359999999987108e-06, 1.7499999999982807e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.6389999999977256e-06, 1.901999999998072e-06, 1.6109999999985858e-06, 1.971999999999391e-06, 1.52800000000064e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.197" endtime="20201112 12:26:08.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.192" endtime="20201112 12:26:08.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.202" endtime="20201112 12:26:08.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.205" endtime="20201112 12:26:08.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.204" endtime="20201112 12:26:08.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.200" endtime="20201112 12:26:08.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.834" endtime="20201112 12:26:08.226"></status>
</kw>
<msg timestamp="20201112 12:26:08.226" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.234" endtime="20201112 12:26:08.245"></status>
</kw>
<msg timestamp="20201112 12:26:08.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.233" endtime="20201112 12:26:08.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.248" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.246" endtime="20201112 12:26:08.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.249" endtime="20201112 12:26:08.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.230" endtime="20201112 12:26:08.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.228" endtime="20201112 12:26:08.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.258" endtime="20201112 12:26:08.527"></status>
</kw>
<msg timestamp="20201112 12:26:08.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018829931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.257" endtime="20201112 12:26:08.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018829931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.530" endtime="20201112 12:26:08.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.536" endtime="20201112 12:26:08.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.254" endtime="20201112 12:26:08.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.252" endtime="20201112 12:26:08.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.544" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.543" endtime="20201112 12:26:08.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.548" level="INFO">VALUE: [{'time': 0.018828347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018829931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018831681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018833306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018834806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018836319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018837861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018839569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018841556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.018843069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018845014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018846764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.0188485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018850208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018851958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018853611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018855319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018857222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018859042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018860792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018864431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018865819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.387999999998002e-06, 'source_diff': 1.387999999998002e-06}, {'time': 0.018867792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.01886925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018871167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018872847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018874319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018875764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018877639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018879236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018881028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018882944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018884903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.959000000002764e-06, 'source_diff': 1.959000000002764e-06}, {'time': 0.018886819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018888222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018889819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018891583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018893194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018894917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018896806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018898722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018900667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018902208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018903736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018905486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.01890725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018908722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018910361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018912208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.545" endtime="20201112 12:26:08.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.540" endtime="20201112 12:26:08.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.569" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.556" endtime="20201112 12:26:08.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.573" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.572" endtime="20201112 12:26:08.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.577" level="INFO">VALUE: {'sourcediff': [0, 1.584000000002389e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.5130000000015964e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.9869999999984345e-06, 1.5130000000015964e-06, 1.9449999999997247e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.9299999999972117e-06, 1.709000000002514e-06, 1.387999999998002e-06, 1.973000000002334e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.6800000000004311e-06, 1.4719999999988909e-06, 1.4449999999992247e-06, 1.8750000000018752e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.915999999997642e-06, 1.959000000002764e-06, 1.915999999997642e-06, 1.403000000000515e-06, 1.5969999999990159e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.723000000002084e-06, 1.8889999999979756e-06, 1.9160000000011113e-06, 1.9449999999997247e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.846999999999266e-06], 'eventtime': [0.018828347, 0.018829931, 0.018831681, 0.018833306, 0.018834806, 0.018836319, 0.018837861, 0.018839569, 0.018841556, 0.018843069, 0.018845014, 0.018846764, 0.0188485, 0.018850208, 0.018851958, 0.018853611, 0.018855319, 0.018857222, 0.018859042, 0.018860792, 0.018862722, 0.018864431, 0.018865819, 0.018867792, 0.01886925, 0.018871167, 0.018872847, 0.018874319, 0.018875764, 0.018877639, 0.018879236, 0.018881028, 0.018882944, 0.018884903, 0.018886819, 0.018888222, 0.018889819, 0.018891583, 0.018893194, 0.018894917, 0.018896806, 0.018898722, 0.018900667, 0.018902208, 0.018903736, 0.018905486, 0.01890725, 0.018908722, 0.018910361, 0.018912208], 'source_diff': [0, 1.584000000002389e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.5130000000015964e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.9869999999984345e-06, 1.5130000000015964e-06, 1.9449999999997247e-06, 1.7499999999982807e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.9299999999972117e-06, 1.709000000002514e-06, 1.387999999998002e-06, 1.973000000002334e-06, 1.457999999999321e-06, 1.917000000000585e-06, 1.6800000000004311e-06, 1.4719999999988909e-06, 1.4449999999992247e-06, 1.8750000000018752e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.915999999997642e-06, 1.959000000002764e-06, 1.915999999997642e-06, 1.403000000000515e-06, 1.5969999999990159e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.723000000002084e-06, 1.8889999999979756e-06, 1.9160000000011113e-06, 1.9449999999997247e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.846999999999266e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.575" endtime="20201112 12:26:08.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.570" endtime="20201112 12:26:08.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.581" level="INFO">${RESULT} = [{'time': 0.018829931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018833306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.579" endtime="20201112 12:26:08.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.590" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.582" endtime="20201112 12:26:08.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.594" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.593" endtime="20201112 12:26:08.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.596" level="INFO">VALUE: [1.584000000002389e-06, 1.6250000000016251e-06, 1.5130000000015964e-06, 1.707999999999571e-06, 1.5130000000015964e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.903000000001015e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.973000000002334e-06, 1.917000000000585e-06, 1.4719999999988909e-06, 1.8750000000018752e-06, 1.7920000000004599e-06, 1.959000000002764e-06, 1.403000000000515e-06, 1.76400000000132e-06, 1.723000000002084e-06, 1.9160000000011113e-06, 1.5410000000007362e-06, 1.7499999999982807e-06, 1.4719999999988909e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.595" endtime="20201112 12:26:08.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.590" endtime="20201112 12:26:08.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.600" endtime="20201112 12:26:08.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.604" endtime="20201112 12:26:08.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.602" endtime="20201112 12:26:08.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.598" endtime="20201112 12:26:08.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.227" endtime="20201112 12:26:08.624"></status>
</kw>
<msg timestamp="20201112 12:26:08.625" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.632" endtime="20201112 12:26:08.642"></status>
</kw>
<msg timestamp="20201112 12:26:08.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.631" endtime="20201112 12:26:08.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.644" endtime="20201112 12:26:08.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.646" endtime="20201112 12:26:08.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.628" endtime="20201112 12:26:08.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.626" endtime="20201112 12:26:08.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.657" endtime="20201112 12:26:08.926"></status>
</kw>
<msg timestamp="20201112 12:26:08.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.655" endtime="20201112 12:26:08.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.929" endtime="20201112 12:26:08.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.934" endtime="20201112 12:26:08.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.651" endtime="20201112 12:26:08.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.650" endtime="20201112 12:26:08.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.941" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.940" endtime="20201112 12:26:08.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.945" level="INFO">VALUE: [{'time': 0.018632278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018637278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018639125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018640806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018642569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.018644264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018646056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018647986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018649556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018651319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018652736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018654264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018657431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018658833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018660389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018661958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018663569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018665181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}, {'time': 0.018666847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018668403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018670431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018671764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.018673778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018677486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018679333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018681028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018682556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018684014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018685958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018687556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018689278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018691056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018692681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018694347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018696139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018697931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018699542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018701153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018704306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.01870625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018708056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018709958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.018711583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018713181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018714986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.942" endtime="20201112 12:26:08.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.938" endtime="20201112 12:26:08.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.960" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.947" endtime="20201112 12:26:08.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.964" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.963" endtime="20201112 12:26:08.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.968" level="INFO">VALUE: {'sourcediff': [0, 1.4160000000006112e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.6809999999999048e-06, 1.7630000000018464e-06, 1.6949999999994747e-06, 1.7920000000004599e-06, 1.9299999999972117e-06, 1.5700000000028191e-06, 1.762999999998377e-06, 1.4170000000000849e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.4729999999983645e-06, 1.4020000000010413e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.6110000000020552e-06, 1.6119999999980594e-06, 1.6660000000008612e-06, 1.5559999999997798e-06, 2.02800000000114e-06, 1.332999999999196e-06, 2.0139999999981006e-06, 1.930000000000681e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.6949999999994747e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.944000000000251e-06, 1.598000000001959e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.6249999999981557e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.7920000000004599e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.51400000000107e-06, 1.944000000000251e-06, 1.8060000000000298e-06, 1.901999999998072e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.8050000000005562e-06], 'eventtime': [0.018632278, 0.018633694, 0.018635403, 0.018637278, 0.018639125, 0.018640806, 0.018642569, 0.018644264, 0.018646056, 0.018647986, 0.018649556, 0.018651319, 0.018652736, 0.018654264, 0.018655958, 0.018657431, 0.018658833, 0.018660389, 0.018661958, 0.018663569, 0.018665181, 0.018666847, 0.018668403, 0.018670431, 0.018671764, 0.018673778, 0.018675708, 0.018677486, 0.018679333, 0.018681028, 0.018682556, 0.018684014, 0.018685958, 0.018687556, 0.018689278, 0.018691056, 0.018692681, 0.018694347, 0.018696139, 0.018697931, 0.018699542, 0.018701153, 0.018702792, 0.018704306, 0.01870625, 0.018708056, 0.018709958, 0.018711583, 0.018713181, 0.018714986], 'source_diff': [0, 1.4160000000006112e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.6809999999999048e-06, 1.7630000000018464e-06, 1.6949999999994747e-06, 1.7920000000004599e-06, 1.9299999999972117e-06, 1.5700000000028191e-06, 1.762999999998377e-06, 1.4170000000000849e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.4729999999983645e-06, 1.4020000000010413e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.6110000000020552e-06, 1.6119999999980594e-06, 1.6660000000008612e-06, 1.5559999999997798e-06, 2.02800000000114e-06, 1.332999999999196e-06, 2.0139999999981006e-06, 1.930000000000681e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.6949999999994747e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.944000000000251e-06, 1.598000000001959e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.6249999999981557e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.7920000000004599e-06, 1.6109999999985858e-06, 1.6110000000020552e-06, 1.6389999999977256e-06, 1.51400000000107e-06, 1.944000000000251e-06, 1.8060000000000298e-06, 1.901999999998072e-06, 1.6250000000016251e-06, 1.5979999999984895e-06, 1.8050000000005562e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.965" endtime="20201112 12:26:08.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.961" endtime="20201112 12:26:08.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.972" level="INFO">${RESULT} = [{'time': 0.018633694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018637278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.969" endtime="20201112 12:26:08.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.980" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.973" endtime="20201112 12:26:08.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.985" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.984" endtime="20201112 12:26:08.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.987" level="INFO">VALUE: [1.4160000000006112e-06, 1.8750000000018752e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.9299999999972117e-06, 1.762999999998377e-06, 1.52800000000064e-06, 1.4729999999983645e-06, 1.5559999999997798e-06, 1.6110000000020552e-06, 1.6660000000008612e-06, 2.02800000000114e-06, 2.0139999999981006e-06, 1.77800000000089e-06, 1.6949999999994747e-06, 1.457999999999321e-06, 1.598000000001959e-06, 1.77800000000089e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.6110000000020552e-06, 1.51400000000107e-06, 1.8060000000000298e-06, 1.6250000000016251e-06, 1.8050000000005562e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.986" endtime="20201112 12:26:08.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.981" endtime="20201112 12:26:08.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.991" endtime="20201112 12:26:08.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.994" endtime="20201112 12:26:09.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.993" endtime="20201112 12:26:09.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.989" endtime="20201112 12:26:09.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.625" endtime="20201112 12:26:09.015"></status>
</kw>
<msg timestamp="20201112 12:26:09.016" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.024" endtime="20201112 12:26:09.033"></status>
</kw>
<msg timestamp="20201112 12:26:09.034" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.022" endtime="20201112 12:26:09.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.035" endtime="20201112 12:26:09.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.037" endtime="20201112 12:26:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.019" endtime="20201112 12:26:09.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.018" endtime="20201112 12:26:09.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.047" endtime="20201112 12:26:09.316"></status>
</kw>
<msg timestamp="20201112 12:26:09.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.046" endtime="20201112 12:26:09.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.319" endtime="20201112 12:26:09.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.325" endtime="20201112 12:26:09.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.043" endtime="20201112 12:26:09.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.041" endtime="20201112 12:26:09.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.331" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.330" endtime="20201112 12:26:09.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.335" level="INFO">VALUE: [{'time': 0.019009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019010903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019012833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019014514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.01901625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019018028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019019528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019021319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.019022931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.019024389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019026028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019027903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019029681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019031347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019032931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019034625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019036514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019038153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019040139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.019041861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019043639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019045542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019047014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019048611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019050542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019052097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019053528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019055319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019057097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.01905875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.0190605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019062083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019063958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019065486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019066944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019068722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019070528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019072306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019074042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019075667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019077167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019078597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019080444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019082194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019083736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019085319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.01908875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019090583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.019092056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:09.333" endtime="20201112 12:26:09.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.328" endtime="20201112 12:26:09.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.352" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.338" endtime="20201112 12:26:09.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.356" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.355" endtime="20201112 12:26:09.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.359" level="INFO">VALUE: {'sourcediff': [0, 1.6949999999994747e-06, 1.930000000000681e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.5000000000015001e-06, 1.7909999999975168e-06, 1.6120000000015289e-06, 1.457999999999321e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.6660000000008612e-06, 1.5839999999989196e-06, 1.694000000000001e-06, 1.889000000001445e-06, 1.6389999999977256e-06, 1.9860000000024303e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.9029999999975455e-06, 1.4720000000023603e-06, 1.5969999999990159e-06, 1.931000000000155e-06, 1.5550000000003061e-06, 1.4309999999996548e-06, 1.7910000000009862e-06, 1.7779999999974205e-06, 1.653000000000765e-06, 1.7500000000017502e-06, 1.582999999999446e-06, 1.8749999999984057e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.77800000000089e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.4300000000001811e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.4870000000014039e-06, 1.944000000000251e-06, 1.832999999999696e-06, 1.4729999999983645e-06], 'eventtime': [0.019009208, 0.019010903, 0.019012833, 0.019014514, 0.01901625, 0.019018028, 0.019019528, 0.019021319, 0.019022931, 0.019024389, 0.019026028, 0.019027903, 0.019029681, 0.019031347, 0.019032931, 0.019034625, 0.019036514, 0.019038153, 0.019040139, 0.019041861, 0.019043639, 0.019045542, 0.019047014, 0.019048611, 0.019050542, 0.019052097, 0.019053528, 0.019055319, 0.019057097, 0.01905875, 0.0190605, 0.019062083, 0.019063958, 0.019065486, 0.019066944, 0.019068722, 0.019070528, 0.019072306, 0.019074042, 0.019075667, 0.019077167, 0.019078597, 0.019080444, 0.019082194, 0.019083736, 0.019085319, 0.019086806, 0.01908875, 0.019090583, 0.019092056], 'source_diff': [0, 1.6949999999994747e-06, 1.930000000000681e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.77800000000089e-06, 1.5000000000015001e-06, 1.7909999999975168e-06, 1.6120000000015289e-06, 1.457999999999321e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.6660000000008612e-06, 1.5839999999989196e-06, 1.694000000000001e-06, 1.889000000001445e-06, 1.6389999999977256e-06, 1.9860000000024303e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.9029999999975455e-06, 1.4720000000023603e-06, 1.5969999999990159e-06, 1.931000000000155e-06, 1.5550000000003061e-06, 1.4309999999996548e-06, 1.7910000000009862e-06, 1.7779999999974205e-06, 1.653000000000765e-06, 1.7500000000017502e-06, 1.582999999999446e-06, 1.8749999999984057e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.77800000000089e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.4300000000001811e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.4870000000014039e-06, 1.944000000000251e-06, 1.832999999999696e-06, 1.4729999999983645e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:09.357" endtime="20201112 12:26:09.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.353" endtime="20201112 12:26:09.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.364" level="INFO">${RESULT} = [{'time': 0.019010903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019014514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:09.361" endtime="20201112 12:26:09.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.372" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.365" endtime="20201112 12:26:09.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.375" endtime="20201112 12:26:09.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.379" level="INFO">VALUE: [1.6949999999994747e-06, 1.6809999999999048e-06, 1.77800000000089e-06, 1.7909999999975168e-06, 1.457999999999321e-06, 1.8749999999984057e-06, 1.6660000000008612e-06, 1.694000000000001e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.9029999999975455e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.7910000000009862e-06, 1.653000000000765e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.6250000000016251e-06, 1.4300000000001811e-06, 1.7500000000017502e-06, 1.582999999999446e-06, 1.944000000000251e-06, 1.4729999999983645e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.378" endtime="20201112 12:26:09.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.373" endtime="20201112 12:26:09.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.382" endtime="20201112 12:26:09.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.386" endtime="20201112 12:26:09.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.384" endtime="20201112 12:26:09.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.381" endtime="20201112 12:26:09.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.016" endtime="20201112 12:26:09.407"></status>
</kw>
<msg timestamp="20201112 12:26:09.407" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.416" endtime="20201112 12:26:09.425"></status>
</kw>
<msg timestamp="20201112 12:26:09.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.414" endtime="20201112 12:26:09.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.427" endtime="20201112 12:26:09.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.430" endtime="20201112 12:26:09.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.411" endtime="20201112 12:26:09.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.409" endtime="20201112 12:26:09.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.439" endtime="20201112 12:26:09.708"></status>
</kw>
<msg timestamp="20201112 12:26:09.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.437" endtime="20201112 12:26:09.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.711" endtime="20201112 12:26:09.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.717" endtime="20201112 12:26:09.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.435" endtime="20201112 12:26:09.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.433" endtime="20201112 12:26:09.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.724" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.723" endtime="20201112 12:26:09.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.727" level="INFO">VALUE: [{'time': 0.019741597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019744931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.019746819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.019748472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019750417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019752097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019753792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019755306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019756958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019758722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.01976025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019761931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019763639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019765167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019766917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019770028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.019771931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019773806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019775569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.019777264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019780847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019782375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019783986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019785514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019787319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019790444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019791847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019793681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019795375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.01979725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019799069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019800764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019802181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019803819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.019805806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.019807347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019808778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019810194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019812097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019813917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019815639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019817042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019818472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019820347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019823681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:09.725" endtime="20201112 12:26:09.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.720" endtime="20201112 12:26:09.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.743" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.730" endtime="20201112 12:26:09.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.747" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.746" endtime="20201112 12:26:09.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.750" level="INFO">VALUE: {'sourcediff': [0, 1.6250000000016251e-06, 1.7089999999990446e-06, 1.887999999998502e-06, 1.653000000000765e-06, 1.9449999999997247e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.51400000000107e-06, 1.6520000000012913e-06, 1.7639999999978506e-06, 1.52800000000064e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.4580000000027904e-06, 1.6529999999972955e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.762999999998377e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.6249999999981557e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.8339999999991696e-06, 1.694000000000001e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.4170000000000849e-06, 1.6380000000017214e-06, 1.9869999999984345e-06, 1.5410000000007362e-06, 1.4309999999996548e-06, 1.4160000000006112e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.7219999999991409e-06, 1.403000000000515e-06, 1.4300000000001811e-06, 1.8749999999984057e-06, 1.4860000000019302e-06, 1.8479999999987395e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.019741597, 0.019743222, 0.019744931, 0.019746819, 0.019748472, 0.019750417, 0.019752097, 0.019753792, 0.019755306, 0.019756958, 0.019758722, 0.01976025, 0.019761931, 0.019763639, 0.019765167, 0.019766917, 0.019768375, 0.019770028, 0.019771931, 0.019773806, 0.019775569, 0.019777264, 0.019779153, 0.019780847, 0.019782375, 0.019783986, 0.019785514, 0.019787319, 0.019788944, 0.019790444, 0.019791847, 0.019793681, 0.019795375, 0.01979725, 0.019799069, 0.019800764, 0.019802181, 0.019803819, 0.019805806, 0.019807347, 0.019808778, 0.019810194, 0.019812097, 0.019813917, 0.019815639, 0.019817042, 0.019818472, 0.019820347, 0.019821833, 0.019823681], 'source_diff': [0, 1.6250000000016251e-06, 1.7089999999990446e-06, 1.887999999998502e-06, 1.653000000000765e-06, 1.9449999999997247e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.51400000000107e-06, 1.6520000000012913e-06, 1.7639999999978506e-06, 1.52800000000064e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.4580000000027904e-06, 1.6529999999972955e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.762999999998377e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.6249999999981557e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.8339999999991696e-06, 1.694000000000001e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.6949999999994747e-06, 1.4170000000000849e-06, 1.6380000000017214e-06, 1.9869999999984345e-06, 1.5410000000007362e-06, 1.4309999999996548e-06, 1.4160000000006112e-06, 1.903000000001015e-06, 1.8199999999995997e-06, 1.7219999999991409e-06, 1.403000000000515e-06, 1.4300000000001811e-06, 1.8749999999984057e-06, 1.4860000000019302e-06, 1.8479999999987395e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:09.748" endtime="20201112 12:26:09.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.744" endtime="20201112 12:26:09.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.755" level="INFO">${RESULT} = [{'time': 0.019743222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019746819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:09.752" endtime="20201112 12:26:09.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.763" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.756" endtime="20201112 12:26:09.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.768" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.767" endtime="20201112 12:26:09.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.770" level="INFO">VALUE: [1.6250000000016251e-06, 1.887999999998502e-06, 1.9449999999997247e-06, 1.6949999999994747e-06, 1.6520000000012913e-06, 1.52800000000064e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.6529999999972955e-06, 1.8750000000018752e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6109999999985858e-06, 1.8050000000005562e-06, 1.5000000000015001e-06, 1.8339999999991696e-06, 1.8749999999984057e-06, 1.6949999999994747e-06, 1.6380000000017214e-06, 1.5410000000007362e-06, 1.4160000000006112e-06, 1.8199999999995997e-06, 1.403000000000515e-06, 1.8749999999984057e-06, 1.8479999999987395e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.769" endtime="20201112 12:26:09.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.764" endtime="20201112 12:26:09.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.774" endtime="20201112 12:26:09.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.777" endtime="20201112 12:26:09.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.776" endtime="20201112 12:26:09.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.772" endtime="20201112 12:26:09.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.408" endtime="20201112 12:26:09.799"></status>
</kw>
<msg timestamp="20201112 12:26:09.799" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.807" endtime="20201112 12:26:09.816"></status>
</kw>
<msg timestamp="20201112 12:26:09.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.805" endtime="20201112 12:26:09.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.818" endtime="20201112 12:26:09.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.820" endtime="20201112 12:26:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.803" endtime="20201112 12:26:09.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.801" endtime="20201112 12:26:09.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.830" endtime="20201112 12:26:10.099"></status>
</kw>
<msg timestamp="20201112 12:26:10.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.828" endtime="20201112 12:26:10.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.102" endtime="20201112 12:26:10.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.107" endtime="20201112 12:26:10.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.826" endtime="20201112 12:26:10.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.824" endtime="20201112 12:26:10.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.114" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.113" endtime="20201112 12:26:10.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.118" level="INFO">VALUE: [{'time': 0.019501167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019506944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999967816e-06, 'source_diff': 1.9439999999967816e-06}, {'time': 0.019508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.019510319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019512292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.019514014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019515556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019516972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019518639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019520333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019521833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019523611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019525528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019526944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019528722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019530361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019532278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.01953425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019536222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019538194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019540083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019541736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019543403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019545292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019547153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019548972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019550889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.019552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019554153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.019555736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019557528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019559222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019560917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019562319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.019564014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019565458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019566958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019568889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019570486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019571903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019573792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019575556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019576931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019578333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.019580542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.019582431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019584139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019585736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:10.115" endtime="20201112 12:26:10.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.110" endtime="20201112 12:26:10.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.133" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.120" endtime="20201112 12:26:10.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.138" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.137" endtime="20201112 12:26:10.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.141" level="INFO">VALUE: {'sourcediff': [0, 1.971999999999391e-06, 1.8610000000023053e-06, 1.9439999999967816e-06, 1.6950000000029442e-06, 1.6800000000004311e-06, 1.9729999999988646e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 1.4160000000006112e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.4999999999980307e-06, 1.77800000000089e-06, 1.917000000000585e-06, 1.4160000000006112e-06, 1.7779999999974205e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.889000000001445e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.9169999999971155e-06, 1.6800000000004311e-06, 1.584000000002389e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.4020000000010413e-06, 1.6949999999994747e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.931000000000155e-06, 1.5970000000024853e-06, 1.4170000000000849e-06, 1.8889999999979756e-06, 1.76400000000132e-06, 1.3749999999979057e-06, 1.4020000000010413e-06, 2.2089999999995447e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5969999999990159e-06], 'eventtime': [0.019501167, 0.019503139, 0.019505, 0.019506944, 0.019508639, 0.019510319, 0.019512292, 0.019514014, 0.019515556, 0.019516972, 0.019518639, 0.019520333, 0.019521833, 0.019523611, 0.019525528, 0.019526944, 0.019528722, 0.019530361, 0.019532278, 0.01953425, 0.019536222, 0.019538194, 0.019540083, 0.019541736, 0.019543403, 0.019545292, 0.019547153, 0.019548972, 0.019550889, 0.019552569, 0.019554153, 0.019555736, 0.019557528, 0.019559222, 0.019560917, 0.019562319, 0.019564014, 0.019565458, 0.019566958, 0.019568889, 0.019570486, 0.019571903, 0.019573792, 0.019575556, 0.019576931, 0.019578333, 0.019580542, 0.019582431, 0.019584139, 0.019585736], 'source_diff': [0, 1.971999999999391e-06, 1.8610000000023053e-06, 1.9439999999967816e-06, 1.6950000000029442e-06, 1.6800000000004311e-06, 1.9729999999988646e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 1.4160000000006112e-06, 1.6670000000003349e-06, 1.694000000000001e-06, 1.4999999999980307e-06, 1.77800000000089e-06, 1.917000000000585e-06, 1.4160000000006112e-06, 1.7779999999974205e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.889000000001445e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.9169999999971155e-06, 1.6800000000004311e-06, 1.584000000002389e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.4020000000010413e-06, 1.6949999999994747e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.931000000000155e-06, 1.5970000000024853e-06, 1.4170000000000849e-06, 1.8889999999979756e-06, 1.76400000000132e-06, 1.3749999999979057e-06, 1.4020000000010413e-06, 2.2089999999995447e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5969999999990159e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:10.139" endtime="20201112 12:26:10.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.134" endtime="20201112 12:26:10.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.145" level="INFO">${RESULT} = [{'time': 0.019503139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019506944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.143" endtime="20201112 12:26:10.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.154" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.146" endtime="20201112 12:26:10.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.159" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.157" endtime="20201112 12:26:10.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.161" level="INFO">VALUE: [1.971999999999391e-06, 1.9439999999967816e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.4160000000006112e-06, 1.694000000000001e-06, 1.77800000000089e-06, 1.4160000000006112e-06, 1.639000000001195e-06, 1.971999999999391e-06, 1.971999999999391e-06, 1.653000000000765e-06, 1.8889999999979756e-06, 1.819000000000126e-06, 1.6800000000004311e-06, 1.582999999999446e-06, 1.694000000000001e-06, 1.4020000000010413e-06, 1.443999999999751e-06, 1.931000000000155e-06, 1.4170000000000849e-06, 1.76400000000132e-06, 1.4020000000010413e-06, 1.889000000001445e-06, 1.5969999999990159e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.160" endtime="20201112 12:26:10.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.155" endtime="20201112 12:26:10.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.164" endtime="20201112 12:26:10.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.168" endtime="20201112 12:26:10.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.166" endtime="20201112 12:26:10.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.163" endtime="20201112 12:26:10.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.800" endtime="20201112 12:26:10.189"></status>
</kw>
<msg timestamp="20201112 12:26:10.189" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.197" endtime="20201112 12:26:10.206"></status>
</kw>
<msg timestamp="20201112 12:26:10.207" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.195" endtime="20201112 12:26:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.208" endtime="20201112 12:26:10.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.211" endtime="20201112 12:26:10.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.193" endtime="20201112 12:26:10.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.191" endtime="20201112 12:26:10.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.221" endtime="20201112 12:26:10.490"></status>
</kw>
<msg timestamp="20201112 12:26:10.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.219" endtime="20201112 12:26:10.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.493" endtime="20201112 12:26:10.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.499" endtime="20201112 12:26:10.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.216" endtime="20201112 12:26:10.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.214" endtime="20201112 12:26:10.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.506" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.505" endtime="20201112 12:26:10.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.510" level="INFO">VALUE: [{'time': 0.018783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018784986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018786903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018788708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018790403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018791944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018793944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018795833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018797375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018798778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.018800278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018802222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018803778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018805639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018807306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018808833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018810333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018811736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018813375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018815042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018816625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018818597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018820014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018822111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.096999999999516e-06, 'source_diff': 2.096999999999516e-06}, {'time': 0.018823458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.018825403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018826861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018828681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018830222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018831597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.018833542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.945000000003194e-06, 'source_diff': 1.945000000003194e-06}, {'time': 0.018834986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018836667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018838431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018839931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018841319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.387999999998002e-06, 'source_diff': 1.387999999998002e-06}, {'time': 0.018843208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018844694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018846389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018848319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018849875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018851583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.01885325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.018854847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018856444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018858125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018859736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018861583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018863208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018864764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:10.507" endtime="20201112 12:26:10.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.503" endtime="20201112 12:26:10.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.527" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.512" endtime="20201112 12:26:10.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.531" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.530" endtime="20201112 12:26:10.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.534" level="INFO">VALUE: {'sourcediff': [0, 1.77800000000089e-06, 1.917000000000585e-06, 1.8050000000005562e-06, 1.6949999999994747e-06, 1.5410000000007362e-06, 1.9999999999985307e-06, 1.889000000001445e-06, 1.5420000000002099e-06, 1.4029999999970455e-06, 1.5000000000015001e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.8609999999988358e-06, 1.6670000000003349e-06, 1.5270000000011663e-06, 1.4999999999980307e-06, 1.403000000000515e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.4170000000000849e-06, 2.096999999999516e-06, 1.3470000000022353e-06, 1.9449999999997247e-06, 1.457999999999321e-06, 1.8199999999995997e-06, 1.5410000000007362e-06, 1.3749999999979057e-06, 1.945000000003194e-06, 1.443999999999751e-06, 1.6809999999999048e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.387999999998002e-06, 1.889000000001445e-06, 1.4859999999984608e-06, 1.6950000000029442e-06, 1.9299999999972117e-06, 1.5559999999997798e-06, 1.7080000000030404e-06, 1.6669999999968654e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6809999999999048e-06, 1.6109999999985858e-06, 1.8470000000027353e-06, 1.6249999999981557e-06, 1.5559999999997798e-06], 'eventtime': [0.018783208, 0.018784986, 0.018786903, 0.018788708, 0.018790403, 0.018791944, 0.018793944, 0.018795833, 0.018797375, 0.018798778, 0.018800278, 0.018802222, 0.018803778, 0.018805639, 0.018807306, 0.018808833, 0.018810333, 0.018811736, 0.018813375, 0.018815042, 0.018816625, 0.018818597, 0.018820014, 0.018822111, 0.018823458, 0.018825403, 0.018826861, 0.018828681, 0.018830222, 0.018831597, 0.018833542, 0.018834986, 0.018836667, 0.018838431, 0.018839931, 0.018841319, 0.018843208, 0.018844694, 0.018846389, 0.018848319, 0.018849875, 0.018851583, 0.01885325, 0.018854847, 0.018856444, 0.018858125, 0.018859736, 0.018861583, 0.018863208, 0.018864764], 'source_diff': [0, 1.77800000000089e-06, 1.917000000000585e-06, 1.8050000000005562e-06, 1.6949999999994747e-06, 1.5410000000007362e-06, 1.9999999999985307e-06, 1.889000000001445e-06, 1.5420000000002099e-06, 1.4029999999970455e-06, 1.5000000000015001e-06, 1.944000000000251e-06, 1.5559999999997798e-06, 1.8609999999988358e-06, 1.6670000000003349e-06, 1.5270000000011663e-06, 1.4999999999980307e-06, 1.403000000000515e-06, 1.639000000001195e-06, 1.6670000000003349e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.4170000000000849e-06, 2.096999999999516e-06, 1.3470000000022353e-06, 1.9449999999997247e-06, 1.457999999999321e-06, 1.8199999999995997e-06, 1.5410000000007362e-06, 1.3749999999979057e-06, 1.945000000003194e-06, 1.443999999999751e-06, 1.6809999999999048e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.387999999998002e-06, 1.889000000001445e-06, 1.4859999999984608e-06, 1.6950000000029442e-06, 1.9299999999972117e-06, 1.5559999999997798e-06, 1.7080000000030404e-06, 1.6669999999968654e-06, 1.5970000000024853e-06, 1.5969999999990159e-06, 1.6809999999999048e-06, 1.6109999999985858e-06, 1.8470000000027353e-06, 1.6249999999981557e-06, 1.5559999999997798e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:10.532" endtime="20201112 12:26:10.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.528" endtime="20201112 12:26:10.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.539" level="INFO">${RESULT} = [{'time': 0.018784986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018788708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:10.536" endtime="20201112 12:26:10.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.547" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.540" endtime="20201112 12:26:10.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.552" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.551" endtime="20201112 12:26:10.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.554" level="INFO">VALUE: [1.77800000000089e-06, 1.8050000000005562e-06, 1.5410000000007362e-06, 1.889000000001445e-06, 1.4029999999970455e-06, 1.944000000000251e-06, 1.8609999999988358e-06, 1.5270000000011663e-06, 1.403000000000515e-06, 1.6670000000003349e-06, 1.971999999999391e-06, 2.096999999999516e-06, 1.9449999999997247e-06, 1.8199999999995997e-06, 1.3749999999979057e-06, 1.443999999999751e-06, 1.7639999999978506e-06, 1.387999999998002e-06, 1.4859999999984608e-06, 1.9299999999972117e-06, 1.7080000000030404e-06, 1.5970000000024853e-06, 1.6809999999999048e-06, 1.8470000000027353e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.553" endtime="20201112 12:26:10.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.548" endtime="20201112 12:26:10.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.558" endtime="20201112 12:26:10.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.561" endtime="20201112 12:26:10.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.560" endtime="20201112 12:26:10.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.556" endtime="20201112 12:26:10.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.190" endtime="20201112 12:26:10.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:02.734" endtime="20201112 12:26:10.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.591" endtime="20201112 12:26:10.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.590" endtime="20201112 12:26:10.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.588" endtime="20201112 12:26:10.612"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:02.663" endtime="20201112 12:26:10.612" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.621" endtime="20201112 12:26:10.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.620" endtime="20201112 12:26:10.641"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.656" endtime="20201112 12:26:10.670"></status>
</kw>
<msg timestamp="20201112 12:26:10.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.653" endtime="20201112 12:26:10.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.671" endtime="20201112 12:26:10.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.676" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:10.674" endtime="20201112 12:26:10.676"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.651" endtime="20201112 12:26:10.677"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:10.648" endtime="20201112 12:26:10.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.647" endtime="20201112 12:26:10.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:10.682" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:10.681" endtime="20201112 12:26:10.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.679" endtime="20201112 12:26:10.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.646" endtime="20201112 12:26:10.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.645" endtime="20201112 12:26:10.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.684" endtime="20201112 12:26:10.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.644" endtime="20201112 12:26:10.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.642" endtime="20201112 12:26:10.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.618" endtime="20201112 12:26:10.687"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:10.690" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.698" endtime="20201112 12:26:10.709"></status>
</kw>
<msg timestamp="20201112 12:26:10.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.696" endtime="20201112 12:26:10.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.711" endtime="20201112 12:26:10.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.714" endtime="20201112 12:26:10.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.693" endtime="20201112 12:26:10.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.692" endtime="20201112 12:26:10.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.723" endtime="20201112 12:26:11.007"></status>
</kw>
<msg timestamp="20201112 12:26:11.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068215403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06821675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:10.722" endtime="20201112 12:26:11.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068215403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06821675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:11.011" endtime="20201112 12:26:11.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.020" endtime="20201112 12:26:11.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.719" endtime="20201112 12:26:11.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.717" endtime="20201112 12:26:11.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.027" level="INFO">${RESULT} = [{'time': 0.06821675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000126436e-06, 'source_diff': 1.3470000000126436e-06}, {'time': 0.068219125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:11.023" endtime="20201112 12:26:11.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.042" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.028" endtime="20201112 12:26:11.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.046" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.045" endtime="20201112 12:26:11.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.049" level="INFO">VALUE: [1.3470000000126436e-06, 1.0970000000054547e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.069000000006315e-06, 1.041000000007175e-06, 1.0420000000066487e-06, 1.0699999999919108e-06, 1.054999999999806e-06, 1.0689999999924371e-06, 1.0559999999992797e-06, 1.0700000000057885e-06, 1.069000000006315e-06, 1.041000000007175e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0700000000057885e-06, 1.082999999998946e-06, 1.0689999999924371e-06, 1.0689999999924371e-06, 1.069000000006315e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0700000000057885e-06, 1.069000000006315e-06, 1.041999999992771e-06, 1.0700000000057885e-06, 1.0420000000066487e-06, 1.0700000000057885e-06, 1.069000000006315e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0980000000049284e-06, 1.096999999991577e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.1250000000045945e-06, 1.0559999999992797e-06, 1.069000000006315e-06, 1.041999999992771e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0830000000128237e-06, 1.0700000000057885e-06, 1.0689999999924371e-06, 1.069000000006315e-06, 1.069000000006315e-06, 1.0699999999919108e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.047" endtime="20201112 12:26:11.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.043" endtime="20201112 12:26:11.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.052" endtime="20201112 12:26:11.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.056" endtime="20201112 12:26:11.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.054" endtime="20201112 12:26:11.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.051" endtime="20201112 12:26:11.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.690" endtime="20201112 12:26:11.077"></status>
</kw>
<msg timestamp="20201112 12:26:11.077" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.086" endtime="20201112 12:26:11.097"></status>
</kw>
<msg timestamp="20201112 12:26:11.098" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.084" endtime="20201112 12:26:11.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.100" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.099" endtime="20201112 12:26:11.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.101" endtime="20201112 12:26:11.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.082" endtime="20201112 12:26:11.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.080" endtime="20201112 12:26:11.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.111" endtime="20201112 12:26:11.390"></status>
</kw>
<msg timestamp="20201112 12:26:11.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020958625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02096, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:26:11.109" endtime="20201112 12:26:11.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020958625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02096, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:26:11.395" endtime="20201112 12:26:11.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.403" endtime="20201112 12:26:11.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.106" endtime="20201112 12:26:11.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.104" endtime="20201112 12:26:11.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.410" level="INFO">${RESULT} = [{'time': 0.02096, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.020962792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:11.407" endtime="20201112 12:26:11.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.426" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.411" endtime="20201112 12:26:11.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.430" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.429" endtime="20201112 12:26:11.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.433" level="INFO">VALUE: [1.3749999999979057e-06, 1.1110000000015552e-06, 9.999999999975306e-07, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0979999999979895e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0269999999971968e-06, 1.0830000000024154e-06, 1.000000000001e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.431" endtime="20201112 12:26:11.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.427" endtime="20201112 12:26:11.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.436" endtime="20201112 12:26:11.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.440" endtime="20201112 12:26:11.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.439" endtime="20201112 12:26:11.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.434" endtime="20201112 12:26:11.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.078" endtime="20201112 12:26:11.461"></status>
</kw>
<msg timestamp="20201112 12:26:11.461" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.469" endtime="20201112 12:26:11.480"></status>
</kw>
<msg timestamp="20201112 12:26:11.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.468" endtime="20201112 12:26:11.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.482" endtime="20201112 12:26:11.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.484" endtime="20201112 12:26:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.465" endtime="20201112 12:26:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.463" endtime="20201112 12:26:11.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.493" endtime="20201112 12:26:11.784"></status>
</kw>
<msg timestamp="20201112 12:26:11.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.492" endtime="20201112 12:26:11.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.788" endtime="20201112 12:26:11.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.796" endtime="20201112 12:26:11.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.489" endtime="20201112 12:26:11.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.487" endtime="20201112 12:26:11.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.803" level="INFO">${RESULT} = [{'time': 0.019831583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019834472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:11.800" endtime="20201112 12:26:11.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.819" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.804" endtime="20201112 12:26:11.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:11.822" endtime="20201112 12:26:11.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.826" level="INFO">VALUE: [1.3750000000013751e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0130000000010964e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.824" endtime="20201112 12:26:11.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.820" endtime="20201112 12:26:11.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.830" endtime="20201112 12:26:11.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.833" endtime="20201112 12:26:11.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.832" endtime="20201112 12:26:11.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.828" endtime="20201112 12:26:11.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.462" endtime="20201112 12:26:11.854"></status>
</kw>
<msg timestamp="20201112 12:26:11.854" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.862" endtime="20201112 12:26:11.873"></status>
</kw>
<msg timestamp="20201112 12:26:11.874" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.861" endtime="20201112 12:26:11.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.875" endtime="20201112 12:26:11.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.878" endtime="20201112 12:26:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.858" endtime="20201112 12:26:11.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.856" endtime="20201112 12:26:11.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.887" endtime="20201112 12:26:12.177"></status>
</kw>
<msg timestamp="20201112 12:26:12.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.885" endtime="20201112 12:26:12.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.181" endtime="20201112 12:26:12.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.190" endtime="20201112 12:26:12.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.883" endtime="20201112 12:26:12.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.881" endtime="20201112 12:26:12.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.197" level="INFO">${RESULT} = [{'time': 0.019884444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019886778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.193" endtime="20201112 12:26:12.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.211" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.198" endtime="20201112 12:26:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.215" endtime="20201112 12:26:12.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.219" level="INFO">VALUE: [1.3750000000013751e-06, 1.070000000002319e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.02800000000014e-06, 1.125000000001125e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.0690000000028455e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.217" endtime="20201112 12:26:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.212" endtime="20201112 12:26:12.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.222" endtime="20201112 12:26:12.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.226" endtime="20201112 12:26:12.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.224" endtime="20201112 12:26:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.221" endtime="20201112 12:26:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.855" endtime="20201112 12:26:12.247"></status>
</kw>
<msg timestamp="20201112 12:26:12.247" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.255" endtime="20201112 12:26:12.267"></status>
</kw>
<msg timestamp="20201112 12:26:12.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.253" endtime="20201112 12:26:12.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.268" endtime="20201112 12:26:12.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.271" endtime="20201112 12:26:12.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.250" endtime="20201112 12:26:12.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.249" endtime="20201112 12:26:12.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.280" endtime="20201112 12:26:12.563"></status>
</kw>
<msg timestamp="20201112 12:26:12.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.279" endtime="20201112 12:26:12.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.568" endtime="20201112 12:26:12.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.576" endtime="20201112 12:26:12.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.276" endtime="20201112 12:26:12.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.274" endtime="20201112 12:26:12.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.583" level="INFO">${RESULT} = [{'time': 0.019951833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019954333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.580" endtime="20201112 12:26:12.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.598" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.584" endtime="20201112 12:26:12.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.602" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.601" endtime="20201112 12:26:12.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.605" level="INFO">VALUE: [1.3749999999979057e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.603" endtime="20201112 12:26:12.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.599" endtime="20201112 12:26:12.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.609" endtime="20201112 12:26:12.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.612" endtime="20201112 12:26:12.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.610" endtime="20201112 12:26:12.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.607" endtime="20201112 12:26:12.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.247" endtime="20201112 12:26:12.633"></status>
</kw>
<msg timestamp="20201112 12:26:12.633" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.641" endtime="20201112 12:26:12.652"></status>
</kw>
<msg timestamp="20201112 12:26:12.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.640" endtime="20201112 12:26:12.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.654" endtime="20201112 12:26:12.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.656" endtime="20201112 12:26:12.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.637" endtime="20201112 12:26:12.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.635" endtime="20201112 12:26:12.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.666" endtime="20201112 12:26:12.947"></status>
</kw>
<msg timestamp="20201112 12:26:12.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.664" endtime="20201112 12:26:12.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020156944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.951" endtime="20201112 12:26:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.960" endtime="20201112 12:26:12.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.662" endtime="20201112 12:26:12.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.660" endtime="20201112 12:26:12.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.967" level="INFO">${RESULT} = [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.020159694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:12.963" endtime="20201112 12:26:12.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.981" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.968" endtime="20201112 12:26:12.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.986" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:12.985" endtime="20201112 12:26:12.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.988" level="INFO">VALUE: [1.4020000000010413e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.987" endtime="20201112 12:26:12.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.982" endtime="20201112 12:26:12.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.992" endtime="20201112 12:26:12.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.996" endtime="20201112 12:26:13.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.994" endtime="20201112 12:26:13.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.990" endtime="20201112 12:26:13.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.634" endtime="20201112 12:26:13.017"></status>
</kw>
<msg timestamp="20201112 12:26:13.017" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.025" endtime="20201112 12:26:13.036"></status>
</kw>
<msg timestamp="20201112 12:26:13.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.023" endtime="20201112 12:26:13.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.039" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.038" endtime="20201112 12:26:13.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.040" endtime="20201112 12:26:13.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.021" endtime="20201112 12:26:13.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.019" endtime="20201112 12:26:13.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.050" endtime="20201112 12:26:13.334"></status>
</kw>
<msg timestamp="20201112 12:26:13.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.048" endtime="20201112 12:26:13.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.339" endtime="20201112 12:26:13.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.347" endtime="20201112 12:26:13.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.046" endtime="20201112 12:26:13.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.044" endtime="20201112 12:26:13.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.353" level="INFO">${RESULT} = [{'time': 0.019958236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019960556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:13.350" endtime="20201112 12:26:13.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:13.368" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:13.354" endtime="20201112 12:26:13.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.373" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:13.371" endtime="20201112 12:26:13.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.375" level="INFO">VALUE: [1.3610000000018052e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.125000000001125e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:13.374" endtime="20201112 12:26:13.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.369" endtime="20201112 12:26:13.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.379" endtime="20201112 12:26:13.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.382" endtime="20201112 12:26:13.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.381" endtime="20201112 12:26:13.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.377" endtime="20201112 12:26:13.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.017" endtime="20201112 12:26:13.403"></status>
</kw>
<msg timestamp="20201112 12:26:13.403" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.411" endtime="20201112 12:26:13.422"></status>
</kw>
<msg timestamp="20201112 12:26:13.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.409" endtime="20201112 12:26:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.424" endtime="20201112 12:26:13.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.426" endtime="20201112 12:26:13.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.406" endtime="20201112 12:26:13.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.405" endtime="20201112 12:26:13.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.435" endtime="20201112 12:26:13.734"></status>
</kw>
<msg timestamp="20201112 12:26:13.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:13.434" endtime="20201112 12:26:13.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019621153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:13.743" endtime="20201112 12:26:13.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.762" endtime="20201112 12:26:13.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.431" endtime="20201112 12:26:13.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.429" endtime="20201112 12:26:13.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:13.776" level="INFO">${RESULT} = [{'time': 0.0196225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019624847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:13.769" endtime="20201112 12:26:13.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:13.795" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:13.778" endtime="20201112 12:26:13.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.800" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:13.799" endtime="20201112 12:26:13.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.802" level="INFO">VALUE: [1.3470000000022353e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.084000000001889e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:26:13.801" endtime="20201112 12:26:13.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.796" endtime="20201112 12:26:13.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.806" endtime="20201112 12:26:13.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:13.809" endtime="20201112 12:26:13.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.808" endtime="20201112 12:26:13.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.804" endtime="20201112 12:26:13.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.403" endtime="20201112 12:26:13.830"></status>
</kw>
<msg timestamp="20201112 12:26:13.830" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.838" endtime="20201112 12:26:13.849"></status>
</kw>
<msg timestamp="20201112 12:26:13.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.836" endtime="20201112 12:26:13.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:13.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:13.851" endtime="20201112 12:26:13.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.853" endtime="20201112 12:26:13.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.834" endtime="20201112 12:26:13.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.832" endtime="20201112 12:26:13.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:13.862" endtime="20201112 12:26:14.144"></status>
</kw>
<msg timestamp="20201112 12:26:14.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:13.860" endtime="20201112 12:26:14.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.148" endtime="20201112 12:26:14.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.156" endtime="20201112 12:26:14.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.858" endtime="20201112 12:26:14.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.856" endtime="20201112 12:26:14.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.163" level="INFO">${RESULT} = [{'time': 0.019372972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.019375403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:14.159" endtime="20201112 12:26:14.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.177" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.164" endtime="20201112 12:26:14.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.181" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.180" endtime="20201112 12:26:14.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.183" level="INFO">VALUE: [1.4029999999970455e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.0279999999966705e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.182" endtime="20201112 12:26:14.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.178" endtime="20201112 12:26:14.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.187" endtime="20201112 12:26:14.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.190" endtime="20201112 12:26:14.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.189" endtime="20201112 12:26:14.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.185" endtime="20201112 12:26:14.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:13.831" endtime="20201112 12:26:14.211"></status>
</kw>
<msg timestamp="20201112 12:26:14.211" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.219" endtime="20201112 12:26:14.230"></status>
</kw>
<msg timestamp="20201112 12:26:14.231" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.217" endtime="20201112 12:26:14.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.233" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.232" endtime="20201112 12:26:14.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.234" endtime="20201112 12:26:14.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.215" endtime="20201112 12:26:14.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.213" endtime="20201112 12:26:14.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.243" endtime="20201112 12:26:14.524"></status>
</kw>
<msg timestamp="20201112 12:26:14.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:14.241" endtime="20201112 12:26:14.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019291875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:14.528" endtime="20201112 12:26:14.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.537" endtime="20201112 12:26:14.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.239" endtime="20201112 12:26:14.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.237" endtime="20201112 12:26:14.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.543" level="INFO">${RESULT} = [{'time': 0.01929325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019295611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:14.540" endtime="20201112 12:26:14.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.558" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.544" endtime="20201112 12:26:14.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.562" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.561" endtime="20201112 12:26:14.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.564" level="INFO">VALUE: [1.3750000000013751e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.098000000001459e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.563" endtime="20201112 12:26:14.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.559" endtime="20201112 12:26:14.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.568" endtime="20201112 12:26:14.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.571" endtime="20201112 12:26:14.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.570" endtime="20201112 12:26:14.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.566" endtime="20201112 12:26:14.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.212" endtime="20201112 12:26:14.592"></status>
</kw>
<msg timestamp="20201112 12:26:14.592" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.600" endtime="20201112 12:26:14.611"></status>
</kw>
<msg timestamp="20201112 12:26:14.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.598" endtime="20201112 12:26:14.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.613" endtime="20201112 12:26:14.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.615" endtime="20201112 12:26:14.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.596" endtime="20201112 12:26:14.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.594" endtime="20201112 12:26:14.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.624" endtime="20201112 12:26:14.905"></status>
</kw>
<msg timestamp="20201112 12:26:14.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019334306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.622" endtime="20201112 12:26:14.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019334306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:14.910" endtime="20201112 12:26:14.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.918" endtime="20201112 12:26:14.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.620" endtime="20201112 12:26:14.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.618" endtime="20201112 12:26:14.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:14.925" level="INFO">${RESULT} = [{'time': 0.019335694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3880000000014714e-06, 'source_diff': 1.3880000000014714e-06}, {'time': 0.019338194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:14.921" endtime="20201112 12:26:14.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:14.940" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:14.926" endtime="20201112 12:26:14.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.944" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:14.943" endtime="20201112 12:26:14.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.946" level="INFO">VALUE: [1.3880000000014714e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:26:14.945" endtime="20201112 12:26:14.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.940" endtime="20201112 12:26:14.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.950" endtime="20201112 12:26:14.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:14.953" endtime="20201112 12:26:14.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.952" endtime="20201112 12:26:14.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.948" endtime="20201112 12:26:14.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.593" endtime="20201112 12:26:14.974"></status>
</kw>
<msg timestamp="20201112 12:26:14.974" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.982" endtime="20201112 12:26:14.993"></status>
</kw>
<msg timestamp="20201112 12:26:14.994" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.980" endtime="20201112 12:26:14.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:14.996" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:14.995" endtime="20201112 12:26:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:14.997" endtime="20201112 12:26:14.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.977" endtime="20201112 12:26:15.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.976" endtime="20201112 12:26:15.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.006" endtime="20201112 12:26:15.296"></status>
</kw>
<msg timestamp="20201112 12:26:15.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.005" endtime="20201112 12:26:15.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.300" endtime="20201112 12:26:15.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.309" endtime="20201112 12:26:15.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.002" endtime="20201112 12:26:15.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.001" endtime="20201112 12:26:15.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.315" level="INFO">${RESULT} = [{'time': 0.019499986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019502681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.312" endtime="20201112 12:26:15.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.329" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:15.316" endtime="20201112 12:26:15.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.334" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:15.333" endtime="20201112 12:26:15.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.337" level="INFO">VALUE: [1.4170000000000849e-06, 1.084000000001889e-06, 1.125000000001125e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.01400000000057e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.02800000000014e-06, 1.0560000000027492e-06, 1.0270000000006663e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.02800000000014e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.335" endtime="20201112 12:26:15.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.331" endtime="20201112 12:26:15.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.340" endtime="20201112 12:26:15.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.344" endtime="20201112 12:26:15.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.342" endtime="20201112 12:26:15.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.339" endtime="20201112 12:26:15.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:14.974" endtime="20201112 12:26:15.364"></status>
</kw>
<msg timestamp="20201112 12:26:15.365" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.372" endtime="20201112 12:26:15.383"></status>
</kw>
<msg timestamp="20201112 12:26:15.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.371" endtime="20201112 12:26:15.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.386" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.384" endtime="20201112 12:26:15.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.387" endtime="20201112 12:26:15.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.368" endtime="20201112 12:26:15.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.366" endtime="20201112 12:26:15.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.396" endtime="20201112 12:26:15.677"></status>
</kw>
<msg timestamp="20201112 12:26:15.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.394" endtime="20201112 12:26:15.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.681" endtime="20201112 12:26:15.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.689" endtime="20201112 12:26:15.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.391" endtime="20201112 12:26:15.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.390" endtime="20201112 12:26:15.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:15.696" level="INFO">${RESULT} = [{'time': 0.019275125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019277556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:15.692" endtime="20201112 12:26:15.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:15.710" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:15.697" endtime="20201112 12:26:15.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.714" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:15.713" endtime="20201112 12:26:15.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.716" level="INFO">VALUE: [1.3610000000018052e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0270000000006663e-06, 1.01400000000057e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0130000000010964e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:15.715" endtime="20201112 12:26:15.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.711" endtime="20201112 12:26:15.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.720" endtime="20201112 12:26:15.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:15.723" endtime="20201112 12:26:15.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.722" endtime="20201112 12:26:15.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.718" endtime="20201112 12:26:15.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.365" endtime="20201112 12:26:15.744"></status>
</kw>
<msg timestamp="20201112 12:26:15.744" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.752" endtime="20201112 12:26:15.763"></status>
</kw>
<msg timestamp="20201112 12:26:15.763" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.750" endtime="20201112 12:26:15.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.764" endtime="20201112 12:26:15.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.767" endtime="20201112 12:26:15.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.748" endtime="20201112 12:26:15.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.746" endtime="20201112 12:26:15.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.776" endtime="20201112 12:26:16.073"></status>
</kw>
<msg timestamp="20201112 12:26:16.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019314403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.774" endtime="20201112 12:26:16.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019314403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.077" endtime="20201112 12:26:16.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.085" endtime="20201112 12:26:16.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.772" endtime="20201112 12:26:16.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.770" endtime="20201112 12:26:16.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.092" level="INFO">${RESULT} = [{'time': 0.019314403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019316722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.089" endtime="20201112 12:26:16.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.106" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.093" endtime="20201112 12:26:16.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.110" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.109" endtime="20201112 12:26:16.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.113" level="INFO">VALUE: [1.3610000000018052e-06, 1.0690000000028455e-06, 1.084000000001889e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.0270000000006663e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0270000000006663e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.070000000002319e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.111" endtime="20201112 12:26:16.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.107" endtime="20201112 12:26:16.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.116" endtime="20201112 12:26:16.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.120" endtime="20201112 12:26:16.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.118" endtime="20201112 12:26:16.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.115" endtime="20201112 12:26:16.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.745" endtime="20201112 12:26:16.140"></status>
</kw>
<msg timestamp="20201112 12:26:16.141" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.148" endtime="20201112 12:26:16.159"></status>
</kw>
<msg timestamp="20201112 12:26:16.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.147" endtime="20201112 12:26:16.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.161" endtime="20201112 12:26:16.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.163" endtime="20201112 12:26:16.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.144" endtime="20201112 12:26:16.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.142" endtime="20201112 12:26:16.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.172" endtime="20201112 12:26:16.455"></status>
</kw>
<msg timestamp="20201112 12:26:16.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.171" endtime="20201112 12:26:16.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.459" endtime="20201112 12:26:16.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.468" endtime="20201112 12:26:16.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.168" endtime="20201112 12:26:16.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.166" endtime="20201112 12:26:16.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.474" level="INFO">${RESULT} = [{'time': 0.019389347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019392083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.471" endtime="20201112 12:26:16.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.489" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.475" endtime="20201112 12:26:16.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.493" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.492" endtime="20201112 12:26:16.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.496" level="INFO">VALUE: [1.3610000000018052e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.000000000001e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0830000000024154e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.494" endtime="20201112 12:26:16.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.490" endtime="20201112 12:26:16.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.499" endtime="20201112 12:26:16.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.503" endtime="20201112 12:26:16.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.501" endtime="20201112 12:26:16.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.498" endtime="20201112 12:26:16.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.141" endtime="20201112 12:26:16.523"></status>
</kw>
<msg timestamp="20201112 12:26:16.523" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.531" endtime="20201112 12:26:16.544"></status>
</kw>
<msg timestamp="20201112 12:26:16.544" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.530" endtime="20201112 12:26:16.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.546" endtime="20201112 12:26:16.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.548" endtime="20201112 12:26:16.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.527" endtime="20201112 12:26:16.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.525" endtime="20201112 12:26:16.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.557" endtime="20201112 12:26:16.844"></status>
</kw>
<msg timestamp="20201112 12:26:16.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.555" endtime="20201112 12:26:16.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.848" endtime="20201112 12:26:16.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.857" endtime="20201112 12:26:16.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.553" endtime="20201112 12:26:16.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.551" endtime="20201112 12:26:16.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.863" level="INFO">${RESULT} = [{'time': 0.019450333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019452861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.860" endtime="20201112 12:26:16.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.877" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.864" endtime="20201112 12:26:16.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.882" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.881" endtime="20201112 12:26:16.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.884" level="INFO">VALUE: [1.3750000000013751e-06, 9.859999999979607e-07, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0409999999967667e-06, 1.0419999999997098e-06, 1.0270000000006663e-06, 1.054999999999806e-06, 1.0139999999971006e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.1120000000010288e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.883" endtime="20201112 12:26:16.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.878" endtime="20201112 12:26:16.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.888" endtime="20201112 12:26:16.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.891" endtime="20201112 12:26:16.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.890" endtime="20201112 12:26:16.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.886" endtime="20201112 12:26:16.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.524" endtime="20201112 12:26:16.912"></status>
</kw>
<msg timestamp="20201112 12:26:16.912" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.919" endtime="20201112 12:26:16.930"></status>
</kw>
<msg timestamp="20201112 12:26:16.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.918" endtime="20201112 12:26:16.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.932" endtime="20201112 12:26:16.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.934" endtime="20201112 12:26:16.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.915" endtime="20201112 12:26:16.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.914" endtime="20201112 12:26:16.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.943" endtime="20201112 12:26:17.225"></status>
</kw>
<msg timestamp="20201112 12:26:17.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.942" endtime="20201112 12:26:17.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.229" endtime="20201112 12:26:17.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.237" endtime="20201112 12:26:17.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.939" endtime="20201112 12:26:17.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.938" endtime="20201112 12:26:17.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.244" level="INFO">${RESULT} = [{'time': 0.019360958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019363319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.241" endtime="20201112 12:26:17.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.258" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.245" endtime="20201112 12:26:17.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.262" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.261" endtime="20201112 12:26:17.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.265" level="INFO">VALUE: [1.389000000000945e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.263" endtime="20201112 12:26:17.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.259" endtime="20201112 12:26:17.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.268" endtime="20201112 12:26:17.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.272" endtime="20201112 12:26:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.270" endtime="20201112 12:26:17.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.267" endtime="20201112 12:26:17.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.912" endtime="20201112 12:26:17.292"></status>
</kw>
<msg timestamp="20201112 12:26:17.292" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.300" endtime="20201112 12:26:17.311"></status>
</kw>
<msg timestamp="20201112 12:26:17.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.298" endtime="20201112 12:26:17.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.313" endtime="20201112 12:26:17.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.315" endtime="20201112 12:26:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.296" endtime="20201112 12:26:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.294" endtime="20201112 12:26:17.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.324" endtime="20201112 12:26:17.605"></status>
</kw>
<msg timestamp="20201112 12:26:17.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.322" endtime="20201112 12:26:17.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.609" endtime="20201112 12:26:17.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.617" endtime="20201112 12:26:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.320" endtime="20201112 12:26:17.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.318" endtime="20201112 12:26:17.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.625" level="INFO">${RESULT} = [{'time': 0.019298375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019300917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.622" endtime="20201112 12:26:17.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.638" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.626" endtime="20201112 12:26:17.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.642" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.641" endtime="20201112 12:26:17.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.645" level="INFO">VALUE: [1.3609999999983358e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0979999999979895e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.643" endtime="20201112 12:26:17.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.639" endtime="20201112 12:26:17.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.648" endtime="20201112 12:26:17.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.652" endtime="20201112 12:26:17.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.650" endtime="20201112 12:26:17.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.647" endtime="20201112 12:26:17.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.293" endtime="20201112 12:26:17.672"></status>
</kw>
<msg timestamp="20201112 12:26:17.672" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.680" endtime="20201112 12:26:17.691"></status>
</kw>
<msg timestamp="20201112 12:26:17.692" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.679" endtime="20201112 12:26:17.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.693" endtime="20201112 12:26:17.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.695" endtime="20201112 12:26:17.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.676" endtime="20201112 12:26:17.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.674" endtime="20201112 12:26:17.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.704" endtime="20201112 12:26:17.985"></status>
</kw>
<msg timestamp="20201112 12:26:17.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.703" endtime="20201112 12:26:17.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.990" endtime="20201112 12:26:17.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.998" endtime="20201112 12:26:17.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.700" endtime="20201112 12:26:18.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.698" endtime="20201112 12:26:18.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.005" level="INFO">${RESULT} = [{'time': 0.019290069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019292653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.001" endtime="20201112 12:26:18.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.019" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.006" endtime="20201112 12:26:18.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.023" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.022" endtime="20201112 12:26:18.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.025" level="INFO">VALUE: [1.3609999999983358e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.1109999999980857e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0550000000032755e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.024" endtime="20201112 12:26:18.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.020" endtime="20201112 12:26:18.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.029" endtime="20201112 12:26:18.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.032" endtime="20201112 12:26:18.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.031" endtime="20201112 12:26:18.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.027" endtime="20201112 12:26:18.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.673" endtime="20201112 12:26:18.053"></status>
</kw>
<msg timestamp="20201112 12:26:18.053" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.061" endtime="20201112 12:26:18.072"></status>
</kw>
<msg timestamp="20201112 12:26:18.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.059" endtime="20201112 12:26:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.074" endtime="20201112 12:26:18.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.076" endtime="20201112 12:26:18.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.057" endtime="20201112 12:26:18.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.055" endtime="20201112 12:26:18.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.085" endtime="20201112 12:26:18.375"></status>
</kw>
<msg timestamp="20201112 12:26:18.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.084" endtime="20201112 12:26:18.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019577528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.380" endtime="20201112 12:26:18.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.388" endtime="20201112 12:26:18.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.081" endtime="20201112 12:26:18.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.079" endtime="20201112 12:26:18.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.395" level="INFO">${RESULT} = [{'time': 0.019577528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019580181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.391" endtime="20201112 12:26:18.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.408" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.395" endtime="20201112 12:26:18.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.412" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.411" endtime="20201112 12:26:18.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.414" level="INFO">VALUE: [1.3469999999987659e-06, 1.0559999999992797e-06, 1.1110000000015552e-06, 9.999999999975306e-07, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.413" endtime="20201112 12:26:18.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.409" endtime="20201112 12:26:18.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.418" endtime="20201112 12:26:18.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.421" endtime="20201112 12:26:18.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.420" endtime="20201112 12:26:18.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.416" endtime="20201112 12:26:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.054" endtime="20201112 12:26:18.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.688" endtime="20201112 12:26:18.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.447" endtime="20201112 12:26:18.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.445" endtime="20201112 12:26:18.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.444" endtime="20201112 12:26:18.467"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:10.615" endtime="20201112 12:26:18.468" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.475" endtime="20201112 12:26:18.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.474" endtime="20201112 12:26:18.495"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.508" endtime="20201112 12:26:18.523"></status>
</kw>
<msg timestamp="20201112 12:26:18.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.507" endtime="20201112 12:26:18.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.524" endtime="20201112 12:26:18.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:18.527" endtime="20201112 12:26:18.529"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:18.504" endtime="20201112 12:26:18.530"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:18.502" endtime="20201112 12:26:18.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.500" endtime="20201112 12:26:18.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:18.534" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:18.534" endtime="20201112 12:26:18.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.532" endtime="20201112 12:26:18.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.500" endtime="20201112 12:26:18.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.499" endtime="20201112 12:26:18.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.536" endtime="20201112 12:26:18.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.498" endtime="20201112 12:26:18.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.496" endtime="20201112 12:26:18.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.473" endtime="20201112 12:26:18.539"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.548" endtime="20201112 12:26:18.566"></status>
</kw>
<msg timestamp="20201112 12:26:18.567" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.546" endtime="20201112 12:26:18.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.569" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.568" endtime="20201112 12:26:18.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.570" endtime="20201112 12:26:18.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.544" endtime="20201112 12:26:18.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.542" endtime="20201112 12:26:18.573"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.575" endtime="20201112 12:26:18.577"></status>
</kw>
<msg timestamp="20201112 12:26:18.577" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:18.574" endtime="20201112 12:26:18.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.581" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:18.580" endtime="20201112 12:26:18.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.583" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:18.582" endtime="20201112 12:26:18.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.578" endtime="20201112 12:26:18.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.588" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:18.587" endtime="20201112 12:26:18.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.590" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:18.589" endtime="20201112 12:26:18.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.585" endtime="20201112 12:26:18.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.597" endtime="20201112 12:26:18.883"></status>
</kw>
<msg timestamp="20201112 12:26:18.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064835667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064839417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.596" endtime="20201112 12:26:18.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064835667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064839417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.887" endtime="20201112 12:26:18.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.895" endtime="20201112 12:26:18.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.593" endtime="20201112 12:26:18.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.591" endtime="20201112 12:26:18.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.902" level="INFO">${RESULT} = [{'time': 0.064839417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.064844764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.898" endtime="20201112 12:26:18.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.915" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.903" endtime="20201112 12:26:18.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.919" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:18.918" endtime="20201112 12:26:18.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.931" level="INFO">VALUE: [3.7499999999968114e-06, 3.3200000000011e-06, 3.3329999999942572e-06, 3.278000000009329e-06, 3.333000000008135e-06, 3.3340000000076087e-06, 3.3329999999942572e-06, 3.319000000001626e-06, 3.3480000000002397e-06, 3.333000000008135e-06, 3.3329999999942572e-06, 3.305999999994591e-06, 3.333999999993731e-06, 3.306000000008469e-06, 3.26400000000282e-06, 3.305999999994591e-06, 3.3200000000011e-06, 3.319000000001626e-06, 3.3200000000011e-06, 3.3200000000011e-06, 3.347000000000766e-06, 3.319000000001626e-06, 3.3200000000011e-06, 3.29200000000196e-06, 3.319000000001626e-06, 3.3189999999877484e-06, 3.333000000008135e-06, 3.3200000000011e-06, 3.374999999999906e-06, 3.26400000000282e-06, 3.2359999999898026e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.3200000000011e-06, 3.3329999999942572e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.2909999999886086e-06, 3.333999999993731e-06, 3.347000000000766e-06, 3.3200000000011e-06, 3.3329999999942572e-06, 3.3200000000011e-06, 3.3329999999942572e-06, 3.319000000001626e-06, 3.319000000001626e-06, 3.306000000008469e-06, 3.305999999994591e-06, 3.319000000001626e-06, 3.319000000001626e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.930" endtime="20201112 12:26:18.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.916" endtime="20201112 12:26:18.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.934" endtime="20201112 12:26:18.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.938" endtime="20201112 12:26:18.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.936" endtime="20201112 12:26:18.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.933" endtime="20201112 12:26:18.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.540" endtime="20201112 12:26:18.959"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:18.470" endtime="20201112 12:26:18.959" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.967" endtime="20201112 12:26:18.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.965" endtime="20201112 12:26:18.987"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.001" endtime="20201112 12:26:19.014"></status>
</kw>
<msg timestamp="20201112 12:26:19.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.999" endtime="20201112 12:26:19.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.017" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.016" endtime="20201112 12:26:19.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.020" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.018" endtime="20201112 12:26:19.020"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:18.996" endtime="20201112 12:26:19.021"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:18.993" endtime="20201112 12:26:19.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.992" endtime="20201112 12:26:19.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.026" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.025" endtime="20201112 12:26:19.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.023" endtime="20201112 12:26:19.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.991" endtime="20201112 12:26:19.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.991" endtime="20201112 12:26:19.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.027" endtime="20201112 12:26:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.989" endtime="20201112 12:26:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.987" endtime="20201112 12:26:19.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.964" endtime="20201112 12:26:19.030"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.039" endtime="20201112 12:26:19.078"></status>
</kw>
<msg timestamp="20201112 12:26:19.079" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.038" endtime="20201112 12:26:19.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.081" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.080" endtime="20201112 12:26:19.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.082" endtime="20201112 12:26:19.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.035" endtime="20201112 12:26:19.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.033" endtime="20201112 12:26:19.085"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.087" endtime="20201112 12:26:19.089"></status>
</kw>
<msg timestamp="20201112 12:26:19.089" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:19.086" endtime="20201112 12:26:19.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.093" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:19.092" endtime="20201112 12:26:19.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.095" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:19.094" endtime="20201112 12:26:19.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.090" endtime="20201112 12:26:19.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.100" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:19.099" endtime="20201112 12:26:19.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.102" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:19.101" endtime="20201112 12:26:19.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.097" endtime="20201112 12:26:19.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.110" endtime="20201112 12:26:19.396"></status>
</kw>
<msg timestamp="20201112 12:26:19.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065336403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065350792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.107" endtime="20201112 12:26:19.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065336403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065350792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.400" endtime="20201112 12:26:19.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.408" endtime="20201112 12:26:19.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.105" endtime="20201112 12:26:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.103" endtime="20201112 12:26:19.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.414" level="INFO">${RESULT} = [{'time': 0.065350792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000003538e-05, 'source_diff': 1.4389000000003538e-05}, {'time': 0.065762014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.411" endtime="20201112 12:26:19.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.429" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.415" endtime="20201112 12:26:19.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.434" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:19.433" endtime="20201112 12:26:19.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.437" level="INFO">VALUE: [1.4389000000003538e-05, 1.3985999999993615e-05, 1.3986000000007492e-05, 1.4028000000013141e-05, 1.3959000000007826e-05, 1.4000000000000123e-05, 1.3973000000000457e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.3999999999986246e-05, 1.3972000000000984e-05, 1.3985999999993615e-05, 1.3986000000007492e-05, 1.4014000000006632e-05, 1.408299999999807e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4013999999992754e-05, 1.3986000000007492e-05, 1.4014000000006632e-05, 1.3986000000007492e-05, 1.4000000000000123e-05, 1.3986000000007492e-05, 1.4000000000000123e-05, 1.3985999999993615e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3986000000007492e-05, 1.3973000000000457e-05, 1.3985999999993615e-05, 1.3986000000007492e-05, 1.3985999999993615e-05, 1.3986000000007492e-05, 1.4014000000006632e-05, 1.4000000000000123e-05, 1.4013999999992754e-05, 1.3986000000007492e-05, 1.3931000000008686e-05, 1.3931000000008686e-05, 1.4027999999999263e-05, 1.3985999999993615e-05, 1.4000000000000123e-05, 1.3930999999994809e-05, 1.3986000000007492e-05, 1.4000000000000123e-05, 1.3986000000007492e-05, 1.4000000000000123e-05, 1.3986999999993088e-05, 1.3985999999993615e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.436" endtime="20201112 12:26:19.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.431" endtime="20201112 12:26:19.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.440" endtime="20201112 12:26:19.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.443" endtime="20201112 12:26:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.442" endtime="20201112 12:26:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.438" endtime="20201112 12:26:19.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.031" endtime="20201112 12:26:19.464"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:18.961" endtime="20201112 12:26:19.465" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.472" endtime="20201112 12:26:19.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.471" endtime="20201112 12:26:19.492"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.506" endtime="20201112 12:26:19.519"></status>
</kw>
<msg timestamp="20201112 12:26:19.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.503" endtime="20201112 12:26:19.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.521" endtime="20201112 12:26:19.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:19.523" endtime="20201112 12:26:19.526"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.501" endtime="20201112 12:26:19.526"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:19.498" endtime="20201112 12:26:19.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.497" endtime="20201112 12:26:19.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:19.531" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:19.530" endtime="20201112 12:26:19.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.528" endtime="20201112 12:26:19.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.496" endtime="20201112 12:26:19.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.496" endtime="20201112 12:26:19.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.533" endtime="20201112 12:26:19.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.494" endtime="20201112 12:26:19.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.493" endtime="20201112 12:26:19.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.469" endtime="20201112 12:26:19.536"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.545" endtime="20201112 12:26:19.634"></status>
</kw>
<msg timestamp="20201112 12:26:19.635" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.543" endtime="20201112 12:26:19.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.637" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.636" endtime="20201112 12:26:19.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.638" endtime="20201112 12:26:19.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.541" endtime="20201112 12:26:19.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.538" endtime="20201112 12:26:19.641"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.643" endtime="20201112 12:26:19.645"></status>
</kw>
<msg timestamp="20201112 12:26:19.645" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:19.642" endtime="20201112 12:26:19.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.649" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:19.648" endtime="20201112 12:26:19.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.651" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:19.650" endtime="20201112 12:26:19.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.646" endtime="20201112 12:26:19.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.656" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:19.655" endtime="20201112 12:26:19.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.658" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:19.657" endtime="20201112 12:26:19.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.652" endtime="20201112 12:26:19.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.665" endtime="20201112 12:26:19.956"></status>
</kw>
<msg timestamp="20201112 12:26:19.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065793611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065820069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.663" endtime="20201112 12:26:19.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065793611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065820069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.960" endtime="20201112 12:26:19.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.968" endtime="20201112 12:26:19.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.661" endtime="20201112 12:26:19.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.659" endtime="20201112 12:26:19.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.975" level="INFO">${RESULT} = [{'time': 0.065820069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6457999999993098e-05, 'source_diff': 2.6457999999993098e-05}, {'time': 0.067260569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.972" endtime="20201112 12:26:19.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.989" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.977" endtime="20201112 12:26:19.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.993" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:19.992" endtime="20201112 12:26:19.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.996" level="INFO">VALUE: [2.6457999999993098e-05, 2.5958000000006476e-05, 2.6027999999997387e-05, 2.6013999999990878e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.6028000000011264e-05, 2.5943999999999967e-05, 2.6026999999997913e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.6055999999996526e-05, 2.6055999999996526e-05, 2.6000000000012125e-05, 2.6014000000004756e-05, 2.6027999999997387e-05, 2.5999999999998247e-05, 2.5971999999999107e-05, 2.6027999999997387e-05, 2.5971999999999107e-05, 2.6000000000012125e-05, 2.6041000000004422e-05, 2.5999999999998247e-05, 2.6070000000003035e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.5985999999991738e-05, 2.6026999999997913e-05, 2.6027999999997387e-05, 2.6013999999990878e-05, 2.6028000000011264e-05, 2.5999999999998247e-05, 2.6013999999990878e-05, 2.606900000000356e-05, 2.6014000000004756e-05, 2.5971999999999107e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.6014000000004756e-05, 2.6040999999990544e-05, 2.5999999999998247e-05, 2.5999999999998247e-05, 2.6028000000011264e-05, 2.6014000000018633e-05, 2.5999999999998247e-05, 2.6028000000011264e-05, 2.5999999999998247e-05, 2.6013999999990878e-05, 2.5986000000005616e-05, 2.597300000001246e-05]</msg>
<status status="PASS" starttime="20201112 12:26:19.995" endtime="20201112 12:26:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.990" endtime="20201112 12:26:19.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.999" endtime="20201112 12:26:20.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.002" endtime="20201112 12:26:20.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.001" endtime="20201112 12:26:20.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.997" endtime="20201112 12:26:20.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.537" endtime="20201112 12:26:20.023"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:19.466" endtime="20201112 12:26:20.024" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.031" endtime="20201112 12:26:20.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.030" endtime="20201112 12:26:20.051"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.064" endtime="20201112 12:26:20.078"></status>
</kw>
<msg timestamp="20201112 12:26:20.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.062" endtime="20201112 12:26:20.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.080" endtime="20201112 12:26:20.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.084" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:20.082" endtime="20201112 12:26:20.084"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.060" endtime="20201112 12:26:20.085"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.057" endtime="20201112 12:26:20.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.056" endtime="20201112 12:26:20.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:20.090" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:20.089" endtime="20201112 12:26:20.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.087" endtime="20201112 12:26:20.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.055" endtime="20201112 12:26:20.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.055" endtime="20201112 12:26:20.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.092" endtime="20201112 12:26:20.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.053" endtime="20201112 12:26:20.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.052" endtime="20201112 12:26:20.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.028" endtime="20201112 12:26:20.094"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.103" endtime="20201112 12:26:20.123"></status>
</kw>
<msg timestamp="20201112 12:26:20.123" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.102" endtime="20201112 12:26:20.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.126" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.124" endtime="20201112 12:26:20.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.127" endtime="20201112 12:26:20.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.099" endtime="20201112 12:26:20.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.097" endtime="20201112 12:26:20.129"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.132" endtime="20201112 12:26:20.133"></status>
</kw>
<msg timestamp="20201112 12:26:20.134" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:20.130" endtime="20201112 12:26:20.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.138" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:20.137" endtime="20201112 12:26:20.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.140" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:20.139" endtime="20201112 12:26:20.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.134" endtime="20201112 12:26:20.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.145" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:20.143" endtime="20201112 12:26:20.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.147" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:20.146" endtime="20201112 12:26:20.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.141" endtime="20201112 12:26:20.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.154" endtime="20201112 12:26:20.439"></status>
</kw>
<msg timestamp="20201112 12:26:20.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064822125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.152" endtime="20201112 12:26:20.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064822125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.443" endtime="20201112 12:26:20.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.451" endtime="20201112 12:26:20.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.150" endtime="20201112 12:26:20.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.148" endtime="20201112 12:26:20.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.458" level="INFO">${RESULT} = [{'time': 0.064822125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0689999999924371e-06, 'source_diff': 1.0689999999924371e-06}, {'time': 0.0648275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:20.455" endtime="20201112 12:26:20.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:20.471" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:20.459" endtime="20201112 12:26:20.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.476" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:20.475" endtime="20201112 12:26:20.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.478" level="INFO">VALUE: [1.0689999999924371e-06, 9.720000000018603e-07, 9.859999999944913e-07, 9.579999999953515e-07, 9.729999999874561e-07, 9.86999999993965e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.580000000092292e-07, 1.0420000000066487e-06, 1.0130000000080353e-06, 9.73000000001334e-07, 9.870000000078427e-07, 1.0139999999936311e-06, 1.0129999999941575e-06, 9.859999999944913e-07, 9.579999999953515e-07, 9.580000000092292e-07, 9.720000000018603e-07, 9.86000000008369e-07, 9.999999999871223e-07, 9.719999999879825e-07, 9.720000000018603e-07, 9.86000000008369e-07, 9.719999999879825e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.859999999944913e-07, 9.73000000001334e-07, 1.0139999999936311e-06, 9.579999999953515e-07, 9.719999999879825e-07, 9.859999999944913e-07, 9.580000000092292e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.579999999953515e-07, 9.299999999962116e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.719999999879825e-07, 9.720000000018603e-07, 9.720000000018603e-07, 9.73000000001334e-07, 9.73000000001334e-07, 9.58999999994825e-07, 9.859999999944913e-07, 9.169999999891765e-07, 1.0270000000006663e-06, 9.73000000001334e-07]</msg>
<status status="PASS" starttime="20201112 12:26:20.477" endtime="20201112 12:26:20.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.472" endtime="20201112 12:26:20.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.481" endtime="20201112 12:26:20.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.485" endtime="20201112 12:26:20.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.483" endtime="20201112 12:26:20.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.480" endtime="20201112 12:26:20.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.095" endtime="20201112 12:26:20.506"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:20.026" endtime="20201112 12:26:20.506" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.514" endtime="20201112 12:26:20.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.513" endtime="20201112 12:26:20.534"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.548" endtime="20201112 12:26:20.562"></status>
</kw>
<msg timestamp="20201112 12:26:20.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.546" endtime="20201112 12:26:20.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.564" endtime="20201112 12:26:20.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.569" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:20.567" endtime="20201112 12:26:20.569"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.543" endtime="20201112 12:26:20.569"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:20.541" endtime="20201112 12:26:20.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.539" endtime="20201112 12:26:20.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:20.574" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:20.574" endtime="20201112 12:26:20.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.572" endtime="20201112 12:26:20.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.539" endtime="20201112 12:26:20.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.538" endtime="20201112 12:26:20.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.576" endtime="20201112 12:26:20.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.537" endtime="20201112 12:26:20.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.535" endtime="20201112 12:26:20.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.511" endtime="20201112 12:26:20.579"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.588" endtime="20201112 12:26:20.628"></status>
</kw>
<msg timestamp="20201112 12:26:20.629" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.587" endtime="20201112 12:26:20.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.631" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.630" endtime="20201112 12:26:20.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.632" endtime="20201112 12:26:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.584" endtime="20201112 12:26:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.582" endtime="20201112 12:26:20.635"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.637" endtime="20201112 12:26:20.639"></status>
</kw>
<msg timestamp="20201112 12:26:20.639" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:20.636" endtime="20201112 12:26:20.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.644" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:20.643" endtime="20201112 12:26:20.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.646" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:20.645" endtime="20201112 12:26:20.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.640" endtime="20201112 12:26:20.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.651" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:20.650" endtime="20201112 12:26:20.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.653" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:20.652" endtime="20201112 12:26:20.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.648" endtime="20201112 12:26:20.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.662" endtime="20201112 12:26:20.948"></status>
</kw>
<msg timestamp="20201112 12:26:20.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067141319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067143458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.659" endtime="20201112 12:26:20.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067141319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067143458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.952" endtime="20201112 12:26:20.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.960" endtime="20201112 12:26:20.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.657" endtime="20201112 12:26:20.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.655" endtime="20201112 12:26:20.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.967" level="INFO">${RESULT} = [{'time': 0.067143458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.067557569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.963" endtime="20201112 12:26:20.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:20.982" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:20.968" endtime="20201112 12:26:20.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.987" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:20.986" endtime="20201112 12:26:20.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.989" level="INFO">VALUE: [2.1389999999982257e-06, 2.082999999999946e-06, 2.1110000000129636e-06, 2.0979999999920507e-06, 2.110999999999086e-06, 2.097000000006455e-06, 2.1119999999985595e-06, 2.110999999999086e-06, 2.1110000000129636e-06, 2.1250000000055946e-06, 2.05600000000028e-06, 2.068999999993437e-06, 2.096999999992577e-06, 2.110999999999086e-06, 2.097000000006455e-06, 2.1530000000047345e-06, 2.096999999992577e-06, 2.110999999999086e-06, 2.0409999999942974e-06, 2.05600000000028e-06, 2.110999999999086e-06, 2.110999999999086e-06, 2.0980000000059285e-06, 2.082999999999946e-06, 2.124999999991717e-06, 2.1119999999985595e-06, 2.1530000000047345e-06, 2.082999999999946e-06, 2.1390000000121034e-06, 2.110999999999086e-06, 2.082999999999946e-06, 2.1389999999982257e-06, 2.05600000000028e-06, 2.02800000000114e-06, 2.1389999999982257e-06, 2.042000000007649e-06, 2.097000000006455e-06, 2.110999999999086e-06, 2.1119999999985595e-06, 2.096999999992577e-06, 2.068999999993437e-06, 2.0839999999994197e-06, 2.124999999991717e-06, 2.096999999992577e-06, 2.097000000006455e-06, 2.096999999992577e-06, 2.069000000007315e-06, 2.0980000000059285e-06, 2.1119999999985595e-06, 2.0839999999994197e-06]</msg>
<status status="PASS" starttime="20201112 12:26:20.988" endtime="20201112 12:26:20.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.983" endtime="20201112 12:26:20.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.993" endtime="20201112 12:26:20.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.996" endtime="20201112 12:26:21.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.994" endtime="20201112 12:26:21.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.991" endtime="20201112 12:26:21.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.580" endtime="20201112 12:26:21.017"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:20.508" endtime="20201112 12:26:21.018" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.026" endtime="20201112 12:26:21.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.024" endtime="20201112 12:26:21.046"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.059" endtime="20201112 12:26:21.073"></status>
</kw>
<msg timestamp="20201112 12:26:21.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.057" endtime="20201112 12:26:21.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.075" endtime="20201112 12:26:21.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.080" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:21.077" endtime="20201112 12:26:21.080"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.054" endtime="20201112 12:26:21.081"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:21.052" endtime="20201112 12:26:21.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.051" endtime="20201112 12:26:21.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:21.085" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:21.084" endtime="20201112 12:26:21.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.082" endtime="20201112 12:26:21.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.050" endtime="20201112 12:26:21.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.049" endtime="20201112 12:26:21.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.087" endtime="20201112 12:26:21.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.048" endtime="20201112 12:26:21.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.046" endtime="20201112 12:26:21.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.023" endtime="20201112 12:26:21.089"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.101" endtime="20201112 12:26:21.192"></status>
</kw>
<msg timestamp="20201112 12:26:21.193" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.100" endtime="20201112 12:26:21.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.195" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.194" endtime="20201112 12:26:21.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.196" endtime="20201112 12:26:21.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.097" endtime="20201112 12:26:21.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.092" endtime="20201112 12:26:21.199"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.201" endtime="20201112 12:26:21.202"></status>
</kw>
<msg timestamp="20201112 12:26:21.203" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:26:21.200" endtime="20201112 12:26:21.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.207" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:21.206" endtime="20201112 12:26:21.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.209" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:21.208" endtime="20201112 12:26:21.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.203" endtime="20201112 12:26:21.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.214" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:21.213" endtime="20201112 12:26:21.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.216" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:21.215" endtime="20201112 12:26:21.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.211" endtime="20201112 12:26:21.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.223" endtime="20201112 12:26:21.516"></status>
</kw>
<msg timestamp="20201112 12:26:21.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068988097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068991125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.221" endtime="20201112 12:26:21.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068988097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068991125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.520" endtime="20201112 12:26:21.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.528" endtime="20201112 12:26:21.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.219" endtime="20201112 12:26:21.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.217" endtime="20201112 12:26:21.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.535" level="INFO">${RESULT} = [{'time': 0.068991125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.070436181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:21.532" endtime="20201112 12:26:21.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.548" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.536" endtime="20201112 12:26:21.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.553" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:21.552" endtime="20201112 12:26:21.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.555" level="INFO">VALUE: [3.02800000000214e-06, 3.02800000000214e-06, 3.0270000000026664e-06, 2.986999999995965e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0550000000018063e-06, 3.014000000009509e-06, 2.9999999999891225e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 3.0689999999944373e-06, 3.0270000000026664e-06, 3.0000000000030003e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.069000000008315e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.014000000009509e-06, 3.0139999999956313e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0270000000026664e-06, 3.0409999999952975e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.0980000000069285e-06, 2.9999999999891225e-06, 3.0279999999882623e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.0689999999944373e-06, 3.0279999999882623e-06, 3.0139999999956313e-06, 3.1119999999995596e-06, 3.042000000008649e-06, 3.111000000000086e-06, 3.0000000000030003e-06, 3.0129999999961576e-06, 3.0139999999956313e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.554" endtime="20201112 12:26:21.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.549" endtime="20201112 12:26:21.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.558" endtime="20201112 12:26:21.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.562" endtime="20201112 12:26:21.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.560" endtime="20201112 12:26:21.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.557" endtime="20201112 12:26:21.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.090" endtime="20201112 12:26:21.582"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:21.020" endtime="20201112 12:26:21.583" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:01.101" endtime="20201112 12:26:21.590"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.656" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:21.664" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:22.763" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:21.655" endtime="20201112 12:26:22.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.766" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:22.765" endtime="20201112 12:26:22.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.653" endtime="20201112 12:26:22.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.769" endtime="20201112 12:26:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.768" endtime="20201112 12:26:22.954"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.967" endtime="20201112 12:26:22.981"></status>
</kw>
<msg timestamp="20201112 12:26:22.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.965" endtime="20201112 12:26:22.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.983" endtime="20201112 12:26:22.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.987" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:22.986" endtime="20201112 12:26:22.988"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:22.963" endtime="20201112 12:26:22.988"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:22.961" endtime="20201112 12:26:22.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.959" endtime="20201112 12:26:22.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:22.994" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:22.992" endtime="20201112 12:26:22.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.990" endtime="20201112 12:26:22.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.958" endtime="20201112 12:26:22.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.958" endtime="20201112 12:26:22.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.996" endtime="20201112 12:26:22.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.956" endtime="20201112 12:26:22.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.999" endtime="20201112 12:26:23.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.955" endtime="20201112 12:26:23.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.651" endtime="20201112 12:26:23.001"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.007" endtime="20201112 12:26:23.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.006" endtime="20201112 12:26:23.027"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.040" endtime="20201112 12:26:23.053"></status>
</kw>
<msg timestamp="20201112 12:26:23.054" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.038" endtime="20201112 12:26:23.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.055" endtime="20201112 12:26:23.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.059" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:23.057" endtime="20201112 12:26:23.059"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:23.036" endtime="20201112 12:26:23.060"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:23.033" endtime="20201112 12:26:23.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.032" endtime="20201112 12:26:23.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:23.065" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:23.064" endtime="20201112 12:26:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.062" endtime="20201112 12:26:23.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.031" endtime="20201112 12:26:23.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.031" endtime="20201112 12:26:23.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.067" endtime="20201112 12:26:23.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.029" endtime="20201112 12:26:23.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.028" endtime="20201112 12:26:23.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.004" endtime="20201112 12:26:23.069"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.091" endtime="20201112 12:26:23.108"></status>
</kw>
<msg timestamp="20201112 12:26:23.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.088" endtime="20201112 12:26:23.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.111" endtime="20201112 12:26:23.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.116" endtime="20201112 12:26:23.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.080" endtime="20201112 12:26:23.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.076" endtime="20201112 12:26:23.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.135" endtime="20201112 12:26:23.433"></status>
</kw>
<msg timestamp="20201112 12:26:23.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077564319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077566611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.132" endtime="20201112 12:26:23.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077564319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077566611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.437" endtime="20201112 12:26:23.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.446" endtime="20201112 12:26:23.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.126" endtime="20201112 12:26:23.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.123" endtime="20201112 12:26:23.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.453" level="INFO">${RESULT} = [{'time': 0.077566611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.291999999987082e-06, 'source_diff': 2.291999999987082e-06}, {'time': 0.077570292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.449" endtime="20201112 12:26:23.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:23.454" endtime="20201112 12:26:23.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.471" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.470" endtime="20201112 12:26:23.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.474" level="INFO">VALUE: [2.291999999987082e-06, 1.8610000000057747e-06, 2.9859999999964915e-06, 1.9169999999901766e-06, 1.8749999999984057e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.332999999993257e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 3.0000000000030003e-06, 2.6389999999987257e-06, 2.333000000007135e-06, 2.333000000007135e-06, 2.3200000000000998e-06, 2.332999999993257e-06, 2.637999999999252e-06, 2.6389999999987257e-06, 2.3340000000066086e-06, 2.6389999999987257e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.637999999999252e-06, 2.624999999992217e-06, 1.8479999999987395e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 1.8330000000066349e-06, 2.3749999999989058e-06, 1.9170000000040543e-06, 2.9999999999891225e-06, 1.846999999999266e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 1.8749999999984057e-06, 3.0000000000030003e-06, 2.6389999999987257e-06, 2.9859999999964915e-06, 2.3189999999867483e-06, 2.624999999992217e-06, 2.332999999993257e-06, 2.6389999999987257e-06, 2.333000000007135e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.319000000000626e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.472" endtime="20201112 12:26:23.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.468" endtime="20201112 12:26:23.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.478" endtime="20201112 12:26:23.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.481" endtime="20201112 12:26:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.480" endtime="20201112 12:26:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.476" endtime="20201112 12:26:23.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.073" endtime="20201112 12:26:23.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.071" endtime="20201112 12:26:23.502"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.511" endtime="20201112 12:26:23.527"></status>
</kw>
<msg timestamp="20201112 12:26:23.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.510" endtime="20201112 12:26:23.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.528" endtime="20201112 12:26:23.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.531" endtime="20201112 12:26:23.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.507" endtime="20201112 12:26:23.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.505" endtime="20201112 12:26:23.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.540" endtime="20201112 12:26:23.830"></status>
</kw>
<msg timestamp="20201112 12:26:23.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.539" endtime="20201112 12:26:23.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.834" endtime="20201112 12:26:23.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.843" endtime="20201112 12:26:23.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.536" endtime="20201112 12:26:23.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.534" endtime="20201112 12:26:23.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.850" level="INFO">${RESULT} = [{'time': 0.023245208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.023250153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:23.846" endtime="20201112 12:26:23.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:23.865" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:23.851" endtime="20201112 12:26:23.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.869" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:23.868" endtime="20201112 12:26:23.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.872" level="INFO">VALUE: [3.3889999999994758e-06, 2.9309999999976855e-06, 3.2639999999993508e-06, 3.5559999999983105e-06, 3.55600000000178e-06, 3.249999999999781e-06, 3.249999999999781e-06, 3.8749999999969365e-06, 3.2639999999993508e-06, 3.875000000000406e-06, 3.249999999999781e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 3.597000000001016e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.5559999999983105e-06, 3.5690000000018762e-06, 3.249999999999781e-06, 3.5840000000009198e-06, 3.55600000000178e-06, 3.5840000000009198e-06, 3.554999999998837e-06, 3.2369999999996846e-06, 2.945000000000725e-06, 3.262999999999877e-06, 3.249999999999781e-06, 3.55600000000178e-06, 3.5690000000018762e-06, 3.5829999999979767e-06, 3.167000000001835e-06, 3.26400000000282e-06, 3.249999999999781e-06, 3.57000000000135e-06, 3.875000000000406e-06, 3.2779999999989207e-06, 3.276999999999447e-06, 3.2369999999996846e-06, 2.9590000000002947e-06, 3.26400000000282e-06, 3.5559999999983105e-06, 3.2639999999993508e-06, 3.26400000000282e-06, 3.583000000001446e-06, 3.2369999999996846e-06, 3.5689999999984068e-06, 3.554999999998837e-06, 3.5139999999996008e-06, 3.26400000000282e-06, 3.5689999999984068e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.870" endtime="20201112 12:26:23.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.866" endtime="20201112 12:26:23.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.876" endtime="20201112 12:26:23.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.879" endtime="20201112 12:26:23.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.878" endtime="20201112 12:26:23.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.874" endtime="20201112 12:26:23.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.503" endtime="20201112 12:26:23.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.503" endtime="20201112 12:26:23.900"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.909" endtime="20201112 12:26:23.923"></status>
</kw>
<msg timestamp="20201112 12:26:23.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.908" endtime="20201112 12:26:23.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.925" endtime="20201112 12:26:23.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.927" endtime="20201112 12:26:23.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.905" endtime="20201112 12:26:23.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.903" endtime="20201112 12:26:23.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.938" endtime="20201112 12:26:24.227"></status>
</kw>
<msg timestamp="20201112 12:26:24.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.936" endtime="20201112 12:26:24.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.231" endtime="20201112 12:26:24.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.240" endtime="20201112 12:26:24.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.933" endtime="20201112 12:26:24.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.932" endtime="20201112 12:26:24.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.247" level="INFO">${RESULT} = [{'time': 0.022358194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.022364292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:24.243" endtime="20201112 12:26:24.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.261" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:24.248" endtime="20201112 12:26:24.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.266" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.265" endtime="20201112 12:26:24.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.268" level="INFO">VALUE: [4.916000000000642e-06, 4.195000000001975e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.193999999999032e-06, 4.514000000000601e-06, 4.80600000000303e-06, 4.1809999999989356e-06, 3.888999999999976e-06, 4.4999999999975615e-06, 4.194000000002501e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.194000000002501e-06, 4.471999999998422e-06, 4.487000000000935e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.1809999999989356e-06, 4.8200000000026e-06, 4.500000000001031e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.2359999999977416e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.1809999999989356e-06, 4.805999999999561e-06, 4.195000000001975e-06, 4.832999999999227e-06, 4.1809999999989356e-06, 4.166999999999366e-06, 4.500000000001031e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.512999999997658e-06, 4.791000000000517e-06, 4.485999999997992e-06, 4.181000000002405e-06, 4.179999999999462e-06, 4.486000000001461e-06, 4.486000000001461e-06, 3.832999999998227e-06]</msg>
<status status="PASS" starttime="20201112 12:26:24.267" endtime="20201112 12:26:24.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.262" endtime="20201112 12:26:24.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.300" endtime="20201112 12:26:24.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.303" endtime="20201112 12:26:24.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.302" endtime="20201112 12:26:24.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.298" endtime="20201112 12:26:24.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.901" endtime="20201112 12:26:24.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.900" endtime="20201112 12:26:24.324"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.333" endtime="20201112 12:26:24.347"></status>
</kw>
<msg timestamp="20201112 12:26:24.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.332" endtime="20201112 12:26:24.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.349" endtime="20201112 12:26:24.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.351" endtime="20201112 12:26:24.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.329" endtime="20201112 12:26:24.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.327" endtime="20201112 12:26:24.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.362" endtime="20201112 12:26:24.648"></status>
</kw>
<msg timestamp="20201112 12:26:24.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.360" endtime="20201112 12:26:24.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.652" endtime="20201112 12:26:24.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.661" endtime="20201112 12:26:24.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.358" endtime="20201112 12:26:24.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.356" endtime="20201112 12:26:24.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:24.668" level="INFO">${RESULT} = [{'time': 0.022496736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.022503611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:24.665" endtime="20201112 12:26:24.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:24.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:24.669" endtime="20201112 12:26:24.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.687" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:24.686" endtime="20201112 12:26:24.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.689" level="INFO">VALUE: [5.846999999999797e-06, 4.805000000000087e-06, 5.430000000000712e-06, 5.737000000002185e-06, 5.431000000000186e-06, 5.735999999999242e-06, 5.431000000000186e-06, 5.736000000002711e-06, 5.1249999999981866e-06, 5.750000000002281e-06, 5.736999999998715e-06, 5.125000000001656e-06, 5.431000000000186e-06, 5.151999999997853e-06, 5.431000000000186e-06, 5.431000000000186e-06, 5.4439999999968125e-06, 5.430000000000712e-06, 5.110999999998617e-06, 5.415999999997673e-06, 5.429999999997243e-06, 5.736000000002711e-06, 5.096999999999047e-06, 5.736000000002711e-06, 5.430000000000712e-06, 5.417000000000616e-06, 5.167000000000366e-06, 5.721999999999672e-06, 5.417000000000616e-06, 5.1249999999981866e-06, 5.736000000002711e-06, 5.417000000000616e-06, 5.111000000002086e-06, 5.708000000000102e-06, 5.416000000001142e-06, 5.735999999999242e-06, 5.1249999999981866e-06, 5.431000000000186e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.416000000001142e-06, 5.430000000000712e-06, 5.416000000001142e-06, 5.7779999999979514e-06, 5.430000000000712e-06, 5.110999999998617e-06, 5.430000000000712e-06, 5.110999999998617e-06, 5.680000000000962e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201112 12:26:24.688" endtime="20201112 12:26:24.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.683" endtime="20201112 12:26:24.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.693" endtime="20201112 12:26:24.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:24.697" endtime="20201112 12:26:24.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.695" endtime="20201112 12:26:24.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.691" endtime="20201112 12:26:24.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.325" endtime="20201112 12:26:24.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.325" endtime="20201112 12:26:24.718"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.727" endtime="20201112 12:26:24.741"></status>
</kw>
<msg timestamp="20201112 12:26:24.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.725" endtime="20201112 12:26:24.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:24.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:24.743" endtime="20201112 12:26:24.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.745" endtime="20201112 12:26:24.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.723" endtime="20201112 12:26:24.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.721" endtime="20201112 12:26:24.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:24.756" endtime="20201112 12:26:25.044"></status>
</kw>
<msg timestamp="20201112 12:26:25.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:24.754" endtime="20201112 12:26:25.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.048" endtime="20201112 12:26:25.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.057" endtime="20201112 12:26:25.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.752" endtime="20201112 12:26:25.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.750" endtime="20201112 12:26:25.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.064" level="INFO">${RESULT} = [{'time': 0.022433444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.022441264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.060" endtime="20201112 12:26:25.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.078" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:25.065" endtime="20201112 12:26:25.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.082" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.081" endtime="20201112 12:26:25.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.085" level="INFO">VALUE: [6.166000000001892e-06, 5.735999999999242e-06, 6.374999999999437e-06, 6.639000000002726e-06, 6.055000000001337e-06, 6.6529999999988265e-06, 6.042000000001241e-06, 6.6669999999983964e-06, 6.291000000002017e-06, 6.360999999999867e-06, 6.3479999999997705e-06, 6.666000000002392e-06, 6.665999999998923e-06, 6.665999999998923e-06, 6.124999999999187e-06, 6.6669999999983964e-06, 6.36199999999934e-06, 6.347000000000297e-06, 6.6669999999983964e-06, 6.347000000000297e-06, 6.040999999998298e-06, 6.639000000002726e-06, 6.597000000000547e-06, 6.374999999999437e-06, 6.638999999999257e-06, 6.679999999998493e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.361000000003336e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.333999999996731e-06, 6.360999999999867e-06, 6.083000000000477e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.347000000000297e-06, 6.347000000000297e-06, 6.334000000000201e-06, 6.665999999998923e-06, 6.6669999999983964e-06, 6.6529999999988265e-06, 6.360999999999867e-06, 6.042000000001241e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.347000000000297e-06, 6.667000000001866e-06, 6.388999999999007e-06, 6.665999999998923e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.083" endtime="20201112 12:26:25.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.078" endtime="20201112 12:26:25.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.088" endtime="20201112 12:26:25.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.092" endtime="20201112 12:26:25.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.090" endtime="20201112 12:26:25.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.087" endtime="20201112 12:26:25.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.719" endtime="20201112 12:26:25.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:24.718" endtime="20201112 12:26:25.113"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.122" endtime="20201112 12:26:25.136"></status>
</kw>
<msg timestamp="20201112 12:26:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.120" endtime="20201112 12:26:25.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.138" endtime="20201112 12:26:25.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.140" endtime="20201112 12:26:25.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.118" endtime="20201112 12:26:25.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.115" endtime="20201112 12:26:25.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.151" endtime="20201112 12:26:25.441"></status>
</kw>
<msg timestamp="20201112 12:26:25.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.150" endtime="20201112 12:26:25.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.445" endtime="20201112 12:26:25.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.454" endtime="20201112 12:26:25.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.147" endtime="20201112 12:26:25.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.145" endtime="20201112 12:26:25.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.461" level="INFO">${RESULT} = [{'time': 0.022262569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.022271639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.457" endtime="20201112 12:26:25.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.476" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:25.462" endtime="20201112 12:26:25.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.481" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.479" endtime="20201112 12:26:25.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.483" level="INFO">VALUE: [7.415999999999673e-06, 6.888999999999507e-06, 7.625000000000687e-06, 6.972000000000922e-06, 7.916999999999647e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.597000000001547e-06, 7.290999999999548e-06, 7.290999999999548e-06, 7.305999999998591e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 6.985999999997022e-06, 7.554999999999368e-06, 7.597000000001547e-06, 7.2779999999994516e-06, 7.5969999999980775e-06, 6.9869999999999655e-06, 7.292000000002491e-06, 6.9869999999999655e-06, 7.292000000002491e-06, 7.582999999998508e-06, 7.306000000002061e-06, 7.597000000001547e-06, 6.986000000000492e-06, 7.597000000001547e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.958999999998356e-06, 7.290999999999548e-06, 7.2919999999990215e-06, 7.597999999997551e-06, 7.250000000000312e-06, 7.583000000001977e-06, 7.902999999996607e-06, 7.611000000001117e-06, 7.276999999999978e-06, 7.6109999999976474e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.598000000001021e-06, 7.611000000001117e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.292000000002491e-06, 7.598000000001021e-06, 7.583999999997981e-06, 7.306000000002061e-06, 6.6669999999983964e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.482" endtime="20201112 12:26:25.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.477" endtime="20201112 12:26:25.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.487" endtime="20201112 12:26:25.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.490" endtime="20201112 12:26:25.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.489" endtime="20201112 12:26:25.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.485" endtime="20201112 12:26:25.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.114" endtime="20201112 12:26:25.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.113" endtime="20201112 12:26:25.511"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.520" endtime="20201112 12:26:25.535"></status>
</kw>
<msg timestamp="20201112 12:26:25.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.519" endtime="20201112 12:26:25.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.536" endtime="20201112 12:26:25.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.539" endtime="20201112 12:26:25.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.516" endtime="20201112 12:26:25.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.514" endtime="20201112 12:26:25.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.549" endtime="20201112 12:26:25.837"></status>
</kw>
<msg timestamp="20201112 12:26:25.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.548" endtime="20201112 12:26:25.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:25.841" endtime="20201112 12:26:25.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.850" endtime="20201112 12:26:25.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.545" endtime="20201112 12:26:25.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.543" endtime="20201112 12:26:25.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:25.857" level="INFO">${RESULT} = [{'time': 0.022097125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.022106986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:25.853" endtime="20201112 12:26:25.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:25.870" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:25.858" endtime="20201112 12:26:25.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.875" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:25.874" endtime="20201112 12:26:25.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.878" level="INFO">VALUE: [8.596999999999078e-06, 8.235999999998272e-06, 8.568999999999938e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.542000000000272e-06, 8.528000000000702e-06, 8.207999999999133e-06, 7.916999999999647e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.833999999999231e-06, 8.249999999997842e-06, 8.235999999998272e-06, 8.832999999999758e-06, 8.542000000000272e-06, 8.528000000000702e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.513999999997662e-06, 8.527000000001228e-06, 8.875000000001937e-06, 8.207999999999133e-06, 8.596999999999078e-06, 8.513000000001658e-06, 8.542000000000272e-06, 8.222000000002172e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.583999999998981e-06, 8.487000000001466e-06, 8.459000000002326e-06, 8.541000000000798e-06, 8.846999999999328e-06, 8.207999999999133e-06, 8.526999999997759e-06, 8.528000000000702e-06, 8.861000000002367e-06, 8.208000000002602e-06, 8.528000000000702e-06, 8.542000000000272e-06, 8.527999999997232e-06, 8.528000000000702e-06, 8.540999999997329e-06, 8.499999999998092e-06, 8.541000000000798e-06, 8.555999999999842e-06, 8.527999999997232e-06, 8.542000000000272e-06, 8.514000000001132e-06]</msg>
<status status="PASS" starttime="20201112 12:26:25.876" endtime="20201112 12:26:25.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.871" endtime="20201112 12:26:25.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.881" endtime="20201112 12:26:25.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:25.885" endtime="20201112 12:26:25.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.883" endtime="20201112 12:26:25.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.880" endtime="20201112 12:26:25.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.512" endtime="20201112 12:26:25.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.512" endtime="20201112 12:26:25.906"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.915" endtime="20201112 12:26:25.930"></status>
</kw>
<msg timestamp="20201112 12:26:25.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.913" endtime="20201112 12:26:25.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:25.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:25.931" endtime="20201112 12:26:25.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.934" endtime="20201112 12:26:25.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.911" endtime="20201112 12:26:25.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.908" endtime="20201112 12:26:25.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:25.944" endtime="20201112 12:26:26.230"></status>
</kw>
<msg timestamp="20201112 12:26:26.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:25.943" endtime="20201112 12:26:26.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:26.234" endtime="20201112 12:26:26.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.243" endtime="20201112 12:26:26.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.940" endtime="20201112 12:26:26.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.938" endtime="20201112 12:26:26.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.250" level="INFO">${RESULT} = [{'time': 0.022474597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.022485667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:26.246" endtime="20201112 12:26:26.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:26.251" endtime="20201112 12:26:26.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.269" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.267" endtime="20201112 12:26:26.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.271" level="INFO">VALUE: [9.847000000000328e-06, 9.139000000001757e-06, 9.138999999998287e-06, 9.138000000002283e-06, 8.832999999999758e-06, 9.541999999997802e-06, 9.152999999997857e-06, 9.458000000000383e-06, 9.763999999998912e-06, 9.194000000000563e-06, 9.458000000000383e-06, 9.138999999998287e-06, 9.764000000002382e-06, 9.458999999999856e-06, 9.458000000000383e-06, 9.777999999998482e-06, 9.139000000001757e-06, 9.458000000000383e-06, 9.804999999998149e-06, 9.762999999999439e-06, 9.111999999998621e-06, 9.458000000000383e-06, 9.444000000000813e-06, 9.443999999997343e-06, 9.458999999999856e-06, 9.429999999997773e-06, 9.138999999998287e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.458000000000383e-06, 9.458000000000383e-06, 9.152999999997857e-06, 9.541999999997802e-06, 9.166000000001423e-06, 9.750000000002812e-06, 9.458000000000383e-06, 9.485999999999523e-06, 9.153000000001327e-06, 9.152000000001853e-06, 9.749999999999343e-06, 9.152999999997857e-06, 9.445000000000286e-06, 9.458000000000383e-06, 9.417000000001147e-06, 9.167000000000897e-06, 9.528000000001702e-06, 9.694000000001063e-06, 9.472999999999426e-06, 9.153000000001327e-06]</msg>
<status status="PASS" starttime="20201112 12:26:26.270" endtime="20201112 12:26:26.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.265" endtime="20201112 12:26:26.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.275" endtime="20201112 12:26:26.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.278" endtime="20201112 12:26:26.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.277" endtime="20201112 12:26:26.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.273" endtime="20201112 12:26:26.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.907" endtime="20201112 12:26:26.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:25.906" endtime="20201112 12:26:26.299"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.309" endtime="20201112 12:26:26.324"></status>
</kw>
<msg timestamp="20201112 12:26:26.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.307" endtime="20201112 12:26:26.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.325" endtime="20201112 12:26:26.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.328" endtime="20201112 12:26:26.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.304" endtime="20201112 12:26:26.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.302" endtime="20201112 12:26:26.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.338" endtime="20201112 12:26:26.626"></status>
</kw>
<msg timestamp="20201112 12:26:26.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02298725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:26.337" endtime="20201112 12:26:26.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02298725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:26.630" endtime="20201112 12:26:26.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.639" endtime="20201112 12:26:26.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.334" endtime="20201112 12:26:26.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.332" endtime="20201112 12:26:26.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:26.646" level="INFO">${RESULT} = [{'time': 0.022998083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999998288e-05, 'source_diff': 1.0832999999998288e-05}, {'time': 0.023010194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:26.642" endtime="20201112 12:26:26.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:26.659" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:26.647" endtime="20201112 12:26:26.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.664" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:26.663" endtime="20201112 12:26:26.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.667" level="INFO">VALUE: [1.0832999999998288e-05, 1.0166000000002423e-05, 1.0389000000003007e-05, 1.0694000000002063e-05, 1.0708000000001633e-05, 1.0083000000001008e-05, 1.0402999999999107e-05, 1.0707999999998163e-05, 1.0070000000000912e-05, 1.0388999999999537e-05, 1.0388000000000064e-05, 1.0679999999999024e-05, 1.0388999999999537e-05, 9.749999999999343e-06, 1.0374999999999968e-05, 1.0416999999998677e-05, 1.0402999999999107e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0693999999998594e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0722000000001203e-05, 1.0388999999999537e-05, 1.0694999999998067e-05, 1.0681000000001967e-05, 1.0083000000001008e-05, 1.0750000000000343e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0361000000000398e-05, 1.0693999999998594e-05, 1.0694999999998067e-05, 1.0680999999998497e-05, 1.0082999999997538e-05, 1.0388999999999537e-05, 1.0069000000001438e-05, 1.0304999999998649e-05, 1.0320000000001162e-05, 1.0084000000000481e-05, 1.0374999999999968e-05, 9.791999999998052e-06, 1.0681000000001967e-05, 1.0070000000000912e-05, 1.0709000000001107e-05, 1.0082999999997538e-05, 1.0402999999999107e-05, 1.0083000000001008e-05, 1.0402999999999107e-05]</msg>
<status status="PASS" starttime="20201112 12:26:26.665" endtime="20201112 12:26:26.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.660" endtime="20201112 12:26:26.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.671" endtime="20201112 12:26:26.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:26.674" endtime="20201112 12:26:26.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.672" endtime="20201112 12:26:26.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.669" endtime="20201112 12:26:26.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.300" endtime="20201112 12:26:26.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.300" endtime="20201112 12:26:26.695"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.704" endtime="20201112 12:26:26.719"></status>
</kw>
<msg timestamp="20201112 12:26:26.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.702" endtime="20201112 12:26:26.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.720" endtime="20201112 12:26:26.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.723" endtime="20201112 12:26:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.700" endtime="20201112 12:26:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.698" endtime="20201112 12:26:26.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.734" endtime="20201112 12:26:27.019"></status>
</kw>
<msg timestamp="20201112 12:26:27.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.733" endtime="20201112 12:26:27.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.023" endtime="20201112 12:26:27.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.032" endtime="20201112 12:26:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.730" endtime="20201112 12:26:27.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.728" endtime="20201112 12:26:27.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.039" level="INFO">${RESULT} = [{'time': 0.022593583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.022606458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.036" endtime="20201112 12:26:27.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.054" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.040" endtime="20201112 12:26:27.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.059" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.058" endtime="20201112 12:26:27.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.061" level="INFO">VALUE: [1.1457999999998913e-05, 1.0986000000001023e-05, 1.1304999999999649e-05, 1.1319000000002688e-05, 1.1624999999997748e-05, 1.1610999999998178e-05, 1.1333000000002258e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1319999999998692e-05, 1.1305999999999122e-05, 1.1638999999997318e-05, 1.1320000000002162e-05, 1.1014000000000163e-05, 1.0709000000001107e-05, 1.1332999999998788e-05, 1.1389000000000538e-05, 1.1319999999998692e-05, 1.1333999999998262e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1597000000002078e-05, 1.1000000000000593e-05, 1.1320000000002162e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1320000000002162e-05, 1.1320000000002162e-05, 1.1610999999998178e-05, 1.1653000000000358e-05, 1.1014000000000163e-05, 1.1639000000000788e-05, 1.1249999999997373e-05, 1.1624999999997748e-05, 1.1639000000000788e-05, 1.1014000000000163e-05, 1.1583999999998512e-05, 1.1305000000003118e-05, 1.1625000000001218e-05, 1.1318999999999219e-05, 1.1304999999999649e-05, 1.1000000000000593e-05, 1.0695000000001537e-05, 1.1625000000001218e-05, 1.1611999999997652e-05, 1.1625000000001218e-05, 1.1318999999999219e-05, 1.1333000000002258e-05, 1.1625000000001218e-05, 1.1320000000002162e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.060" endtime="20201112 12:26:27.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.055" endtime="20201112 12:26:27.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.065" endtime="20201112 12:26:27.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.068" endtime="20201112 12:26:27.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.067" endtime="20201112 12:26:27.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.063" endtime="20201112 12:26:27.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.696" endtime="20201112 12:26:27.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.695" endtime="20201112 12:26:27.089"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.098" endtime="20201112 12:26:27.113"></status>
</kw>
<msg timestamp="20201112 12:26:27.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.097" endtime="20201112 12:26:27.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.114" endtime="20201112 12:26:27.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.117" endtime="20201112 12:26:27.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.094" endtime="20201112 12:26:27.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.092" endtime="20201112 12:26:27.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.127" endtime="20201112 12:26:27.415"></status>
</kw>
<msg timestamp="20201112 12:26:27.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.126" endtime="20201112 12:26:27.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.419" endtime="20201112 12:26:27.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.428" endtime="20201112 12:26:27.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.123" endtime="20201112 12:26:27.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.121" endtime="20201112 12:26:27.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.435" level="INFO">${RESULT} = [{'time': 0.022240653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.022254708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.431" endtime="20201112 12:26:27.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.448" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.436" endtime="20201112 12:26:27.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.453" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.452" endtime="20201112 12:26:27.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.456" level="INFO">VALUE: [1.2695000000000067e-05, 1.1916000000000704e-05, 1.2583000000000039e-05, 1.2556000000000372e-05, 1.2250000000001843e-05, 1.2263999999997943e-05, 1.2555000000000899e-05, 1.2250000000001843e-05, 1.2208999999999137e-05, 1.2583999999999512e-05, 1.2569000000000469e-05, 1.2250000000001843e-05, 1.2555000000000899e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2333999999999262e-05, 1.255499999999743e-05, 1.2263999999997943e-05, 1.2250000000001843e-05, 1.2237000000001746e-05, 1.2235999999998803e-05, 1.2846999999999859e-05, 1.1971999999998983e-05, 1.2250000000001843e-05, 1.2528000000001233e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2569999999999942e-05, 1.2542000000000803e-05, 1.2236000000002273e-05, 1.2249999999998373e-05, 1.2875000000002468e-05, 1.2207999999999664e-05, 1.255499999999743e-05, 1.2556000000000372e-05, 1.2180999999999997e-05, 1.2555000000000899e-05, 1.2846999999999859e-05, 1.2583999999999512e-05, 1.1972999999998457e-05, 1.2306000000000122e-05, 1.2249999999998373e-05, 1.2542000000000803e-05, 1.2235999999998803e-05, 1.2249999999998373e-05, 1.2569999999999942e-05, 1.1902999999997138e-05, 1.254099999999786e-05, 1.1930000000000274e-05, 1.2874999999998998e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.454" endtime="20201112 12:26:27.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.449" endtime="20201112 12:26:27.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.460" endtime="20201112 12:26:27.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.463" endtime="20201112 12:26:27.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.462" endtime="20201112 12:26:27.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.458" endtime="20201112 12:26:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.090" endtime="20201112 12:26:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.090" endtime="20201112 12:26:27.484"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.493" endtime="20201112 12:26:27.508"></status>
</kw>
<msg timestamp="20201112 12:26:27.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.492" endtime="20201112 12:26:27.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.509" endtime="20201112 12:26:27.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.512" endtime="20201112 12:26:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.489" endtime="20201112 12:26:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.487" endtime="20201112 12:26:27.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.522" endtime="20201112 12:26:27.807"></status>
</kw>
<msg timestamp="20201112 12:26:27.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.521" endtime="20201112 12:26:27.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.812" endtime="20201112 12:26:27.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.820" endtime="20201112 12:26:27.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.518" endtime="20201112 12:26:27.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.516" endtime="20201112 12:26:27.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.827" level="INFO">${RESULT} = [{'time': 0.022487056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3597999999996613e-05, 'source_diff': 1.3597999999996613e-05}, {'time': 0.022501917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.824" endtime="20201112 12:26:27.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:27.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.828" endtime="20201112 12:26:27.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.846" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:27.845" endtime="20201112 12:26:27.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.848" level="INFO">VALUE: [1.3597999999996613e-05, 1.2860999999999428e-05, 1.2860999999999428e-05, 1.3445000000000817e-05, 1.3486999999999527e-05, 1.3194000000001094e-05, 1.3472000000000484e-05, 1.381899999999825e-05, 1.3513999999999193e-05, 1.3180000000001524e-05, 1.3805000000002149e-05, 1.3458000000000914e-05, 1.3180000000001524e-05, 1.3139000000002288e-05, 1.3458000000000914e-05, 1.381899999999825e-05, 1.3167000000001428e-05, 1.3499999999999623e-05, 1.354099999999886e-05, 1.2888999999998568e-05, 1.3180000000001524e-05, 1.3513999999999193e-05, 1.3180000000001524e-05, 1.3472999999999957e-05, 1.3486000000000054e-05, 1.3791999999998583e-05, 1.2888999999998568e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.354099999999886e-05, 1.3722000000000734e-05, 1.3499999999999623e-05, 1.3471999999997014e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3166000000001954e-05, 1.3499999999999623e-05, 1.3181000000000997e-05, 1.3527999999998763e-05, 1.3499999999999623e-05, 1.3167000000001428e-05, 1.3472999999999957e-05, 1.3819000000001719e-05, 1.3195000000000567e-05, 1.3472999999999957e-05, 1.3791000000002579e-05, 1.3181000000000997e-05, 1.380499999999868e-05, 1.3167000000001428e-05, 1.3194000000001094e-05]</msg>
<status status="PASS" starttime="20201112 12:26:27.847" endtime="20201112 12:26:27.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.842" endtime="20201112 12:26:27.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.852" endtime="20201112 12:26:27.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.856" endtime="20201112 12:26:27.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.854" endtime="20201112 12:26:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.850" endtime="20201112 12:26:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.485" endtime="20201112 12:26:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.485" endtime="20201112 12:26:27.877"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.886" endtime="20201112 12:26:27.900"></status>
</kw>
<msg timestamp="20201112 12:26:27.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.884" endtime="20201112 12:26:27.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.902" endtime="20201112 12:26:27.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.904" endtime="20201112 12:26:27.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.881" endtime="20201112 12:26:27.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.879" endtime="20201112 12:26:27.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.915" endtime="20201112 12:26:28.200"></status>
</kw>
<msg timestamp="20201112 12:26:28.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.913" endtime="20201112 12:26:28.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.205" endtime="20201112 12:26:28.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.213" endtime="20201112 12:26:28.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.910" endtime="20201112 12:26:28.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.909" endtime="20201112 12:26:28.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.220" level="INFO">${RESULT} = [{'time': 0.022344569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5166000000000485e-05, 'source_diff': 1.5166000000000485e-05}, {'time': 0.022360403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:28.217" endtime="20201112 12:26:28.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.234" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.221" endtime="20201112 12:26:28.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.239" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.238" endtime="20201112 12:26:28.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.241" level="INFO">VALUE: [1.5166000000000485e-05, 1.4111000000000679e-05, 1.4083000000001539e-05, 1.4417000000002678e-05, 1.4402999999999638e-05, 1.4430000000002774e-05, 1.4736000000001304e-05, 1.4429999999999304e-05, 1.4402999999999638e-05, 1.4778000000000013e-05, 1.4097000000001109e-05, 1.4735999999997834e-05, 1.4416999999999208e-05, 1.4097000000001109e-05, 1.4735999999997834e-05, 1.4444999999998348e-05, 1.4737000000000777e-05, 1.4485999999997584e-05, 1.4430999999998778e-05, 1.4431000000002248e-05, 1.4694999999998598e-05, 1.4111000000000679e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4445000000001817e-05, 1.4430999999998778e-05, 1.4707999999998694e-05, 1.4736000000001304e-05, 1.4735999999997834e-05, 1.4125000000000248e-05, 1.4111000000000679e-05, 1.4735999999997834e-05, 1.4429999999999304e-05, 1.4111000000000679e-05, 1.4402999999999638e-05, 1.4402999999999638e-05, 1.4112000000000152e-05, 1.4736000000001304e-05, 1.4429999999999304e-05, 1.3806000000001623e-05, 1.4430999999998778e-05, 1.4431000000002248e-05, 1.4111000000000679e-05, 1.4402000000000165e-05, 1.4431000000002248e-05, 1.4722000000001734e-05, 1.4111000000000679e-05, 1.4444999999998348e-05, 1.4750000000000874e-05, 1.480499999999968e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.240" endtime="20201112 12:26:28.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.235" endtime="20201112 12:26:28.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.245" endtime="20201112 12:26:28.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.249" endtime="20201112 12:26:28.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.247" endtime="20201112 12:26:28.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.243" endtime="20201112 12:26:28.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.878" endtime="20201112 12:26:28.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.877" endtime="20201112 12:26:28.269"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.278" endtime="20201112 12:26:28.293"></status>
</kw>
<msg timestamp="20201112 12:26:28.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.277" endtime="20201112 12:26:28.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.295" endtime="20201112 12:26:28.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.297" endtime="20201112 12:26:28.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.274" endtime="20201112 12:26:28.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.272" endtime="20201112 12:26:28.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.308" endtime="20201112 12:26:28.594"></status>
</kw>
<msg timestamp="20201112 12:26:28.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.306" endtime="20201112 12:26:28.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.598" endtime="20201112 12:26:28.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.607" endtime="20201112 12:26:28.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.303" endtime="20201112 12:26:28.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.302" endtime="20201112 12:26:28.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:28.613" level="INFO">${RESULT} = [{'time': 0.022238083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.611099999999921e-05, 'source_diff': 1.611099999999921e-05}, {'time': 0.022254778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:28.610" endtime="20201112 12:26:28.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:28.628" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:28.615" endtime="20201112 12:26:28.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.633" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:28.632" endtime="20201112 12:26:28.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.636" level="INFO">VALUE: [1.611099999999921e-05, 1.5041999999999833e-05, 1.53750000000015e-05, 1.5708999999999168e-05, 1.5027999999996794e-05, 1.566700000000046e-05, 1.5334000000002262e-05, 1.538900000000107e-05, 1.563900000000132e-05, 1.536100000000193e-05, 1.529100000000061e-05, 1.563900000000132e-05, 1.536099999999846e-05, 1.566700000000046e-05, 1.529100000000061e-05, 1.566699999999699e-05, 1.5041999999999833e-05, 1.566700000000046e-05, 1.5278000000000513e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.534699999999889e-05, 1.5707999999999694e-05, 1.534699999999889e-05, 1.566700000000046e-05, 1.5652000000001415e-05, 1.536099999999846e-05, 1.534700000000236e-05, 1.5278000000000513e-05, 1.5387999999998125e-05, 1.5347999999998363e-05, 1.566700000000046e-05, 1.565299999999742e-05, 1.5041999999999833e-05, 1.4722000000001734e-05, 1.4736000000001304e-05, 1.537499999999803e-05, 1.538900000000107e-05, 1.536099999999846e-05, 1.566700000000046e-05, 1.5652000000001415e-05, 1.536099999999846e-05, 1.5041999999999833e-05, 1.53750000000015e-05, 1.5347999999998363e-05, 1.563900000000132e-05, 1.5361999999997933e-05, 1.5055999999999403e-05, 1.537499999999803e-05, 1.561099999999871e-05]</msg>
<status status="PASS" starttime="20201112 12:26:28.634" endtime="20201112 12:26:28.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.629" endtime="20201112 12:26:28.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.639" endtime="20201112 12:26:28.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:28.643" endtime="20201112 12:26:28.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.641" endtime="20201112 12:26:28.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.638" endtime="20201112 12:26:28.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.270" endtime="20201112 12:26:28.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.270" endtime="20201112 12:26:28.664"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.673" endtime="20201112 12:26:28.687"></status>
</kw>
<msg timestamp="20201112 12:26:28.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.671" endtime="20201112 12:26:28.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:28.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:28.689" endtime="20201112 12:26:28.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.691" endtime="20201112 12:26:28.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.669" endtime="20201112 12:26:28.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.667" endtime="20201112 12:26:28.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:28.702" endtime="20201112 12:26:28.988"></status>
</kw>
<msg timestamp="20201112 12:26:28.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.700" endtime="20201112 12:26:28.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:28.992" endtime="20201112 12:26:29.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.001" endtime="20201112 12:26:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.698" endtime="20201112 12:26:29.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.696" endtime="20201112 12:26:29.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.008" level="INFO">${RESULT} = [{'time': 0.022205056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7084000000000543e-05, 'source_diff': 1.7084000000000543e-05}, {'time': 0.022222889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:29.004" endtime="20201112 12:26:29.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.009" endtime="20201112 12:26:29.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.026" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.025" endtime="20201112 12:26:29.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.029" level="INFO">VALUE: [1.7084000000000543e-05, 1.6277999999998044e-05, 1.6569000000001e-05, 1.630499999999771e-05, 1.6292000000001083e-05, 1.691699999999824e-05, 1.6277999999998044e-05, 1.655500000000143e-05, 1.6277999999998044e-05, 1.659700000000014e-05, 1.629100000000161e-05, 1.6306000000000653e-05, 1.6221999999999764e-05, 1.627699999999857e-05, 1.6262999999999e-05, 1.6278000000001513e-05, 1.626300000000247e-05, 1.6264000000001944e-05, 1.659700000000014e-05, 1.6597999999999613e-05, 1.658300000000057e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.6292000000001083e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.627699999999857e-05, 1.6277999999998044e-05, 1.662499999999928e-05, 1.661099999999971e-05, 1.5957999999999944e-05, 1.662499999999928e-05, 1.629099999999814e-05, 1.566700000000046e-05, 1.5999999999998654e-05, 1.5985999999999084e-05, 1.630499999999771e-05, 1.691700000000171e-05, 1.6013999999998224e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.666699999999799e-05, 1.659700000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.028" endtime="20201112 12:26:29.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.023" endtime="20201112 12:26:29.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.033" endtime="20201112 12:26:29.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.036" endtime="20201112 12:26:29.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.035" endtime="20201112 12:26:29.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.031" endtime="20201112 12:26:29.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.665" endtime="20201112 12:26:29.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:28.664" endtime="20201112 12:26:29.057"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.066" endtime="20201112 12:26:29.081"></status>
</kw>
<msg timestamp="20201112 12:26:29.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.065" endtime="20201112 12:26:29.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.083" endtime="20201112 12:26:29.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.085" endtime="20201112 12:26:29.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.062" endtime="20201112 12:26:29.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.060" endtime="20201112 12:26:29.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.096" endtime="20201112 12:26:29.381"></status>
</kw>
<msg timestamp="20201112 12:26:29.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:29.094" endtime="20201112 12:26:29.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:29.386" endtime="20201112 12:26:29.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.394" endtime="20201112 12:26:29.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.091" endtime="20201112 12:26:29.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.090" endtime="20201112 12:26:29.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.401" level="INFO">${RESULT} = [{'time': 0.022386, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7957999999998475e-05, 'source_diff': 1.7957999999998475e-05}, {'time': 0.022404903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:29.398" endtime="20201112 12:26:29.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.415" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.402" endtime="20201112 12:26:29.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.420" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.419" endtime="20201112 12:26:29.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.423" level="INFO">VALUE: [1.7957999999998475e-05, 1.6986000000000084e-05, 1.7194000000001625e-05, 1.761100000000071e-05, 1.7236000000000334e-05, 1.7208000000001195e-05, 1.7207999999997725e-05, 1.7527999999999294e-05, 1.7500000000000154e-05, 1.7527999999999294e-05, 1.752699999999982e-05, 1.7805999999998684e-05, 1.6945000000000848e-05, 1.7208000000001195e-05, 1.7527999999999294e-05, 1.7555999999998434e-05, 1.7513999999999724e-05, 1.7208000000001195e-05, 1.7223000000000238e-05, 1.7236000000000334e-05, 1.7236000000000334e-05, 1.783300000000182e-05, 1.7527999999999294e-05, 1.7221999999997295e-05, 1.7235999999996865e-05, 1.7194000000001625e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.7207999999997725e-05, 1.783299999999835e-05, 1.7249999999999904e-05, 1.7472000000001014e-05, 1.7556000000001903e-05, 1.7193999999998155e-05, 1.718099999999806e-05, 1.7527999999999294e-05, 1.7195000000001098e-05, 1.6901999999999195e-05, 1.7513999999999724e-05, 1.7527999999999294e-05, 1.7473000000000488e-05, 1.715300000000239e-05, 1.7236000000000334e-05, 1.7569000000002e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.7472000000001014e-05, 1.7500000000000154e-05, 1.7541999999998864e-05, 1.7527999999999294e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.421" endtime="20201112 12:26:29.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.416" endtime="20201112 12:26:29.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.544" endtime="20201112 12:26:29.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.551" endtime="20201112 12:26:29.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.548" endtime="20201112 12:26:29.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.540" endtime="20201112 12:26:29.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.058" endtime="20201112 12:26:29.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.058" endtime="20201112 12:26:29.577"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.597" endtime="20201112 12:26:29.615"></status>
</kw>
<msg timestamp="20201112 12:26:29.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.593" endtime="20201112 12:26:29.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:29.618" endtime="20201112 12:26:29.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.623" endtime="20201112 12:26:29.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.587" endtime="20201112 12:26:29.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.583" endtime="20201112 12:26:29.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.641" endtime="20201112 12:26:29.927"></status>
</kw>
<msg timestamp="20201112 12:26:29.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038402056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.639" endtime="20201112 12:26:29.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038402056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:29.931" endtime="20201112 12:26:29.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.940" endtime="20201112 12:26:29.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.636" endtime="20201112 12:26:29.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.632" endtime="20201112 12:26:29.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:29.947" level="INFO">${RESULT} = [{'time': 0.038420319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.826300000000447e-05, 'source_diff': 1.826300000000447e-05}, {'time': 0.038440347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:29.943" endtime="20201112 12:26:29.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:29.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:29.948" endtime="20201112 12:26:29.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.965" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:29.964" endtime="20201112 12:26:29.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:29.968" level="INFO">VALUE: [1.826300000000447e-05, 1.8429999999999835e-05, 1.8458000000005914e-05, 1.8098000000001113e-05, 1.8763999999997505e-05, 1.8443999999999405e-05, 1.8458000000005914e-05, 1.809700000000164e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.8166000000000015e-05, 1.8472000000005484e-05, 1.784700000000139e-05, 1.819499999999863e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.852699999999735e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8778000000004014e-05, 1.843099999999931e-05, 1.783299999999488e-05, 1.815299999999992e-05, 1.8722000000005734e-05, 1.8471999999998545e-05, 1.8193999999999155e-05, 1.8152000000000446e-05, 1.845899999999845e-05, 1.8443999999999405e-05, 1.815299999999992e-05, 1.8473000000004958e-05, 1.813900000000035e-05, 1.8777999999997075e-05, 1.815299999999992e-05, 1.8459000000005388e-05, 1.8443999999999405e-05, 1.8735999999998365e-05, 1.8458000000005914e-05, 1.8791999999996645e-05, 1.8471999999998545e-05, 1.8457999999998975e-05, 1.8457999999998975e-05, 1.8473000000004958e-05, 1.783300000000182e-05, 1.8500000000004624e-05, 1.869499999999913e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.813900000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:26:29.966" endtime="20201112 12:26:29.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.961" endtime="20201112 12:26:29.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:29.972" endtime="20201112 12:26:29.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:29.975" endtime="20201112 12:26:29.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.974" endtime="20201112 12:26:29.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.970" endtime="20201112 12:26:29.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.579" endtime="20201112 12:26:29.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.578" endtime="20201112 12:26:29.996"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.005" endtime="20201112 12:26:30.019"></status>
</kw>
<msg timestamp="20201112 12:26:30.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.004" endtime="20201112 12:26:30.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.021" endtime="20201112 12:26:30.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.023" endtime="20201112 12:26:30.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.001" endtime="20201112 12:26:30.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.999" endtime="20201112 12:26:30.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.034" endtime="20201112 12:26:30.320"></status>
</kw>
<msg timestamp="20201112 12:26:30.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.032" endtime="20201112 12:26:30.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.325" endtime="20201112 12:26:30.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.333" endtime="20201112 12:26:30.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.030" endtime="20201112 12:26:30.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.028" endtime="20201112 12:26:30.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.340" level="INFO">${RESULT} = [{'time': 0.022348194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9221999999999295e-05, 'source_diff': 1.9221999999999295e-05}, {'time': 0.022369208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:30.337" endtime="20201112 12:26:30.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.341" endtime="20201112 12:26:30.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.360" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.359" endtime="20201112 12:26:30.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.362" level="INFO">VALUE: [1.9221999999999295e-05, 1.93890000000016e-05, 1.93890000000016e-05, 1.906900000000003e-05, 1.940300000000117e-05, 1.969500000000013e-05, 1.968100000000056e-05, 1.9721999999999795e-05, 1.936099999999899e-05, 1.9429999999997366e-05, 1.9693999999997186e-05, 1.9042000000000364e-05, 1.969500000000013e-05, 1.911100000000221e-05, 1.969500000000013e-05, 1.94029999999977e-05, 1.906900000000003e-05, 1.937500000000203e-05, 1.9680000000001086e-05, 1.937500000000203e-05, 1.937499999999856e-05, 1.937500000000203e-05, 1.9693999999997186e-05, 1.9694000000000655e-05, 1.90829999999996e-05, 1.968100000000056e-05, 1.9055999999999934e-05, 1.9069999999999504e-05, 1.9721999999999795e-05, 1.9098000000002113e-05, 1.937499999999856e-05, 1.962499999999881e-05, 1.9694000000000655e-05, 1.936100000000246e-05, 1.936099999999899e-05, 1.9334000000002793e-05, 1.969500000000013e-05, 1.913900000000135e-05, 1.9401999999998226e-05, 1.940300000000117e-05, 1.937500000000203e-05, 1.911099999999874e-05, 1.8750000000001404e-05, 1.938899999999813e-05, 1.93890000000016e-05, 1.936099999999899e-05, 1.9666000000001516e-05, 1.937500000000203e-05, 1.9763999999998505e-05, 1.94029999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.361" endtime="20201112 12:26:30.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.356" endtime="20201112 12:26:30.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.366" endtime="20201112 12:26:30.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.370" endtime="20201112 12:26:30.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.368" endtime="20201112 12:26:30.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.364" endtime="20201112 12:26:30.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.997" endtime="20201112 12:26:30.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:29.997" endtime="20201112 12:26:30.391"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.400" endtime="20201112 12:26:30.415"></status>
</kw>
<msg timestamp="20201112 12:26:30.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.398" endtime="20201112 12:26:30.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.416" endtime="20201112 12:26:30.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.419" endtime="20201112 12:26:30.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.395" endtime="20201112 12:26:30.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.393" endtime="20201112 12:26:30.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.429" endtime="20201112 12:26:30.715"></status>
</kw>
<msg timestamp="20201112 12:26:30.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.428" endtime="20201112 12:26:30.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.720" endtime="20201112 12:26:30.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.728" endtime="20201112 12:26:30.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.425" endtime="20201112 12:26:30.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.423" endtime="20201112 12:26:30.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.735" level="INFO">${RESULT} = [{'time': 0.022565125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043099999999784e-05, 'source_diff': 2.043099999999784e-05}, {'time': 0.022586972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.732" endtime="20201112 12:26:30.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:30.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.736" endtime="20201112 12:26:30.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.754" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:26:30.753" endtime="20201112 12:26:30.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.756" level="INFO">VALUE: [2.043099999999784e-05, 1.9972000000000045e-05, 2.0958000000001475e-05, 2.0292000000001614e-05, 2.0320000000000754e-05, 2.061100000000024e-05, 2.031899999999781e-05, 2.031900000000128e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.033300000000085e-05, 2.068099999999809e-05, 2.0387999999999656e-05, 2.033299999999738e-05, 2.0320000000000754e-05, 2.030499999999824e-05, 1.9999999999999185e-05, 2.0306000000001184e-05, 2.062499999999981e-05, 2.093100000000181e-05, 2.061100000000024e-05, 2.062499999999981e-05, 2.031900000000128e-05, 2.065299999999895e-05, 1.972299999999927e-05, 2.062499999999981e-05, 2.031900000000128e-05, 2.062499999999981e-05, 2.0263999999999005e-05, 2.061100000000024e-05, 2.033300000000085e-05, 2.0347999999999894e-05, 2.063899999999938e-05, 2.031899999999781e-05, 2.062499999999981e-05, 2.0306000000001184e-05, 2.0320000000000754e-05, 2.063899999999938e-05, 2.062499999999981e-05, 2.031899999999781e-05, 2.062499999999981e-05, 2.063899999999938e-05, 2.0306000000001184e-05, 2.030500000000171e-05, 2.062499999999981e-05, 2.0320000000000754e-05, 2.0014000000002224e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.755" endtime="20201112 12:26:30.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.750" endtime="20201112 12:26:30.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.760" endtime="20201112 12:26:30.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.764" endtime="20201112 12:26:30.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.762" endtime="20201112 12:26:30.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.758" endtime="20201112 12:26:30.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.392" endtime="20201112 12:26:30.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.391" endtime="20201112 12:26:30.785"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.795" endtime="20201112 12:26:30.810"></status>
</kw>
<msg timestamp="20201112 12:26:30.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.793" endtime="20201112 12:26:30.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.811" endtime="20201112 12:26:30.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.814" endtime="20201112 12:26:30.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.790" endtime="20201112 12:26:30.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.787" endtime="20201112 12:26:30.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.824" endtime="20201112 12:26:31.111"></status>
</kw>
<msg timestamp="20201112 12:26:31.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.823" endtime="20201112 12:26:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023455542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023477528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.115" endtime="20201112 12:26:31.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.124" endtime="20201112 12:26:31.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.820" endtime="20201112 12:26:31.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.818" endtime="20201112 12:26:31.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.131" level="INFO">${RESULT} = [{'time': 0.023477528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1986000000001615e-05, 'source_diff': 2.1986000000001615e-05}, {'time': 0.023500431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:31.127" endtime="20201112 12:26:31.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.144" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.132" endtime="20201112 12:26:31.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.149" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.148" endtime="20201112 12:26:31.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.152" level="INFO">VALUE: [2.1986000000001615e-05, 2.123700000000034e-05, 2.1236000000000865e-05, 2.1235999999997396e-05, 2.19030000000002e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.152700000000035e-05, 2.1527999999999825e-05, 2.1236000000000865e-05, 2.155499999999949e-05, 2.1541999999999395e-05, 2.1555999999998965e-05, 2.1235999999997396e-05, 2.1555999999998965e-05, 2.193099999999934e-05, 2.1222000000001295e-05, 2.155500000000296e-05, 2.1222000000001295e-05, 2.187499999999759e-05, 2.1569999999998535e-05, 2.123700000000034e-05, 2.155499999999949e-05, 2.162500000000081e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.1000000000000185e-05, 2.093100000000181e-05, 2.1250000000000435e-05, 2.155499999999949e-05, 2.1236000000000865e-05, 2.118099999999859e-05, 2.1556000000002434e-05, 2.1222000000001295e-05, 2.123700000000034e-05, 2.1236000000000865e-05, 2.194500000000238e-05, 2.1236000000000865e-05, 2.1555999999998965e-05, 2.1250000000000435e-05, 2.155499999999949e-05, 2.1250000000000435e-05, 2.186099999999802e-05, 2.1180000000002586e-05, 2.1569999999998535e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.1541999999999395e-05, 2.1208000000001725e-05, 2.1194000000002156e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.150" endtime="20201112 12:26:31.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.145" endtime="20201112 12:26:31.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.155" endtime="20201112 12:26:31.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.159" endtime="20201112 12:26:31.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.158" endtime="20201112 12:26:31.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.154" endtime="20201112 12:26:31.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.785" endtime="20201112 12:26:31.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.785" endtime="20201112 12:26:31.180"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.189" endtime="20201112 12:26:31.204"></status>
</kw>
<msg timestamp="20201112 12:26:31.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.188" endtime="20201112 12:26:31.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.206" endtime="20201112 12:26:31.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.209" endtime="20201112 12:26:31.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.185" endtime="20201112 12:26:31.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.183" endtime="20201112 12:26:31.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.219" endtime="20201112 12:26:31.504"></status>
</kw>
<msg timestamp="20201112 12:26:31.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.217" endtime="20201112 12:26:31.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.508" endtime="20201112 12:26:31.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.517" endtime="20201112 12:26:31.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.215" endtime="20201112 12:26:31.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.213" endtime="20201112 12:26:31.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.524" level="INFO">${RESULT} = [{'time': 0.022687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.231899999999981e-05, 'source_diff': 2.231899999999981e-05}, {'time': 0.022711097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:31.520" endtime="20201112 12:26:31.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.537" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.525" endtime="20201112 12:26:31.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.542" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.541" endtime="20201112 12:26:31.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.545" level="INFO">VALUE: [2.231899999999981e-05, 2.1943999999999436e-05, 2.2514000000001255e-05, 2.2514000000001255e-05, 2.2485999999998646e-05, 2.2194000000003156e-05, 2.248699999999812e-05, 2.2471999999999076e-05, 2.2485999999998646e-05, 2.218099999999959e-05, 2.281900000000031e-05, 2.2500000000001685e-05, 2.2806000000000215e-05, 2.2207999999999256e-05, 2.2486000000002115e-05, 2.216700000000002e-05, 2.2776999999998132e-05, 2.2236000000001865e-05, 2.2457999999999506e-05, 2.2819999999999785e-05, 2.215300000000045e-05, 2.2180000000000116e-05, 2.216700000000002e-05, 2.2471999999999076e-05, 2.283299999999988e-05, 2.2485999999998646e-05, 2.2472000000002545e-05, 2.2527999999997356e-05, 2.2736000000002365e-05, 2.187500000000106e-05, 2.241700000000027e-05, 2.2166000000000546e-05, 2.218099999999959e-05, 2.2485999999998646e-05, 2.2806000000000215e-05, 2.2193999999999686e-05, 2.2485999999998646e-05, 2.2486000000002115e-05, 2.2180000000000116e-05, 2.2472000000002545e-05, 2.2471999999999076e-05, 2.2471999999999076e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.2443999999999936e-05, 2.2180000000000116e-05, 2.2485999999998646e-05, 2.219499999999916e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.543" endtime="20201112 12:26:31.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.538" endtime="20201112 12:26:31.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.548" endtime="20201112 12:26:31.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.552" endtime="20201112 12:26:31.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.550" endtime="20201112 12:26:31.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.547" endtime="20201112 12:26:31.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.181" endtime="20201112 12:26:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.180" endtime="20201112 12:26:31.573"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.582" endtime="20201112 12:26:31.597"></status>
</kw>
<msg timestamp="20201112 12:26:31.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.580" endtime="20201112 12:26:31.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.598" endtime="20201112 12:26:31.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.601" endtime="20201112 12:26:31.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.578" endtime="20201112 12:26:31.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.575" endtime="20201112 12:26:31.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.611" endtime="20201112 12:26:31.899"></status>
</kw>
<msg timestamp="20201112 12:26:31.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.610" endtime="20201112 12:26:31.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:31.903" endtime="20201112 12:26:31.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.912" endtime="20201112 12:26:31.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.607" endtime="20201112 12:26:31.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.605" endtime="20201112 12:26:31.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:31.919" level="INFO">${RESULT} = [{'time': 0.022260931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3834000000000355e-05, 'source_diff': 2.3834000000000355e-05}, {'time': 0.022285833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:31.915" endtime="20201112 12:26:31.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:31.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:31.920" endtime="20201112 12:26:31.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.938" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:26:31.937" endtime="20201112 12:26:31.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.941" level="INFO">VALUE: [2.3834000000000355e-05, 2.283299999999988e-05, 2.370900000000023e-05, 2.370900000000023e-05, 2.366699999999805e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3499999999999216e-05, 2.2790999999997702e-05, 2.34030000000017e-05, 2.281900000000031e-05, 2.3763999999999036e-05, 2.3485999999999646e-05, 2.341700000000127e-05, 2.312499999999884e-05, 2.341700000000127e-05, 2.311100000000274e-05, 2.343100000000084e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.3722000000000326e-05, 2.3056000000000465e-05, 2.3735999999999896e-05, 2.370900000000023e-05, 2.311099999999927e-05, 2.341700000000127e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.333300000000038e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.3735999999999896e-05, 2.343099999999737e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.3722000000000326e-05, 2.3112000000002214e-05, 2.3430000000001366e-05, 2.341700000000127e-05, 2.3415999999998327e-05, 2.311100000000274e-05, 2.3778000000002075e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.311099999999927e-05, 2.370900000000023e-05, 2.311099999999927e-05, 2.2792000000000645e-05, 2.344500000000041e-05, 2.315299999999798e-05]</msg>
<status status="PASS" starttime="20201112 12:26:31.939" endtime="20201112 12:26:31.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.935" endtime="20201112 12:26:31.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.945" endtime="20201112 12:26:31.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:31.948" endtime="20201112 12:26:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.947" endtime="20201112 12:26:31.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.943" endtime="20201112 12:26:31.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.574" endtime="20201112 12:26:31.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.573" endtime="20201112 12:26:31.969"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.978" endtime="20201112 12:26:31.993"></status>
</kw>
<msg timestamp="20201112 12:26:31.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.976" endtime="20201112 12:26:31.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:31.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:31.995" endtime="20201112 12:26:31.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:31.997" endtime="20201112 12:26:32.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.974" endtime="20201112 12:26:32.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.972" endtime="20201112 12:26:32.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.008" endtime="20201112 12:26:32.295"></status>
</kw>
<msg timestamp="20201112 12:26:32.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.006" endtime="20201112 12:26:32.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.299" endtime="20201112 12:26:32.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.308" endtime="20201112 12:26:32.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.004" endtime="20201112 12:26:32.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.002" endtime="20201112 12:26:32.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.315" level="INFO">${RESULT} = [{'time': 0.022299653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4805999999998746e-05, 'source_diff': 2.4805999999998746e-05}, {'time': 0.022325625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:32.311" endtime="20201112 12:26:32.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.328" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.316" endtime="20201112 12:26:32.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.333" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.332" endtime="20201112 12:26:32.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.336" level="INFO">VALUE: [2.4805999999998746e-05, 2.4042000000001895e-05, 2.438899999999966e-05, 2.462500000000034e-05, 2.4334000000000855e-05, 2.4070000000001035e-05, 2.463899999999991e-05, 2.463899999999991e-05, 2.4041999999998426e-05, 2.4679999999999147e-05, 2.466699999999905e-05, 2.4040999999998952e-05, 2.4348000000000425e-05, 2.4348000000000425e-05, 2.468100000000209e-05, 2.4665999999999577e-05, 2.463899999999991e-05, 2.4582999999998162e-05, 2.437500000000009e-05, 2.4707999999998287e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.434700000000095e-05, 2.3750000000002935e-05, 2.433300000000138e-05, 2.472299999999733e-05, 2.468099999999862e-05, 2.434700000000095e-05, 2.4348000000000425e-05, 2.465299999999948e-05, 2.3999999999999716e-05, 2.4346999999997482e-05, 2.4304999999998772e-05, 2.397300000000005e-05, 2.4346999999997482e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.429100000000267e-05, 2.4334000000000855e-05, 2.463899999999991e-05, 2.4277999999999106e-05, 2.4041999999998426e-05, 2.438899999999966e-05, 2.4026999999999382e-05, 2.4693999999998717e-05, 2.465300000000295e-05, 2.4598000000000675e-05, 2.4027999999998856e-05, 2.434700000000095e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.334" endtime="20201112 12:26:32.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.329" endtime="20201112 12:26:32.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.340" endtime="20201112 12:26:32.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.343" endtime="20201112 12:26:32.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.342" endtime="20201112 12:26:32.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.338" endtime="20201112 12:26:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.970" endtime="20201112 12:26:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:31.969" endtime="20201112 12:26:32.364"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.373" endtime="20201112 12:26:32.388"></status>
</kw>
<msg timestamp="20201112 12:26:32.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.372" endtime="20201112 12:26:32.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.390" endtime="20201112 12:26:32.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.392" endtime="20201112 12:26:32.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.369" endtime="20201112 12:26:32.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.367" endtime="20201112 12:26:32.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.403" endtime="20201112 12:26:32.689"></status>
</kw>
<msg timestamp="20201112 12:26:32.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:32.401" endtime="20201112 12:26:32.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:32.694" endtime="20201112 12:26:32.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.702" endtime="20201112 12:26:32.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.399" endtime="20201112 12:26:32.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.397" endtime="20201112 12:26:32.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:32.709" level="INFO">${RESULT} = [{'time': 0.022431778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5778000000000606e-05, 'source_diff': 2.5778000000000606e-05}, {'time': 0.022458833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:32.706" endtime="20201112 12:26:32.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:32.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:32.710" endtime="20201112 12:26:32.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.728" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:26:32.727" endtime="20201112 12:26:32.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.730" level="INFO">VALUE: [2.5778000000000606e-05, 2.5291000000000202e-05, 2.5360999999998052e-05, 2.562500000000134e-05, 2.5569999999999066e-05, 2.5582999999999162e-05, 2.5582999999999162e-05, 2.5570000000002535e-05, 2.561100000000177e-05, 2.5278000000000106e-05, 2.562500000000134e-05, 2.593099999999987e-05, 2.55970000000022e-05, 2.4957999999998537e-05, 2.5582999999999162e-05, 2.536100000000152e-05, 2.5568999999999592e-05, 2.5277000000000632e-05, 2.5291000000000202e-05, 2.588900000000116e-05, 2.4985999999997677e-05, 2.588899999999769e-05, 2.5264000000000536e-05, 2.5278000000000106e-05, 2.55970000000022e-05, 2.5596999999998732e-05, 2.5278000000000106e-05, 2.4958000000002006e-05, 2.5568999999999592e-05, 2.4985999999997677e-05, 2.55970000000022e-05, 2.55970000000022e-05, 2.5596999999998732e-05, 2.5278000000000106e-05, 2.5305999999999246e-05, 2.5583999999998636e-05, 2.5568999999999592e-05, 2.5291999999999676e-05, 2.5582999999999162e-05, 2.5278000000000106e-05, 2.5597999999998206e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5598000000001675e-05, 2.565300000000048e-05, 2.5346999999998482e-05, 2.5278000000000106e-05, 2.5360999999998052e-05, 2.5541999999999926e-05, 2.5930000000000397e-05]</msg>
<status status="PASS" starttime="20201112 12:26:32.729" endtime="20201112 12:26:32.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.724" endtime="20201112 12:26:32.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.734" endtime="20201112 12:26:32.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:32.738" endtime="20201112 12:26:32.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.736" endtime="20201112 12:26:32.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.732" endtime="20201112 12:26:32.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.365" endtime="20201112 12:26:32.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.364" endtime="20201112 12:26:32.759"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.768" endtime="20201112 12:26:32.782"></status>
</kw>
<msg timestamp="20201112 12:26:32.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.766" endtime="20201112 12:26:32.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:32.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:32.784" endtime="20201112 12:26:32.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.787" endtime="20201112 12:26:32.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.763" endtime="20201112 12:26:32.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.761" endtime="20201112 12:26:32.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:32.797" endtime="20201112 12:26:33.083"></status>
</kw>
<msg timestamp="20201112 12:26:33.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:32.795" endtime="20201112 12:26:33.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022488417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.088" endtime="20201112 12:26:33.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.096" endtime="20201112 12:26:33.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.793" endtime="20201112 12:26:33.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.791" endtime="20201112 12:26:33.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.103" level="INFO">${RESULT} = [{'time': 0.022488417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694500000000044e-05, 'source_diff': 2.694500000000044e-05}, {'time': 0.022516347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.100" endtime="20201112 12:26:33.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.118" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.104" endtime="20201112 12:26:33.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.122" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.121" endtime="20201112 12:26:33.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.125" level="INFO">VALUE: [2.694500000000044e-05, 2.5860999999998552e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6846999999999982e-05, 2.6514000000001786e-05, 2.6833000000000412e-05, 2.6221999999999357e-05, 2.644499999999994e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.6499999999998747e-05, 2.6235999999998927e-05, 2.6222000000002826e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.6527000000001882e-05, 2.6527000000001882e-05, 2.62230000000023e-05, 2.6833999999999886e-05, 2.6152000000001507e-05, 2.6194000000000217e-05, 2.6513999999998317e-05, 2.6221999999999357e-05, 2.6527999999997887e-05, 2.6806000000000746e-05, 2.6514000000001786e-05, 2.6528000000001356e-05, 2.6540999999997983e-05, 2.6528000000001356e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.6207999999999787e-05, 2.6514000000001786e-05, 2.620900000000273e-05, 2.6513999999998317e-05, 2.6527999999997887e-05, 2.6194000000000217e-05, 2.6526999999998413e-05, 2.6583999999999636e-05, 2.6527999999997887e-05, 2.6514000000001786e-05, 2.6514000000001786e-05, 2.6541999999997457e-05, 2.6833000000000412e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6527999999997887e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.123" endtime="20201112 12:26:33.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.119" endtime="20201112 12:26:33.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.128" endtime="20201112 12:26:33.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.132" endtime="20201112 12:26:33.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.130" endtime="20201112 12:26:33.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.127" endtime="20201112 12:26:33.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.760" endtime="20201112 12:26:33.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:32.759" endtime="20201112 12:26:33.153"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.161" endtime="20201112 12:26:33.176"></status>
</kw>
<msg timestamp="20201112 12:26:33.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.160" endtime="20201112 12:26:33.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.179" endtime="20201112 12:26:33.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.183" endtime="20201112 12:26:33.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.157" endtime="20201112 12:26:33.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.155" endtime="20201112 12:26:33.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.194" endtime="20201112 12:26:33.481"></status>
</kw>
<msg timestamp="20201112 12:26:33.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.193" endtime="20201112 12:26:33.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.485" endtime="20201112 12:26:33.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.493" endtime="20201112 12:26:33.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.190" endtime="20201112 12:26:33.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.188" endtime="20201112 12:26:33.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.500" level="INFO">${RESULT} = [{'time': 0.022006833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8179999999999178e-05, 'source_diff': 2.8179999999999178e-05}, {'time': 0.022036625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:33.497" endtime="20201112 12:26:33.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.515" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.501" endtime="20201112 12:26:33.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.519" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.518" endtime="20201112 12:26:33.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.522" level="INFO">VALUE: [2.8179999999999178e-05, 2.7763999999999567e-05, 2.745900000000051e-05, 2.74309999999979e-05, 2.7138999999998942e-05, 2.7444000000001467e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.7457999999997568e-05, 2.7735999999996958e-05, 2.7443999999997998e-05, 2.7777999999999137e-05, 2.744500000000094e-05, 2.7097000000000232e-05, 2.7763999999999567e-05, 2.7458000000001037e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7138999999998942e-05, 2.7763999999999567e-05, 2.7138999999998942e-05, 2.747300000000008e-05, 2.7137999999999468e-05, 2.741699999999833e-05, 2.747300000000008e-05, 2.7791999999998707e-05, 2.7499999999999747e-05, 2.7457999999997568e-05, 2.7471999999997138e-05, 2.7749999999999997e-05, 2.740300000000223e-05, 2.7458000000001037e-05, 2.7443999999997998e-05, 2.7776999999999663e-05, 2.713900000000241e-05, 2.7444000000001467e-05, 2.7194000000001217e-05, 2.715299999999851e-05, 2.7736000000000427e-05, 2.715299999999851e-05, 2.7472000000000607e-05, 2.715299999999851e-05, 2.7777999999999137e-05, 2.7472000000000607e-05, 2.7736000000000427e-05, 2.7458000000001037e-05, 2.7443999999997998e-05, 2.7513999999999317e-05, 2.7138999999998942e-05, 2.7763999999999567e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.520" endtime="20201112 12:26:33.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.516" endtime="20201112 12:26:33.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.525" endtime="20201112 12:26:33.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.528" endtime="20201112 12:26:33.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.527" endtime="20201112 12:26:33.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.523" endtime="20201112 12:26:33.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.154" endtime="20201112 12:26:33.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.153" endtime="20201112 12:26:33.549"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.558" endtime="20201112 12:26:33.573"></status>
</kw>
<msg timestamp="20201112 12:26:33.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.556" endtime="20201112 12:26:33.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.574" endtime="20201112 12:26:33.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.577" endtime="20201112 12:26:33.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.554" endtime="20201112 12:26:33.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.552" endtime="20201112 12:26:33.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.587" endtime="20201112 12:26:33.873"></status>
</kw>
<msg timestamp="20201112 12:26:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.586" endtime="20201112 12:26:33.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.877" endtime="20201112 12:26:33.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.885" endtime="20201112 12:26:33.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.583" endtime="20201112 12:26:33.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.581" endtime="20201112 12:26:33.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:33.892" level="INFO">${RESULT} = [{'time': 0.021678139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.818099999999865e-05, 'source_diff': 2.818099999999865e-05}, {'time': 0.021707986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:33.888" endtime="20201112 12:26:33.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:33.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:33.893" endtime="20201112 12:26:33.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.910" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:26:33.909" endtime="20201112 12:26:33.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.912" level="INFO">VALUE: [2.818099999999865e-05, 2.8110999999997333e-05, 2.8693999999999248e-05, 2.8693999999999248e-05, 2.8389000000000192e-05, 2.8069000000002092e-05, 2.8693999999999248e-05, 2.8375000000000622e-05, 2.8055000000002522e-05, 2.8708000000002287e-05, 2.8347999999997486e-05, 2.8361000000001052e-05, 2.8388000000000718e-05, 2.8735999999997958e-05, 2.8069999999998096e-05, 2.7763000000000093e-05, 2.8679999999999678e-05, 2.8068999999998623e-05, 2.8764000000000567e-05, 2.8653000000000012e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8736000000001427e-05, 2.8694000000002717e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.8374999999997152e-05, 2.8083000000001662e-05, 2.8653000000000012e-05, 2.8375000000000622e-05, 2.8415999999999858e-05, 2.8389000000000192e-05, 2.8736000000001427e-05, 2.8388999999996722e-05, 2.8693999999999248e-05, 2.8764000000000567e-05, 2.8374999999997152e-05, 2.8361000000001052e-05, 2.84309999999989e-05, 2.8389000000000192e-05, 2.8707999999998818e-05, 2.8083000000001662e-05, 2.8389000000000192e-05, 2.868100000000262e-05, 2.8389000000000192e-05, 2.8082999999998193e-05, 2.8666000000000108e-05, 2.8679999999999678e-05, 2.8638000000000968e-05, 2.8444000000002467e-05]</msg>
<status status="PASS" starttime="20201112 12:26:33.911" endtime="20201112 12:26:33.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.906" endtime="20201112 12:26:33.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.916" endtime="20201112 12:26:33.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:33.919" endtime="20201112 12:26:33.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.918" endtime="20201112 12:26:33.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.914" endtime="20201112 12:26:33.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.550" endtime="20201112 12:26:33.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.550" endtime="20201112 12:26:33.940"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.948" endtime="20201112 12:26:33.964"></status>
</kw>
<msg timestamp="20201112 12:26:33.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.947" endtime="20201112 12:26:33.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.965" endtime="20201112 12:26:33.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.968" endtime="20201112 12:26:33.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.944" endtime="20201112 12:26:33.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.942" endtime="20201112 12:26:33.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.978" endtime="20201112 12:26:34.263"></status>
</kw>
<msg timestamp="20201112 12:26:34.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:33.976" endtime="20201112 12:26:34.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.267" endtime="20201112 12:26:34.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.275" endtime="20201112 12:26:34.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.974" endtime="20201112 12:26:34.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.972" endtime="20201112 12:26:34.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.282" level="INFO">${RESULT} = [{'time': 0.021767694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9735999999998958e-05, 'source_diff': 2.9735999999998958e-05}, {'time': 0.021798819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.279" endtime="20201112 12:26:34.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.295" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.283" endtime="20201112 12:26:34.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.300" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.299" endtime="20201112 12:26:34.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.302" level="INFO">VALUE: [2.9735999999998958e-05, 2.9013000000001343e-05, 2.9611000000002302e-05, 2.9264000000001067e-05, 2.9694000000000248e-05, 2.9638999999997973e-05, 2.9332999999999443e-05, 2.9318999999999873e-05, 2.9346999999999013e-05, 2.9624999999998403e-05, 2.9000000000001247e-05, 2.9292000000000207e-05, 2.9625000000001872e-05, 2.9694000000000248e-05, 2.9624999999998403e-05, 2.9680000000000678e-05, 2.9319999999999347e-05, 2.9014000000000817e-05, 2.9624999999998403e-05, 2.9638999999997973e-05, 2.96379999999985e-05, 2.9263999999997597e-05, 2.9610999999998833e-05, 2.9236000000001927e-05, 2.9596999999999263e-05, 2.9319999999999347e-05, 2.9611000000002302e-05, 2.9958000000000068e-05, 2.9000000000001247e-05, 2.9625000000001872e-05, 2.9596999999999263e-05, 2.9305000000000303e-05, 2.9610999999998833e-05, 2.9610999999998833e-05, 2.9624999999998403e-05, 2.9624999999998403e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.96379999999985e-05, 2.96379999999985e-05, 2.9318999999999873e-05, 2.9611000000002302e-05, 2.9625000000001872e-05, 2.9305999999999777e-05, 2.9652000000001538e-05, 2.9625000000001872e-05, 2.9403000000000762e-05, 2.9625000000001872e-05, 2.9681000000000152e-05, 2.9014000000000817e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.301" endtime="20201112 12:26:34.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.296" endtime="20201112 12:26:34.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.306" endtime="20201112 12:26:34.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.309" endtime="20201112 12:26:34.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.308" endtime="20201112 12:26:34.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.304" endtime="20201112 12:26:34.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.941" endtime="20201112 12:26:34.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.940" endtime="20201112 12:26:34.331"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.340" endtime="20201112 12:26:34.355"></status>
</kw>
<msg timestamp="20201112 12:26:34.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.338" endtime="20201112 12:26:34.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.357" endtime="20201112 12:26:34.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.359" endtime="20201112 12:26:34.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.336" endtime="20201112 12:26:34.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.334" endtime="20201112 12:26:34.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.369" endtime="20201112 12:26:34.674"></status>
</kw>
<msg timestamp="20201112 12:26:34.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.368" endtime="20201112 12:26:34.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.683" endtime="20201112 12:26:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.691" endtime="20201112 12:26:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.365" endtime="20201112 12:26:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.363" endtime="20201112 12:26:34.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.698" level="INFO">${RESULT} = [{'time': 0.023128333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0055000000001053e-05, 'source_diff': 3.0055000000001053e-05}, {'time': 0.023160347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:34.694" endtime="20201112 12:26:34.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:34.711" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.699" endtime="20201112 12:26:34.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.715" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:26:34.714" endtime="20201112 12:26:34.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.718" level="INFO">VALUE: [3.0055000000001053e-05, 3.0305000000001303e-05, 3.05700000000006e-05, 3.0554999999998084e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.0235999999999458e-05, 2.992999999999746e-05, 3.0235999999999458e-05, 3.0305000000001303e-05, 3.055500000000155e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.05700000000006e-05, 3.0249999999999028e-05, 3.055500000000155e-05, 3.0235999999999458e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0249999999999028e-05, 3.0290999999998264e-05, 3.05700000000006e-05, 3.08050000000018e-05, 3.0249999999999028e-05, 3.055500000000155e-05, 3.055600000000103e-05, 3.0568999999997654e-05, 3.05700000000006e-05, 3.0235999999999458e-05, 3.087499999999965e-05, 3.0568999999997654e-05, 3.0249999999999028e-05, 3.0500000000002747e-05, 3.058300000000069e-05, 3.086100000000008e-05, 3.05700000000006e-05, 3.0221999999999888e-05, 3.055600000000103e-05, 3.054100000000198e-05, 3.086100000000008e-05, 3.0235999999999458e-05, 3.0264000000002067e-05, 3.0235999999999458e-05, 3.0249999999999028e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 2.9958000000000068e-05, 3.054200000000146e-05, 3.0264000000002067e-05, 3.0194000000000748e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.716" endtime="20201112 12:26:34.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.712" endtime="20201112 12:26:34.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.780" endtime="20201112 12:26:34.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.783" endtime="20201112 12:26:34.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.782" endtime="20201112 12:26:34.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.778" endtime="20201112 12:26:34.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.332" endtime="20201112 12:26:34.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.331" endtime="20201112 12:26:34.804"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.813" endtime="20201112 12:26:34.828"></status>
</kw>
<msg timestamp="20201112 12:26:34.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.811" endtime="20201112 12:26:34.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.830" endtime="20201112 12:26:34.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.832" endtime="20201112 12:26:34.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.809" endtime="20201112 12:26:34.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.806" endtime="20201112 12:26:34.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.842" endtime="20201112 12:26:35.128"></status>
</kw>
<msg timestamp="20201112 12:26:35.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.841" endtime="20201112 12:26:35.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.132" endtime="20201112 12:26:35.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.140" endtime="20201112 12:26:35.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.838" endtime="20201112 12:26:35.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.836" endtime="20201112 12:26:35.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.147" level="INFO">${RESULT} = [{'time': 0.022184486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3388999999998253e-05, 'source_diff': 3.3388999999998253e-05}, {'time': 0.022223181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:35.143" endtime="20201112 12:26:35.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.148" endtime="20201112 12:26:35.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.165" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.164" endtime="20201112 12:26:35.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.168" level="INFO">VALUE: [3.3388999999998253e-05, 3.316700000000061e-05, 3.286200000000156e-05, 3.373600000000296e-05, 3.372199999999992e-05, 3.297199999999917e-05, 3.3096999999999294e-05, 3.291599999999742e-05, 3.370800000000035e-05, 3.373599999999949e-05, 3.3082999999999724e-05, 3.3110999999998864e-05, 3.287500000000165e-05, 3.299999999999831e-05, 3.387500000000265e-05, 3.299999999999831e-05, 3.369400000000078e-05, 3.32640000000016e-05, 3.379200000000124e-05, 3.301400000000135e-05, 3.316700000000061e-05, 3.3082999999999724e-05, 3.375000000000253e-05, 3.3638999999998503e-05, 3.2832999999999474e-05, 3.373599999999949e-05, 3.3638999999998503e-05, 3.369500000000025e-05, 3.373600000000296e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.2874999999998183e-05, 3.3124999999998433e-05, 3.3110999999998864e-05, 3.30700000000031e-05, 3.287500000000165e-05, 3.370899999999982e-05, 3.318100000000018e-05, 3.284700000000251e-05, 3.286100000000208e-05, 3.302800000000092e-05, 3.3110999999998864e-05, 3.290300000000079e-05, 3.374999999999906e-05, 3.293099999999993e-05, 3.3041000000001014e-05, 3.2818999999999904e-05, 3.368000000000121e-05, 3.367999999999774e-05, 3.298599999999874e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.166" endtime="20201112 12:26:35.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.162" endtime="20201112 12:26:35.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.171" endtime="20201112 12:26:35.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.175" endtime="20201112 12:26:35.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.173" endtime="20201112 12:26:35.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.170" endtime="20201112 12:26:35.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.805" endtime="20201112 12:26:35.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.804" endtime="20201112 12:26:35.196"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.204" endtime="20201112 12:26:35.219"></status>
</kw>
<msg timestamp="20201112 12:26:35.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.203" endtime="20201112 12:26:35.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.221" endtime="20201112 12:26:35.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.223" endtime="20201112 12:26:35.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.200" endtime="20201112 12:26:35.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.198" endtime="20201112 12:26:35.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.233" endtime="20201112 12:26:35.518"></status>
</kw>
<msg timestamp="20201112 12:26:35.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.232" endtime="20201112 12:26:35.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.523" endtime="20201112 12:26:35.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.531" endtime="20201112 12:26:35.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.229" endtime="20201112 12:26:35.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.227" endtime="20201112 12:26:35.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.537" level="INFO">${RESULT} = [{'time': 0.021617486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.504200000000249e-05, 'source_diff': 3.504200000000249e-05}, {'time': 0.021657236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:35.534" endtime="20201112 12:26:35.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.551" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.538" endtime="20201112 12:26:35.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.555" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.554" endtime="20201112 12:26:35.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.558" level="INFO">VALUE: [3.504200000000249e-05, 3.404200000000149e-05, 3.4069000000001154e-05, 3.4083000000000724e-05, 3.4124999999999434e-05, 3.4819000000001904e-05, 3.475000000000006e-05, 3.3860999999999614e-05, 3.468100000000168e-05, 3.466699999999864e-05, 3.476399999999963e-05, 3.390300000000179e-05, 3.476399999999963e-05, 3.401400000000235e-05, 3.466699999999864e-05, 3.39450000000005e-05, 3.413900000000247e-05, 3.386100000000308e-05, 3.419499999999728e-05, 3.4097000000000294e-05, 3.4624999999999934e-05, 3.419499999999728e-05, 3.3874999999999184e-05, 3.405600000000106e-05, 3.4804999999998865e-05, 3.422200000000042e-05, 3.473699999999996e-05, 3.475000000000006e-05, 3.418100000000118e-05, 3.420800000000085e-05, 3.469399999999831e-05, 3.390299999999832e-05, 3.476399999999963e-05, 3.3888999999998753e-05, 3.4069000000001154e-05, 3.404199999999802e-05, 3.415300000000204e-05, 3.392999999999799e-05, 3.4110999999999864e-05, 3.3888999999998753e-05, 3.472199999999745e-05, 3.4083000000000724e-05, 3.4040999999998545e-05, 3.418000000000171e-05, 3.476399999999963e-05, 3.397200000000017e-05, 3.393099999999746e-05, 3.483400000000095e-05, 3.402799999999845e-05, 3.402799999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.556" endtime="20201112 12:26:35.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.552" endtime="20201112 12:26:35.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.561" endtime="20201112 12:26:35.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.565" endtime="20201112 12:26:35.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.563" endtime="20201112 12:26:35.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.560" endtime="20201112 12:26:35.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.197" endtime="20201112 12:26:35.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.196" endtime="20201112 12:26:35.585"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.594" endtime="20201112 12:26:35.609"></status>
</kw>
<msg timestamp="20201112 12:26:35.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.592" endtime="20201112 12:26:35.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.611" endtime="20201112 12:26:35.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.613" endtime="20201112 12:26:35.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.590" endtime="20201112 12:26:35.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.588" endtime="20201112 12:26:35.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.623" endtime="20201112 12:26:35.910"></status>
</kw>
<msg timestamp="20201112 12:26:35.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.622" endtime="20201112 12:26:35.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:35.914" endtime="20201112 12:26:35.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.922" endtime="20201112 12:26:35.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.619" endtime="20201112 12:26:35.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.618" endtime="20201112 12:26:35.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:35.929" level="INFO">${RESULT} = [{'time': 0.021746847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6110999999998394e-05, 'source_diff': 3.6110999999998394e-05}, {'time': 0.021787611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:35.926" endtime="20201112 12:26:35.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:35.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:35.930" endtime="20201112 12:26:35.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.947" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:26:35.946" endtime="20201112 12:26:35.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:35.949" level="INFO">VALUE: [3.6110999999998394e-05, 3.492999999999899e-05, 3.5125000000000434e-05, 3.567999999999974e-05, 3.4861000000000614e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.5639000000000504e-05, 3.482000000000138e-05, 3.57780000000002e-05, 3.4875000000000184e-05, 3.569400000000278e-05, 3.4902999999999323e-05, 3.497200000000117e-05, 3.49589999999976e-05, 3.529199999999927e-05, 3.5625000000000934e-05, 3.505599999999859e-05, 3.491700000000236e-05, 3.5653000000000074e-05, 3.5124999999996964e-05, 3.579199999999977e-05, 3.490199999999985e-05, 3.520800000000185e-05, 3.4902999999999323e-05, 3.5638999999997034e-05, 3.497300000000064e-05, 3.491699999999889e-05, 3.568000000000321e-05, 3.520799999999838e-05, 3.5596999999998324e-05, 3.57780000000002e-05, 3.5777000000000725e-05, 3.5777000000000725e-05, 3.57780000000002e-05, 3.502799999999945e-05, 3.49580000000016e-05, 3.4874999999996714e-05, 3.5791000000000295e-05, 3.5639000000000504e-05, 3.525000000000056e-05, 3.4833000000001474e-05, 3.567999999999974e-05, 3.488900000000322e-05, 3.576400000000063e-05, 3.5166999999999143e-05, 3.575000000000106e-05, 3.4902999999999323e-05, 3.5625000000000934e-05, 3.5166999999999143e-05]</msg>
<status status="PASS" starttime="20201112 12:26:35.948" endtime="20201112 12:26:35.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.943" endtime="20201112 12:26:35.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.953" endtime="20201112 12:26:35.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:35.956" endtime="20201112 12:26:35.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.955" endtime="20201112 12:26:35.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.951" endtime="20201112 12:26:35.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.586" endtime="20201112 12:26:35.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.586" endtime="20201112 12:26:35.977"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:35.986" endtime="20201112 12:26:36.001"></status>
</kw>
<msg timestamp="20201112 12:26:36.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:35.984" endtime="20201112 12:26:36.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.002" endtime="20201112 12:26:36.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.005" endtime="20201112 12:26:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.981" endtime="20201112 12:26:36.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.979" endtime="20201112 12:26:36.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.015" endtime="20201112 12:26:36.300"></status>
</kw>
<msg timestamp="20201112 12:26:36.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.013" endtime="20201112 12:26:36.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.305" endtime="20201112 12:26:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.313" endtime="20201112 12:26:36.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.011" endtime="20201112 12:26:36.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.009" endtime="20201112 12:26:36.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.319" level="INFO">${RESULT} = [{'time': 0.021765639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7096999999999825e-05, 'source_diff': 3.7096999999999825e-05}, {'time': 0.021807389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:36.316" endtime="20201112 12:26:36.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.333" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.320" endtime="20201112 12:26:36.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.337" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.336" endtime="20201112 12:26:36.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.340" level="INFO">VALUE: [3.7096999999999825e-05, 3.6139000000001004e-05, 3.601399999999741e-05, 3.5874999999997714e-05, 3.6667000000000644e-05, 3.6111000000001864e-05, 3.618000000000024e-05, 3.5903000000000324e-05, 3.583399999999848e-05, 3.608399999999873e-05, 3.593100000000293e-05, 3.6096999999998824e-05, 3.604200000000002e-05, 3.60979999999983e-05, 3.6068999999999685e-05, 3.59450000000025e-05, 3.672199999999945e-05, 3.583400000000195e-05, 3.616600000000067e-05, 3.6082999999999255e-05, 3.5874999999997714e-05, 3.598599999999827e-05, 3.5875000000001184e-05, 3.6125000000001434e-05, 3.6110999999998394e-05, 3.59719999999987e-05, 3.6041000000000545e-05, 3.6776999999998256e-05, 3.619399999999981e-05, 3.592999999999999e-05, 3.595799999999913e-05, 3.6068999999999685e-05, 3.6124999999997964e-05, 3.601400000000088e-05, 3.6180999999999713e-05, 3.595799999999913e-05, 3.6153000000000574e-05, 3.598600000000174e-05, 3.680599999999687e-05, 3.6638999999998034e-05, 3.6110999999998394e-05, 3.6681000000000213e-05, 3.675000000000206e-05, 3.669499999999978e-05, 3.59719999999987e-05, 3.593099999999946e-05, 3.6167000000000143e-05, 3.673599999999902e-05, 3.6110999999998394e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.338" endtime="20201112 12:26:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.334" endtime="20201112 12:26:36.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.343" endtime="20201112 12:26:36.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.347" endtime="20201112 12:26:36.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.345" endtime="20201112 12:26:36.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.342" endtime="20201112 12:26:36.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.978" endtime="20201112 12:26:36.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:35.977" endtime="20201112 12:26:36.367"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.376" endtime="20201112 12:26:36.392"></status>
</kw>
<msg timestamp="20201112 12:26:36.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.375" endtime="20201112 12:26:36.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.394" endtime="20201112 12:26:36.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.396" endtime="20201112 12:26:36.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.372" endtime="20201112 12:26:36.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.370" endtime="20201112 12:26:36.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.406" endtime="20201112 12:26:36.691"></status>
</kw>
<msg timestamp="20201112 12:26:36.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.405" endtime="20201112 12:26:36.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.695" endtime="20201112 12:26:36.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.703" endtime="20201112 12:26:36.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.402" endtime="20201112 12:26:36.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.400" endtime="20201112 12:26:36.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:36.710" level="INFO">${RESULT} = [{'time': 0.021816931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.80980000000003e-05, 'source_diff': 3.80980000000003e-05}, {'time': 0.021859694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:36.707" endtime="20201112 12:26:36.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:36.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:36.711" endtime="20201112 12:26:36.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.729" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:26:36.728" endtime="20201112 12:26:36.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.732" level="INFO">VALUE: [3.80980000000003e-05, 3.692999999999752e-05, 3.711199999999887e-05, 3.708399999999973e-05, 3.71659999999982e-05, 3.773600000000002e-05, 3.707000000000016e-05, 3.6860999999999144e-05, 3.719400000000081e-05, 3.7096999999999825e-05, 3.694400000000056e-05, 3.7110999999999394e-05, 3.7874999999999714e-05, 3.774999999999959e-05, 3.7804999999998395e-05, 3.702800000000145e-05, 3.7833000000001005e-05, 3.7096999999999825e-05, 3.695800000000013e-05, 3.788799999999981e-05, 3.7096999999999825e-05, 3.69719999999997e-05, 3.776400000000263e-05, 3.783400000000048e-05, 3.6931000000000463e-05, 3.6819000000000435e-05, 3.7153000000001574e-05, 3.7153000000001574e-05, 3.701400000000188e-05, 3.69589999999996e-05, 3.7096999999999825e-05, 3.7181000000000713e-05, 3.702799999999798e-05, 3.774999999999959e-05, 3.7152999999998104e-05, 3.77780000000022e-05, 3.697300000000264e-05, 3.777799999999873e-05, 3.7653000000002074e-05, 3.700000000000231e-05, 3.6931000000000463e-05, 3.758400000000023e-05, 3.698599999999927e-05, 3.681999999999991e-05, 3.698599999999927e-05, 3.6819000000000435e-05, 3.6875000000002184e-05, 3.767999999999827e-05, 3.777799999999873e-05, 3.6874999999998714e-05]</msg>
<status status="PASS" starttime="20201112 12:26:36.730" endtime="20201112 12:26:36.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.726" endtime="20201112 12:26:36.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.735" endtime="20201112 12:26:36.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:36.739" endtime="20201112 12:26:36.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.737" endtime="20201112 12:26:36.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.733" endtime="20201112 12:26:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.368" endtime="20201112 12:26:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.368" endtime="20201112 12:26:36.759"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.768" endtime="20201112 12:26:36.784"></status>
</kw>
<msg timestamp="20201112 12:26:36.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.766" endtime="20201112 12:26:36.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:36.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:36.786" endtime="20201112 12:26:36.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.788" endtime="20201112 12:26:36.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.764" endtime="20201112 12:26:36.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.762" endtime="20201112 12:26:36.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:36.798" endtime="20201112 12:26:37.083"></status>
</kw>
<msg timestamp="20201112 12:26:37.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:36.797" endtime="20201112 12:26:37.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.087" endtime="20201112 12:26:37.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.095" endtime="20201112 12:26:37.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.794" endtime="20201112 12:26:37.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.792" endtime="20201112 12:26:37.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.102" level="INFO">${RESULT} = [{'time': 0.021781458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9027000000000506e-05, 'source_diff': 3.9027000000000506e-05}, {'time': 0.021825222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:37.099" endtime="20201112 12:26:37.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.103" endtime="20201112 12:26:37.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.120" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.119" endtime="20201112 12:26:37.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.122" level="INFO">VALUE: [3.9027000000000506e-05, 3.8054999999998645e-05, 3.8124999999999964e-05, 3.879200000000277e-05, 3.827799999999923e-05, 3.8097000000000825e-05, 3.8040999999999076e-05, 3.877799999999973e-05, 3.7832999999997535e-05, 3.799999999999984e-05, 3.869399999999884e-05, 3.79720000000007e-05, 3.8069000000001685e-05, 3.8652999999999604e-05, 3.875000000000059e-05, 3.804200000000202e-05, 3.8694999999998314e-05, 3.8667000000002644e-05, 3.7874999999999714e-05, 3.7931000000001464e-05, 3.8666999999999174e-05, 3.7861000000000145e-05, 3.7944999999997564e-05, 3.87919999999993e-05, 3.8180999999998244e-05, 3.7888999999999284e-05, 3.874999999999712e-05, 3.8625000000000465e-05, 3.8709000000001353e-05, 3.8777000000000256e-05, 3.7945000000001033e-05, 3.8167000000002144e-05, 3.7930999999997994e-05, 3.8012999999999936e-05, 3.793000000000199e-05, 3.8790999999999826e-05, 3.81659999999992e-05, 3.8054999999998645e-05, 3.7888999999999284e-05, 3.7861000000000145e-05, 3.869399999999884e-05, 3.876400000000016e-05, 3.8124999999999964e-05, 3.8096999999997355e-05, 3.869400000000231e-05, 3.8666999999999174e-05, 3.802800000000245e-05, 3.827799999999923e-05, 3.8069000000001685e-05, 3.869399999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.121" endtime="20201112 12:26:37.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.116" endtime="20201112 12:26:37.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.126" endtime="20201112 12:26:37.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.129" endtime="20201112 12:26:37.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.128" endtime="20201112 12:26:37.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.124" endtime="20201112 12:26:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.760" endtime="20201112 12:26:37.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:36.760" endtime="20201112 12:26:37.150"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.159" endtime="20201112 12:26:37.174"></status>
</kw>
<msg timestamp="20201112 12:26:37.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.157" endtime="20201112 12:26:37.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.175" endtime="20201112 12:26:37.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.178" endtime="20201112 12:26:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.154" endtime="20201112 12:26:37.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.152" endtime="20201112 12:26:37.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.188" endtime="20201112 12:26:37.473"></status>
</kw>
<msg timestamp="20201112 12:26:37.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02162825, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:26:37.186" endtime="20201112 12:26:37.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02162825, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:26:37.478" endtime="20201112 12:26:37.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.486" endtime="20201112 12:26:37.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.184" endtime="20201112 12:26:37.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.182" endtime="20201112 12:26:37.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.492" level="INFO">${RESULT} = [{'time': 0.02162825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.025000000000209e-05, 'source_diff': 4.025000000000209e-05}, {'time': 0.021673014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:37.489" endtime="20201112 12:26:37.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.506" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.493" endtime="20201112 12:26:37.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.510" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.509" endtime="20201112 12:26:37.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.513" level="INFO">VALUE: [4.025000000000209e-05, 3.8861000000001145e-05, 3.8944999999998564e-05, 3.923600000000152e-05, 3.900000000000084e-05, 3.9139000000000534e-05, 3.977799999999726e-05, 3.9653000000000604e-05, 3.886200000000062e-05, 3.891599999999995e-05, 3.8902999999999854e-05, 3.977799999999726e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9153000000000104e-05, 3.9166999999999674e-05, 3.8986999999997274e-05, 3.892999999999952e-05, 3.919399999999934e-05, 3.9110999999997925e-05, 3.895800000000213e-05, 3.923599999999805e-05, 3.9805000000000396e-05, 3.894400000000256e-05, 3.897199999999823e-05, 3.969399999999984e-05, 3.9068999999999215e-05, 3.8833000000002005e-05, 3.9708999999998884e-05, 3.972200000000245e-05, 3.875000000000059e-05, 3.933399999999851e-05, 3.9652999999997135e-05, 3.9624999999997995e-05, 3.880599999999887e-05, 3.895800000000213e-05, 3.894400000000256e-05, 3.9625000000001465e-05, 3.9639000000001035e-05, 3.981999999999944e-05, 3.975000000000159e-05, 3.8846999999998105e-05, 3.8903000000003324e-05, 3.975000000000159e-05, 3.9667000000000174e-05, 3.9139000000000534e-05, 3.9194999999998814e-05, 3.900000000000084e-05, 3.9723000000001923e-05, 3.8889000000000284e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.511" endtime="20201112 12:26:37.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.507" endtime="20201112 12:26:37.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.516" endtime="20201112 12:26:37.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.520" endtime="20201112 12:26:37.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.518" endtime="20201112 12:26:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.515" endtime="20201112 12:26:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.151" endtime="20201112 12:26:37.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.150" endtime="20201112 12:26:37.541"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.549" endtime="20201112 12:26:37.565"></status>
</kw>
<msg timestamp="20201112 12:26:37.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.548" endtime="20201112 12:26:37.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.566" endtime="20201112 12:26:37.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.569" endtime="20201112 12:26:37.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.545" endtime="20201112 12:26:37.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.543" endtime="20201112 12:26:37.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.579" endtime="20201112 12:26:37.863"></status>
</kw>
<msg timestamp="20201112 12:26:37.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.577" endtime="20201112 12:26:37.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.868" endtime="20201112 12:26:37.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.876" endtime="20201112 12:26:37.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.575" endtime="20201112 12:26:37.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.573" endtime="20201112 12:26:37.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.882" level="INFO">${RESULT} = [{'time': 0.021738597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0402999999997885e-05, 'source_diff': 4.0402999999997885e-05}, {'time': 0.021784347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:37.879" endtime="20201112 12:26:37.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:37.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.883" endtime="20201112 12:26:37.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.901" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:26:37.900" endtime="20201112 12:26:37.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.904" level="INFO">VALUE: [4.0402999999997885e-05, 3.99859999999988e-05, 3.99859999999988e-05, 3.9902999999997385e-05, 4.072199999999998e-05, 4.0638999999998565e-05, 4.0667000000001174e-05, 4.004200000000055e-05, 4.020799999999991e-05, 4.0110999999998925e-05, 4.002800000000098e-05, 3.999999999999837e-05, 3.997199999999923e-05, 4.022199999999948e-05, 3.977799999999726e-05, 3.983399999999901e-05, 4.0181000000000244e-05, 4.018000000000077e-05, 3.997199999999923e-05, 4.0695000000000314e-05, 4.009799999999883e-05, 3.984799999999858e-05, 4.008399999999926e-05, 4.0638999999998565e-05, 3.9958999999999134e-05, 3.9874999999998245e-05, 4.009799999999883e-05, 3.992999999999705e-05, 4.0110999999998925e-05, 3.993000000000052e-05, 4.073599999999955e-05, 4.0111000000002395e-05, 3.9958999999999134e-05, 4.0096999999999355e-05, 4.073599999999955e-05, 4.072199999999998e-05, 4.073599999999955e-05, 4.0097000000002825e-05, 4.019400000000034e-05, 3.993000000000052e-05, 4.019400000000034e-05, 4.001400000000141e-05, 4.083400000000001e-05, 4.072199999999998e-05, 4.0680999999997275e-05, 4.079199999999783e-05, 4.0082999999999785e-05, 3.9832999999999535e-05, 4.0667000000001174e-05, 4.004200000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:26:37.902" endtime="20201112 12:26:37.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.897" endtime="20201112 12:26:37.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.907" endtime="20201112 12:26:37.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:37.911" endtime="20201112 12:26:37.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.909" endtime="20201112 12:26:37.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.906" endtime="20201112 12:26:37.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.541" endtime="20201112 12:26:37.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.541" endtime="20201112 12:26:37.932"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.940" endtime="20201112 12:26:37.957"></status>
</kw>
<msg timestamp="20201112 12:26:37.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.939" endtime="20201112 12:26:37.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.958" endtime="20201112 12:26:37.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.961" endtime="20201112 12:26:37.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.936" endtime="20201112 12:26:37.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.934" endtime="20201112 12:26:37.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.970" endtime="20201112 12:26:38.255"></status>
</kw>
<msg timestamp="20201112 12:26:38.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.969" endtime="20201112 12:26:38.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.259" endtime="20201112 12:26:38.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.267" endtime="20201112 12:26:38.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.966" endtime="20201112 12:26:38.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.965" endtime="20201112 12:26:38.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.274" level="INFO">${RESULT} = [{'time': 0.021721222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1568999999998246e-05, 'source_diff': 4.1568999999998246e-05}, {'time': 0.021769014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:38.270" endtime="20201112 12:26:38.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.275" endtime="20201112 12:26:38.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.293" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.292" endtime="20201112 12:26:38.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.297" level="INFO">VALUE: [4.1568999999998246e-05, 4.182000000000144e-05, 4.1666999999998705e-05, 4.097200000000023e-05, 4.0889000000002285e-05, 4.172200000000098e-05, 4.1110999999999925e-05, 4.1653000000002605e-05, 4.1124999999999495e-05, 4.176399999999969e-05, 4.101399999999894e-05, 4.172200000000098e-05, 4.09859999999998e-05, 4.0889000000002285e-05, 4.079199999999783e-05, 4.116599999999873e-05, 4.101399999999894e-05, 4.083400000000001e-05, 4.123600000000005e-05, 4.1804999999998926e-05, 4.1638999999999565e-05, 4.1138999999999065e-05, 4.116599999999873e-05, 4.102800000000198e-05, 4.1737000000000024e-05, 4.0860999999999675e-05, 4.16799999999988e-05, 4.119399999999787e-05, 4.093000000000152e-05, 4.1152999999998635e-05, 4.0833000000000536e-05, 4.1083000000000786e-05, 4.095800000000066e-05, 4.16799999999988e-05, 4.0860999999999675e-05, 4.1054999999998176e-05, 4.1139000000002535e-05, 4.1054999999998176e-05, 4.119399999999787e-05, 4.09859999999998e-05, 4.1181000000001244e-05, 4.1083000000000786e-05, 4.176399999999969e-05, 4.0888999999998815e-05, 4.119400000000134e-05, 4.1709000000000884e-05, 4.1083000000000786e-05, 4.169399999999837e-05, 4.1195000000000814e-05, 4.0874999999999245e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.295" endtime="20201112 12:26:38.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.289" endtime="20201112 12:26:38.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.301" endtime="20201112 12:26:38.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.304" endtime="20201112 12:26:38.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.303" endtime="20201112 12:26:38.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.299" endtime="20201112 12:26:38.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.933" endtime="20201112 12:26:38.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.932" endtime="20201112 12:26:38.325"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.334" endtime="20201112 12:26:38.350"></status>
</kw>
<msg timestamp="20201112 12:26:38.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.332" endtime="20201112 12:26:38.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.352" endtime="20201112 12:26:38.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.354" endtime="20201112 12:26:38.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.330" endtime="20201112 12:26:38.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.327" endtime="20201112 12:26:38.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.364" endtime="20201112 12:26:38.650"></status>
</kw>
<msg timestamp="20201112 12:26:38.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.363" endtime="20201112 12:26:38.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021990028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.654" endtime="20201112 12:26:38.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.662" endtime="20201112 12:26:38.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.360" endtime="20201112 12:26:38.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.359" endtime="20201112 12:26:38.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:38.669" level="INFO">${RESULT} = [{'time': 0.022032944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291600000000048e-05, 'source_diff': 4.291600000000048e-05}, {'time': 0.022080722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:38.665" endtime="20201112 12:26:38.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:38.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:38.670" endtime="20201112 12:26:38.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.686" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:26:38.685" endtime="20201112 12:26:38.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.689" level="INFO">VALUE: [4.291600000000048e-05, 4.1833000000001536e-05, 4.1818999999998496e-05, 4.2111000000000925e-05, 4.195799999999819e-05, 4.1888999999999815e-05, 4.1875000000000245e-05, 4.1847000000001106e-05, 4.269399999999937e-05, 4.275000000000112e-05, 4.222200000000148e-05, 4.1888999999999815e-05, 4.194399999999862e-05, 4.2695000000002314e-05, 4.277800000000026e-05, 4.2680999999999275e-05, 4.2097000000001356e-05, 4.1888999999999815e-05, 4.2110999999997456e-05, 4.273599999999808e-05, 4.181999999999797e-05, 4.204199999999908e-05, 4.2194999999998345e-05, 4.277699999999732e-05, 4.1888999999999815e-05, 4.2723000000001454e-05, 4.1902999999999385e-05, 4.26799999999998e-05, 4.2208999999997915e-05, 4.208400000000126e-05, 4.2695000000002314e-05, 4.2597000000001856e-05, 4.19860000000008e-05, 4.21799999999993e-05, 4.216599999999973e-05, 4.270800000000241e-05, 4.2082999999998316e-05, 4.21799999999993e-05, 4.1847000000001106e-05, 4.1861000000000675e-05, 4.2152999999999635e-05, 4.2139000000000065e-05, 4.26799999999998e-05, 4.2139000000000065e-05, 4.2069000000002216e-05, 4.270800000000241e-05, 4.1902999999999385e-05, 4.2139000000000065e-05, 4.1875000000000245e-05, 4.220800000000191e-05]</msg>
<status status="PASS" starttime="20201112 12:26:38.687" endtime="20201112 12:26:38.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.683" endtime="20201112 12:26:38.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.692" endtime="20201112 12:26:38.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.696" endtime="20201112 12:26:38.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.694" endtime="20201112 12:26:38.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.691" endtime="20201112 12:26:38.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.326" endtime="20201112 12:26:38.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.325" endtime="20201112 12:26:38.717"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.725" endtime="20201112 12:26:38.740"></status>
</kw>
<msg timestamp="20201112 12:26:38.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.723" endtime="20201112 12:26:38.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.742" endtime="20201112 12:26:38.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.744" endtime="20201112 12:26:38.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.721" endtime="20201112 12:26:38.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.719" endtime="20201112 12:26:38.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.754" endtime="20201112 12:26:39.040"></status>
</kw>
<msg timestamp="20201112 12:26:39.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:38.753" endtime="20201112 12:26:39.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.044" endtime="20201112 12:26:39.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.052" endtime="20201112 12:26:39.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.750" endtime="20201112 12:26:39.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.749" endtime="20201112 12:26:39.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.059" level="INFO">${RESULT} = [{'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.405600000000065e-05, 'source_diff': 4.405600000000065e-05}, {'time': 0.021757944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.056" endtime="20201112 12:26:39.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.060" endtime="20201112 12:26:39.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.077" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.076" endtime="20201112 12:26:39.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.079" level="INFO">VALUE: [4.405600000000065e-05, 4.29860000000018e-05, 4.301400000000094e-05, 4.3139000000001065e-05, 4.2846999999998636e-05, 4.315199999999769e-05, 4.297199999999876e-05, 4.3068999999999746e-05, 4.326400000000119e-05, 4.373599999999908e-05, 4.36800000000008e-05, 4.373600000000255e-05, 4.2889000000000815e-05, 4.375000000000212e-05, 4.3153000000000635e-05, 4.2889000000000815e-05, 4.376399999999822e-05, 4.36800000000008e-05, 4.298599999999833e-05, 4.2945000000002564e-05, 4.3097000000002356e-05, 4.294399999999962e-05, 4.3167000000000205e-05, 4.373599999999908e-05, 4.3180999999999775e-05, 4.3139000000001065e-05, 4.3138999999997596e-05, 4.2959000000002134e-05, 4.3180999999999775e-05, 4.29860000000018e-05, 4.306999999999922e-05, 4.309799999999836e-05, 4.2931000000002995e-05, 4.309800000000183e-05, 4.3139000000001065e-05, 4.2846999999998636e-05, 4.2860999999998206e-05, 4.3667000000000705e-05, 4.3819000000000496e-05, 4.379100000000136e-05, 4.2846999999998636e-05, 4.293000000000005e-05, 4.372199999999951e-05, 4.29999999999979e-05, 4.372199999999951e-05, 4.319399999999987e-05, 4.373599999999908e-05, 4.29860000000018e-05, 4.3111000000001926e-05, 4.326400000000119e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.078" endtime="20201112 12:26:39.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.073" endtime="20201112 12:26:39.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.083" endtime="20201112 12:26:39.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.086" endtime="20201112 12:26:39.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.085" endtime="20201112 12:26:39.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.081" endtime="20201112 12:26:39.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.717" endtime="20201112 12:26:39.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.717" endtime="20201112 12:26:39.107"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.115" endtime="20201112 12:26:39.131"></status>
</kw>
<msg timestamp="20201112 12:26:39.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.114" endtime="20201112 12:26:39.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.132" endtime="20201112 12:26:39.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.135" endtime="20201112 12:26:39.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.111" endtime="20201112 12:26:39.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.109" endtime="20201112 12:26:39.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.145" endtime="20201112 12:26:39.429"></status>
</kw>
<msg timestamp="20201112 12:26:39.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.143" endtime="20201112 12:26:39.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.433" endtime="20201112 12:26:39.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.441" endtime="20201112 12:26:39.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.140" endtime="20201112 12:26:39.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.139" endtime="20201112 12:26:39.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.448" level="INFO">${RESULT} = [{'time': 0.021722083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5138999999999596e-05, 'source_diff': 4.5138999999999596e-05}, {'time': 0.021771861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:39.445" endtime="20201112 12:26:39.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.461" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.449" endtime="20201112 12:26:39.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.466" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.465" endtime="20201112 12:26:39.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.468" level="INFO">VALUE: [4.5138999999999596e-05, 4.419400000000087e-05, 4.402800000000151e-05, 4.477799999999879e-05, 4.46939999999979e-05, 4.469400000000137e-05, 4.3917000000000955e-05, 4.39860000000028e-05, 4.3888999999998346e-05, 4.4096999999999886e-05, 4.3874999999998776e-05, 4.3860999999999206e-05, 4.3917000000000955e-05, 4.4153000000001635e-05, 4.4125000000002496e-05, 4.4083000000000316e-05, 4.3917000000000955e-05, 4.408399999999979e-05, 4.407000000000022e-05, 4.4680999999997806e-05, 4.39999999999989e-05, 4.4195000000000345e-05, 4.4167000000001205e-05, 4.3945000000000095e-05, 4.46939999999979e-05, 4.4736999999999555e-05, 4.398599999999933e-05, 4.4096999999999886e-05, 4.402700000000204e-05, 4.3833000000000066e-05, 4.479099999999889e-05, 4.472200000000051e-05, 4.4069000000000746e-05, 4.46939999999979e-05, 4.4819000000001497e-05, 4.4139000000002065e-05, 4.3917000000000955e-05, 4.3875000000002246e-05, 4.423599999999958e-05, 4.4166999999997736e-05, 4.3874999999998776e-05, 4.3888999999998346e-05, 4.395800000000019e-05, 4.3903000000001385e-05, 4.48060000000014e-05, 4.4181000000000775e-05, 4.3846999999999636e-05, 4.4652999999998666e-05, 4.472200000000051e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.467" endtime="20201112 12:26:39.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.462" endtime="20201112 12:26:39.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.472" endtime="20201112 12:26:39.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.475" endtime="20201112 12:26:39.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.474" endtime="20201112 12:26:39.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.470" endtime="20201112 12:26:39.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.108" endtime="20201112 12:26:39.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.107" endtime="20201112 12:26:39.496"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.505" endtime="20201112 12:26:39.521"></status>
</kw>
<msg timestamp="20201112 12:26:39.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.503" endtime="20201112 12:26:39.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.523" endtime="20201112 12:26:39.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.525" endtime="20201112 12:26:39.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.501" endtime="20201112 12:26:39.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.499" endtime="20201112 12:26:39.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.535" endtime="20201112 12:26:39.821"></status>
</kw>
<msg timestamp="20201112 12:26:39.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.533" endtime="20201112 12:26:39.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.825" endtime="20201112 12:26:39.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.833" endtime="20201112 12:26:39.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.531" endtime="20201112 12:26:39.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.529" endtime="20201112 12:26:39.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:39.840" level="INFO">${RESULT} = [{'time': 0.022066125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.595799999999872e-05, 'source_diff': 4.595799999999872e-05}, {'time': 0.022116889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:39.836" endtime="20201112 12:26:39.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:39.854" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:39.841" endtime="20201112 12:26:39.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.858" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:26:39.857" endtime="20201112 12:26:39.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.861" level="INFO">VALUE: [4.595799999999872e-05, 4.526399999999972e-05, 4.502800000000251e-05, 4.4916999999998486e-05, 4.572199999999804e-05, 4.575000000000065e-05, 4.4916999999998486e-05, 4.5695000000001845e-05, 4.5125000000000026e-05, 4.5166999999998736e-05, 4.5139000000003066e-05, 4.5695000000001845e-05, 4.575000000000065e-05, 4.573599999999761e-05, 4.51939999999984e-05, 4.5125000000000026e-05, 4.490199999999944e-05, 4.56800000000028e-05, 4.5125000000000026e-05, 4.577799999999979e-05, 4.49999999999999e-05, 4.501399999999947e-05, 4.4903000000002385e-05, 4.49999999999999e-05, 4.5111000000000456e-05, 4.572200000000151e-05, 4.505600000000165e-05, 4.56939999999989e-05, 4.497199999999729e-05, 4.575000000000065e-05, 4.4889000000002816e-05, 4.526399999999972e-05, 4.520800000000144e-05, 4.4861000000000206e-05, 4.4833000000001066e-05, 4.5097000000000886e-05, 4.491599999999901e-05, 4.558400000000129e-05, 4.576400000000022e-05, 4.575000000000065e-05, 4.582000000000197e-05, 4.580499999999946e-05, 4.520800000000144e-05, 4.58329999999986e-05, 4.5708999999997946e-05, 4.4959000000000665e-05, 4.504099999999914e-05, 4.572200000000151e-05, 4.522199999999754e-05, 4.575000000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:26:39.860" endtime="20201112 12:26:39.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.855" endtime="20201112 12:26:39.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.928" endtime="20201112 12:26:39.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:39.931" endtime="20201112 12:26:39.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.930" endtime="20201112 12:26:39.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.926" endtime="20201112 12:26:39.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.497" endtime="20201112 12:26:39.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.497" endtime="20201112 12:26:39.952"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.961" endtime="20201112 12:26:39.977"></status>
</kw>
<msg timestamp="20201112 12:26:39.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.959" endtime="20201112 12:26:39.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:39.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:39.979" endtime="20201112 12:26:39.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.981" endtime="20201112 12:26:39.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.957" endtime="20201112 12:26:39.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.955" endtime="20201112 12:26:39.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:39.991" endtime="20201112 12:26:40.277"></status>
</kw>
<msg timestamp="20201112 12:26:40.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:39.990" endtime="20201112 12:26:40.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.281" endtime="20201112 12:26:40.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.289" endtime="20201112 12:26:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.987" endtime="20201112 12:26:40.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.986" endtime="20201112 12:26:40.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.296" level="INFO">${RESULT} = [{'time': 0.021787167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7013999999998e-05, 'source_diff': 4.7013999999998e-05}, {'time': 0.021838944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 12:26:40.292" endtime="20201112 12:26:40.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.309" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:40.297" endtime="20201112 12:26:40.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.314" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.313" endtime="20201112 12:26:40.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.316" level="INFO">VALUE: [4.7013999999998e-05, 4.612499999999756e-05, 4.677799999999732e-05, 4.623600000000158e-05, 4.668000000000033e-05, 4.61939999999994e-05, 4.679100000000089e-05, 4.616600000000026e-05, 4.606899999999928e-05, 4.609699999999842e-05, 4.594399999999915e-05, 4.5889000000000346e-05, 4.616600000000026e-05, 4.592999999999958e-05, 4.66939999999999e-05, 4.676400000000122e-05, 4.5875000000000776e-05, 4.5930999999999056e-05, 4.6653000000000666e-05, 4.634699999999867e-05, 4.6125000000001026e-05, 4.676400000000122e-05, 4.676400000000122e-05, 4.672199999999904e-05, 4.5889000000000346e-05, 4.6667000000000236e-05, 4.6139000000000596e-05, 4.601400000000047e-05, 4.673599999999861e-05, 4.5889000000000346e-05, 4.582000000000197e-05, 4.5916999999999486e-05, 4.586199999999721e-05, 4.5945000000002095e-05, 4.6709000000002415e-05, 4.5959000000001665e-05, 4.6639000000001096e-05, 4.677700000000132e-05, 4.594400000000262e-05, 4.605500000000318e-05, 4.5861000000001206e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.602800000000004e-05, 4.68329999999996e-05, 4.622199999999854e-05, 4.6153000000000166e-05, 4.602800000000004e-05, 4.617999999999983e-05, 4.622200000000201e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.315" endtime="20201112 12:26:40.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.310" endtime="20201112 12:26:40.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.320" endtime="20201112 12:26:40.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.323" endtime="20201112 12:26:40.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.322" endtime="20201112 12:26:40.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.318" endtime="20201112 12:26:40.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.953" endtime="20201112 12:26:40.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:39.953" endtime="20201112 12:26:40.347"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.364" endtime="20201112 12:26:40.384"></status>
</kw>
<msg timestamp="20201112 12:26:40.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.361" endtime="20201112 12:26:40.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.387" endtime="20201112 12:26:40.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.392" endtime="20201112 12:26:40.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.356" endtime="20201112 12:26:40.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.352" endtime="20201112 12:26:40.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.412" endtime="20201112 12:26:40.702"></status>
</kw>
<msg timestamp="20201112 12:26:40.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035217417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.409" endtime="20201112 12:26:40.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035217417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.706" endtime="20201112 12:26:40.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.715" endtime="20201112 12:26:40.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.404" endtime="20201112 12:26:40.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.400" endtime="20201112 12:26:40.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:40.721" level="INFO">${RESULT} = [{'time': 0.035217417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729199999999739e-05, 'source_diff': 4.729199999999739e-05}, {'time': 0.035270181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:40.718" endtime="20201112 12:26:40.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:40.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:40.722" endtime="20201112 12:26:40.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.739" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:26:40.738" endtime="20201112 12:26:40.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.741" level="INFO">VALUE: [4.729199999999739e-05, 4.702799999999757e-05, 4.7139000000001596e-05, 4.704099999999767e-05, 4.766600000000176e-05, 4.712499999999509e-05, 4.699999999999843e-05, 4.713899999999466e-05, 4.6889000000001346e-05, 4.695799999999972e-05, 4.780500000000493e-05, 4.774999999999918e-05, 4.6861000000002206e-05, 4.7653000000001666e-05, 4.7111000000002456e-05, 4.6847000000002637e-05, 4.773599999999961e-05, 4.7139000000001596e-05, 4.68469999999957e-05, 4.6889000000001346e-05, 4.777799999999832e-05, 4.7181000000000306e-05, 4.712499999999509e-05, 4.702799999999757e-05, 4.68339999999956e-05, 4.6847000000002637e-05, 4.702799999999757e-05, 4.7667000000001236e-05, 4.713899999999466e-05, 4.6944999999999626e-05, 4.722199999999954e-05, 4.683400000000254e-05, 4.688899999999441e-05, 4.7181000000000306e-05, 4.773599999999961e-05, 4.777799999999832e-05, 4.691600000000101e-05, 4.708300000000332e-05, 4.70269999999981e-05, 4.716600000000126e-05, 4.76940000000009e-05, 4.7651999999995254e-05, 4.7181000000000306e-05, 4.7013999999998e-05, 4.7611000000002957e-05, 4.695799999999972e-05, 4.699999999999843e-05, 4.6931000000000056e-05, 4.724999999999868e-05, 4.775000000000612e-05]</msg>
<status status="PASS" starttime="20201112 12:26:40.740" endtime="20201112 12:26:40.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.735" endtime="20201112 12:26:40.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.745" endtime="20201112 12:26:40.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:40.748" endtime="20201112 12:26:40.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.747" endtime="20201112 12:26:40.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.743" endtime="20201112 12:26:40.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.349" endtime="20201112 12:26:40.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.347" endtime="20201112 12:26:40.769"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.778" endtime="20201112 12:26:40.794"></status>
</kw>
<msg timestamp="20201112 12:26:40.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.776" endtime="20201112 12:26:40.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:40.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:40.795" endtime="20201112 12:26:40.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.798" endtime="20201112 12:26:40.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.774" endtime="20201112 12:26:40.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.771" endtime="20201112 12:26:40.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:40.808" endtime="20201112 12:26:41.093"></status>
</kw>
<msg timestamp="20201112 12:26:41.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:40.806" endtime="20201112 12:26:41.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.097" endtime="20201112 12:26:41.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.105" endtime="20201112 12:26:41.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.804" endtime="20201112 12:26:41.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.802" endtime="20201112 12:26:41.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.112" level="INFO">${RESULT} = [{'time': 0.021849542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.862500000000006e-05, 'source_diff': 4.862500000000006e-05}, {'time': 0.021903306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.109" endtime="20201112 12:26:41.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.125" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.113" endtime="20201112 12:26:41.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.130" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.129" endtime="20201112 12:26:41.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.132" level="INFO">VALUE: [4.862500000000006e-05, 4.802800000000204e-05, 4.8194999999997407e-05, 4.808400000000032e-05, 4.809700000000042e-05, 4.797200000000029e-05, 4.797199999999682e-05, 4.86940000000019e-05, 4.7875000000002776e-05, 4.866599999999929e-05, 4.880499999999899e-05, 4.811099999999999e-05, 4.81940000000014e-05, 4.867999999999886e-05, 4.790299999999845e-05, 4.78330000000006e-05, 4.801400000000247e-05, 4.787499999999931e-05, 4.876399999999975e-05, 4.801400000000247e-05, 4.808300000000085e-05, 4.822200000000054e-05, 4.787499999999931e-05, 4.8139000000002596e-05, 4.808300000000085e-05, 4.784700000000017e-05, 4.81529999999987e-05, 4.8153000000002166e-05, 4.7959000000000196e-05, 4.875000000000018e-05, 4.879200000000236e-05, 4.822199999999707e-05, 4.876399999999975e-05, 4.869499999999791e-05, 4.7931000000001056e-05, 4.794400000000115e-05, 4.8194999999997407e-05, 4.808400000000032e-05, 4.863899999999963e-05, 4.881899999999856e-05, 4.865199999999972e-05, 4.784700000000017e-05, 4.779099999999842e-05, 4.804100000000214e-05, 4.809699999999695e-05, 4.866599999999929e-05, 4.81940000000014e-05, 4.8139000000002596e-05, 4.806899999999781e-05, 4.812499999999956e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.131" endtime="20201112 12:26:41.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.126" endtime="20201112 12:26:41.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.136" endtime="20201112 12:26:41.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.139" endtime="20201112 12:26:41.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.138" endtime="20201112 12:26:41.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.134" endtime="20201112 12:26:41.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.770" endtime="20201112 12:26:41.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:40.769" endtime="20201112 12:26:41.160"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.168" endtime="20201112 12:26:41.184"></status>
</kw>
<msg timestamp="20201112 12:26:41.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.167" endtime="20201112 12:26:41.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.186" endtime="20201112 12:26:41.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.188" endtime="20201112 12:26:41.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.164" endtime="20201112 12:26:41.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.162" endtime="20201112 12:26:41.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.198" endtime="20201112 12:26:41.483"></status>
</kw>
<msg timestamp="20201112 12:26:41.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.197" endtime="20201112 12:26:41.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.488" endtime="20201112 12:26:41.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.496" endtime="20201112 12:26:41.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.194" endtime="20201112 12:26:41.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.192" endtime="20201112 12:26:41.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.502" level="INFO">${RESULT} = [{'time': 0.021664792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.009799999999842e-05, 'source_diff': 5.009799999999842e-05}, {'time': 0.021719556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:41.499" endtime="20201112 12:26:41.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.517" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.503" endtime="20201112 12:26:41.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.521" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.520" endtime="20201112 12:26:41.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.524" level="INFO">VALUE: [5.009799999999842e-05, 4.8987000000000336e-05, 4.973600000000161e-05, 4.890299999999945e-05, 4.970899999999848e-05, 4.979199999999989e-05, 4.976400000000075e-05, 4.927700000000035e-05, 4.895800000000172e-05, 4.90270000000001e-05, 4.911100000000099e-05, 4.969399999999943e-05, 4.898600000000086e-05, 4.974999999999771e-05, 4.895799999999825e-05, 4.902799999999957e-05, 4.893000000000258e-05, 4.976400000000075e-05, 4.902800000000304e-05, 4.886100000000074e-05, 4.888899999999988e-05, 4.919499999999841e-05, 4.908299999999838e-05, 4.912500000000056e-05, 4.88469999999977e-05, 4.96530000000002e-05, 4.91529999999997e-05, 4.887500000000031e-05, 4.897200000000129e-05, 4.972199999999857e-05, 4.88469999999977e-05, 4.918099999999884e-05, 4.983299999999913e-05, 4.8917000000002486e-05, 4.893099999999859e-05, 4.969399999999943e-05, 4.909700000000142e-05, 4.891599999999954e-05, 4.962499999999759e-05, 4.920800000000197e-05, 4.969399999999943e-05, 4.877699999999985e-05, 4.916699999999927e-05, 4.894399999999868e-05, 4.88330000000016e-05, 4.895799999999825e-05, 4.980499999999999e-05, 4.900000000000043e-05, 4.913900000000013e-05, 4.977800000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.522" endtime="20201112 12:26:41.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.518" endtime="20201112 12:26:41.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.527" endtime="20201112 12:26:41.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.531" endtime="20201112 12:26:41.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.529" endtime="20201112 12:26:41.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.526" endtime="20201112 12:26:41.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.161" endtime="20201112 12:26:41.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.160" endtime="20201112 12:26:41.551"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.560" endtime="20201112 12:26:41.577"></status>
</kw>
<msg timestamp="20201112 12:26:41.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.559" endtime="20201112 12:26:41.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.578" endtime="20201112 12:26:41.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.581" endtime="20201112 12:26:41.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.556" endtime="20201112 12:26:41.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.554" endtime="20201112 12:26:41.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.591" endtime="20201112 12:26:41.876"></status>
</kw>
<msg timestamp="20201112 12:26:41.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.589" endtime="20201112 12:26:41.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.880" endtime="20201112 12:26:41.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.888" endtime="20201112 12:26:41.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.587" endtime="20201112 12:26:41.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.585" endtime="20201112 12:26:41.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.894" level="INFO">${RESULT} = [{'time': 0.021714083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1207999999997034e-05, 'source_diff': 5.1207999999997034e-05}, {'time': 0.021769875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:41.891" endtime="20201112 12:26:41.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:41.908" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.895" endtime="20201112 12:26:41.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.912" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:26:41.911" endtime="20201112 12:26:41.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.915" level="INFO">VALUE: [5.1207999999997034e-05, 4.984700000000217e-05, 4.993000000000011e-05, 5.004200000000014e-05, 5.013900000000113e-05, 5.01530000000007e-05, 5.086099999999927e-05, 5.01530000000007e-05, 4.986099999999827e-05, 4.988900000000088e-05, 5.011099999999852e-05, 5.075000000000218e-05, 5.016700000000027e-05, 5.066700000000077e-05, 4.98339999999986e-05, 5.009799999999842e-05, 5.076400000000175e-05, 4.999999999999796e-05, 5.004200000000014e-05, 4.98200000000025e-05, 5.069499999999991e-05, 5.081899999999709e-05, 4.98330000000026e-05, 5.006899999999981e-05, 5.019399999999993e-05, 5.0652000000001723e-05, 5.013900000000113e-05, 4.999999999999796e-05, 4.999999999999796e-05, 4.998599999999839e-05, 4.991700000000002e-05, 5.0679999999997394e-05, 4.984700000000217e-05, 5.009699999999895e-05, 4.994399999999968e-05, 4.997199999999882e-05, 4.986200000000121e-05, 5.005599999999971e-05, 5.013900000000113e-05, 5.069400000000043e-05, 5.077800000000132e-05, 5.076399999999828e-05, 5.076399999999828e-05, 5.002800000000057e-05, 4.987500000000131e-05, 4.991700000000002e-05, 5.000000000000143e-05, 5.020899999999898e-05, 5.01669999999968e-05, 4.988900000000088e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.913" endtime="20201112 12:26:41.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.909" endtime="20201112 12:26:41.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.918" endtime="20201112 12:26:41.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.922" endtime="20201112 12:26:41.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.920" endtime="20201112 12:26:41.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.917" endtime="20201112 12:26:41.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.552" endtime="20201112 12:26:41.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.552" endtime="20201112 12:26:41.942"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.951" endtime="20201112 12:26:41.968"></status>
</kw>
<msg timestamp="20201112 12:26:41.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.949" endtime="20201112 12:26:41.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.969" endtime="20201112 12:26:41.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.972" endtime="20201112 12:26:41.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.947" endtime="20201112 12:26:41.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.945" endtime="20201112 12:26:41.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.982" endtime="20201112 12:26:42.267"></status>
</kw>
<msg timestamp="20201112 12:26:42.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.980" endtime="20201112 12:26:42.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.272" endtime="20201112 12:26:42.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.280" endtime="20201112 12:26:42.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.978" endtime="20201112 12:26:42.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.976" endtime="20201112 12:26:42.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.286" level="INFO">${RESULT} = [{'time': 0.022061958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.172200000000057e-05, 'source_diff': 5.172200000000057e-05}, {'time': 0.022118722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:42.283" endtime="20201112 12:26:42.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.300" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.287" endtime="20201112 12:26:42.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.304" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.303" endtime="20201112 12:26:42.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.307" level="INFO">VALUE: [5.172200000000057e-05, 5.106900000000081e-05, 5.16530000000022e-05, 5.0943999999997214e-05, 5.080599999999699e-05, 5.168100000000134e-05, 5.12080000000005e-05, 5.116700000000127e-05, 5.172200000000057e-05, 5.174999999999971e-05, 5.104200000000114e-05, 5.1707999999997534e-05, 5.080600000000046e-05, 5.11669999999978e-05, 5.108399999999985e-05, 5.176400000000275e-05, 5.097199999999982e-05, 5.112499999999909e-05, 5.112499999999909e-05, 5.099999999999896e-05, 5.161199999999949e-05, 5.077800000000132e-05, 5.086100000000274e-05, 5.094400000000068e-05, 5.083300000000013e-05, 5.1651999999999254e-05, 5.106900000000081e-05, 5.116600000000179e-05, 5.098600000000286e-05, 5.129199999999792e-05, 5.104200000000114e-05, 5.112499999999909e-05, 5.091700000000102e-05, 5.163899999999916e-05, 5.106900000000081e-05, 5.112500000000256e-05, 5.118100000000084e-05, 5.077799999999785e-05, 5.090299999999798e-05, 5.176399999999928e-05, 5.118100000000084e-05, 5.105600000000071e-05, 5.105600000000071e-05, 5.10279999999981e-05, 5.173600000000014e-05, 5.107000000000028e-05, 5.162500000000306e-05, 5.18470000000007e-05, 5.176399999999928e-05, 5.1721999999997104e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.305" endtime="20201112 12:26:42.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.301" endtime="20201112 12:26:42.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.310" endtime="20201112 12:26:42.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.314" endtime="20201112 12:26:42.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.312" endtime="20201112 12:26:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.309" endtime="20201112 12:26:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.943" endtime="20201112 12:26:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.943" endtime="20201112 12:26:42.334"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.343" endtime="20201112 12:26:42.360"></status>
</kw>
<msg timestamp="20201112 12:26:42.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.341" endtime="20201112 12:26:42.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.361" endtime="20201112 12:26:42.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.364" endtime="20201112 12:26:42.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.339" endtime="20201112 12:26:42.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.337" endtime="20201112 12:26:42.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.374" endtime="20201112 12:26:42.659"></status>
</kw>
<msg timestamp="20201112 12:26:42.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02166075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.372" endtime="20201112 12:26:42.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02166075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:42.663" endtime="20201112 12:26:42.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.671" endtime="20201112 12:26:42.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.370" endtime="20201112 12:26:42.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.368" endtime="20201112 12:26:42.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:42.678" level="INFO">${RESULT} = [{'time': 0.021713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2693999999998964e-05, 'source_diff': 5.2693999999998964e-05}, {'time': 0.021771194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:42.675" endtime="20201112 12:26:42.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:42.691" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:42.679" endtime="20201112 12:26:42.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.696" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:26:42.695" endtime="20201112 12:26:42.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.698" level="INFO">VALUE: [5.2693999999998964e-05, 5.1901999999999504e-05, 5.18470000000007e-05, 5.226399999999978e-05, 5.195800000000125e-05, 5.209700000000095e-05, 5.211100000000052e-05, 5.186100000000027e-05, 5.277799999999985e-05, 5.213899999999966e-05, 5.22080000000015e-05, 5.204200000000214e-05, 5.181899999999809e-05, 5.213899999999966e-05, 5.21530000000027e-05, 5.273600000000114e-05, 5.183299999999766e-05, 5.211100000000052e-05, 5.279200000000289e-05, 5.193100000000159e-05, 5.277799999999985e-05, 5.269500000000191e-05, 5.195900000000073e-05, 5.184800000000017e-05, 5.213899999999966e-05, 5.1901999999999504e-05, 5.194400000000168e-05, 5.191699999999855e-05, 5.199999999999996e-05, 5.2693999999998964e-05, 5.195800000000125e-05, 5.2193999999998464e-05, 5.209700000000095e-05, 5.213899999999966e-05, 5.261100000000102e-05, 5.2221999999997604e-05, 5.279099999999995e-05, 5.2679999999999394e-05, 5.2707999999998534e-05, 5.2193999999998464e-05, 5.206899999999834e-05, 5.181900000000156e-05, 5.206900000000181e-05, 5.222200000000107e-05, 5.195800000000125e-05, 5.201399999999953e-05, 5.275000000000071e-05, 5.191700000000202e-05, 5.220899999999751e-05, 5.193100000000159e-05]</msg>
<status status="PASS" starttime="20201112 12:26:42.697" endtime="20201112 12:26:42.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.692" endtime="20201112 12:26:42.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.702" endtime="20201112 12:26:42.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:42.705" endtime="20201112 12:26:42.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.704" endtime="20201112 12:26:42.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.700" endtime="20201112 12:26:42.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.335" endtime="20201112 12:26:42.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.335" endtime="20201112 12:26:42.726"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.735" endtime="20201112 12:26:42.751"></status>
</kw>
<msg timestamp="20201112 12:26:42.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.733" endtime="20201112 12:26:42.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:42.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:42.753" endtime="20201112 12:26:42.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.755" endtime="20201112 12:26:42.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.731" endtime="20201112 12:26:42.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.728" endtime="20201112 12:26:42.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:42.765" endtime="20201112 12:26:43.050"></status>
</kw>
<msg timestamp="20201112 12:26:43.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:42.763" endtime="20201112 12:26:43.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.054" endtime="20201112 12:26:43.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.062" endtime="20201112 12:26:43.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.761" endtime="20201112 12:26:43.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.759" endtime="20201112 12:26:43.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.069" level="INFO">${RESULT} = [{'time': 0.021861194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3652000000001254e-05, 'source_diff': 5.3652000000001254e-05}, {'time': 0.021919931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.066" endtime="20201112 12:26:43.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.083" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.070" endtime="20201112 12:26:43.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.088" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.087" endtime="20201112 12:26:43.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.090" level="INFO">VALUE: [5.3652000000001254e-05, 5.336200000000124e-05, 5.376400000000128e-05, 5.363900000000116e-05, 5.284699999999823e-05, 5.309700000000195e-05, 5.2957999999998784e-05, 5.3193999999999464e-05, 5.311100000000152e-05, 5.290299999999998e-05, 5.2985999999997924e-05, 5.287499999999737e-05, 5.365299999999726e-05, 5.294499999999869e-05, 5.3680000000000394e-05, 5.2971999999998354e-05, 5.368099999999987e-05, 5.3707999999999534e-05, 5.293099999999912e-05, 5.318099999999937e-05, 5.376400000000128e-05, 5.311099999999805e-05, 5.28470000000017e-05, 5.308400000000185e-05, 5.2971999999998354e-05, 5.311100000000152e-05, 5.375000000000171e-05, 5.284800000000117e-05, 5.305599999999924e-05, 5.381999999999956e-05, 5.283299999999866e-05, 5.309700000000195e-05, 5.2957999999998784e-05, 5.3666000000000824e-05, 5.379100000000095e-05, 5.2929999999999644e-05, 5.300000000000096e-05, 5.379199999999695e-05, 5.298600000000139e-05, 5.309699999999848e-05, 5.301400000000053e-05, 5.3166000000000324e-05, 5.3193999999999464e-05, 5.3763999999997814e-05, 5.2929999999999644e-05, 5.2943999999999214e-05, 5.3763999999997814e-05, 5.2985999999997924e-05, 5.38609999999988e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.089" endtime="20201112 12:26:43.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.084" endtime="20201112 12:26:43.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.094" endtime="20201112 12:26:43.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.097" endtime="20201112 12:26:43.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.096" endtime="20201112 12:26:43.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.092" endtime="20201112 12:26:43.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.727" endtime="20201112 12:26:43.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:42.726" endtime="20201112 12:26:43.118"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.127" endtime="20201112 12:26:43.144"></status>
</kw>
<msg timestamp="20201112 12:26:43.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.125" endtime="20201112 12:26:43.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.145" endtime="20201112 12:26:43.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.148" endtime="20201112 12:26:43.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.123" endtime="20201112 12:26:43.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.120" endtime="20201112 12:26:43.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.158" endtime="20201112 12:26:43.443"></status>
</kw>
<msg timestamp="20201112 12:26:43.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.156" endtime="20201112 12:26:43.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.448" endtime="20201112 12:26:43.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.456" endtime="20201112 12:26:43.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.154" endtime="20201112 12:26:43.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.152" endtime="20201112 12:26:43.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.462" level="INFO">${RESULT} = [{'time': 0.022137722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.465299999999826e-05, 'source_diff': 5.465299999999826e-05}, {'time': 0.022197486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:43.459" endtime="20201112 12:26:43.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.476" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.463" endtime="20201112 12:26:43.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.480" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.479" endtime="20201112 12:26:43.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.483" level="INFO">VALUE: [5.465299999999826e-05, 5.381900000000009e-05, 5.40280000000011e-05, 5.4027999999997633e-05, 5.404200000000067e-05, 5.422200000000307e-05, 5.388900000000141e-05, 5.3985999999998924e-05, 5.418100000000037e-05, 5.386100000000227e-05, 5.4013999999998064e-05, 5.401400000000153e-05, 5.394499999999969e-05, 5.398600000000239e-05, 5.412500000000209e-05, 5.422299999999908e-05, 5.477800000000185e-05, 5.400000000000196e-05, 5.420900000000298e-05, 5.472299999999958e-05, 5.393100000000012e-05, 5.476400000000228e-05, 5.4137999999998715e-05, 5.40410000000012e-05, 5.4708000000000534e-05, 5.406900000000034e-05, 5.383299999999966e-05, 5.40280000000011e-05, 5.395899999999926e-05, 5.4722000000000104e-05, 5.412499999999862e-05, 5.415300000000123e-05, 5.391700000000055e-05, 5.391700000000055e-05, 5.390300000000098e-05, 5.391700000000055e-05, 5.477800000000185e-05, 5.411100000000252e-05, 5.383300000000313e-05, 5.461099999999955e-05, 5.393099999999665e-05, 5.381999999999956e-05, 5.390299999999751e-05, 5.393100000000012e-05, 5.381999999999956e-05, 5.4749999999999244e-05, 5.390299999999751e-05, 5.3915999999997605e-05, 5.390299999999751e-05, 5.412499999999862e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.481" endtime="20201112 12:26:43.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.477" endtime="20201112 12:26:43.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.486" endtime="20201112 12:26:43.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.490" endtime="20201112 12:26:43.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.488" endtime="20201112 12:26:43.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.485" endtime="20201112 12:26:43.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.119" endtime="20201112 12:26:43.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.118" endtime="20201112 12:26:43.510"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.519" endtime="20201112 12:26:43.536"></status>
</kw>
<msg timestamp="20201112 12:26:43.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.517" endtime="20201112 12:26:43.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.537" endtime="20201112 12:26:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.540" endtime="20201112 12:26:43.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.515" endtime="20201112 12:26:43.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.513" endtime="20201112 12:26:43.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.549" endtime="20201112 12:26:43.835"></status>
</kw>
<msg timestamp="20201112 12:26:43.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.548" endtime="20201112 12:26:43.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.839" endtime="20201112 12:26:43.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.847" endtime="20201112 12:26:43.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.545" endtime="20201112 12:26:43.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.544" endtime="20201112 12:26:43.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:43.854" level="INFO">${RESULT} = [{'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6055999999998773e-05, 'source_diff': 5.6055999999998773e-05}, {'time': 0.021737944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:43.850" endtime="20201112 12:26:43.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:43.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:43.855" endtime="20201112 12:26:43.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.871" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:26:43.870" endtime="20201112 12:26:43.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.874" level="INFO">VALUE: [5.6055999999998773e-05, 5.581899999999862e-05, 5.480600000000099e-05, 5.51809999999979e-05, 5.5208000000001034e-05, 5.5665999999999355e-05, 5.583400000000113e-05, 5.488899999999894e-05, 5.4958000000000784e-05, 5.48609999999998e-05, 5.488899999999894e-05, 5.569499999999797e-05, 5.5750000000000244e-05, 5.483300000000066e-05, 5.563899999999969e-05, 5.5707999999998065e-05, 5.483300000000066e-05, 5.487499999999937e-05, 5.480600000000099e-05, 5.491700000000155e-05, 5.483400000000013e-05, 5.494500000000069e-05, 5.4944000000001214e-05, 5.573700000000015e-05, 5.493099999999765e-05, 5.507000000000081e-05, 5.508400000000038e-05, 5.5750000000000244e-05, 5.4972000000000354e-05, 5.5208000000001034e-05, 5.5777999999999384e-05, 5.5249999999999744e-05, 5.511100000000005e-05, 5.4901999999999035e-05, 5.508299999999744e-05, 5.487499999999937e-05, 5.581900000000209e-05, 5.4943999999997745e-05, 5.4985999999999924e-05, 5.515300000000223e-05, 5.515299999999876e-05, 5.511100000000005e-05, 5.511100000000005e-05, 5.4999999999999494e-05, 5.56809999999984e-05, 5.490299999999851e-05, 5.4972000000000354e-05, 5.513899999999919e-05, 5.519500000000094e-05, 5.490300000000198e-05]</msg>
<status status="PASS" starttime="20201112 12:26:43.872" endtime="20201112 12:26:43.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.868" endtime="20201112 12:26:43.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.877" endtime="20201112 12:26:43.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:43.881" endtime="20201112 12:26:43.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.879" endtime="20201112 12:26:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.876" endtime="20201112 12:26:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.511" endtime="20201112 12:26:43.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.511" endtime="20201112 12:26:43.902"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.910" endtime="20201112 12:26:43.927"></status>
</kw>
<msg timestamp="20201112 12:26:43.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.909" endtime="20201112 12:26:43.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:43.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:43.929" endtime="20201112 12:26:43.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.931" endtime="20201112 12:26:43.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.906" endtime="20201112 12:26:43.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.904" endtime="20201112 12:26:43.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:43.941" endtime="20201112 12:26:44.226"></status>
</kw>
<msg timestamp="20201112 12:26:44.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:43.939" endtime="20201112 12:26:44.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.230" endtime="20201112 12:26:44.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.238" endtime="20201112 12:26:44.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.937" endtime="20201112 12:26:44.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.935" endtime="20201112 12:26:44.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.245" level="INFO">${RESULT} = [{'time': 0.021778611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7028000000000634e-05, 'source_diff': 5.7028000000000634e-05}, {'time': 0.021840375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:44.241" endtime="20201112 12:26:44.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.258" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.246" endtime="20201112 12:26:44.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.262" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.261" endtime="20201112 12:26:44.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.265" level="INFO">VALUE: [5.7028000000000634e-05, 5.586099999999733e-05, 5.593099999999865e-05, 5.612499999999715e-05, 5.66809999999994e-05, 5.5972000000001354e-05, 5.593100000000212e-05, 5.6722000000002104e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.608299999999844e-05, 5.6764000000000814e-05, 5.586200000000027e-05, 5.611199999999705e-05, 5.609699999999801e-05, 5.6750000000001244e-05, 5.5985999999997454e-05, 5.6208000000002034e-05, 5.6750000000001244e-05, 5.6208000000002034e-05, 5.68619999999978e-05, 5.613900000000019e-05, 5.6000000000000494e-05, 5.588899999999994e-05, 5.6778000000000384e-05, 5.622299999999761e-05, 5.611100000000105e-05, 5.6707999999999065e-05, 5.5972000000001354e-05, 5.6041999999999204e-05, 5.593100000000212e-05, 5.594499999999822e-05, 5.6208000000002034e-05, 5.6207999999998565e-05, 5.670899999999854e-05, 5.665300000000026e-05, 5.608400000000138e-05, 5.620899999999804e-05, 5.615299999999976e-05, 5.679100000000048e-05, 5.591699999999908e-05, 5.608300000000191e-05, 5.5888000000000465e-05, 5.5888000000000465e-05, 5.604099999999973e-05, 5.604099999999973e-05, 5.662500000000112e-05, 5.6707999999999065e-05, 5.5957999999998315e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.264" endtime="20201112 12:26:44.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.259" endtime="20201112 12:26:44.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.268" endtime="20201112 12:26:44.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.272" endtime="20201112 12:26:44.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.270" endtime="20201112 12:26:44.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.267" endtime="20201112 12:26:44.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.903" endtime="20201112 12:26:44.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:43.902" endtime="20201112 12:26:44.293"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.301" endtime="20201112 12:26:44.318"></status>
</kw>
<msg timestamp="20201112 12:26:44.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.300" endtime="20201112 12:26:44.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.319" endtime="20201112 12:26:44.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.322" endtime="20201112 12:26:44.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.297" endtime="20201112 12:26:44.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.295" endtime="20201112 12:26:44.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.332" endtime="20201112 12:26:44.616"></status>
</kw>
<msg timestamp="20201112 12:26:44.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.330" endtime="20201112 12:26:44.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.621" endtime="20201112 12:26:44.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.629" endtime="20201112 12:26:44.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.328" endtime="20201112 12:26:44.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.326" endtime="20201112 12:26:44.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:44.635" level="INFO">${RESULT} = [{'time': 0.021721847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7415999999997636e-05, 'source_diff': 5.7415999999997636e-05}, {'time': 0.021785597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:44.632" endtime="20201112 12:26:44.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:44.650" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:44.636" endtime="20201112 12:26:44.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.654" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:26:44.653" endtime="20201112 12:26:44.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.657" level="INFO">VALUE: [5.7415999999997636e-05, 5.7749999999998775e-05, 5.690300000000051e-05, 5.708299999999944e-05, 5.711099999999858e-05, 5.71809999999999e-05, 5.762500000000212e-05, 5.715300000000076e-05, 5.7805999999997054e-05, 5.684700000000223e-05, 5.690300000000051e-05, 5.7278000000000884e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.720899999999904e-05, 5.693099999999965e-05, 5.7778000000001384e-05, 5.719499999999947e-05, 5.769499999999997e-05, 5.784699999999976e-05, 5.682000000000256e-05, 5.686200000000127e-05, 5.704100000000073e-05, 5.706899999999987e-05, 5.683299999999919e-05, 5.68749999999979e-05, 5.7735999999999205e-05, 5.690300000000051e-05, 5.6916000000000605e-05, 5.711100000000205e-05, 5.7708000000000065e-05, 5.7193999999999995e-05, 5.706899999999987e-05, 5.7235999999998705e-05, 5.7013999999997594e-05, 5.711099999999858e-05, 5.7735999999999205e-05, 5.7000000000001494e-05, 5.693099999999965e-05, 5.7736000000002674e-05, 5.716700000000033e-05, 5.7750000000002244e-05, 5.7028000000000634e-05, 5.723699999999818e-05, 5.695899999999879e-05, 5.7249999999998274e-05, 5.720900000000251e-05, 5.709700000000248e-05, 5.7749999999998775e-05, 5.7735999999999205e-05]</msg>
<status status="PASS" starttime="20201112 12:26:44.655" endtime="20201112 12:26:44.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.651" endtime="20201112 12:26:44.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.660" endtime="20201112 12:26:44.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:44.664" endtime="20201112 12:26:44.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.662" endtime="20201112 12:26:44.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.659" endtime="20201112 12:26:44.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.293" endtime="20201112 12:26:44.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.293" endtime="20201112 12:26:44.685"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.693" endtime="20201112 12:26:44.710"></status>
</kw>
<msg timestamp="20201112 12:26:44.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.692" endtime="20201112 12:26:44.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.712" endtime="20201112 12:26:44.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.714" endtime="20201112 12:26:44.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.689" endtime="20201112 12:26:44.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.687" endtime="20201112 12:26:44.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.724" endtime="20201112 12:26:45.009"></status>
</kw>
<msg timestamp="20201112 12:26:45.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:44.723" endtime="20201112 12:26:45.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.013" endtime="20201112 12:26:45.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.022" endtime="20201112 12:26:45.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.720" endtime="20201112 12:26:45.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.718" endtime="20201112 12:26:45.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.028" level="INFO">${RESULT} = [{'time': 0.021686444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.829099999999851e-05, 'source_diff': 5.829099999999851e-05}, {'time': 0.021750208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.025" endtime="20201112 12:26:45.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.041" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.029" endtime="20201112 12:26:45.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.046" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.045" endtime="20201112 12:26:45.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.048" level="INFO">VALUE: [5.829099999999851e-05, 5.7971999999999885e-05, 5.8722000000000635e-05, 5.806900000000087e-05, 5.868099999999793e-05, 5.8736000000000205e-05, 5.7985999999999455e-05, 5.790299999999804e-05, 5.813899999999872e-05, 5.8041999999997734e-05, 5.8056000000000774e-05, 5.8749999999999775e-05, 5.8792000000001954e-05, 5.790299999999804e-05, 5.8070000000000344e-05, 5.816700000000133e-05, 5.8000000000002494e-05, 5.80550000000013e-05, 5.8083999999999913e-05, 5.793099999999718e-05, 5.8083999999999913e-05, 5.7971999999999885e-05, 5.863899999999922e-05, 5.8736000000000205e-05, 5.8137999999999246e-05, 5.801299999999912e-05, 5.8263999999998844e-05, 5.7958000000000315e-05, 5.811100000000305e-05, 5.863899999999922e-05, 5.78749999999989e-05, 5.809700000000001e-05, 5.8736000000000205e-05, 5.8042000000001204e-05, 5.790299999999804e-05, 5.8708000000001065e-05, 5.8736000000000205e-05, 5.8027999999998164e-05, 5.865299999999879e-05, 5.815300000000176e-05, 5.86949999999975e-05, 5.795900000000326e-05, 5.7833999999999663e-05, 5.815299999999829e-05, 5.8820000000001094e-05, 5.78610000000028e-05, 5.790299999999804e-05, 5.812499999999915e-05, 5.7971999999999885e-05, 5.8792000000001954e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.047" endtime="20201112 12:26:45.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.042" endtime="20201112 12:26:45.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.123" endtime="20201112 12:26:45.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.126" endtime="20201112 12:26:45.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.124" endtime="20201112 12:26:45.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.121" endtime="20201112 12:26:45.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.685" endtime="20201112 12:26:45.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.685" endtime="20201112 12:26:45.147"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.155" endtime="20201112 12:26:45.172"></status>
</kw>
<msg timestamp="20201112 12:26:45.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.154" endtime="20201112 12:26:45.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.174" endtime="20201112 12:26:45.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.176" endtime="20201112 12:26:45.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.151" endtime="20201112 12:26:45.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.149" endtime="20201112 12:26:45.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.186" endtime="20201112 12:26:45.487"></status>
</kw>
<msg timestamp="20201112 12:26:45.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.185" endtime="20201112 12:26:45.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.491" endtime="20201112 12:26:45.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.500" endtime="20201112 12:26:45.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.182" endtime="20201112 12:26:45.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.180" endtime="20201112 12:26:45.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.506" level="INFO">${RESULT} = [{'time': 0.021833181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9348000000000734e-05, 'source_diff': 5.9348000000000734e-05}, {'time': 0.021897944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:45.503" endtime="20201112 12:26:45.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.507" endtime="20201112 12:26:45.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.524" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.523" endtime="20201112 12:26:45.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.527" level="INFO">VALUE: [5.9348000000000734e-05, 5.901300000000012e-05, 5.9708000000002065e-05, 5.9193999999998526e-05, 5.9749999999997305e-05, 5.9193999999998526e-05, 5.9014000000003064e-05, 5.9179999999998956e-05, 5.909700000000101e-05, 5.9179999999998956e-05, 5.9236000000000705e-05, 5.9194000000001995e-05, 5.880499999999858e-05, 5.9069999999997874e-05, 5.91810000000019e-05, 5.8972000000000885e-05, 5.9791999999999484e-05, 5.970900000000154e-05, 5.891699999999861e-05, 5.895900000000079e-05, 5.918099999999843e-05, 5.9084000000000914e-05, 5.966699999999936e-05, 5.886100000000033e-05, 5.913900000000319e-05, 5.9041999999998734e-05, 5.9028000000002634e-05, 5.9013999999999595e-05, 5.911100000000058e-05, 5.890300000000251e-05, 5.9194000000001995e-05, 5.8901999999999566e-05, 5.894500000000122e-05, 5.904100000000273e-05, 5.883299999999772e-05, 5.9263999999999845e-05, 5.8929999999998706e-05, 5.883300000000119e-05, 5.915300000000276e-05, 5.966699999999936e-05, 5.891700000000208e-05, 5.888899999999947e-05, 5.8986000000000455e-05, 5.9250000000000275e-05, 5.909700000000101e-05, 5.96949999999985e-05, 5.970899999999807e-05, 5.9764000000000345e-05, 5.9069999999997874e-05, 5.965299999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.525" endtime="20201112 12:26:45.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.521" endtime="20201112 12:26:45.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.530" endtime="20201112 12:26:45.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.534" endtime="20201112 12:26:45.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.532" endtime="20201112 12:26:45.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.528" endtime="20201112 12:26:45.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.148" endtime="20201112 12:26:45.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.147" endtime="20201112 12:26:45.554"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.563" endtime="20201112 12:26:45.580"></status>
</kw>
<msg timestamp="20201112 12:26:45.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.561" endtime="20201112 12:26:45.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.582" endtime="20201112 12:26:45.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.584" endtime="20201112 12:26:45.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.559" endtime="20201112 12:26:45.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.557" endtime="20201112 12:26:45.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.594" endtime="20201112 12:26:45.879"></status>
</kw>
<msg timestamp="20201112 12:26:45.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.593" endtime="20201112 12:26:45.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021586236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.883" endtime="20201112 12:26:45.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.891" endtime="20201112 12:26:45.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.590" endtime="20201112 12:26:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.588" endtime="20201112 12:26:45.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.898" level="INFO">${RESULT} = [{'time': 0.021647097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.086099999999886e-05, 'source_diff': 6.086099999999886e-05}, {'time': 0.021712861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.894" endtime="20201112 12:26:45.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:45.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.898" endtime="20201112 12:26:45.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.915" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:26:45.914" endtime="20201112 12:26:45.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.918" level="INFO">VALUE: [6.086099999999886e-05, 6.00689999999994e-05, 5.983299999999872e-05, 5.994500000000222e-05, 6.061100000000208e-05, 6.0806000000000054e-05, 6.06949999999995e-05, 6.0806000000000054e-05, 6.0028000000000165e-05, 6.065300000000079e-05, 5.987499999999743e-05, 6.070899999999907e-05, 6.065300000000079e-05, 6.031899999999965e-05, 6.061100000000208e-05, 5.9848000000001234e-05, 5.9943999999999276e-05, 5.9848000000001234e-05, 6.0750000000001775e-05, 6.009700000000201e-05, 6.062500000000165e-05, 5.990300000000004e-05, 6.0694000000000026e-05, 6.066700000000036e-05, 6.058299999999947e-05, 6.004100000000026e-05, 6.081900000000015e-05, 6.0055999999999304e-05, 6.0236000000001705e-05, 6.0707999999999596e-05, 5.986099999999786e-05, 5.9958000000002315e-05, 5.991699999999961e-05, 6.062499999999818e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.990300000000004e-05, 6.011099999999811e-05, 5.988900000000047e-05, 5.988900000000047e-05, 6.0764000000001345e-05, 6.0069999999998874e-05, 5.9819999999998624e-05, 6.0680000000000456e-05, 6.081900000000015e-05, 6.001300000000112e-05, 6.080500000000058e-05, 6.0694000000000026e-05, 5.986100000000133e-05, 6.0179999999999956e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.916" endtime="20201112 12:26:45.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.912" endtime="20201112 12:26:45.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.921" endtime="20201112 12:26:45.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.925" endtime="20201112 12:26:45.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.923" endtime="20201112 12:26:45.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.920" endtime="20201112 12:26:45.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.555" endtime="20201112 12:26:45.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.555" endtime="20201112 12:26:45.946"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.954" endtime="20201112 12:26:45.971"></status>
</kw>
<msg timestamp="20201112 12:26:45.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.953" endtime="20201112 12:26:45.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:45.972" endtime="20201112 12:26:45.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.975" endtime="20201112 12:26:45.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.950" endtime="20201112 12:26:45.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.948" endtime="20201112 12:26:45.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.985" endtime="20201112 12:26:46.270"></status>
</kw>
<msg timestamp="20201112 12:26:46.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.983" endtime="20201112 12:26:46.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.274" endtime="20201112 12:26:46.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.282" endtime="20201112 12:26:46.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.981" endtime="20201112 12:26:46.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.979" endtime="20201112 12:26:46.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.289" level="INFO">${RESULT} = [{'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.173599999999974e-05, 'source_diff': 6.173599999999974e-05}, {'time': 0.021907903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:46.286" endtime="20201112 12:26:46.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.304" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:46.290" endtime="20201112 12:26:46.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.308" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.307" endtime="20201112 12:26:46.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.311" level="INFO">VALUE: [6.173599999999974e-05, 6.120899999999957e-05, 6.0888999999998e-05, 6.111099999999911e-05, 6.126400000000184e-05, 6.104099999999779e-05, 6.106999999999987e-05, 6.097299999999889e-05, 6.118100000000043e-05, 6.119400000000053e-05, 6.0819999999999624e-05, 6.116700000000086e-05, 6.1000000000002025e-05, 6.088799999999853e-05, 6.0888999999998e-05, 6.176399999999888e-05, 6.0971999999999416e-05, 6.111099999999911e-05, 6.0916000000001136e-05, 6.094499999999975e-05, 6.0764000000001345e-05, 6.176400000000234e-05, 6.116700000000086e-05, 6.108299999999997e-05, 6.173599999999974e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.165299999999832e-05, 6.091700000000061e-05, 6.109800000000248e-05, 6.113899999999825e-05, 6.0847999999998764e-05, 6.1195e-05, 6.104199999999727e-05, 6.116699999999739e-05, 6.109799999999901e-05, 6.172200000000017e-05, 6.118000000000096e-05, 6.181999999999716e-05, 6.109699999999954e-05, 6.17499999999993e-05, 6.169400000000103e-05, 6.112499999999868e-05, 6.168000000000146e-05, 6.176400000000234e-05, 6.116700000000086e-05, 6.183300000000072e-05, 6.091699999999714e-05, 6.0944000000000276e-05, 6.173599999999974e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.309" endtime="20201112 12:26:46.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.305" endtime="20201112 12:26:46.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.314" endtime="20201112 12:26:46.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.318" endtime="20201112 12:26:46.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.316" endtime="20201112 12:26:46.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.312" endtime="20201112 12:26:46.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.946" endtime="20201112 12:26:46.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.946" endtime="20201112 12:26:46.338"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.347" endtime="20201112 12:26:46.363"></status>
</kw>
<msg timestamp="20201112 12:26:46.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.345" endtime="20201112 12:26:46.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.365" endtime="20201112 12:26:46.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.367" endtime="20201112 12:26:46.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.343" endtime="20201112 12:26:46.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.341" endtime="20201112 12:26:46.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.378" endtime="20201112 12:26:46.663"></status>
</kw>
<msg timestamp="20201112 12:26:46.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:46.376" endtime="20201112 12:26:46.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:46.667" endtime="20201112 12:26:46.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.675" endtime="20201112 12:26:46.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.373" endtime="20201112 12:26:46.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.372" endtime="20201112 12:26:46.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:46.681" level="INFO">${RESULT} = [{'time': 0.02182725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.323599999999777e-05, 'source_diff': 6.323599999999777e-05}, {'time': 0.021895028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:46.678" endtime="20201112 12:26:46.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:46.695" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:46.682" endtime="20201112 12:26:46.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.699" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:26:46.698" endtime="20201112 12:26:46.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.702" level="INFO">VALUE: [6.323599999999777e-05, 6.220900000000057e-05, 6.213900000000272e-05, 6.273700000000021e-05, 6.209700000000054e-05, 6.219499999999753e-05, 6.283299999999825e-05, 6.280599999999859e-05, 6.199999999999956e-05, 6.183300000000072e-05, 6.187499999999943e-05, 6.208300000000097e-05, 6.19300000000017e-05, 6.211100000000011e-05, 6.204099999999879e-05, 6.219400000000153e-05, 6.191700000000161e-05, 6.217999999999849e-05, 6.215299999999882e-05, 6.277799999999945e-05, 6.184699999999682e-05, 6.280600000000205e-05, 6.190300000000204e-05, 6.259700000000104e-05, 6.209700000000054e-05, 6.181999999999716e-05, 6.268100000000193e-05, 6.27089999999976e-05, 6.218099999999796e-05, 6.207000000000087e-05, 6.194500000000075e-05, 6.184799999999976e-05, 6.268100000000193e-05, 6.270799999999813e-05, 6.265300000000279e-05, 6.273700000000021e-05, 6.280499999999911e-05, 6.27500000000003e-05, 6.186099999999986e-05, 6.201399999999913e-05, 6.20690000000014e-05, 6.1888999999999e-05, 6.184699999999682e-05, 6.206899999999793e-05, 6.199999999999956e-05, 6.212499999999968e-05, 6.263899999999975e-05, 6.213799999999978e-05, 6.195800000000085e-05, 6.211100000000011e-05]</msg>
<status status="PASS" starttime="20201112 12:26:46.700" endtime="20201112 12:26:46.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.696" endtime="20201112 12:26:46.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.705" endtime="20201112 12:26:46.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.709" endtime="20201112 12:26:46.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.707" endtime="20201112 12:26:46.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.703" endtime="20201112 12:26:46.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.339" endtime="20201112 12:26:46.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.339" endtime="20201112 12:26:46.729"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.738" endtime="20201112 12:26:46.755"></status>
</kw>
<msg timestamp="20201112 12:26:46.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.736" endtime="20201112 12:26:46.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.756" endtime="20201112 12:26:46.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.759" endtime="20201112 12:26:46.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.734" endtime="20201112 12:26:46.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.732" endtime="20201112 12:26:46.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.769" endtime="20201112 12:26:47.054"></status>
</kw>
<msg timestamp="20201112 12:26:47.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:46.767" endtime="20201112 12:26:47.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.058" endtime="20201112 12:26:47.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.066" endtime="20201112 12:26:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.765" endtime="20201112 12:26:47.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.763" endtime="20201112 12:26:47.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.073" level="INFO">${RESULT} = [{'time': 0.021892222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.419400000000006e-05, 'source_diff': 6.419400000000006e-05}, {'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:47.069" endtime="20201112 12:26:47.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.086" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.074" endtime="20201112 12:26:47.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.090" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.089" endtime="20201112 12:26:47.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.093" level="INFO">VALUE: [6.419400000000006e-05, 6.316700000000286e-05, 6.37080000000026e-05, 6.290299999999957e-05, 6.32080000000021e-05, 6.30699999999984e-05, 6.2889e-05, 6.306899999999893e-05, 6.304199999999927e-05, 6.313900000000025e-05, 6.297199999999795e-05, 6.30560000000023e-05, 6.309800000000101e-05, 6.287500000000043e-05, 6.287500000000043e-05, 6.30279999999997e-05, 6.372200000000217e-05, 6.293099999999871e-05, 6.286099999999739e-05, 6.302700000000022e-05, 6.283299999999825e-05, 6.319400000000253e-05, 6.369399999999956e-05, 6.305499999999936e-05, 6.361099999999814e-05, 6.379200000000002e-05, 6.365300000000032e-05, 6.370799999999913e-05, 6.286099999999739e-05, 6.300000000000056e-05, 6.283299999999825e-05, 6.300000000000056e-05, 6.320799999999863e-05, 6.30560000000023e-05, 6.295900000000132e-05, 6.37219999999987e-05, 6.32639999999969e-05, 6.380599999999959e-05, 6.290299999999957e-05, 6.304200000000273e-05, 6.287500000000043e-05, 6.30279999999997e-05, 6.294500000000175e-05, 6.300000000000056e-05, 6.369399999999956e-05, 6.2889e-05, 6.380500000000011e-05, 6.287500000000043e-05, 6.380500000000011e-05, 6.372200000000217e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.091" endtime="20201112 12:26:47.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.087" endtime="20201112 12:26:47.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.096" endtime="20201112 12:26:47.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.100" endtime="20201112 12:26:47.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.098" endtime="20201112 12:26:47.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.095" endtime="20201112 12:26:47.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.730" endtime="20201112 12:26:47.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.730" endtime="20201112 12:26:47.120"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.129" endtime="20201112 12:26:47.146"></status>
</kw>
<msg timestamp="20201112 12:26:47.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.128" endtime="20201112 12:26:47.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.148" endtime="20201112 12:26:47.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.150" endtime="20201112 12:26:47.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.125" endtime="20201112 12:26:47.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.123" endtime="20201112 12:26:47.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.160" endtime="20201112 12:26:47.445"></status>
</kw>
<msg timestamp="20201112 12:26:47.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:47.158" endtime="20201112 12:26:47.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:47.449" endtime="20201112 12:26:47.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.457" endtime="20201112 12:26:47.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.156" endtime="20201112 12:26:47.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.154" endtime="20201112 12:26:47.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.464" level="INFO">${RESULT} = [{'time': 0.021783333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508299999999703e-05, 'source_diff': 6.508299999999703e-05}, {'time': 0.021853097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:47.460" endtime="20201112 12:26:47.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.465" endtime="20201112 12:26:47.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.481" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.480" endtime="20201112 12:26:47.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.484" level="INFO">VALUE: [6.508299999999703e-05, 6.39159999999972e-05, 6.416700000000039e-05, 6.48479999999993e-05, 6.42219999999992e-05, 6.404200000000027e-05, 6.4583e-05, 6.390300000000057e-05, 6.42219999999992e-05, 6.474999999999884e-05, 6.391700000000014e-05, 6.470800000000013e-05, 6.469500000000003e-05, 6.482000000000016e-05, 6.409699999999907e-05, 6.47089999999996e-05, 6.416600000000092e-05, 6.473700000000221e-05, 6.472200000000317e-05, 6.413800000000178e-05, 6.479100000000154e-05, 6.376400000000088e-05, 6.416600000000092e-05, 6.47500000000023e-05, 6.466700000000089e-05, 6.477799999999798e-05, 6.395800000000285e-05, 6.398600000000199e-05, 6.456899999999696e-05, 6.404200000000027e-05, 6.404200000000027e-05, 6.40280000000007e-05, 6.479200000000102e-05, 6.463900000000175e-05, 6.422299999999867e-05, 6.477800000000145e-05, 6.411099999999864e-05, 6.39439999999998e-05, 6.390300000000057e-05, 6.468100000000046e-05, 6.466600000000142e-05, 6.405500000000036e-05, 6.412499999999821e-05, 6.423600000000224e-05, 6.387500000000143e-05, 6.383300000000272e-05, 6.411099999999864e-05, 6.400000000000156e-05, 6.395799999999938e-05, 6.409699999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.482" endtime="20201112 12:26:47.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.478" endtime="20201112 12:26:47.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.487" endtime="20201112 12:26:47.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.491" endtime="20201112 12:26:47.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.489" endtime="20201112 12:26:47.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.486" endtime="20201112 12:26:47.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.121" endtime="20201112 12:26:47.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.121" endtime="20201112 12:26:47.512"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.520" endtime="20201112 12:26:47.537"></status>
</kw>
<msg timestamp="20201112 12:26:47.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.519" endtime="20201112 12:26:47.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.538" endtime="20201112 12:26:47.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.541" endtime="20201112 12:26:47.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.516" endtime="20201112 12:26:47.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.514" endtime="20201112 12:26:47.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.550" endtime="20201112 12:26:47.836"></status>
</kw>
<msg timestamp="20201112 12:26:47.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.549" endtime="20201112 12:26:47.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.840" endtime="20201112 12:26:47.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.848" endtime="20201112 12:26:47.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.546" endtime="20201112 12:26:47.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.545" endtime="20201112 12:26:47.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:47.855" level="INFO">${RESULT} = [{'time': 0.022038417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.544500000000078e-05, 'source_diff': 6.544500000000078e-05}, {'time': 0.022109181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:47.852" endtime="20201112 12:26:47.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:47.869" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:47.856" endtime="20201112 12:26:47.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.874" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:26:47.873" endtime="20201112 12:26:47.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.876" level="INFO">VALUE: [6.544500000000078e-05, 6.488899999999853e-05, 6.481900000000068e-05, 6.576299999999993e-05, 6.509700000000007e-05, 6.49440000000008e-05, 6.567999999999852e-05, 6.49440000000008e-05, 6.49440000000008e-05, 6.515299999999835e-05, 6.50830000000005e-05, 6.505499999999789e-05, 6.57220000000007e-05, 6.563900000000275e-05, 6.563899999999928e-05, 6.504200000000127e-05, 6.50419999999978e-05, 6.563900000000275e-05, 6.570899999999713e-05, 6.516700000000139e-05, 6.579200000000202e-05, 6.568099999999799e-05, 6.490300000000157e-05, 6.511099999999964e-05, 6.513900000000225e-05, 6.4889000000002e-05, 6.511099999999964e-05, 6.492999999999777e-05, 6.568000000000199e-05, 6.515200000000235e-05, 6.562499999999971e-05, 6.516700000000139e-05, 6.574999999999984e-05, 6.487499999999896e-05, 6.499999999999909e-05, 6.491699999999767e-05, 6.566699999999842e-05, 6.501400000000213e-05, 6.483300000000025e-05, 6.500000000000256e-05, 6.484699999999982e-05, 6.569500000000103e-05, 6.568099999999799e-05, 6.487499999999896e-05, 6.512499999999921e-05, 6.572300000000017e-05, 6.499999999999909e-05, 6.487500000000243e-05, 6.508399999999998e-05, 6.482000000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:26:47.875" endtime="20201112 12:26:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.870" endtime="20201112 12:26:47.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.880" endtime="20201112 12:26:47.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:47.883" endtime="20201112 12:26:47.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.882" endtime="20201112 12:26:47.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.878" endtime="20201112 12:26:47.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.512" endtime="20201112 12:26:47.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.512" endtime="20201112 12:26:47.904"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.912" endtime="20201112 12:26:47.931"></status>
</kw>
<msg timestamp="20201112 12:26:47.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.911" endtime="20201112 12:26:47.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:47.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:47.932" endtime="20201112 12:26:47.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.935" endtime="20201112 12:26:47.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.908" endtime="20201112 12:26:47.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.906" endtime="20201112 12:26:47.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:47.945" endtime="20201112 12:26:48.230"></status>
</kw>
<msg timestamp="20201112 12:26:48.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:47.943" endtime="20201112 12:26:48.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.235" endtime="20201112 12:26:48.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.243" endtime="20201112 12:26:48.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.941" endtime="20201112 12:26:48.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.939" endtime="20201112 12:26:48.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.249" level="INFO">${RESULT} = [{'time': 0.021727111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.629199999999905e-05, 'source_diff': 6.629199999999905e-05}, {'time': 0.021798875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:48.246" endtime="20201112 12:26:48.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.263" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.250" endtime="20201112 12:26:48.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.267" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.266" endtime="20201112 12:26:48.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.270" level="INFO">VALUE: [6.629199999999905e-05, 6.625000000000034e-05, 6.587499999999996e-05, 6.598600000000052e-05, 6.602799999999923e-05, 6.677799999999998e-05, 6.593099999999824e-05, 6.582000000000116e-05, 6.58480000000003e-05, 6.608400000000098e-05, 6.618099999999849e-05, 6.577799999999898e-05, 6.609700000000107e-05, 6.600000000000009e-05, 6.666599999999995e-05, 6.620800000000163e-05, 6.615199999999988e-05, 6.601399999999966e-05, 6.593000000000224e-05, 6.674999999999737e-05, 6.612500000000021e-05, 6.586100000000039e-05, 6.673700000000074e-05, 6.682000000000216e-05, 6.605599999999837e-05, 6.613899999999978e-05, 6.62639999999999e-05, 6.60700000000014e-05, 6.608400000000098e-05, 6.593099999999824e-05, 6.674999999999737e-05, 6.586100000000039e-05, 6.60839999999975e-05, 6.662500000000071e-05, 6.615299999999935e-05, 6.591699999999867e-05, 6.663800000000081e-05, 6.605500000000236e-05, 6.602699999999975e-05, 6.588899999999953e-05, 6.663900000000028e-05, 6.613899999999978e-05, 6.591700000000214e-05, 6.605499999999889e-05, 6.62639999999999e-05, 6.620799999999816e-05, 6.600000000000009e-05, 6.622199999999773e-05, 6.591700000000214e-05, 6.616699999999892e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.268" endtime="20201112 12:26:48.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.264" endtime="20201112 12:26:48.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.273" endtime="20201112 12:26:48.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.277" endtime="20201112 12:26:48.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.275" endtime="20201112 12:26:48.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.272" endtime="20201112 12:26:48.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.905" endtime="20201112 12:26:48.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:47.904" endtime="20201112 12:26:48.297"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.306" endtime="20201112 12:26:48.323"></status>
</kw>
<msg timestamp="20201112 12:26:48.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.304" endtime="20201112 12:26:48.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.325" endtime="20201112 12:26:48.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.328" endtime="20201112 12:26:48.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.302" endtime="20201112 12:26:48.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.300" endtime="20201112 12:26:48.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.338" endtime="20201112 12:26:48.623"></status>
</kw>
<msg timestamp="20201112 12:26:48.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.336" endtime="20201112 12:26:48.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.628" endtime="20201112 12:26:48.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.636" endtime="20201112 12:26:48.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.333" endtime="20201112 12:26:48.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.332" endtime="20201112 12:26:48.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:48.642" level="INFO">${RESULT} = [{'time': 0.022167792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.79169999999972e-05, 'source_diff': 6.79169999999972e-05}, {'time': 0.022240542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:48.639" endtime="20201112 12:26:48.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:48.656" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:48.643" endtime="20201112 12:26:48.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.660" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:26:48.659" endtime="20201112 12:26:48.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.662" level="INFO">VALUE: [6.79169999999972e-05, 6.699999999999762e-05, 6.77229999999987e-05, 6.70700000000024e-05, 6.69030000000001e-05, 6.775000000000184e-05, 6.770799999999966e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.701400000000066e-05, 6.769400000000009e-05, 6.773600000000227e-05, 6.702800000000023e-05, 6.70419999999998e-05, 6.70830000000025e-05, 6.723600000000177e-05, 6.768000000000052e-05, 6.78619999999984e-05, 6.772199999999923e-05, 6.711099999999817e-05, 6.702800000000023e-05, 6.780600000000012e-05, 6.711100000000164e-05, 6.77229999999987e-05, 6.699999999999762e-05, 6.687499999999749e-05, 6.693100000000271e-05, 6.787499999999849e-05, 6.702800000000023e-05, 6.683299999999878e-05, 6.724999999999787e-05, 6.688900000000053e-05, 6.718000000000002e-05, 6.769400000000009e-05, 6.774999999999837e-05, 6.683299999999878e-05, 6.718000000000002e-05, 6.706899999999946e-05, 6.70419999999998e-05, 6.694400000000281e-05, 6.693099999999924e-05, 6.766700000000042e-05, 6.69030000000001e-05, 6.69030000000001e-05, 6.697200000000195e-05, 6.77640000000014e-05, 6.70969999999986e-05, 6.72229999999982e-05, 6.77229999999987e-05, 6.701400000000066e-05]</msg>
<status status="PASS" starttime="20201112 12:26:48.661" endtime="20201112 12:26:48.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.656" endtime="20201112 12:26:48.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.666" endtime="20201112 12:26:48.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:48.669" endtime="20201112 12:26:48.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.668" endtime="20201112 12:26:48.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.664" endtime="20201112 12:26:48.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.298" endtime="20201112 12:26:48.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.298" endtime="20201112 12:26:48.690"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.699" endtime="20201112 12:26:48.716"></status>
</kw>
<msg timestamp="20201112 12:26:48.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.697" endtime="20201112 12:26:48.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:48.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:48.718" endtime="20201112 12:26:48.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.720" endtime="20201112 12:26:48.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.695" endtime="20201112 12:26:48.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.693" endtime="20201112 12:26:48.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:48.730" endtime="20201112 12:26:49.016"></status>
</kw>
<msg timestamp="20201112 12:26:49.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:48.729" endtime="20201112 12:26:49.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.020" endtime="20201112 12:26:49.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.028" endtime="20201112 12:26:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.726" endtime="20201112 12:26:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.724" endtime="20201112 12:26:49.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.035" level="INFO">${RESULT} = [{'time': 0.021689333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.872200000000023e-05, 'source_diff': 6.872200000000023e-05}, {'time': 0.021763097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:49.032" endtime="20201112 12:26:49.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.048" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.036" endtime="20201112 12:26:49.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.053" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.052" endtime="20201112 12:26:49.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.055" level="INFO">VALUE: [6.872200000000023e-05, 6.826399999999844e-05, 6.794400000000034e-05, 6.874999999999937e-05, 6.812499999999874e-05, 6.795799999999991e-05, 6.808300000000003e-05, 6.870800000000066e-05, 6.815299999999788e-05, 6.806999999999994e-05, 6.869500000000056e-05, 6.80969999999996e-05, 6.798599999999905e-05, 6.794499999999981e-05, 6.802799999999776e-05, 6.819500000000006e-05, 6.782000000000316e-05, 6.819500000000006e-05, 6.804199999999733e-05, 6.819399999999712e-05, 6.79299999999973e-05, 6.787500000000196e-05, 6.872200000000023e-05, 6.880500000000164e-05, 6.798599999999905e-05, 6.801400000000166e-05, 6.820800000000016e-05, 6.788899999999806e-05, 6.865300000000185e-05, 6.876399999999894e-05, 6.863899999999881e-05, 6.77640000000014e-05, 6.87359999999998e-05, 6.820800000000016e-05, 6.874999999999937e-05, 6.795900000000285e-05, 6.872200000000023e-05, 6.877800000000198e-05, 6.879200000000155e-05, 6.87229999999997e-05, 6.879200000000155e-05, 6.826399999999844e-05, 6.784799999999883e-05, 6.79160000000012e-05, 6.787499999999849e-05, 6.819400000000059e-05, 6.820800000000016e-05, 6.865300000000185e-05, 6.880499999999817e-05, 6.815299999999788e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.054" endtime="20201112 12:26:49.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.049" endtime="20201112 12:26:49.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.059" endtime="20201112 12:26:49.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.063" endtime="20201112 12:26:49.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.061" endtime="20201112 12:26:49.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.058" endtime="20201112 12:26:49.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.691" endtime="20201112 12:26:49.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:48.690" endtime="20201112 12:26:49.084"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.093" endtime="20201112 12:26:49.109"></status>
</kw>
<msg timestamp="20201112 12:26:49.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.091" endtime="20201112 12:26:49.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.111" endtime="20201112 12:26:49.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.113" endtime="20201112 12:26:49.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.089" endtime="20201112 12:26:49.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.087" endtime="20201112 12:26:49.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.123" endtime="20201112 12:26:49.408"></status>
</kw>
<msg timestamp="20201112 12:26:49.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.122" endtime="20201112 12:26:49.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.412" endtime="20201112 12:26:49.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.421" endtime="20201112 12:26:49.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.119" endtime="20201112 12:26:49.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.117" endtime="20201112 12:26:49.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.427" level="INFO">${RESULT} = [{'time': 0.021976444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.00970000000016e-05, 'source_diff': 7.00970000000016e-05}, {'time': 0.022051208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:49.424" endtime="20201112 12:26:49.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.428" endtime="20201112 12:26:49.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.446" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.445" endtime="20201112 12:26:49.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.448" level="INFO">VALUE: [7.00970000000016e-05, 6.899999999999962e-05, 6.97360000000008e-05, 6.915299999999888e-05, 6.89299999999983e-05, 6.887499999999949e-05, 6.915300000000235e-05, 6.902799999999876e-05, 6.919400000000159e-05, 6.907000000000094e-05, 6.888899999999906e-05, 6.916699999999845e-05, 6.886099999999992e-05, 6.895799999999744e-05, 6.894499999999734e-05, 6.904099999999885e-05, 6.965300000000285e-05, 6.965299999999938e-05, 6.966699999999895e-05, 6.915299999999888e-05, 6.894500000000081e-05, 6.905499999999842e-05, 6.888799999999959e-05, 6.884700000000035e-05, 6.966599999999948e-05, 6.890199999999916e-05, 6.89160000000022e-05, 6.891599999999873e-05, 6.920800000000116e-05, 6.96109999999972e-05, 6.915299999999888e-05, 6.908300000000103e-05, 6.912499999999974e-05, 6.897199999999701e-05, 6.899999999999962e-05, 6.92360000000003e-05, 6.901399999999919e-05, 6.969500000000156e-05, 6.915300000000235e-05, 6.899999999999962e-05, 6.97230000000007e-05, 6.905600000000137e-05, 6.893099999999777e-05, 6.966600000000295e-05, 6.897200000000048e-05, 6.972200000000123e-05, 6.97360000000008e-05, 6.979100000000307e-05, 6.969400000000209e-05, 6.90970000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.447" endtime="20201112 12:26:49.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.443" endtime="20201112 12:26:49.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.452" endtime="20201112 12:26:49.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.455" endtime="20201112 12:26:49.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.454" endtime="20201112 12:26:49.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.450" endtime="20201112 12:26:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.085" endtime="20201112 12:26:49.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.084" endtime="20201112 12:26:49.476"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.485" endtime="20201112 12:26:49.502"></status>
</kw>
<msg timestamp="20201112 12:26:49.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.483" endtime="20201112 12:26:49.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.504" endtime="20201112 12:26:49.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.506" endtime="20201112 12:26:49.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.481" endtime="20201112 12:26:49.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.479" endtime="20201112 12:26:49.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.516" endtime="20201112 12:26:49.801"></status>
</kw>
<msg timestamp="20201112 12:26:49.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.515" endtime="20201112 12:26:49.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.806" endtime="20201112 12:26:49.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.814" endtime="20201112 12:26:49.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.512" endtime="20201112 12:26:49.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.510" endtime="20201112 12:26:49.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:49.820" level="INFO">${RESULT} = [{'time': 0.021977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.045899999999841e-05, 'source_diff': 7.045899999999841e-05}, {'time': 0.022054167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:49.817" endtime="20201112 12:26:49.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:49.834" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:49.821" endtime="20201112 12:26:49.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.838" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:26:49.837" endtime="20201112 12:26:49.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.841" level="INFO">VALUE: [7.045899999999841e-05, 7.072299999999823e-05, 7.063900000000081e-05, 7.063899999999734e-05, 7.012500000000074e-05, 7.006899999999899e-05, 6.988800000000059e-05, 7.069399999999962e-05, 6.983299999999831e-05, 7.073599999999833e-05, 7.006900000000246e-05, 7.004099999999985e-05, 7.068000000000005e-05, 6.994399999999887e-05, 7.008299999999856e-05, 6.983300000000178e-05, 7.075000000000137e-05, 7.063900000000081e-05, 7.001400000000019e-05, 7.080600000000312e-05, 6.995900000000138e-05, 7.069499999999909e-05, 7.020800000000216e-05, 7.079200000000008e-05, 7.07230000000017e-05, 7.015299999999988e-05, 7.001400000000019e-05, 6.990299999999963e-05, 7.019399999999912e-05, 7.069399999999962e-05, 7.006899999999899e-05, 6.997199999999801e-05, 7.065300000000038e-05, 7.069400000000309e-05, 7.080500000000017e-05, 7.01109999999977e-05, 7.070799999999919e-05, 7.019399999999912e-05, 6.994499999999834e-05, 7.000000000000062e-05, 6.99169999999992e-05, 7.06109999999982e-05, 6.977800000000298e-05, 7.083399999999879e-05, 6.990299999999963e-05, 7.002799999999976e-05, 7.006999999999847e-05, 7.000000000000062e-05, 7.007000000000194e-05, 7.075000000000137e-05]</msg>
<status status="PASS" starttime="20201112 12:26:49.839" endtime="20201112 12:26:49.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.835" endtime="20201112 12:26:49.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.844" endtime="20201112 12:26:49.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:49.848" endtime="20201112 12:26:49.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.846" endtime="20201112 12:26:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.843" endtime="20201112 12:26:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.477" endtime="20201112 12:26:49.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.477" endtime="20201112 12:26:49.868"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.877" endtime="20201112 12:26:49.894"></status>
</kw>
<msg timestamp="20201112 12:26:49.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.876" endtime="20201112 12:26:49.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.895" endtime="20201112 12:26:49.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.898" endtime="20201112 12:26:49.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.873" endtime="20201112 12:26:49.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.871" endtime="20201112 12:26:49.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.908" endtime="20201112 12:26:50.193"></status>
</kw>
<msg timestamp="20201112 12:26:50.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:49.906" endtime="20201112 12:26:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.198" endtime="20201112 12:26:50.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.206" endtime="20201112 12:26:50.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.903" endtime="20201112 12:26:50.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.902" endtime="20201112 12:26:50.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.212" level="INFO">${RESULT} = [{'time': 0.021736236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.140299999999766e-05, 'source_diff': 7.140299999999766e-05}, {'time': 0.021813, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:50.209" endtime="20201112 12:26:50.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.213" endtime="20201112 12:26:50.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.230" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.229" endtime="20201112 12:26:50.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.233" level="INFO">VALUE: [7.140299999999766e-05, 7.099999999999815e-05, 7.098599999999858e-05, 7.083299999999931e-05, 7.083300000000278e-05, 7.113900000000131e-05, 7.173599999999933e-05, 7.104200000000033e-05, 7.181900000000074e-05, 7.093099999999977e-05, 7.170899999999966e-05, 7.087500000000149e-05, 7.125000000000187e-05, 7.108299999999956e-05, 7.086099999999845e-05, 7.086099999999845e-05, 7.116599999999751e-05, 7.172199999999976e-05, 7.119499999999959e-05, 7.090300000000063e-05, 7.100000000000162e-05, 7.118100000000002e-05, 7.081899999999974e-05, 7.120900000000263e-05, 7.168100000000052e-05, 7.097199999999901e-05, 7.170800000000019e-05, 7.09170000000002e-05, 7.176399999999847e-05, 7.168100000000052e-05, 7.177800000000151e-05, 7.086100000000192e-05, 7.119400000000012e-05, 7.086099999999845e-05, 7.177800000000151e-05, 7.106999999999947e-05, 7.166600000000148e-05, 7.116600000000098e-05, 7.094399999999987e-05, 7.177700000000203e-05, 7.11109999999987e-05, 7.159699999999963e-05, 7.098599999999858e-05, 7.119400000000012e-05, 7.09170000000002e-05, 7.120799999999969e-05, 7.169399999999715e-05, 7.095800000000291e-05, 7.177799999999804e-05, 7.101400000000119e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.231" endtime="20201112 12:26:50.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.227" endtime="20201112 12:26:50.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.240" endtime="20201112 12:26:50.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.244" endtime="20201112 12:26:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.242" endtime="20201112 12:26:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.239" endtime="20201112 12:26:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.869" endtime="20201112 12:26:50.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.869" endtime="20201112 12:26:50.265"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.273" endtime="20201112 12:26:50.290"></status>
</kw>
<msg timestamp="20201112 12:26:50.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.272" endtime="20201112 12:26:50.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.292" endtime="20201112 12:26:50.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.294" endtime="20201112 12:26:50.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.269" endtime="20201112 12:26:50.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.267" endtime="20201112 12:26:50.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.304" endtime="20201112 12:26:50.590"></status>
</kw>
<msg timestamp="20201112 12:26:50.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.303" endtime="20201112 12:26:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.594" endtime="20201112 12:26:50.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.602" endtime="20201112 12:26:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.300" endtime="20201112 12:26:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.298" endtime="20201112 12:26:50.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:50.609" level="INFO">${RESULT} = [{'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.284800000000036e-05, 'source_diff': 7.284800000000036e-05}, {'time': 0.021722625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.606" endtime="20201112 12:26:50.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:50.622" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:50.610" endtime="20201112 12:26:50.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.627" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:26:50.626" endtime="20201112 12:26:50.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.629" level="INFO">VALUE: [7.284800000000036e-05, 7.226399999999897e-05, 7.188899999999859e-05, 7.215299999999841e-05, 7.182000000000022e-05, 7.20560000000009e-05, 7.202800000000176e-05, 7.225000000000287e-05, 7.183399999999979e-05, 7.265299999999891e-05, 7.184699999999988e-05, 7.190300000000163e-05, 7.266599999999901e-05, 7.205500000000142e-05, 7.194400000000087e-05, 7.195800000000044e-05, 7.206899999999752e-05, 7.205499999999795e-05, 7.276399999999947e-05, 7.28049999999987e-05, 7.280599999999818e-05, 7.263900000000281e-05, 7.186100000000292e-05, 7.19309999999973e-05, 7.218100000000102e-05, 7.188799999999912e-05, 7.202800000000176e-05, 7.272199999999729e-05, 7.202799999999829e-05, 7.184799999999936e-05, 7.184799999999936e-05, 7.194500000000034e-05, 7.201399999999872e-05, 7.19170000000012e-05, 7.191599999999826e-05, 7.220800000000069e-05, 7.184699999999988e-05, 7.183300000000031e-05, 7.188900000000206e-05, 7.183300000000031e-05, 7.267999999999858e-05, 7.281900000000174e-05, 7.277799999999904e-05, 7.187499999999902e-05, 7.220800000000069e-05, 7.209700000000013e-05, 7.182000000000022e-05, 7.194499999999687e-05, 7.190299999999816e-05, 7.273600000000033e-05]</msg>
<status status="PASS" starttime="20201112 12:26:50.628" endtime="20201112 12:26:50.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.623" endtime="20201112 12:26:50.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.633" endtime="20201112 12:26:50.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.636" endtime="20201112 12:26:50.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.635" endtime="20201112 12:26:50.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.631" endtime="20201112 12:26:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.266" endtime="20201112 12:26:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.265" endtime="20201112 12:26:50.657"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.666" endtime="20201112 12:26:50.683"></status>
</kw>
<msg timestamp="20201112 12:26:50.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.664" endtime="20201112 12:26:50.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.685" endtime="20201112 12:26:50.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.687" endtime="20201112 12:26:50.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.661" endtime="20201112 12:26:50.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.659" endtime="20201112 12:26:50.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.697" endtime="20201112 12:26:50.982"></status>
</kw>
<msg timestamp="20201112 12:26:50.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.696" endtime="20201112 12:26:50.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:50.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:50.986" endtime="20201112 12:26:50.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.995" endtime="20201112 12:26:50.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.693" endtime="20201112 12:26:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.691" endtime="20201112 12:26:50.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.001" level="INFO">${RESULT} = [{'time': 0.022087764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.334699999999791e-05, 'source_diff': 7.334699999999791e-05}, {'time': 0.022166542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:50.998" endtime="20201112 12:26:51.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.002" endtime="20201112 12:26:51.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.020" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.019" endtime="20201112 12:26:51.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.022" level="INFO">VALUE: [7.334699999999791e-05, 7.280600000000165e-05, 7.3069999999998e-05, 7.312500000000027e-05, 7.327700000000006e-05, 7.316599999999951e-05, 7.304099999999938e-05, 7.298600000000058e-05, 7.367999999999958e-05, 7.294400000000187e-05, 7.286100000000045e-05, 7.308300000000156e-05, 7.304200000000233e-05, 7.298600000000058e-05, 7.376400000000047e-05, 7.319399999999865e-05, 7.369399999999915e-05, 7.293100000000177e-05, 7.381999999999875e-05, 7.304200000000233e-05, 7.369500000000209e-05, 7.316699999999898e-05, 7.297200000000101e-05, 7.304199999999886e-05, 7.368099999999905e-05, 7.373600000000133e-05, 7.316700000000245e-05, 7.372300000000123e-05, 7.37500000000009e-05, 7.286100000000045e-05, 7.315199999999994e-05, 7.281900000000174e-05, 7.316599999999951e-05, 7.29170000000022e-05, 7.297199999999754e-05, 7.295799999999797e-05, 7.31110000000007e-05, 7.29439999999984e-05, 7.365300000000338e-05, 7.287500000000002e-05, 7.290300000000263e-05, 7.283299999999784e-05, 7.312500000000027e-05, 7.312500000000027e-05, 7.377800000000004e-05, 7.31110000000007e-05, 7.287500000000002e-05, 7.288899999999959e-05, 7.286100000000045e-05, 7.363800000000087e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.021" endtime="20201112 12:26:51.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.016" endtime="20201112 12:26:51.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.026" endtime="20201112 12:26:51.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.029" endtime="20201112 12:26:51.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.028" endtime="20201112 12:26:51.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.024" endtime="20201112 12:26:51.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.658" endtime="20201112 12:26:51.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.657" endtime="20201112 12:26:51.050"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.059" endtime="20201112 12:26:51.077"></status>
</kw>
<msg timestamp="20201112 12:26:51.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.057" endtime="20201112 12:26:51.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.078" endtime="20201112 12:26:51.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.081" endtime="20201112 12:26:51.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.055" endtime="20201112 12:26:51.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.053" endtime="20201112 12:26:51.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.091" endtime="20201112 12:26:51.377"></status>
</kw>
<msg timestamp="20201112 12:26:51.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:51.090" endtime="20201112 12:26:51.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:51.381" endtime="20201112 12:26:51.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.389" endtime="20201112 12:26:51.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.087" endtime="20201112 12:26:51.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.085" endtime="20201112 12:26:51.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.396" level="INFO">${RESULT} = [{'time': 0.0218365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.470799999999972e-05, 'source_diff': 7.470799999999972e-05}, {'time': 0.021916278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:51.393" endtime="20201112 12:26:51.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.409" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.397" endtime="20201112 12:26:51.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.414" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.413" endtime="20201112 12:26:51.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.416" level="INFO">VALUE: [7.470799999999972e-05, 7.405599999999943e-05, 7.395799999999897e-05, 7.416699999999998e-05, 7.473699999999833e-05, 7.40560000000029e-05, 7.384800000000136e-05, 7.395899999999844e-05, 7.404199999999986e-05, 7.387500000000102e-05, 7.395800000000244e-05, 7.418000000000008e-05, 7.472199999999929e-05, 7.398599999999811e-05, 7.390199999999722e-05, 7.418000000000008e-05, 7.401399999999725e-05, 7.383299999999884e-05, 7.41249999999978e-05, 7.400000000000115e-05, 7.470799999999972e-05, 7.473599999999886e-05, 7.411099999999823e-05, 7.386099999999798e-05, 7.415300000000041e-05, 7.420899999999869e-05, 7.39439999999994e-05, 7.40560000000029e-05, 7.409800000000161e-05, 7.418099999999955e-05, 7.4069999999999e-05, 7.401400000000072e-05, 7.391600000000026e-05, 7.481900000000027e-05, 7.398599999999811e-05, 7.411099999999823e-05, 7.395800000000244e-05, 7.391699999999973e-05, 7.398600000000158e-05, 7.465299999999744e-05, 7.390300000000016e-05, 7.468100000000005e-05, 7.402800000000029e-05, 7.472199999999929e-05, 7.387500000000102e-05, 7.413899999999737e-05, 7.386100000000145e-05, 7.382000000000222e-05, 7.398599999999811e-05, 7.395900000000191e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.415" endtime="20201112 12:26:51.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.410" endtime="20201112 12:26:51.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.420" endtime="20201112 12:26:51.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.423" endtime="20201112 12:26:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.422" endtime="20201112 12:26:51.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.418" endtime="20201112 12:26:51.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.051" endtime="20201112 12:26:51.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.051" endtime="20201112 12:26:51.444"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.452" endtime="20201112 12:26:51.470"></status>
</kw>
<msg timestamp="20201112 12:26:51.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.451" endtime="20201112 12:26:51.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.471" endtime="20201112 12:26:51.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.474" endtime="20201112 12:26:51.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.448" endtime="20201112 12:26:51.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.446" endtime="20201112 12:26:51.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.484" endtime="20201112 12:26:51.768"></status>
</kw>
<msg timestamp="20201112 12:26:51.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.482" endtime="20201112 12:26:51.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.772" endtime="20201112 12:26:51.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.781" endtime="20201112 12:26:51.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.480" endtime="20201112 12:26:51.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.478" endtime="20201112 12:26:51.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:51.787" level="INFO">${RESULT} = [{'time': 0.021843056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.602799999999882e-05, 'source_diff': 7.602799999999882e-05}, {'time': 0.021923847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:51.784" endtime="20201112 12:26:51.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:51.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:51.788" endtime="20201112 12:26:51.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.805" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:26:51.804" endtime="20201112 12:26:51.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.807" level="INFO">VALUE: [7.602799999999882e-05, 7.50830000000001e-05, 7.565200000000244e-05, 7.515200000000194e-05, 7.572200000000029e-05, 7.495799999999997e-05, 7.570800000000072e-05, 7.495799999999997e-05, 7.563900000000234e-05, 7.494499999999987e-05, 7.566699999999801e-05, 7.498599999999911e-05, 7.533300000000034e-05, 7.513899999999837e-05, 7.568100000000105e-05, 7.518100000000055e-05, 7.520899999999969e-05, 7.508399999999957e-05, 7.486199999999846e-05, 7.520800000000022e-05, 7.497299999999901e-05, 7.512500000000227e-05, 7.563900000000234e-05, 7.573599999999986e-05, 7.565299999999844e-05, 7.499999999999868e-05, 7.495799999999997e-05, 7.50830000000001e-05, 7.497199999999954e-05, 7.506900000000052e-05, 7.511099999999923e-05, 7.49310000000003e-05, 7.497199999999954e-05, 7.501400000000172e-05, 7.513900000000184e-05, 7.568100000000105e-05, 7.487500000000202e-05, 7.579100000000213e-05, 7.570900000000019e-05, 7.509799999999914e-05, 7.481999999999975e-05, 7.57500000000029e-05, 7.569400000000115e-05, 7.498599999999911e-05, 7.563899999999887e-05, 7.495799999999997e-05, 7.565300000000191e-05, 7.58189999999978e-05, 7.5763999999999e-05, 7.490300000000116e-05]</msg>
<status status="PASS" starttime="20201112 12:26:51.806" endtime="20201112 12:26:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.801" endtime="20201112 12:26:51.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.811" endtime="20201112 12:26:51.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:51.814" endtime="20201112 12:26:51.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.813" endtime="20201112 12:26:51.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.809" endtime="20201112 12:26:51.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.445" endtime="20201112 12:26:51.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.444" endtime="20201112 12:26:51.835"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.844" endtime="20201112 12:26:51.861"></status>
</kw>
<msg timestamp="20201112 12:26:51.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.842" endtime="20201112 12:26:51.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:51.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:51.863" endtime="20201112 12:26:51.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.865" endtime="20201112 12:26:51.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.840" endtime="20201112 12:26:51.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.838" endtime="20201112 12:26:51.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:51.875" endtime="20201112 12:26:52.161"></status>
</kw>
<msg timestamp="20201112 12:26:52.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:51.873" endtime="20201112 12:26:52.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.165" endtime="20201112 12:26:52.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.173" endtime="20201112 12:26:52.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.871" endtime="20201112 12:26:52.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.869" endtime="20201112 12:26:52.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.180" level="INFO">${RESULT} = [{'time': 0.021914986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.636100000000048e-05, 'source_diff': 7.636100000000048e-05}, {'time': 0.021997722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.176" endtime="20201112 12:26:52.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.193" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.181" endtime="20201112 12:26:52.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.197" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.196" endtime="20201112 12:26:52.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.200" level="INFO">VALUE: [7.636100000000048e-05, 7.6764e-05, 7.619400000000165e-05, 7.595800000000097e-05, 7.680599999999871e-05, 7.6764e-05, 7.608400000000057e-05, 7.663899999999987e-05, 7.613899999999937e-05, 7.669499999999815e-05, 7.679200000000261e-05, 7.679199999999914e-05, 7.588899999999912e-05, 7.66380000000004e-05, 7.677799999999957e-05, 7.590300000000216e-05, 7.595800000000097e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.583299999999737e-05, 7.6764e-05, 7.61249999999998e-05, 7.675000000000043e-05, 7.598600000000011e-05, 7.672199999999782e-05, 7.606900000000152e-05, 7.604200000000186e-05, 7.675000000000043e-05, 7.59310000000013e-05, 7.611100000000023e-05, 7.675000000000043e-05, 7.619500000000112e-05, 7.595900000000044e-05, 7.6070000000001e-05, 7.61249999999998e-05, 7.597300000000001e-05, 7.670800000000172e-05, 7.67770000000001e-05, 7.583300000000084e-05, 7.670799999999825e-05, 7.602699999999935e-05, 7.587500000000302e-05, 7.595800000000097e-05, 7.6764e-05, 7.586099999999998e-05, 7.616699999999851e-05, 7.619500000000112e-05, 7.663899999999987e-05, 7.670800000000172e-05, 7.613899999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.198" endtime="20201112 12:26:52.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.194" endtime="20201112 12:26:52.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.203" endtime="20201112 12:26:52.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.207" endtime="20201112 12:26:52.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.205" endtime="20201112 12:26:52.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.202" endtime="20201112 12:26:52.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.836" endtime="20201112 12:26:52.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:51.836" endtime="20201112 12:26:52.227"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.236" endtime="20201112 12:26:52.255"></status>
</kw>
<msg timestamp="20201112 12:26:52.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.235" endtime="20201112 12:26:52.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.256" endtime="20201112 12:26:52.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.259" endtime="20201112 12:26:52.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.232" endtime="20201112 12:26:52.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.230" endtime="20201112 12:26:52.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.269" endtime="20201112 12:26:52.554"></status>
</kw>
<msg timestamp="20201112 12:26:52.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.267" endtime="20201112 12:26:52.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.558" endtime="20201112 12:26:52.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.566" endtime="20201112 12:26:52.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.264" endtime="20201112 12:26:52.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.263" endtime="20201112 12:26:52.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.573" level="INFO">${RESULT} = [{'time': 0.021825361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.775000000000143e-05, 'source_diff': 7.775000000000143e-05}, {'time': 0.021908111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.570" endtime="20201112 12:26:52.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.587" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.574" endtime="20201112 12:26:52.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.592" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.591" endtime="20201112 12:26:52.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.594" level="INFO">VALUE: [7.775000000000143e-05, 7.729199999999964e-05, 7.713900000000037e-05, 7.701400000000025e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.773600000000186e-05, 7.720900000000169e-05, 7.69449999999984e-05, 7.782000000000275e-05, 7.779200000000014e-05, 7.695899999999797e-05, 7.702799999999982e-05, 7.779200000000014e-05, 7.698600000000111e-05, 7.705499999999949e-05, 7.783300000000284e-05, 7.705499999999949e-05, 7.691699999999926e-05, 7.687500000000055e-05, 7.716699999999951e-05, 7.683300000000184e-05, 7.775000000000143e-05, 7.697199999999807e-05, 7.711099999999776e-05, 7.704199999999939e-05, 7.770799999999925e-05, 7.720899999999822e-05, 7.690200000000022e-05, 7.680599999999871e-05, 7.779200000000014e-05, 7.711100000000123e-05, 7.715299999999994e-05, 7.719500000000212e-05, 7.769399999999968e-05, 7.684699999999794e-05, 7.70129999999973e-05, 7.704099999999992e-05, 7.77770000000011e-05, 7.70830000000021e-05, 7.688900000000012e-05, 7.7764000000001e-05, 7.687499999999708e-05, 7.782000000000275e-05, 7.720899999999822e-05, 7.772199999999882e-05, 7.681999999999828e-05, 7.7764000000001e-05, 7.695899999999797e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.593" endtime="20201112 12:26:52.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.588" endtime="20201112 12:26:52.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.598" endtime="20201112 12:26:52.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.601" endtime="20201112 12:26:52.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.600" endtime="20201112 12:26:52.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.596" endtime="20201112 12:26:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.228" endtime="20201112 12:26:52.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.228" endtime="20201112 12:26:52.622"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.631" endtime="20201112 12:26:52.648"></status>
</kw>
<msg timestamp="20201112 12:26:52.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.629" endtime="20201112 12:26:52.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:52.650" endtime="20201112 12:26:52.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.652" endtime="20201112 12:26:52.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.627" endtime="20201112 12:26:52.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.624" endtime="20201112 12:26:52.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.662" endtime="20201112 12:26:52.947"></status>
</kw>
<msg timestamp="20201112 12:26:52.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.661" endtime="20201112 12:26:52.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:52.951" endtime="20201112 12:26:52.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.959" endtime="20201112 12:26:52.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.658" endtime="20201112 12:26:52.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.656" endtime="20201112 12:26:52.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:52.966" level="INFO">${RESULT} = [{'time': 0.022164431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.905599999999749e-05, 'source_diff': 7.905599999999749e-05}, {'time': 0.022248181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:52.962" endtime="20201112 12:26:52.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:52.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:52.967" endtime="20201112 12:26:52.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.983" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:26:52.982" endtime="20201112 12:26:52.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:52.986" level="INFO">VALUE: [7.905599999999749e-05, 7.788899999999765e-05, 7.812499999999833e-05, 7.786099999999851e-05, 7.794399999999993e-05, 7.824999999999846e-05, 7.801400000000125e-05, 7.79579999999995e-05, 7.870800000000025e-05, 7.800000000000168e-05, 7.819400000000018e-05, 7.788900000000112e-05, 7.801399999999778e-05, 7.874999999999896e-05, 7.819400000000018e-05, 7.815300000000094e-05, 7.869500000000015e-05, 7.794500000000287e-05, 7.816699999999704e-05, 7.882000000000028e-05, 7.87779999999981e-05, 7.798699999999811e-05, 7.86519999999985e-05, 7.784799999999842e-05, 7.8151999999998e-05, 7.815300000000094e-05, 7.869399999999721e-05, 7.869400000000068e-05, 7.820799999999975e-05, 7.884800000000289e-05, 7.877800000000157e-05, 7.816700000000051e-05, 7.815300000000094e-05, 7.804200000000039e-05, 7.794399999999993e-05, 7.872199999999982e-05, 7.793099999999983e-05, 7.786100000000198e-05, 7.880599999999724e-05, 7.81389999999979e-05, 7.873599999999939e-05, 7.798599999999864e-05, 7.865299999999797e-05, 7.826399999999803e-05, 7.80129999999983e-05, 7.80969999999992e-05, 7.873599999999939e-05, 7.805500000000049e-05, 7.869400000000068e-05, 7.88190000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:26:52.985" endtime="20201112 12:26:52.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.980" endtime="20201112 12:26:52.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:52.989" endtime="20201112 12:26:52.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:52.993" endtime="20201112 12:26:53.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.991" endtime="20201112 12:26:53.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.988" endtime="20201112 12:26:53.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.623" endtime="20201112 12:26:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:52.622" endtime="20201112 12:26:53.014"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.022" endtime="20201112 12:26:53.040"></status>
</kw>
<msg timestamp="20201112 12:26:53.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.021" endtime="20201112 12:26:53.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.041" endtime="20201112 12:26:53.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.044" endtime="20201112 12:26:53.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.018" endtime="20201112 12:26:53.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.016" endtime="20201112 12:26:53.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.054" endtime="20201112 12:26:53.341"></status>
</kw>
<msg timestamp="20201112 12:26:53.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.052" endtime="20201112 12:26:53.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.345" endtime="20201112 12:26:53.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.354" endtime="20201112 12:26:53.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.050" endtime="20201112 12:26:53.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.048" endtime="20201112 12:26:53.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.360" level="INFO">${RESULT} = [{'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.97230000000003e-05, 'source_diff': 7.97230000000003e-05}, {'time': 0.022297583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:53.357" endtime="20201112 12:26:53.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.361" endtime="20201112 12:26:53.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.379" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.377" endtime="20201112 12:26:53.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.381" level="INFO">VALUE: [7.97230000000003e-05, 7.9151999999999e-05, 7.894400000000093e-05, 7.898599999999964e-05, 7.901400000000225e-05, 7.915300000000194e-05, 7.969400000000168e-05, 7.884699999999994e-05, 7.91250000000028e-05, 7.968099999999811e-05, 7.905600000000096e-05, 7.905599999999749e-05, 7.902800000000182e-05, 7.891700000000126e-05, 7.89450000000004e-05, 7.898599999999964e-05, 7.912499999999933e-05, 7.898599999999964e-05, 7.887499999999908e-05, 7.901400000000225e-05, 7.96519999999995e-05, 7.962499999999983e-05, 7.966599999999907e-05, 7.905500000000149e-05, 7.887499999999908e-05, 7.901400000000225e-05, 7.902800000000182e-05, 7.965299999999897e-05, 7.92779999999986e-05, 7.905500000000149e-05, 7.89450000000004e-05, 7.970799999999778e-05, 7.911099999999976e-05, 7.908300000000063e-05, 7.972199999999735e-05, 7.883399999999985e-05, 7.919500000000065e-05, 7.969400000000168e-05, 7.886099999999951e-05, 7.895899999999997e-05, 7.882000000000028e-05, 7.90840000000001e-05, 7.898599999999964e-05, 7.972200000000082e-05, 7.911099999999976e-05, 7.905500000000149e-05, 7.924999999999946e-05, 7.980499999999877e-05, 7.898599999999964e-05, 7.973600000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.380" endtime="20201112 12:26:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.375" endtime="20201112 12:26:53.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.385" endtime="20201112 12:26:53.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.388" endtime="20201112 12:26:53.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.386" endtime="20201112 12:26:53.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.383" endtime="20201112 12:26:53.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.015" endtime="20201112 12:26:53.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.014" endtime="20201112 12:26:53.409"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.418" endtime="20201112 12:26:53.436"></status>
</kw>
<msg timestamp="20201112 12:26:53.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.416" endtime="20201112 12:26:53.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.438" endtime="20201112 12:26:53.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.440" endtime="20201112 12:26:53.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.413" endtime="20201112 12:26:53.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.411" endtime="20201112 12:26:53.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.450" endtime="20201112 12:26:53.737"></status>
</kw>
<msg timestamp="20201112 12:26:53.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.449" endtime="20201112 12:26:53.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.741" endtime="20201112 12:26:53.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.749" endtime="20201112 12:26:53.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.446" endtime="20201112 12:26:53.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.444" endtime="20201112 12:26:53.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.756" level="INFO">${RESULT} = [{'time': 0.022161958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.042999999999939e-05, 'source_diff': 8.042999999999939e-05}, {'time': 0.022247778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.752" endtime="20201112 12:26:53.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.757" endtime="20201112 12:26:53.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.774" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.773" endtime="20201112 12:26:53.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.776" level="INFO">VALUE: [8.042999999999939e-05, 8.029199999999917e-05, 8.06390000000004e-05, 8.066699999999954e-05, 8.015299999999947e-05, 8.019399999999871e-05, 8.001399999999978e-05, 7.98329999999979e-05, 8.073600000000139e-05, 8.070799999999878e-05, 8.011100000000076e-05, 8.07780000000001e-05, 7.981999999999781e-05, 8.066700000000301e-05, 8.004199999999892e-05, 8.07369999999974e-05, 7.990199999999975e-05, 7.995799999999803e-05, 7.992999999999889e-05, 8.02909999999997e-05, 8.06390000000004e-05, 8.069399999999921e-05, 8.008300000000163e-05, 8.001399999999978e-05, 8.06390000000004e-05, 7.983300000000138e-05, 8.072199999999835e-05, 7.99030000000027e-05, 7.99169999999988e-05, 8.080600000000271e-05, 8.080599999999924e-05, 8.01109999999973e-05, 8.018100000000208e-05, 7.987500000000008e-05, 8.017999999999914e-05, 7.995900000000097e-05, 8.012500000000033e-05, 8.06520000000005e-05, 8.07780000000001e-05, 8.081899999999934e-05, 8.017999999999914e-05, 8.019399999999871e-05, 7.983300000000138e-05, 8.069399999999921e-05, 8.073600000000139e-05, 8.001399999999978e-05, 8.079199999999967e-05, 8.074999999999749e-05, 8.015299999999947e-05, 7.986100000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:26:53.775" endtime="20201112 12:26:53.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.770" endtime="20201112 12:26:53.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.780" endtime="20201112 12:26:53.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.783" endtime="20201112 12:26:53.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.781" endtime="20201112 12:26:53.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.778" endtime="20201112 12:26:53.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.410" endtime="20201112 12:26:53.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.409" endtime="20201112 12:26:53.804"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.812" endtime="20201112 12:26:53.830"></status>
</kw>
<msg timestamp="20201112 12:26:53.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.811" endtime="20201112 12:26:53.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.832" endtime="20201112 12:26:53.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.834" endtime="20201112 12:26:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.808" endtime="20201112 12:26:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.806" endtime="20201112 12:26:53.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.844" endtime="20201112 12:26:54.129"></status>
</kw>
<msg timestamp="20201112 12:26:54.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.842" endtime="20201112 12:26:54.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.134" endtime="20201112 12:26:54.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.142" endtime="20201112 12:26:54.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.840" endtime="20201112 12:26:54.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.838" endtime="20201112 12:26:54.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.149" level="INFO">${RESULT} = [{'time': 0.021731278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.1458999999999e-05, 'source_diff': 8.1458999999999e-05}, {'time': 0.021818056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201112 12:26:54.146" endtime="20201112 12:26:54.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.150" endtime="20201112 12:26:54.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.168" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.167" endtime="20201112 12:26:54.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.170" level="INFO">VALUE: [8.1458999999999e-05, 8.126399999999756e-05, 8.177799999999763e-05, 8.084799999999795e-05, 8.098600000000164e-05, 8.112500000000133e-05, 8.105500000000002e-05, 8.091600000000032e-05, 8.18329999999999e-05, 8.087500000000108e-05, 8.180500000000077e-05, 8.181999999999981e-05, 8.087500000000108e-05, 8.119399999999971e-05, 8.11109999999983e-05, 8.090300000000022e-05, 8.102800000000035e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.16390000000014e-05, 8.116700000000004e-05, 8.104199999999992e-05, 8.166699999999708e-05, 8.104199999999992e-05, 8.131899999999984e-05, 8.170799999999978e-05, 8.109699999999873e-05, 8.094399999999946e-05, 8.098600000000164e-05, 8.175000000000196e-05, 8.09169999999998e-05, 8.100000000000121e-05, 8.179200000000067e-05, 8.16390000000014e-05, 8.09719999999986e-05, 8.082000000000228e-05, 8.168100000000011e-05, 8.129200000000017e-05, 8.16390000000014e-05, 8.165300000000097e-05, 8.116700000000004e-05, 8.119399999999971e-05, 8.102700000000088e-05, 8.109800000000167e-05, 8.118000000000014e-05, 8.105500000000002e-05, 8.163899999999794e-05, 8.10269999999974e-05, 8.179099999999773e-05, 8.083300000000238e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.169" endtime="20201112 12:26:54.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.165" endtime="20201112 12:26:54.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.174" endtime="20201112 12:26:54.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.178" endtime="20201112 12:26:54.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.176" endtime="20201112 12:26:54.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.172" endtime="20201112 12:26:54.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.805" endtime="20201112 12:26:54.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.804" endtime="20201112 12:26:54.198"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.207" endtime="20201112 12:26:54.226"></status>
</kw>
<msg timestamp="20201112 12:26:54.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.205" endtime="20201112 12:26:54.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.227" endtime="20201112 12:26:54.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.230" endtime="20201112 12:26:54.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.203" endtime="20201112 12:26:54.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.201" endtime="20201112 12:26:54.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.239" endtime="20201112 12:26:54.525"></status>
</kw>
<msg timestamp="20201112 12:26:54.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02205675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:54.238" endtime="20201112 12:26:54.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02205675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:54.529" endtime="20201112 12:26:54.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.537" endtime="20201112 12:26:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.235" endtime="20201112 12:26:54.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.234" endtime="20201112 12:26:54.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.544" level="INFO">${RESULT} = [{'time': 0.022139472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.272200000000035e-05, 'source_diff': 8.272200000000035e-05}, {'time': 0.02222825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:54.540" endtime="20201112 12:26:54.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.545" endtime="20201112 12:26:54.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.562" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.561" endtime="20201112 12:26:54.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.564" level="INFO">VALUE: [8.272200000000035e-05, 8.273599999999992e-05, 8.201399999999831e-05, 8.21390000000019e-05, 8.193100000000036e-05, 8.231900000000084e-05, 8.18329999999999e-05, 8.27919999999982e-05, 8.266700000000154e-05, 8.219500000000018e-05, 8.274999999999949e-05, 8.280600000000124e-05, 8.208399999999963e-05, 8.207000000000006e-05, 8.209699999999973e-05, 8.219400000000071e-05, 8.206900000000059e-05, 8.208300000000016e-05, 8.219400000000071e-05, 8.209699999999973e-05, 8.187499999999862e-05, 8.273599999999992e-05, 8.222199999999985e-05, 8.21109999999993e-05, 8.18329999999999e-05, 8.194499999999993e-05, 8.273599999999992e-05, 8.268100000000111e-05, 8.193100000000036e-05, 8.208300000000016e-05, 8.190300000000122e-05, 8.187500000000208e-05, 8.218000000000114e-05, 8.270800000000078e-05, 8.28049999999983e-05, 8.184699999999948e-05, 8.219400000000071e-05, 8.215300000000147e-05, 8.276399999999906e-05, 8.27919999999982e-05, 8.270800000000078e-05, 8.215300000000147e-05, 8.27780000000021e-05, 8.215300000000147e-05, 8.190300000000122e-05, 8.205599999999702e-05, 8.207000000000006e-05, 8.270900000000025e-05, 8.204199999999745e-05, 8.220899999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.563" endtime="20201112 12:26:54.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.558" endtime="20201112 12:26:54.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.568" endtime="20201112 12:26:54.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.571" endtime="20201112 12:26:54.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.569" endtime="20201112 12:26:54.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.566" endtime="20201112 12:26:54.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.199" endtime="20201112 12:26:54.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.199" endtime="20201112 12:26:54.592"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.600" endtime="20201112 12:26:54.617"></status>
</kw>
<msg timestamp="20201112 12:26:54.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.599" endtime="20201112 12:26:54.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.619" endtime="20201112 12:26:54.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.621" endtime="20201112 12:26:54.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.596" endtime="20201112 12:26:54.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.594" endtime="20201112 12:26:54.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.631" endtime="20201112 12:26:54.916"></status>
</kw>
<msg timestamp="20201112 12:26:54.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.630" endtime="20201112 12:26:54.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.920" endtime="20201112 12:26:54.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.929" endtime="20201112 12:26:54.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.627" endtime="20201112 12:26:54.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.626" endtime="20201112 12:26:54.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.935" level="INFO">${RESULT} = [{'time': 0.021818111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.390299999999976e-05, 'source_diff': 8.390299999999976e-05}, {'time': 0.021907875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.932" endtime="20201112 12:26:54.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.936" endtime="20201112 12:26:54.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.953" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.952" endtime="20201112 12:26:54.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.955" level="INFO">VALUE: [8.390299999999976e-05, 8.377799999999963e-05, 8.366699999999908e-05, 8.369500000000168e-05, 8.370899999999779e-05, 8.320900000000075e-05, 8.301399999999931e-05, 8.319499999999772e-05, 8.319500000000118e-05, 8.32919999999987e-05, 8.292999999999842e-05, 8.304099999999898e-05, 8.301299999999984e-05, 8.312499999999987e-05, 8.326399999999956e-05, 8.3152999999999e-05, 8.377799999999963e-05, 8.315300000000247e-05, 8.304200000000192e-05, 8.304199999999845e-05, 8.281900000000134e-05, 8.290299999999876e-05, 8.3152999999999e-05, 8.305600000000149e-05, 8.380599999999877e-05, 8.284799999999995e-05, 8.282000000000081e-05, 8.284799999999995e-05, 8.30980000000002e-05, 8.291600000000232e-05, 8.309699999999726e-05, 8.370800000000178e-05, 8.312500000000334e-05, 8.294400000000146e-05, 8.376400000000006e-05, 8.283299999999744e-05, 8.355499999999905e-05, 8.311099999999683e-05, 8.284700000000048e-05, 8.376400000000006e-05, 8.370899999999779e-05, 8.368099999999865e-05, 8.312499999999987e-05, 8.37919999999992e-05, 8.377700000000016e-05, 8.316699999999858e-05, 8.312499999999987e-05, 8.308400000000063e-05, 8.365200000000003e-05, 8.284799999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:26:54.954" endtime="20201112 12:26:54.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.949" endtime="20201112 12:26:54.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.959" endtime="20201112 12:26:54.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.962" endtime="20201112 12:26:54.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.961" endtime="20201112 12:26:54.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.957" endtime="20201112 12:26:54.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.593" endtime="20201112 12:26:54.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.592" endtime="20201112 12:26:54.983"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.992" endtime="20201112 12:26:55.010"></status>
</kw>
<msg timestamp="20201112 12:26:55.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.990" endtime="20201112 12:26:55.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.011" endtime="20201112 12:26:55.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.014" endtime="20201112 12:26:55.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.988" endtime="20201112 12:26:55.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.986" endtime="20201112 12:26:55.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.023" endtime="20201112 12:26:55.309"></status>
</kw>
<msg timestamp="20201112 12:26:55.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.022" endtime="20201112 12:26:55.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.314" endtime="20201112 12:26:55.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.322" endtime="20201112 12:26:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.019" endtime="20201112 12:26:55.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.018" endtime="20201112 12:26:55.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.328" level="INFO">${RESULT} = [{'time': 0.021654986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.504200000000045e-05, 'source_diff': 8.504200000000045e-05}, {'time': 0.02174475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:55.325" endtime="20201112 12:26:55.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.342" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.329" endtime="20201112 12:26:55.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.346" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.345" endtime="20201112 12:26:55.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.349" level="INFO">VALUE: [8.504200000000045e-05, 8.390299999999976e-05, 8.401400000000031e-05, 8.380599999999877e-05, 8.469499999999922e-05, 8.409700000000173e-05, 8.470899999999879e-05, 8.47920000000002e-05, 8.386200000000052e-05, 8.46660000000006e-05, 8.470799999999931e-05, 8.470799999999931e-05, 8.473600000000192e-05, 8.394400000000246e-05, 8.398600000000117e-05, 8.474999999999802e-05, 8.465299999999704e-05, 8.390299999999976e-05, 8.463900000000094e-05, 8.469499999999922e-05, 8.3846999999998e-05, 8.468099999999965e-05, 8.398600000000117e-05, 8.3846999999998e-05, 8.46530000000005e-05, 8.477700000000116e-05, 8.480599999999977e-05, 8.406999999999859e-05, 8.466700000000008e-05, 8.388799999999724e-05, 8.406899999999912e-05, 8.413800000000096e-05, 8.480599999999977e-05, 8.465199999999756e-05, 8.418099999999915e-05, 8.46530000000005e-05, 8.476400000000106e-05, 8.380600000000224e-05, 8.427800000000013e-05, 8.475000000000149e-05, 8.390299999999976e-05, 8.470799999999931e-05, 8.470900000000225e-05, 8.386100000000105e-05, 8.474999999999802e-05, 8.46530000000005e-05, 8.397300000000107e-05, 8.395799999999856e-05, 8.39859999999977e-05, 8.386100000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.347" endtime="20201112 12:26:55.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.343" endtime="20201112 12:26:55.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.356" endtime="20201112 12:26:55.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.360" endtime="20201112 12:26:55.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.358" endtime="20201112 12:26:55.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.355" endtime="20201112 12:26:55.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.984" endtime="20201112 12:26:55.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.983" endtime="20201112 12:26:55.381"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.389" endtime="20201112 12:26:55.407"></status>
</kw>
<msg timestamp="20201112 12:26:55.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.388" endtime="20201112 12:26:55.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.409" endtime="20201112 12:26:55.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.411" endtime="20201112 12:26:55.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.385" endtime="20201112 12:26:55.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.383" endtime="20201112 12:26:55.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.421" endtime="20201112 12:26:55.706"></status>
</kw>
<msg timestamp="20201112 12:26:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.420" endtime="20201112 12:26:55.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:55.710" endtime="20201112 12:26:55.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.718" endtime="20201112 12:26:55.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.417" endtime="20201112 12:26:55.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.416" endtime="20201112 12:26:55.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.725" level="INFO">${RESULT} = [{'time': 0.0220635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.56530000000015e-05, 'source_diff': 8.56530000000015e-05}, {'time': 0.02215425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8....</msg>
<status status="PASS" starttime="20201112 12:26:55.722" endtime="20201112 12:26:55.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.739" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.726" endtime="20201112 12:26:55.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.744" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.743" endtime="20201112 12:26:55.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.746" level="INFO">VALUE: [8.56530000000015e-05, 8.49859999999987e-05, 8.487500000000162e-05, 8.491700000000033e-05, 8.495799999999956e-05, 8.570899999999979e-05, 8.570899999999979e-05, 8.575000000000249e-05, 8.562500000000237e-05, 8.520799999999981e-05, 8.493000000000042e-05, 8.502799999999741e-05, 8.509699999999926e-05, 8.508299999999969e-05, 8.505500000000055e-05, 8.481899999999987e-05, 8.587500000000262e-05, 8.4846999999999e-05, 8.574999999999902e-05, 8.488899999999772e-05, 8.583399999999991e-05, 8.511099999999883e-05, 8.486099999999858e-05, 8.505600000000002e-05, 8.569500000000022e-05, 8.49859999999987e-05, 8.56669999999976e-05, 8.494499999999947e-05, 8.49309999999999e-05, 8.520799999999981e-05, 8.58050000000013e-05, 8.487499999999815e-05, 8.513899999999797e-05, 8.501399999999784e-05, 8.56669999999976e-05, 8.495899999999904e-05, 8.494399999999999e-05, 8.56799999999977e-05, 8.519499999999972e-05, 8.494499999999947e-05, 8.577800000000163e-05, 8.580600000000077e-05, 8.573699999999893e-05, 8.57920000000012e-05, 8.480599999999977e-05, 8.516700000000058e-05, 8.581900000000087e-05, 8.570899999999979e-05, 8.491700000000033e-05, 8.518000000000067e-05]</msg>
<status status="PASS" starttime="20201112 12:26:55.745" endtime="20201112 12:26:55.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.740" endtime="20201112 12:26:55.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.750" endtime="20201112 12:26:55.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.753" endtime="20201112 12:26:55.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.752" endtime="20201112 12:26:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.748" endtime="20201112 12:26:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.381" endtime="20201112 12:26:55.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.381" endtime="20201112 12:26:55.774"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.782" endtime="20201112 12:26:55.801"></status>
</kw>
<msg timestamp="20201112 12:26:55.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.781" endtime="20201112 12:26:55.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.802" endtime="20201112 12:26:55.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.805" endtime="20201112 12:26:55.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.778" endtime="20201112 12:26:55.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.776" endtime="20201112 12:26:55.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.815" endtime="20201112 12:26:56.101"></status>
</kw>
<msg timestamp="20201112 12:26:56.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.813" endtime="20201112 12:26:56.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021754986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.105" endtime="20201112 12:26:56.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.113" endtime="20201112 12:26:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.811" endtime="20201112 12:26:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.809" endtime="20201112 12:26:56.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.119" level="INFO">${RESULT} = [{'time': 0.021841708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.672200000000088e-05, 'source_diff': 8.672200000000088e-05}, {'time': 0.021933486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.116" endtime="20201112 12:26:56.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.133" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.120" endtime="20201112 12:26:56.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.137" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.136" endtime="20201112 12:26:56.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.140" level="INFO">VALUE: [8.672200000000088e-05, 8.623599999999995e-05, 8.609700000000026e-05, 8.602800000000188e-05, 8.679099999999926e-05, 8.68059999999983e-05, 8.615299999999854e-05, 8.601400000000231e-05, 8.608400000000016e-05, 8.582000000000034e-05, 8.673600000000045e-05, 8.66669999999986e-05, 8.622199999999691e-05, 8.672300000000036e-05, 8.586200000000252e-05, 8.672200000000088e-05, 8.577700000000216e-05, 8.600000000000274e-05, 8.680600000000177e-05, 8.604099999999851e-05, 8.626399999999909e-05, 8.681900000000187e-05, 8.672200000000088e-05, 8.601399999999884e-05, 8.66669999999986e-05, 8.586099999999958e-05, 8.601399999999884e-05, 8.5847e-05, 8.68059999999983e-05, 8.604099999999851e-05, 8.608400000000016e-05, 8.618100000000115e-05, 8.608300000000069e-05, 8.615199999999906e-05, 8.5847e-05, 8.604099999999851e-05, 8.670800000000131e-05, 8.619400000000124e-05, 8.66249999999999e-05, 8.622200000000038e-05, 8.677799999999916e-05, 8.67920000000022e-05, 8.597200000000013e-05, 8.594399999999752e-05, 8.586099999999958e-05, 8.59310000000009e-05, 8.666700000000208e-05, 8.616700000000158e-05, 8.590200000000228e-05, 8.587499999999915e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.138" endtime="20201112 12:26:56.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.134" endtime="20201112 12:26:56.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.143" endtime="20201112 12:26:56.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.147" endtime="20201112 12:26:56.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.145" endtime="20201112 12:26:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.142" endtime="20201112 12:26:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.775" endtime="20201112 12:26:56.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.774" endtime="20201112 12:26:56.168"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.177" endtime="20201112 12:26:56.195"></status>
</kw>
<msg timestamp="20201112 12:26:56.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.175" endtime="20201112 12:26:56.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.196" endtime="20201112 12:26:56.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.199" endtime="20201112 12:26:56.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.172" endtime="20201112 12:26:56.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.170" endtime="20201112 12:26:56.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.209" endtime="20201112 12:26:56.494"></status>
</kw>
<msg timestamp="20201112 12:26:56.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.207" endtime="20201112 12:26:56.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.498" endtime="20201112 12:26:56.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.506" endtime="20201112 12:26:56.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.205" endtime="20201112 12:26:56.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.203" endtime="20201112 12:26:56.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.513" level="INFO">${RESULT} = [{'time': 0.022845653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.795900000000204e-05, 'source_diff': 8.795900000000204e-05}, {'time': 0.022938361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.510" endtime="20201112 12:26:56.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.526" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.514" endtime="20201112 12:26:56.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.531" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.530" endtime="20201112 12:26:56.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.533" level="INFO">VALUE: [8.795900000000204e-05, 8.691700000000233e-05, 8.701399999999984e-05, 8.777800000000016e-05, 8.770799999999884e-05, 8.697199999999766e-05, 8.765300000000004e-05, 8.727699999999672e-05, 8.69860000000007e-05, 8.682000000000134e-05, 8.705600000000202e-05, 8.781999999999887e-05, 8.719500000000172e-05, 8.76799999999997e-05, 8.780499999999983e-05, 8.705499999999908e-05, 8.691599999999938e-05, 8.691599999999938e-05, 8.775000000000102e-05, 8.69860000000007e-05, 8.78050000000033e-05, 8.709700000000126e-05, 8.691700000000233e-05, 8.773600000000145e-05, 8.715299999999954e-05, 8.768100000000265e-05, 8.701399999999984e-05, 8.768100000000265e-05, 8.772200000000188e-05, 8.776400000000059e-05, 8.684800000000048e-05, 8.782000000000234e-05, 8.6944999999998e-05, 8.766600000000013e-05, 8.71250000000004e-05, 8.701399999999984e-05, 8.719399999999877e-05, 8.718000000000267e-05, 8.715299999999954e-05, 8.680600000000177e-05, 8.695799999999809e-05, 8.783400000000191e-05, 8.777800000000016e-05, 8.705599999999855e-05, 8.775000000000102e-05, 8.76669999999996e-05, 8.71669999999991e-05, 8.700000000000027e-05, 8.76669999999996e-05, 8.690199999999981e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.532" endtime="20201112 12:26:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.527" endtime="20201112 12:26:56.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.537" endtime="20201112 12:26:56.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.540" endtime="20201112 12:26:56.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.539" endtime="20201112 12:26:56.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.535" endtime="20201112 12:26:56.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.169" endtime="20201112 12:26:56.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.168" endtime="20201112 12:26:56.561"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.569" endtime="20201112 12:26:56.589"></status>
</kw>
<msg timestamp="20201112 12:26:56.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.568" endtime="20201112 12:26:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.590" endtime="20201112 12:26:56.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.593" endtime="20201112 12:26:56.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.565" endtime="20201112 12:26:56.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.563" endtime="20201112 12:26:56.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.603" endtime="20201112 12:26:56.888"></status>
</kw>
<msg timestamp="20201112 12:26:56.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.601" endtime="20201112 12:26:56.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.892" endtime="20201112 12:26:56.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.901" endtime="20201112 12:26:56.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.599" endtime="20201112 12:26:56.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.597" endtime="20201112 12:26:56.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.907" level="INFO">${RESULT} = [{'time': 0.021747819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915200000000206e-05, 'source_diff': 8.915200000000206e-05}, {'time': 0.021841514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.904" endtime="20201112 12:26:56.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.908" endtime="20201112 12:26:56.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.925" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.924" endtime="20201112 12:26:56.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.927" level="INFO">VALUE: [8.915200000000206e-05, 8.7944999999999e-05, 8.79999999999978e-05, 8.795800000000256e-05, 8.81670000000001e-05, 8.798599999999823e-05, 8.791699999999986e-05, 8.870899999999932e-05, 8.813900000000097e-05, 8.870799999999984e-05, 8.795800000000256e-05, 8.79860000000017e-05, 8.804100000000051e-05, 8.808299999999922e-05, 8.805500000000008e-05, 8.823700000000143e-05, 8.870799999999984e-05, 8.88190000000004e-05, 8.86250000000019e-05, 8.86670000000006e-05, 8.809700000000226e-05, 8.788899999999725e-05, 8.801399999999737e-05, 8.81120000000013e-05, 8.870900000000279e-05, 8.81120000000013e-05, 8.808399999999869e-05, 8.873699999999846e-05, 8.872299999999889e-05, 8.880500000000083e-05, 8.870799999999984e-05, 8.788900000000072e-05, 8.866600000000113e-05, 8.801400000000084e-05, 8.809700000000226e-05, 8.820799999999934e-05, 8.798599999999823e-05, 8.86670000000006e-05, 8.81389999999975e-05, 8.797200000000213e-05, 8.805599999999955e-05, 8.823599999999848e-05, 8.808399999999869e-05, 8.802700000000094e-05, 8.79860000000017e-05, 8.801400000000084e-05, 8.802799999999694e-05, 8.829100000000076e-05, 8.794399999999952e-05, 8.791600000000038e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.926" endtime="20201112 12:26:56.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.921" endtime="20201112 12:26:56.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.931" endtime="20201112 12:26:56.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.935" endtime="20201112 12:26:56.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.933" endtime="20201112 12:26:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.929" endtime="20201112 12:26:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.562" endtime="20201112 12:26:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.561" endtime="20201112 12:26:56.955"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.964" endtime="20201112 12:26:56.983"></status>
</kw>
<msg timestamp="20201112 12:26:56.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.962" endtime="20201112 12:26:56.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.984" endtime="20201112 12:26:56.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.987" endtime="20201112 12:26:56.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.960" endtime="20201112 12:26:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.958" endtime="20201112 12:26:56.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.996" endtime="20201112 12:26:57.283"></status>
</kw>
<msg timestamp="20201112 12:26:57.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.995" endtime="20201112 12:26:57.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.287" endtime="20201112 12:26:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.295" endtime="20201112 12:26:57.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.992" endtime="20201112 12:26:57.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.991" endtime="20201112 12:26:57.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.301" level="INFO">${RESULT} = [{'time': 0.021834903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.933399999999994e-05, 'source_diff': 8.933399999999994e-05}, {'time': 0.021929639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.298" endtime="20201112 12:26:57.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.302" endtime="20201112 12:26:57.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.320" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.319" endtime="20201112 12:26:57.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.323" level="INFO">VALUE: [8.933399999999994e-05, 8.913900000000197e-05, 8.968099999999771e-05, 8.904199999999751e-05, 8.918099999999721e-05, 8.908399999999969e-05, 8.877799999999769e-05, 8.974999999999955e-05, 8.8945e-05, 8.965200000000256e-05, 8.894399999999705e-05, 8.974999999999955e-05, 8.880500000000083e-05, 8.88190000000004e-05, 8.905500000000108e-05, 8.96800000000017e-05, 8.973599999999998e-05, 8.905599999999708e-05, 8.897199999999966e-05, 8.895800000000009e-05, 8.974999999999955e-05, 8.891700000000086e-05, 8.888900000000172e-05, 8.969500000000075e-05, 8.970900000000032e-05, 8.911099999999936e-05, 8.907000000000012e-05, 8.887499999999868e-05, 8.905500000000108e-05, 8.887499999999868e-05, 8.916600000000163e-05, 8.893000000000095e-05, 8.977799999999869e-05, 8.893000000000095e-05, 8.917999999999773e-05, 8.895800000000009e-05, 8.974999999999955e-05, 8.974999999999955e-05, 8.926400000000209e-05, 8.884699999999954e-05, 8.893100000000043e-05, 8.886100000000258e-05, 8.905600000000055e-05, 8.886200000000205e-05, 8.98190000000014e-05, 8.969400000000127e-05, 8.967999999999823e-05, 8.967999999999823e-05, 8.895800000000009e-05, 8.909699999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.321" endtime="20201112 12:26:57.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.317" endtime="20201112 12:26:57.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.326" endtime="20201112 12:26:57.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.330" endtime="20201112 12:26:57.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.328" endtime="20201112 12:26:57.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.324" endtime="20201112 12:26:57.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.956" endtime="20201112 12:26:57.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.956" endtime="20201112 12:26:57.350"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.359" endtime="20201112 12:26:57.378"></status>
</kw>
<msg timestamp="20201112 12:26:57.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.357" endtime="20201112 12:26:57.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.379" endtime="20201112 12:26:57.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.382" endtime="20201112 12:26:57.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.355" endtime="20201112 12:26:57.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.353" endtime="20201112 12:26:57.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.391" endtime="20201112 12:26:57.677"></status>
</kw>
<msg timestamp="20201112 12:26:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.390" endtime="20201112 12:26:57.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.681" endtime="20201112 12:26:57.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.689" endtime="20201112 12:26:57.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.387" endtime="20201112 12:26:57.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.386" endtime="20201112 12:26:57.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.695" level="INFO">${RESULT} = [{'time': 0.021876653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.066699999999914e-05, 'source_diff': 9.066699999999914e-05}, {'time': 0.021972417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:57.692" endtime="20201112 12:26:57.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.696" endtime="20201112 12:26:57.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.713" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.712" endtime="20201112 12:26:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.716" level="INFO">VALUE: [9.066699999999914e-05, 9.03060000000018e-05, 9.011199999999983e-05, 9.005499999999861e-05, 8.99999999999998e-05, 9.017999999999873e-05, 8.986100000000011e-05, 9.005500000000208e-05, 9.022200000000091e-05, 8.992999999999848e-05, 8.987499999999968e-05, 9.061100000000086e-05, 9.074999999999708e-05, 9.009700000000079e-05, 9.084800000000101e-05, 8.99999999999998e-05, 9.076400000000012e-05, 9.019499999999778e-05, 9.075000000000055e-05, 9.012499999999993e-05, 9.079199999999926e-05, 9.062500000000043e-05, 9.006900000000165e-05, 9.006900000000165e-05, 8.990299999999882e-05, 9.01389999999995e-05, 9.005600000000155e-05, 8.98190000000014e-05, 8.991700000000186e-05, 9.066699999999914e-05, 9.004200000000198e-05, 8.993099999999796e-05, 8.991699999999839e-05, 9.074999999999708e-05, 9.075000000000055e-05, 8.991700000000186e-05, 8.99999999999998e-05, 9.081899999999893e-05, 8.990299999999882e-05, 9.076300000000065e-05, 9.070799999999837e-05, 9.065300000000304e-05, 9.075000000000055e-05, 9.026399999999962e-05, 9.01389999999995e-05, 9.083300000000197e-05, 9.009700000000079e-05, 8.99999999999998e-05, 9.009700000000079e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.714" endtime="20201112 12:26:57.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.709" endtime="20201112 12:26:57.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.719" endtime="20201112 12:26:57.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.722" endtime="20201112 12:26:57.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.721" endtime="20201112 12:26:57.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.718" endtime="20201112 12:26:57.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.351" endtime="20201112 12:26:57.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.351" endtime="20201112 12:26:57.743"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.752" endtime="20201112 12:26:57.771"></status>
</kw>
<msg timestamp="20201112 12:26:57.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.750" endtime="20201112 12:26:57.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.773" endtime="20201112 12:26:57.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.775" endtime="20201112 12:26:57.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.748" endtime="20201112 12:26:57.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.746" endtime="20201112 12:26:57.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.785" endtime="20201112 12:26:58.070"></status>
</kw>
<msg timestamp="20201112 12:26:58.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.783" endtime="20201112 12:26:58.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.075" endtime="20201112 12:26:58.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.083" endtime="20201112 12:26:58.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.781" endtime="20201112 12:26:58.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.779" endtime="20201112 12:26:58.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.089" level="INFO">${RESULT} = [{'time': 0.022212139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.190299999999735e-05, 'source_diff': 9.190299999999735e-05}, {'time': 0.022308903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.086" endtime="20201112 12:26:58.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.103" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.090" endtime="20201112 12:26:58.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.107" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.106" endtime="20201112 12:26:58.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.110" level="INFO">VALUE: [9.190299999999735e-05, 9.118100000000268e-05, 9.126400000000062e-05, 9.09589999999981e-05, 9.111100000000136e-05, 9.11390000000005e-05, 9.116699999999964e-05, 9.179200000000026e-05, 9.083300000000197e-05, 9.090299999999982e-05, 9.095800000000209e-05, 9.112500000000093e-05, 9.1639000000001e-05, 9.127800000000019e-05, 9.091699999999939e-05, 9.093099999999896e-05, 9.127800000000019e-05, 9.084699999999807e-05, 9.166700000000014e-05, 9.125000000000105e-05, 9.105599999999908e-05, 9.086100000000111e-05, 9.109800000000126e-05, 9.129100000000029e-05, 9.176400000000112e-05, 9.172199999999894e-05, 9.109700000000179e-05, 9.11390000000005e-05, 9.095800000000209e-05, 9.163899999999753e-05, 9.087500000000068e-05, 9.170799999999937e-05, 9.176399999999765e-05, 9.105599999999908e-05, 9.104199999999951e-05, 9.119499999999878e-05, 9.174999999999808e-05, 9.177799999999722e-05, 9.101400000000037e-05, 9.104199999999951e-05, 9.11390000000005e-05, 9.108299999999875e-05, 9.091599999999991e-05, 9.090200000000034e-05, 9.105499999999961e-05, 9.081899999999893e-05, 9.097200000000166e-05, 9.173599999999851e-05, 9.088900000000025e-05, 9.086100000000111e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.108" endtime="20201112 12:26:58.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.104" endtime="20201112 12:26:58.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.113" endtime="20201112 12:26:58.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.117" endtime="20201112 12:26:58.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.115" endtime="20201112 12:26:58.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.112" endtime="20201112 12:26:58.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.744" endtime="20201112 12:26:58.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.744" endtime="20201112 12:26:58.137"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.146" endtime="20201112 12:26:58.165"></status>
</kw>
<msg timestamp="20201112 12:26:58.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.144" endtime="20201112 12:26:58.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.166" endtime="20201112 12:26:58.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.169" endtime="20201112 12:26:58.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.142" endtime="20201112 12:26:58.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.140" endtime="20201112 12:26:58.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.178" endtime="20201112 12:26:58.464"></status>
</kw>
<msg timestamp="20201112 12:26:58.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.177" endtime="20201112 12:26:58.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.468" endtime="20201112 12:26:58.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.477" endtime="20201112 12:26:58.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.174" endtime="20201112 12:26:58.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.173" endtime="20201112 12:26:58.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.483" level="INFO">${RESULT} = [{'time': 0.021729472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.31529999999986e-05, 'source_diff': 9.31529999999986e-05}, {'time': 0.021827222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:58.480" endtime="20201112 12:26:58.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.496" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.484" endtime="20201112 12:26:58.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.501" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.500" endtime="20201112 12:26:58.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.503" level="INFO">VALUE: [9.31529999999986e-05, 9.220799999999987e-05, 9.276400000000212e-05, 9.184699999999907e-05, 9.195799999999962e-05, 9.263899999999853e-05, 9.206999999999965e-05, 9.279200000000126e-05, 9.184799999999854e-05, 9.277800000000169e-05, 9.202800000000094e-05, 9.277700000000222e-05, 9.204200000000051e-05, 9.188900000000125e-05, 9.195799999999962e-05, 9.270800000000037e-05, 9.181899999999993e-05, 9.209699999999932e-05, 9.23199999999999e-05, 9.19719999999992e-05, 9.19719999999992e-05, 9.218100000000021e-05, 9.266700000000114e-05, 9.205600000000008e-05, 9.220799999999987e-05, 9.266700000000114e-05, 9.20139999999979e-05, 9.270899999999985e-05, 9.19719999999992e-05, 9.204200000000051e-05, 9.21940000000003e-05, 9.184699999999907e-05, 9.191599999999744e-05, 9.276399999999865e-05, 9.274999999999908e-05, 9.215300000000107e-05, 9.275000000000255e-05, 9.18329999999995e-05, 9.272199999999994e-05, 9.275000000000255e-05, 9.216700000000064e-05, 9.202800000000094e-05, 9.219499999999978e-05, 9.270899999999985e-05, 9.201400000000137e-05, 9.19589999999991e-05, 9.272299999999942e-05, 9.227700000000172e-05, 9.202700000000147e-05, 9.209699999999932e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.502" endtime="20201112 12:26:58.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.497" endtime="20201112 12:26:58.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.507" endtime="20201112 12:26:58.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.510" endtime="20201112 12:26:58.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.509" endtime="20201112 12:26:58.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.505" endtime="20201112 12:26:58.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.138" endtime="20201112 12:26:58.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.138" endtime="20201112 12:26:58.531"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.539" endtime="20201112 12:26:58.558"></status>
</kw>
<msg timestamp="20201112 12:26:58.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.538" endtime="20201112 12:26:58.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.560" endtime="20201112 12:26:58.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.562" endtime="20201112 12:26:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.535" endtime="20201112 12:26:58.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.533" endtime="20201112 12:26:58.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.572" endtime="20201112 12:26:58.857"></status>
</kw>
<msg timestamp="20201112 12:26:58.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.571" endtime="20201112 12:26:58.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.861" endtime="20201112 12:26:58.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.869" endtime="20201112 12:26:58.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.568" endtime="20201112 12:26:58.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.567" endtime="20201112 12:26:58.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.876" level="INFO">${RESULT} = [{'time': 0.021758708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.393000000000248e-05, 'source_diff': 9.393000000000248e-05}, {'time': 0.021858472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.873" endtime="20201112 12:26:58.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.890" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.877" endtime="20201112 12:26:58.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.895" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.894" endtime="20201112 12:26:58.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.897" level="INFO">VALUE: [9.393000000000248e-05, 9.379099999999932e-05, 9.318000000000173e-05, 9.377799999999922e-05, 9.377800000000269e-05, 9.302800000000194e-05, 9.36529999999991e-05, 9.305499999999814e-05, 9.380600000000183e-05, 9.366699999999867e-05, 9.311099999999989e-05, 9.372300000000042e-05, 9.302799999999847e-05, 9.319500000000078e-05, 9.366600000000266e-05, 9.302800000000194e-05, 9.295800000000062e-05, 9.302700000000247e-05, 9.361100000000039e-05, 9.379099999999932e-05, 9.318000000000173e-05, 9.306899999999771e-05, 9.29720000000002e-05, 9.370800000000137e-05, 9.283399999999997e-05, 9.375000000000008e-05, 9.36529999999991e-05, 9.290300000000182e-05, 9.286199999999911e-05, 9.363899999999953e-05, 9.279100000000179e-05, 9.323600000000001e-05, 9.299999999999933e-05, 9.30139999999989e-05, 9.288900000000225e-05, 9.31940000000013e-05, 9.370800000000137e-05, 9.366700000000214e-05, 9.302799999999847e-05, 9.372200000000094e-05, 9.316700000000164e-05, 9.295800000000062e-05, 9.368099999999824e-05, 9.291700000000139e-05, 9.29720000000002e-05, 9.380599999999836e-05, 9.29590000000001e-05, 9.294400000000105e-05, 9.288900000000225e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.896" endtime="20201112 12:26:58.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.891" endtime="20201112 12:26:58.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.901" endtime="20201112 12:26:58.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.904" endtime="20201112 12:26:58.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.903" endtime="20201112 12:26:58.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.899" endtime="20201112 12:26:58.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.532" endtime="20201112 12:26:58.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.531" endtime="20201112 12:26:58.925"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.933" endtime="20201112 12:26:58.951"></status>
</kw>
<msg timestamp="20201112 12:26:58.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.932" endtime="20201112 12:26:58.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.953" endtime="20201112 12:26:58.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.955" endtime="20201112 12:26:58.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.929" endtime="20201112 12:26:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.927" endtime="20201112 12:26:58.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.965" endtime="20201112 12:26:59.251"></status>
</kw>
<msg timestamp="20201112 12:26:59.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.964" endtime="20201112 12:26:59.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.255" endtime="20201112 12:26:59.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.263" endtime="20201112 12:26:59.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.961" endtime="20201112 12:26:59.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.960" endtime="20201112 12:26:59.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.270" level="INFO">${RESULT} = [{'time': 0.021870611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.462500000000096e-05, 'source_diff': 9.462500000000096e-05}, {'time': 0.021970375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:59.266" endtime="20201112 12:26:59.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.283" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.271" endtime="20201112 12:26:59.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.287" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.286" endtime="20201112 12:26:59.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.290" level="INFO">VALUE: [9.462500000000096e-05, 9.41529999999996e-05, 9.408299999999828e-05, 9.411100000000089e-05, 9.408400000000122e-05, 9.411100000000089e-05, 9.479199999999979e-05, 9.408400000000122e-05, 9.402799999999947e-05, 9.41529999999996e-05, 9.479100000000032e-05, 9.473599999999804e-05, 9.47079999999989e-05, 9.387500000000021e-05, 9.411099999999742e-05, 9.473600000000151e-05, 9.47079999999989e-05, 9.390299999999935e-05, 9.388899999999978e-05, 9.472199999999847e-05, 9.40139999999999e-05, 9.400000000000033e-05, 9.427799999999972e-05, 9.476299999999771e-05, 9.468099999999924e-05, 9.404199999999904e-05, 9.411099999999742e-05, 9.46940000000028e-05, 9.406899999999871e-05, 9.416600000000316e-05, 9.479100000000032e-05, 9.483299999999903e-05, 9.463900000000053e-05, 9.416699999999917e-05, 9.416699999999917e-05, 9.405599999999861e-05, 9.379199999999879e-05, 9.39720000000012e-05, 9.391699999999892e-05, 9.393100000000196e-05, 9.479199999999979e-05, 9.480600000000283e-05, 9.46660000000002e-05, 9.400000000000033e-05, 9.391600000000291e-05, 9.380499999999889e-05, 9.391600000000291e-05, 9.419399999999883e-05, 9.41529999999996e-05, 9.388899999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.288" endtime="20201112 12:26:59.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.284" endtime="20201112 12:26:59.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.293" endtime="20201112 12:26:59.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.297" endtime="20201112 12:26:59.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.295" endtime="20201112 12:26:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.292" endtime="20201112 12:26:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.926" endtime="20201112 12:26:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.925" endtime="20201112 12:26:59.317"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.326" endtime="20201112 12:26:59.345"></status>
</kw>
<msg timestamp="20201112 12:26:59.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.325" endtime="20201112 12:26:59.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.346" endtime="20201112 12:26:59.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.349" endtime="20201112 12:26:59.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.322" endtime="20201112 12:26:59.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.320" endtime="20201112 12:26:59.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.359" endtime="20201112 12:26:59.644"></status>
</kw>
<msg timestamp="20201112 12:26:59.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:59.357" endtime="20201112 12:26:59.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:59.649" endtime="20201112 12:26:59.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.657" endtime="20201112 12:26:59.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.355" endtime="20201112 12:26:59.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.353" endtime="20201112 12:26:59.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.663" level="INFO">${RESULT} = [{'time': 0.02175725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.606899999999724e-05, 'source_diff': 9.606899999999724e-05}, {'time': 0.021858042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:59.660" endtime="20201112 12:26:59.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.677" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.664" endtime="20201112 12:26:59.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.681" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.680" endtime="20201112 12:26:59.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.684" level="INFO">VALUE: [9.606899999999724e-05, 9.533400000000247e-05, 9.488900000000078e-05, 9.490300000000035e-05, 9.504200000000004e-05, 9.480599999999936e-05, 9.573699999999852e-05, 9.511100000000189e-05, 9.576299999999871e-05, 9.506899999999971e-05, 9.508299999999928e-05, 9.51530000000006e-05, 9.488899999999731e-05, 9.486100000000164e-05, 9.509699999999885e-05, 9.580600000000036e-05, 9.49859999999983e-05, 9.494499999999906e-05, 9.498600000000176e-05, 9.512500000000146e-05, 9.56530000000011e-05, 9.516700000000017e-05, 9.574999999999861e-05, 9.481899999999946e-05, 9.488900000000078e-05, 9.57079999999999e-05, 9.512500000000146e-05, 9.494399999999958e-05, 9.569400000000033e-05, 9.490300000000035e-05, 9.575000000000208e-05, 9.526400000000115e-05, 9.505599999999961e-05, 9.526300000000168e-05, 9.573600000000251e-05, 9.490300000000035e-05, 9.493000000000001e-05, 9.501399999999743e-05, 9.518099999999974e-05, 9.574999999999861e-05, 9.486200000000111e-05, 9.579100000000132e-05, 9.493000000000001e-05, 9.505500000000014e-05, 9.499999999999786e-05, 9.487499999999774e-05, 9.498600000000176e-05, 9.52079999999994e-05, 9.51530000000006e-05, 9.481899999999946e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.682" endtime="20201112 12:26:59.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.678" endtime="20201112 12:26:59.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.687" endtime="20201112 12:26:59.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.690" endtime="20201112 12:26:59.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.689" endtime="20201112 12:26:59.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.686" endtime="20201112 12:26:59.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.318" endtime="20201112 12:26:59.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.318" endtime="20201112 12:26:59.711"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.720" endtime="20201112 12:26:59.739"></status>
</kw>
<msg timestamp="20201112 12:26:59.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.718" endtime="20201112 12:26:59.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.740" endtime="20201112 12:26:59.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.743" endtime="20201112 12:26:59.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.716" endtime="20201112 12:26:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.714" endtime="20201112 12:26:59.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.753" endtime="20201112 12:27:00.039"></status>
</kw>
<msg timestamp="20201112 12:27:00.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.751" endtime="20201112 12:27:00.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.043" endtime="20201112 12:27:00.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.051" endtime="20201112 12:27:00.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.748" endtime="20201112 12:27:00.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.747" endtime="20201112 12:27:00.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.058" level="INFO">${RESULT} = [{'time': 0.021823972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.66530000000021e-05, 'source_diff': 9.66530000000021e-05}, {'time': 0.021926736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:00.055" endtime="20201112 12:27:00.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.071" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.059" endtime="20201112 12:27:00.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.076" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.075" endtime="20201112 12:27:00.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.078" level="INFO">VALUE: [9.66530000000021e-05, 9.680499999999842e-05, 9.593100000000049e-05, 9.587499999999874e-05, 9.58469999999996e-05, 9.620899999999988e-05, 9.597199999999972e-05, 9.674999999999961e-05, 9.588900000000178e-05, 9.598700000000224e-05, 9.673699999999952e-05, 9.612499999999899e-05, 9.668000000000176e-05, 9.618000000000126e-05, 9.605500000000114e-05, 9.612499999999899e-05, 9.677800000000222e-05, 9.608299999999681e-05, 9.60140000000019e-05, 9.599999999999886e-05, 9.613899999999856e-05, 9.590200000000187e-05, 9.588899999999831e-05, 9.670900000000038e-05, 9.601299999999896e-05, 9.584800000000254e-05, 9.68059999999979e-05, 9.609699999999985e-05, 9.677699999999928e-05, 9.67080000000009e-05, 9.626399999999868e-05, 9.66799999999983e-05, 9.597199999999972e-05, 9.66530000000021e-05, 9.611100000000289e-05, 9.61530000000016e-05, 9.612500000000246e-05, 9.663899999999906e-05, 9.618100000000074e-05, 9.677799999999875e-05, 9.602800000000147e-05, 9.67080000000009e-05, 9.670900000000038e-05, 9.602699999999853e-05, 9.591600000000144e-05, 9.615200000000212e-05, 9.609699999999985e-05, 9.604100000000157e-05, 9.613900000000203e-05, 9.677799999999875e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.077" endtime="20201112 12:27:00.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.072" endtime="20201112 12:27:00.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.082" endtime="20201112 12:27:00.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.085" endtime="20201112 12:27:00.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.084" endtime="20201112 12:27:00.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.080" endtime="20201112 12:27:00.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.712" endtime="20201112 12:27:00.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.712" endtime="20201112 12:27:00.106"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.114" endtime="20201112 12:27:00.133"></status>
</kw>
<msg timestamp="20201112 12:27:00.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.113" endtime="20201112 12:27:00.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.135" endtime="20201112 12:27:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.137" endtime="20201112 12:27:00.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.110" endtime="20201112 12:27:00.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.108" endtime="20201112 12:27:00.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.147" endtime="20201112 12:27:00.432"></status>
</kw>
<msg timestamp="20201112 12:27:00.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.145" endtime="20201112 12:27:00.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.436" endtime="20201112 12:27:00.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.445" endtime="20201112 12:27:00.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.143" endtime="20201112 12:27:00.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.141" endtime="20201112 12:27:00.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.451" level="INFO">${RESULT} = [{'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.809800000000132e-05, 'source_diff': 9.809800000000132e-05}, {'time': 0.022274806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.448" endtime="20201112 12:27:00.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.465" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.452" endtime="20201112 12:27:00.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.470" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.469" endtime="20201112 12:27:00.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.472" level="INFO">VALUE: [9.809800000000132e-05, 9.780600000000236e-05, 9.707000000000118e-05, 9.711100000000042e-05, 9.708399999999728e-05, 9.691599999999898e-05, 9.72080000000014e-05, 9.695799999999768e-05, 9.687499999999974e-05, 9.72080000000014e-05, 9.722300000000045e-05, 9.701399999999943e-05, 9.712499999999999e-05, 9.719500000000131e-05, 9.713899999999956e-05, 9.779199999999932e-05, 9.697200000000072e-05, 9.688899999999931e-05, 9.713899999999956e-05, 9.715199999999966e-05, 9.770899999999791e-05, 9.773600000000104e-05, 9.683299999999756e-05, 9.691599999999898e-05, 9.719400000000183e-05, 9.713899999999956e-05, 9.695800000000115e-05, 9.687499999999974e-05, 9.772200000000147e-05, 9.720900000000088e-05, 9.707000000000118e-05, 9.711199999999989e-05, 9.68340000000005e-05, 9.688899999999931e-05, 9.777700000000028e-05, 9.701399999999943e-05, 9.69019999999994e-05, 9.719400000000183e-05, 9.681899999999799e-05, 9.773600000000104e-05, 9.720799999999793e-05, 9.709700000000085e-05, 9.777799999999975e-05, 9.719399999999837e-05, 9.768100000000224e-05, 9.769500000000181e-05, 9.773600000000104e-05, 9.711100000000042e-05, 9.720799999999793e-05, 9.773600000000104e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.471" endtime="20201112 12:27:00.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.466" endtime="20201112 12:27:00.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.480" endtime="20201112 12:27:00.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.483" endtime="20201112 12:27:00.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.481" endtime="20201112 12:27:00.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.478" endtime="20201112 12:27:00.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.107" endtime="20201112 12:27:00.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.106" endtime="20201112 12:27:00.504"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.512" endtime="20201112 12:27:00.531"></status>
</kw>
<msg timestamp="20201112 12:27:00.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.511" endtime="20201112 12:27:00.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.532" endtime="20201112 12:27:00.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.535" endtime="20201112 12:27:00.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.508" endtime="20201112 12:27:00.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.506" endtime="20201112 12:27:00.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.545" endtime="20201112 12:27:00.829"></status>
</kw>
<msg timestamp="20201112 12:27:00.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.543" endtime="20201112 12:27:00.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.833" endtime="20201112 12:27:00.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.842" endtime="20201112 12:27:00.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.541" endtime="20201112 12:27:00.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.539" endtime="20201112 12:27:00.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.848" level="INFO">${RESULT} = [{'time': 0.021718264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.894499999999959e-05, 'source_diff': 9.894499999999959e-05}, {'time': 0.021823, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:00.845" endtime="20201112 12:27:00.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.861" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.849" endtime="20201112 12:27:00.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.866" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.865" endtime="20201112 12:27:00.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.868" level="INFO">VALUE: [9.894499999999959e-05, 9.879200000000032e-05, 9.787500000000074e-05, 9.797299999999773e-05, 9.790299999999988e-05, 9.806999999999871e-05, 9.86670000000002e-05, 9.81669999999997e-05, 9.793100000000249e-05, 9.798700000000077e-05, 9.801400000000043e-05, 9.791599999999998e-05, 9.869399999999987e-05, 9.815300000000013e-05, 9.816600000000023e-05, 9.827800000000025e-05, 9.79999999999974e-05, 9.793099999999902e-05, 9.813900000000056e-05, 9.791700000000292e-05, 9.809699999999838e-05, 9.793099999999902e-05, 9.812500000000099e-05, 9.79999999999974e-05, 9.806899999999924e-05, 9.880499999999695e-05, 9.876400000000118e-05, 9.797199999999825e-05, 9.775000000000061e-05, 9.808300000000228e-05, 9.875000000000161e-05, 9.870799999999944e-05, 9.813900000000056e-05, 9.861099999999845e-05, 9.876399999999771e-05, 9.865299999999716e-05, 9.86670000000002e-05, 9.815300000000013e-05, 9.794499999999859e-05, 9.86670000000002e-05, 9.807000000000218e-05, 9.865200000000116e-05, 9.804199999999957e-05, 9.820799999999894e-05, 9.790299999999988e-05, 9.802700000000053e-05, 9.826400000000068e-05, 9.815300000000013e-05, 9.865300000000063e-05, 9.795799999999869e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.867" endtime="20201112 12:27:00.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.862" endtime="20201112 12:27:00.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.872" endtime="20201112 12:27:00.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.875" endtime="20201112 12:27:00.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.874" endtime="20201112 12:27:00.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.870" endtime="20201112 12:27:00.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.505" endtime="20201112 12:27:00.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.504" endtime="20201112 12:27:00.896"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.905" endtime="20201112 12:27:00.924"></status>
</kw>
<msg timestamp="20201112 12:27:00.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.903" endtime="20201112 12:27:00.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.925" endtime="20201112 12:27:00.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.928" endtime="20201112 12:27:00.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.901" endtime="20201112 12:27:00.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.898" endtime="20201112 12:27:00.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.938" endtime="20201112 12:27:01.223"></status>
</kw>
<msg timestamp="20201112 12:27:01.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.936" endtime="20201112 12:27:01.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.227" endtime="20201112 12:27:01.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.236" endtime="20201112 12:27:01.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.934" endtime="20201112 12:27:01.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.932" endtime="20201112 12:27:01.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.243" level="INFO">${RESULT} = [{'time': 0.021849208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010013899999999909, 'source_diff': 0.00010013899999999909}, {'time': 0.021954014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:01.239" endtime="20201112 12:27:01.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.257" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.244" endtime="20201112 12:27:01.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.261" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.260" endtime="20201112 12:27:01.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.263" level="INFO">VALUE: [0.00010013899999999909, 9.919499999999984e-05, 9.909700000000285e-05, 9.96939999999974e-05, 9.897199999999926e-05, 9.973599999999957e-05, 9.911099999999895e-05, 9.915299999999766e-05, 9.894499999999959e-05, 9.979199999999785e-05, 9.88479999999986e-05, 9.915300000000113e-05, 9.916699999999723e-05, 9.963799999999912e-05, 9.89999999999984e-05, 9.979099999999838e-05, 9.915299999999766e-05, 9.890300000000088e-05, 9.984700000000013e-05, 9.88609999999987e-05, 9.888900000000131e-05, 9.916699999999723e-05, 9.883299999999956e-05, 9.919499999999984e-05, 9.879200000000032e-05, 9.898700000000177e-05, 9.913900000000156e-05, 9.888900000000131e-05, 9.92219999999995e-05, 9.913899999999809e-05, 9.976300000000271e-05, 9.919400000000037e-05, 9.980500000000142e-05, 9.919400000000037e-05, 9.980500000000142e-05, 9.918100000000027e-05, 9.883299999999956e-05, 9.901400000000143e-05, 9.888900000000131e-05, 9.887499999999827e-05, 9.909699999999938e-05, 9.979200000000132e-05, 9.968100000000077e-05, 9.906900000000024e-05, 9.887500000000174e-05, 9.96800000000013e-05, 9.893000000000055e-05, 9.913900000000156e-05, 9.897199999999926e-05, 9.891700000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.262" endtime="20201112 12:27:01.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.257" endtime="20201112 12:27:01.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.267" endtime="20201112 12:27:01.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.270" endtime="20201112 12:27:01.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.269" endtime="20201112 12:27:01.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.265" endtime="20201112 12:27:01.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.897" endtime="20201112 12:27:01.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.896" endtime="20201112 12:27:01.291"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.300" endtime="20201112 12:27:01.319"></status>
</kw>
<msg timestamp="20201112 12:27:01.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.298" endtime="20201112 12:27:01.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.320" endtime="20201112 12:27:01.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.323" endtime="20201112 12:27:01.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.296" endtime="20201112 12:27:01.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.294" endtime="20201112 12:27:01.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.333" endtime="20201112 12:27:01.618"></status>
</kw>
<msg timestamp="20201112 12:27:01.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:01.331" endtime="20201112 12:27:01.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:01.622" endtime="20201112 12:27:01.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.630" endtime="20201112 12:27:01.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.329" endtime="20201112 12:27:01.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.327" endtime="20201112 12:27:01.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.637" level="INFO">${RESULT} = [{'time': 0.021881, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010051399999999946, 'source_diff': 0.00010051399999999946}, {'time': 0.021986792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:01.633" endtime="20201112 12:27:01.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.650" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.638" endtime="20201112 12:27:01.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.654" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.653" endtime="20201112 12:27:01.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.657" level="INFO">VALUE: [0.00010051399999999946, 0.00010032000000000096, 9.98609999999997e-05, 0.00010019500000000084, 9.994500000000059e-05, 9.986200000000264e-05, 9.990299999999841e-05, 9.995800000000069e-05, 9.995800000000069e-05, 9.99999999999994e-05, 9.991600000000198e-05, 0.0001000549999999982, 9.991699999999798e-05, 0.000100722000000001, 0.00010063899999999959, 9.98609999999997e-05, 0.00010072199999999754, 9.99999999999994e-05, 0.00010005600000000114, 0.0001006670000000022, 0.000100722000000001, 0.00010012499999999952, 9.997299999999973e-05, 9.994399999999765e-05, 9.987500000000274e-05, 0.0001006800000000023, 0.000100722000000001, 0.00010012500000000299, 9.987499999999927e-05, 9.990300000000188e-05, 9.998599999999983e-05, 0.00010013899999999909, 0.000100722000000001, 0.00010011099999999995, 0.00010080599999999842, 0.00010023600000000008, 0.00010001400000000243, 0.00010009700000000038, 0.00010072300000000048, 9.987499999999927e-05, 9.998599999999983e-05, 9.98609999999997e-05, 0.00010020800000000094, 0.000100028000000002, 0.0001001670000000017, 9.98609999999997e-05, 0.00010012500000000299, 9.99999999999994e-05, 9.988799999999937e-05, 0.00010070899999999744]</msg>
<status status="PASS" starttime="20201112 12:27:01.655" endtime="20201112 12:27:01.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.651" endtime="20201112 12:27:01.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.660" endtime="20201112 12:27:01.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.664" endtime="20201112 12:27:01.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.662" endtime="20201112 12:27:01.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.659" endtime="20201112 12:27:01.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.292" endtime="20201112 12:27:01.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.291" endtime="20201112 12:27:01.685"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.693" endtime="20201112 12:27:01.712"></status>
</kw>
<msg timestamp="20201112 12:27:01.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.691" endtime="20201112 12:27:01.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.714" endtime="20201112 12:27:01.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.716" endtime="20201112 12:27:01.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.689" endtime="20201112 12:27:01.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.687" endtime="20201112 12:27:01.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.726" endtime="20201112 12:27:02.013"></status>
</kw>
<msg timestamp="20201112 12:27:02.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.725" endtime="20201112 12:27:02.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.017" endtime="20201112 12:27:02.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.025" endtime="20201112 12:27:02.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.722" endtime="20201112 12:27:02.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.720" endtime="20201112 12:27:02.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.031" level="INFO">${RESULT} = [{'time': 0.021758931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010161199999999745, 'source_diff': 0.00010161199999999745}, {'time': 0.021865694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.028" endtime="20201112 12:27:02.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.032" endtime="20201112 12:27:02.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.050" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.049" endtime="20201112 12:27:02.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.052" level="INFO">VALUE: [0.00010161199999999745, 0.00010113800000000062, 0.00010098600000000083, 0.0001008610000000007, 0.000101722000000002, 0.00010095799999999822, 0.00010102799999999953, 0.00010107000000000171, 0.0001017359999999981, 0.00010088899999999984, 0.00010172199999999854, 0.00010177799999999682, 0.00010175000000000115, 0.00010177800000000028, 0.0001017359999999981, 0.00010108400000000128, 0.00010080499999999895, 0.00010088899999999984, 0.00010101300000000049, 0.00010093000000000255, 0.00010098600000000083, 0.00010102799999999953, 0.00010108299999999834, 0.00010170799999999897, 0.0001016800000000033, 0.00010094399999999865, 0.00010176400000000071, 0.00010162500000000102, 0.00010097200000000126, 0.00010104099999999963, 0.00010094499999999812, 0.00010090300000000288, 0.00010094499999999812, 0.0001016939999999994, 0.00010167999999999983, 0.00010113900000000009, 0.00010093100000000202, 0.0001009159999999995, 0.00010106899999999877, 0.0001011939999999989, 0.00010108300000000181, 0.0001016939999999994, 0.00010180599999999942, 0.0001017359999999981, 0.00010119500000000184, 0.00010173700000000105, 0.00010174999999999768, 0.00010109700000000138, 0.00010166699999999973, 0.00010167999999999983]</msg>
<status status="PASS" starttime="20201112 12:27:02.051" endtime="20201112 12:27:02.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.046" endtime="20201112 12:27:02.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.056" endtime="20201112 12:27:02.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.059" endtime="20201112 12:27:02.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.058" endtime="20201112 12:27:02.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.054" endtime="20201112 12:27:02.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.685" endtime="20201112 12:27:02.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.685" endtime="20201112 12:27:02.080"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.089" endtime="20201112 12:27:02.108"></status>
</kw>
<msg timestamp="20201112 12:27:02.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.087" endtime="20201112 12:27:02.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.110" endtime="20201112 12:27:02.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.112" endtime="20201112 12:27:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.085" endtime="20201112 12:27:02.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.082" endtime="20201112 12:27:02.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.122" endtime="20201112 12:27:02.407"></status>
</kw>
<msg timestamp="20201112 12:27:02.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.120" endtime="20201112 12:27:02.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.411" endtime="20201112 12:27:02.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.419" endtime="20201112 12:27:02.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.118" endtime="20201112 12:27:02.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.116" endtime="20201112 12:27:02.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.426" level="INFO">${RESULT} = [{'time': 0.021684458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030550000000012, 'source_diff': 0.0001030550000000012}, {'time': 0.021792222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.423" endtime="20201112 12:27:02.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.439" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.427" endtime="20201112 12:27:02.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.443" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.442" endtime="20201112 12:27:02.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.446" level="INFO">VALUE: [0.0001030550000000012, 0.00010183299999999909, 0.00010201400000000097, 0.00010191699999999998, 0.0001020420000000001, 0.00010198600000000183, 0.00010263900000000159, 0.00010191699999999998, 0.0001018610000000017, 0.00010183399999999856, 0.00010269499999999987, 0.00010281900000000052, 0.0001020420000000001, 0.00010190200000000094, 0.00010183299999999909, 0.00010187500000000127, 0.00010272199999999954, 0.00010208299999999934, 0.00010272199999999954, 0.00010191699999999998, 0.0001021939999999999, 0.00010277800000000128, 0.00010194499999999912, 0.00010213900000000109, 0.00010190300000000041, 0.00010275000000000215, 0.00010269499999999987, 0.00010274999999999868, 0.00010209799999999838, 0.00010198599999999836, 0.00010218000000000033, 0.00010198599999999836, 0.00010208299999999934, 0.00010190300000000041, 0.00010204100000000063, 0.0001020420000000001, 0.00010211099999999848, 0.0001021939999999999, 0.00010208300000000281, 0.00010216700000000023, 0.00010183399999999856, 0.00010280600000000042, 0.0001020000000000014, 0.00010209700000000238, 0.00010276399999999825, 0.00010276399999999825, 0.00010211099999999848, 0.00010204100000000063, 0.00010209700000000238, 0.00010190300000000041]</msg>
<status status="PASS" starttime="20201112 12:27:02.444" endtime="20201112 12:27:02.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.440" endtime="20201112 12:27:02.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.449" endtime="20201112 12:27:02.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.453" endtime="20201112 12:27:02.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.451" endtime="20201112 12:27:02.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.448" endtime="20201112 12:27:02.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.081" endtime="20201112 12:27:02.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.080" endtime="20201112 12:27:02.473"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.482" endtime="20201112 12:27:02.501"></status>
</kw>
<msg timestamp="20201112 12:27:02.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.480" endtime="20201112 12:27:02.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.503" endtime="20201112 12:27:02.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.505" endtime="20201112 12:27:02.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.478" endtime="20201112 12:27:02.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.476" endtime="20201112 12:27:02.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.515" endtime="20201112 12:27:02.801"></status>
</kw>
<msg timestamp="20201112 12:27:02.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.514" endtime="20201112 12:27:02.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.805" endtime="20201112 12:27:02.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.813" endtime="20201112 12:27:02.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.511" endtime="20201112 12:27:02.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.510" endtime="20201112 12:27:02.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.819" level="INFO">${RESULT} = [{'time': 0.022032361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010402799999999907, 'source_diff': 0.00010402799999999907}, {'time': 0.022141125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.816" endtime="20201112 12:27:02.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.820" endtime="20201112 12:27:02.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.837" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.836" endtime="20201112 12:27:02.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.839" level="INFO">VALUE: [0.00010402799999999907, 0.00010294400000000065, 0.00010302800000000154, 0.00010320800000000047, 0.00010322200000000004, 0.0001031810000000008, 0.00010302699999999859, 0.00010376399999999925, 0.00010280600000000042, 0.00010284799999999913, 0.00010290300000000141, 0.00010308300000000034, 0.00010304100000000163, 0.00010367999999999836, 0.00010293000000000108, 0.0001036940000000014, 0.00010288900000000184, 0.00010306900000000077, 0.00010302800000000154, 0.0001030139999999985, 0.00010377799999999882, 0.0001030139999999985, 0.00010286099999999923, 0.00010379200000000185, 0.00010287500000000227, 0.0001028480000000026, 0.00010283399999999956, 0.00010295800000000022, 0.00010370800000000097, 0.00010291699999999751, 0.00010294400000000065, 0.00010311099999999948, 0.00010313900000000209, 0.00010379199999999839, 0.00010376399999999925, 0.00010295899999999969, 0.0001030420000000011, 0.00010283399999999956, 0.00010316700000000123, 0.00010293100000000055, 0.00010295900000000316, 0.00010365299999999869, 0.0001030139999999985, 0.00010327699999999884, 0.0001030550000000012, 0.0001030550000000012, 0.00010365300000000216, 0.00010366599999999879, 0.00010322200000000004, 0.00010288899999999837]</msg>
<status status="PASS" starttime="20201112 12:27:02.838" endtime="20201112 12:27:02.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.833" endtime="20201112 12:27:02.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.843" endtime="20201112 12:27:02.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.846" endtime="20201112 12:27:02.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.845" endtime="20201112 12:27:02.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.841" endtime="20201112 12:27:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.474" endtime="20201112 12:27:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.474" endtime="20201112 12:27:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.070" endtime="20201112 12:27:02.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.872" endtime="20201112 12:27:02.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.871" endtime="20201112 12:27:02.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.869" endtime="20201112 12:27:02.892"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:23.002" endtime="20201112 12:27:02.893" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.901" endtime="20201112 12:27:02.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.900" endtime="20201112 12:27:02.921"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.935" endtime="20201112 12:27:02.949"></status>
</kw>
<msg timestamp="20201112 12:27:02.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.934" endtime="20201112 12:27:02.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.952" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.950" endtime="20201112 12:27:02.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.955" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:02.953" endtime="20201112 12:27:02.955"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:02.931" endtime="20201112 12:27:02.956"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:02.929" endtime="20201112 12:27:02.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.928" endtime="20201112 12:27:02.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:02.960" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:02.959" endtime="20201112 12:27:02.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.957" endtime="20201112 12:27:02.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.927" endtime="20201112 12:27:02.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.925" endtime="20201112 12:27:02.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.962" endtime="20201112 12:27:02.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.924" endtime="20201112 12:27:02.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.922" endtime="20201112 12:27:02.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.899" endtime="20201112 12:27:02.964"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.975" endtime="20201112 12:27:02.989"></status>
</kw>
<msg timestamp="20201112 12:27:02.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.973" endtime="20201112 12:27:02.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.990" endtime="20201112 12:27:02.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.993" endtime="20201112 12:27:02.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.971" endtime="20201112 12:27:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.968" endtime="20201112 12:27:02.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.003" endtime="20201112 12:27:03.292"></status>
</kw>
<msg timestamp="20201112 12:27:03.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06609725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066102111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.000" endtime="20201112 12:27:03.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06609725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066102111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.297" endtime="20201112 12:27:03.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.305" endtime="20201112 12:27:03.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.998" endtime="20201112 12:27:03.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.996" endtime="20201112 12:27:03.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.311" level="INFO">${RESULT} = [{'time': 0.066102111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000008775e-06, 'source_diff': 4.861000000008775e-06}, {'time': 0.066107667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.308" endtime="20201112 12:27:03.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.325" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.312" endtime="20201112 12:27:03.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.329" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.328" endtime="20201112 12:27:03.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.332" level="INFO">VALUE: [4.861000000008775e-06, 3.6809999999914966e-06, 4.76400000000432e-06, 4.429999999999712e-06, 4.415999999993203e-06, 3.6810000000053744e-06, 4.805000000010495e-06, 4.415999999993203e-06, 4.416999999992677e-06, 4.125000000007595e-06, 4.7499999999978115e-06, 3.6389999999997258e-06, 4.79200000000346e-06, 4.473000000004834e-06, 3.652000000006761e-06, 4.083000000001946e-06, 3.597000000007955e-06, 3.583000000001446e-06, 4.096999999994577e-06, 4.805999999996091e-06, 4.416999999992677e-06, 4.429999999999712e-06, 4.429999999999712e-06, 4.416999999992677e-06, 3.652999999992357e-06, 3.597000000007955e-06, 4.79200000000346e-06, 4.111000000001086e-06, 4.4170000000065546e-06, 3.652999999992357e-06, 3.5840000000009198e-06, 4.083000000001946e-06, 4.111000000001086e-06, 4.097000000008455e-06, 3.665999999999392e-06, 4.082999999988068e-06, 3.596999999994077e-06, 3.583999999987042e-06, 3.596999999994077e-06, 3.665999999999392e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.083000000001946e-06, 3.596999999994077e-06, 3.652999999992357e-06, 3.596999999994077e-06, 3.651999999992883e-06, 4.776999999997478e-06, 4.124999999993717e-06, 3.597000000007955e-06]</msg>
<status status="PASS" starttime="20201112 12:27:03.330" endtime="20201112 12:27:03.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.326" endtime="20201112 12:27:03.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.335" endtime="20201112 12:27:03.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.338" endtime="20201112 12:27:03.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.337" endtime="20201112 12:27:03.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.333" endtime="20201112 12:27:03.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.967" endtime="20201112 12:27:03.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.966" endtime="20201112 12:27:03.359"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.368" endtime="20201112 12:27:03.382"></status>
</kw>
<msg timestamp="20201112 12:27:03.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.366" endtime="20201112 12:27:03.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.384" endtime="20201112 12:27:03.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.386" endtime="20201112 12:27:03.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.364" endtime="20201112 12:27:03.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.362" endtime="20201112 12:27:03.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.395" endtime="20201112 12:27:03.685"></status>
</kw>
<msg timestamp="20201112 12:27:03.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.394" endtime="20201112 12:27:03.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.690" endtime="20201112 12:27:03.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.698" endtime="20201112 12:27:03.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.391" endtime="20201112 12:27:03.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.389" endtime="20201112 12:27:03.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.704" level="INFO">${RESULT} = [{'time': 0.022451597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022458181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.701" endtime="20201112 12:27:03.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.705" endtime="20201112 12:27:03.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.722" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.721" endtime="20201112 12:27:03.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.725" level="INFO">VALUE: [6.110999999999617e-06, 4.737000000001185e-06, 5.277000000001447e-06, 4.735999999998242e-06, 4.707999999999102e-06, 5.332999999999727e-06, 5.6529999999978264e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.6389999999982565e-06, 5.346999999999297e-06, 5.111000000002086e-06, 5.319000000000157e-06, 5.666999999997396e-06, 5.34799999999877e-06, 4.707999999999102e-06, 5.6529999999978264e-06, 5.360999999998867e-06, 5.6529999999978264e-06, 5.680999999996966e-06, 5.347000000002766e-06, 4.7499999999978115e-06, 4.707999999999102e-06, 4.736999999997715e-06, 5.291000000001017e-06, 5.360999999998867e-06, 5.306000000000061e-06, 5.610999999999117e-06, 5.6389999999982565e-06, 5.055999999999811e-06, 5.361000000002336e-06, 5.639000000001726e-06, 4.737000000001185e-06, 4.666999999999866e-06, 5.346999999999297e-06, 5.36200000000181e-06, 5.750000000002281e-06, 5.33400000000267e-06, 5.360999999998867e-06, 4.735999999998242e-06, 5.360999999998867e-06, 5.34800000000224e-06, 4.722000000002141e-06, 4.764000000000851e-06, 4.723000000001615e-06, 4.735999999998242e-06, 5.360999999998867e-06, 4.721999999998672e-06]</msg>
<status status="PASS" starttime="20201112 12:27:03.723" endtime="20201112 12:27:03.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.719" endtime="20201112 12:27:03.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.728" endtime="20201112 12:27:03.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.731" endtime="20201112 12:27:03.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.730" endtime="20201112 12:27:03.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.726" endtime="20201112 12:27:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.360" endtime="20201112 12:27:03.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.360" endtime="20201112 12:27:03.752"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.761" endtime="20201112 12:27:03.774"></status>
</kw>
<msg timestamp="20201112 12:27:03.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.759" endtime="20201112 12:27:03.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.776" endtime="20201112 12:27:03.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.778" endtime="20201112 12:27:03.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.757" endtime="20201112 12:27:03.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.755" endtime="20201112 12:27:03.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.787" endtime="20201112 12:27:04.070"></status>
</kw>
<msg timestamp="20201112 12:27:04.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.786" endtime="20201112 12:27:04.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.074" endtime="20201112 12:27:04.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.082" endtime="20201112 12:27:04.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.783" endtime="20201112 12:27:04.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.781" endtime="20201112 12:27:04.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.088" level="INFO">${RESULT} = [{'time': 0.021887181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.021894847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:04.085" endtime="20201112 12:27:04.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.102" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.089" endtime="20201112 12:27:04.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.106" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.105" endtime="20201112 12:27:04.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.109" level="INFO">VALUE: [7.0419999999987715e-06, 5.971999999999922e-06, 5.971999999999922e-06, 6.583000000000977e-06, 5.653000000001296e-06, 5.680000000000962e-06, 5.930000000001212e-06, 6.583000000000977e-06, 6.5980000000000205e-06, 6.597000000000547e-06, 6.583000000000977e-06, 5.610999999999117e-06, 5.653000000001296e-06, 5.735999999999242e-06, 6.624999999999687e-06, 6.278000000001921e-06, 5.6389999999982565e-06, 6.583000000000977e-06, 5.652000000001822e-06, 6.2229999999996455e-06, 6.2639999999988816e-06, 5.666999999997396e-06, 5.666999999997396e-06, 5.666000000001392e-06, 6.223000000003115e-06, 6.264000000002351e-06, 6.611000000000117e-06, 6.597000000000547e-06, 5.666000000001392e-06, 5.638000000002252e-06, 6.278000000001921e-06, 5.639000000001726e-06, 6.624999999999687e-06, 5.666000000001392e-06, 5.679999999997493e-06, 5.971999999999922e-06, 5.667000000000866e-06, 5.680000000000962e-06, 5.6529999999978264e-06, 5.6529999999978264e-06, 5.666000000001392e-06, 6.584000000000451e-06, 5.611000000002586e-06, 6.278000000001921e-06, 5.9589999999998255e-06, 6.583000000000977e-06, 6.292000000001491e-06, 5.680000000000962e-06, 6.291000000002017e-06, 5.653000000001296e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.107" endtime="20201112 12:27:04.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.103" endtime="20201112 12:27:04.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.112" endtime="20201112 12:27:04.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.116" endtime="20201112 12:27:04.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.114" endtime="20201112 12:27:04.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.111" endtime="20201112 12:27:04.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.753" endtime="20201112 12:27:04.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.753" endtime="20201112 12:27:04.136"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.145" endtime="20201112 12:27:04.159"></status>
</kw>
<msg timestamp="20201112 12:27:04.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.143" endtime="20201112 12:27:04.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.161" endtime="20201112 12:27:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.163" endtime="20201112 12:27:04.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.141" endtime="20201112 12:27:04.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.139" endtime="20201112 12:27:04.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.172" endtime="20201112 12:27:04.456"></status>
</kw>
<msg timestamp="20201112 12:27:04.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.171" endtime="20201112 12:27:04.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.460" endtime="20201112 12:27:04.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.468" endtime="20201112 12:27:04.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.168" endtime="20201112 12:27:04.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.166" endtime="20201112 12:27:04.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.475" level="INFO">${RESULT} = [{'time': 0.021886028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.021894694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.472" endtime="20201112 12:27:04.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.488" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.476" endtime="20201112 12:27:04.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.493" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.492" endtime="20201112 12:27:04.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.495" level="INFO">VALUE: [8.263999999997412e-06, 6.915999999999173e-06, 7.555999999998841e-06, 6.929999999998743e-06, 7.540999999999798e-06, 7.208000000001602e-06, 6.888999999999507e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 6.888999999999507e-06, 7.209000000001076e-06, 7.194000000002032e-06, 6.9169999999986465e-06, 7.2230000000006456e-06, 6.583000000000977e-06, 7.500000000000562e-06, 6.597000000000547e-06, 6.583000000000977e-06, 7.527999999999702e-06, 6.915999999999173e-06, 7.514000000000132e-06, 7.2079999999981326e-06, 6.583000000000977e-06, 6.5969999999970774e-06, 6.888999999999507e-06, 7.514000000000132e-06, 7.235999999997272e-06, 7.5269999999967585e-06, 7.540999999999798e-06, 7.195000000001506e-06, 7.514000000000132e-06, 7.527999999999702e-06, 6.6529999999988265e-06, 6.597000000000547e-06, 7.527999999999702e-06, 6.9029999999990765e-06, 7.2079999999981326e-06, 7.236000000000742e-06, 7.528000000003171e-06, 7.236000000000742e-06, 6.915999999999173e-06, 7.500000000000562e-06, 6.915999999999173e-06, 7.208999999997606e-06, 6.569000000001407e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.138999999999757e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.494" endtime="20201112 12:27:04.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.489" endtime="20201112 12:27:04.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.499" endtime="20201112 12:27:04.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.502" endtime="20201112 12:27:04.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.501" endtime="20201112 12:27:04.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.497" endtime="20201112 12:27:04.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.137" endtime="20201112 12:27:04.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.137" endtime="20201112 12:27:04.523"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.532" endtime="20201112 12:27:04.546"></status>
</kw>
<msg timestamp="20201112 12:27:04.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.530" endtime="20201112 12:27:04.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.547" endtime="20201112 12:27:04.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.550" endtime="20201112 12:27:04.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.527" endtime="20201112 12:27:04.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.525" endtime="20201112 12:27:04.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.559" endtime="20201112 12:27:04.844"></status>
</kw>
<msg timestamp="20201112 12:27:04.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.557" endtime="20201112 12:27:04.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.848" endtime="20201112 12:27:04.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.856" endtime="20201112 12:27:04.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.554" endtime="20201112 12:27:04.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.553" endtime="20201112 12:27:04.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.863" level="INFO">${RESULT} = [{'time': 0.021939431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.021948806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.859" endtime="20201112 12:27:04.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.863" endtime="20201112 12:27:04.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.880" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.879" endtime="20201112 12:27:04.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.883" level="INFO">VALUE: [8.583999999998981e-06, 7.82000000000213e-06, 8.485999999998523e-06, 7.833999999998231e-06, 8.457999999999383e-06, 7.832999999998758e-06, 8.443999999999813e-06, 7.846999999998328e-06, 8.153000000000327e-06, 8.471999999998953e-06, 7.8340000000017e-06, 8.430999999999716e-06, 7.833000000002227e-06, 8.137999999997814e-06, 7.832999999998758e-06, 8.125000000001187e-06, 7.833999999998231e-06, 7.527999999999702e-06, 7.819000000002657e-06, 7.889000000000507e-06, 8.443999999999813e-06, 7.527000000000228e-06, 8.457999999999383e-06, 7.8340000000017e-06, 8.471999999998953e-06, 7.833999999998231e-06, 8.430000000000243e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.513000000001658e-06, 8.473000000001896e-06, 8.443999999999813e-06, 7.514000000000132e-06, 8.458000000002852e-06, 8.499999999998092e-06, 7.514000000000132e-06, 7.819999999998661e-06, 7.832999999998758e-06, 8.125000000001187e-06, 7.860999999997897e-06, 8.500000000001562e-06, 8.139000000000757e-06, 7.846999999998328e-06, 8.125000000001187e-06, 7.832999999998758e-06, 8.417000000000147e-06, 8.457999999999383e-06, 7.527000000000228e-06, 8.443999999999813e-06, 8.528000000000702e-06]</msg>
<status status="PASS" starttime="20201112 12:27:04.881" endtime="20201112 12:27:04.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.877" endtime="20201112 12:27:04.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.886" endtime="20201112 12:27:04.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.890" endtime="20201112 12:27:04.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.888" endtime="20201112 12:27:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.885" endtime="20201112 12:27:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.524" endtime="20201112 12:27:04.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.523" endtime="20201112 12:27:04.910"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.919" endtime="20201112 12:27:04.933"></status>
</kw>
<msg timestamp="20201112 12:27:04.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.917" endtime="20201112 12:27:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.935" endtime="20201112 12:27:04.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.938" endtime="20201112 12:27:04.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.915" endtime="20201112 12:27:04.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.913" endtime="20201112 12:27:04.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.946" endtime="20201112 12:27:05.232"></status>
</kw>
<msg timestamp="20201112 12:27:05.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.945" endtime="20201112 12:27:05.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.236" endtime="20201112 12:27:05.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.244" endtime="20201112 12:27:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.942" endtime="20201112 12:27:05.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.941" endtime="20201112 12:27:05.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.251" level="INFO">${RESULT} = [{'time': 0.021861319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.512999999999189e-06, 'source_diff': 9.512999999999189e-06}, {'time': 0.021872042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:05.248" endtime="20201112 12:27:05.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.252" endtime="20201112 12:27:05.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.314" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.313" endtime="20201112 12:27:05.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.317" level="INFO">VALUE: [9.512999999999189e-06, 9.069999999999911e-06, 8.735999999998773e-06, 9.375000000002437e-06, 8.764000000001382e-06, 9.374999999998967e-06, 9.708000000000633e-06, 8.777000000001478e-06, 9.387999999999064e-06, 8.778000000000952e-06, 9.083000000000008e-06, 8.749999999998342e-06, 9.403000000001577e-06, 8.819000000000188e-06, 8.777999999997482e-06, 9.389000000002007e-06, 8.764000000001382e-06, 9.401999999998634e-06, 8.764000000001382e-06, 9.389000000002007e-06, 9.401999999998634e-06, 8.763999999997912e-06, 9.735999999999773e-06, 9.389000000002007e-06, 9.403000000001577e-06, 9.375000000002437e-06, 9.374999999998967e-06, 9.679999999998024e-06, 9.069999999999911e-06, 9.056000000000342e-06, 8.776999999998009e-06, 9.388999999998537e-06, 9.346999999999828e-06, 9.403000000001577e-06, 9.388999999998537e-06, 8.749999999998342e-06, 9.403000000001577e-06, 8.443999999999813e-06, 8.736000000002242e-06, 8.791999999997052e-06, 9.360999999999398e-06, 8.792000000000522e-06, 9.402999999998107e-06, 8.764000000001382e-06, 9.374999999998967e-06, 8.763999999997912e-06, 9.361000000002867e-06, 9.694000000001063e-06, 9.375000000002437e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201112 12:27:05.315" endtime="20201112 12:27:05.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.311" endtime="20201112 12:27:05.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.320" endtime="20201112 12:27:05.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.324" endtime="20201112 12:27:05.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.322" endtime="20201112 12:27:05.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.319" endtime="20201112 12:27:05.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.911" endtime="20201112 12:27:05.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.911" endtime="20201112 12:27:05.345"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.354" endtime="20201112 12:27:05.368"></status>
</kw>
<msg timestamp="20201112 12:27:05.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.352" endtime="20201112 12:27:05.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.370" endtime="20201112 12:27:05.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.372" endtime="20201112 12:27:05.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.349" endtime="20201112 12:27:05.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.347" endtime="20201112 12:27:05.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.381" endtime="20201112 12:27:05.667"></status>
</kw>
<msg timestamp="20201112 12:27:05.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022927069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.380" endtime="20201112 12:27:05.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022927069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.671" endtime="20201112 12:27:05.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.679" endtime="20201112 12:27:05.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.377" endtime="20201112 12:27:05.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.375" endtime="20201112 12:27:05.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.686" level="INFO">${RESULT} = [{'time': 0.022927069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0124999999999718e-05, 'source_diff': 1.0124999999999718e-05}, {'time': 0.022938861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.683" endtime="20201112 12:27:05.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.699" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.687" endtime="20201112 12:27:05.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.704" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.703" endtime="20201112 12:27:05.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.706" level="INFO">VALUE: [1.0124999999999718e-05, 1.0319000000001688e-05, 9.681000000000967e-06, 1.0666000000002923e-05, 9.694000000001063e-06, 9.681000000000967e-06, 9.679999999998024e-06, 1.0305000000002118e-05, 1.0028000000002202e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 9.694000000001063e-06, 1.0319000000001688e-05, 1.0638999999999788e-05, 9.722000000000203e-06, 9.694000000001063e-06, 9.999999999999593e-06, 1.0318999999998218e-05, 9.959000000000356e-06, 1.0611000000000648e-05, 9.695000000000537e-06, 1.0304999999998649e-05, 1.0305000000002118e-05, 9.722000000000203e-06, 9.694000000001063e-06, 9.639000000002257e-06, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0305999999998122e-05, 1.0625000000000218e-05, 9.694000000001063e-06, 1.0319000000001688e-05, 9.681000000000967e-06, 9.695000000000537e-06, 1.0027999999998732e-05, 9.694000000001063e-06, 1.0320000000001162e-05, 9.694000000001063e-06, 9.736999999999246e-06, 1.0388999999999537e-05, 1.0638999999999788e-05, 1.0319000000001688e-05, 1.0304999999998649e-05, 9.693999999997593e-06, 1.0389000000003007e-05, 9.639000000002257e-06, 1.0625000000000218e-05, 9.694000000001063e-06, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.705" endtime="20201112 12:27:05.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.700" endtime="20201112 12:27:05.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.716" endtime="20201112 12:27:05.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.720" endtime="20201112 12:27:05.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.718" endtime="20201112 12:27:05.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.714" endtime="20201112 12:27:05.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.345" endtime="20201112 12:27:05.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.345" endtime="20201112 12:27:05.740"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.750" endtime="20201112 12:27:05.764"></status>
</kw>
<msg timestamp="20201112 12:27:05.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.747" endtime="20201112 12:27:05.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.765" endtime="20201112 12:27:05.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.768" endtime="20201112 12:27:05.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.745" endtime="20201112 12:27:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.743" endtime="20201112 12:27:05.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.777" endtime="20201112 12:27:06.060"></status>
</kw>
<msg timestamp="20201112 12:27:06.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:05.775" endtime="20201112 12:27:06.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:06.064" endtime="20201112 12:27:06.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.072" endtime="20201112 12:27:06.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.773" endtime="20201112 12:27:06.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.771" endtime="20201112 12:27:06.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.079" level="INFO">${RESULT} = [{'time': 0.0226085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1347000000001828e-05, 'source_diff': 1.1347000000001828e-05}, {'time': 0.022621139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.076" endtime="20201112 12:27:06.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.092" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.080" endtime="20201112 12:27:06.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.097" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.096" endtime="20201112 12:27:06.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.099" level="INFO">VALUE: [1.1347000000001828e-05, 1.0930999999998747e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1250000000000843e-05, 1.1582999999999039e-05, 1.0611000000000648e-05, 1.0916999999999177e-05, 1.1556000000002842e-05, 1.1236999999997277e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.1250000000000843e-05, 1.1555999999999372e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.1236000000001273e-05, 1.1541999999999802e-05, 1.1236000000001273e-05, 1.1223000000001176e-05, 1.0624999999996748e-05, 1.0638999999999788e-05, 1.1000000000000593e-05, 1.0930000000002743e-05, 1.1568999999999469e-05, 1.0915999999999704e-05, 1.1250000000000843e-05, 1.1584000000001982e-05, 1.0972000000001453e-05, 1.0943999999998844e-05, 1.1541999999999802e-05, 1.0930999999998747e-05, 1.0943999999998844e-05, 1.0930999999998747e-05, 1.0638999999999788e-05, 1.0929999999999274e-05, 1.1236000000001273e-05, 1.0625000000000218e-05, 1.1555999999999372e-05, 1.1556000000002842e-05, 1.1569999999998942e-05, 1.1569000000002938e-05, 1.0667000000002397e-05, 1.1250000000000843e-05, 1.0929999999999274e-05, 1.0611000000000648e-05, 1.1541999999999802e-05, 1.1236000000001273e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.098" endtime="20201112 12:27:06.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.093" endtime="20201112 12:27:06.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.103" endtime="20201112 12:27:06.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.106" endtime="20201112 12:27:06.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.105" endtime="20201112 12:27:06.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.101" endtime="20201112 12:27:06.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.741" endtime="20201112 12:27:06.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.741" endtime="20201112 12:27:06.127"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.135" endtime="20201112 12:27:06.151"></status>
</kw>
<msg timestamp="20201112 12:27:06.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.134" endtime="20201112 12:27:06.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.153" endtime="20201112 12:27:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.155" endtime="20201112 12:27:06.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.131" endtime="20201112 12:27:06.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.129" endtime="20201112 12:27:06.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.164" endtime="20201112 12:27:06.448"></status>
</kw>
<msg timestamp="20201112 12:27:06.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.163" endtime="20201112 12:27:06.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.452" endtime="20201112 12:27:06.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.462" endtime="20201112 12:27:06.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.160" endtime="20201112 12:27:06.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.158" endtime="20201112 12:27:06.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.469" level="INFO">${RESULT} = [{'time': 0.022631292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.022645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:06.466" endtime="20201112 12:27:06.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.483" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.470" endtime="20201112 12:27:06.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.487" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.486" endtime="20201112 12:27:06.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.490" level="INFO">VALUE: [1.2278000000000983e-05, 1.1846999999998858e-05, 1.2528000000001233e-05, 1.2471999999999483e-05, 1.1583999999998512e-05, 1.1917000000000177e-05, 1.2165999999997484e-05, 1.2417000000000677e-05, 1.2499999999998623e-05, 1.1555999999999372e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.2485999999999053e-05, 1.2180999999999997e-05, 1.2471999999999483e-05, 1.1555999999999372e-05, 1.1847000000002328e-05, 1.1874999999997998e-05, 1.2500000000002093e-05, 1.2487000000001997e-05, 1.2430000000000774e-05, 1.2471999999999483e-05, 1.1846999999998858e-05, 1.2542000000000803e-05, 1.2473000000002427e-05, 1.2166000000000954e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2487000000001997e-05, 1.1568999999999469e-05, 1.1612000000001121e-05, 1.1887999999998095e-05, 1.2429999999997304e-05, 1.2111999999998152e-05, 1.1819999999999192e-05, 1.1554999999999899e-05, 1.1860999999998428e-05, 1.2472999999998957e-05, 1.2458999999999387e-05, 1.1568999999999469e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.2486000000002523e-05, 1.1541999999999802e-05, 1.2499999999998623e-05, 1.1847000000002328e-05, 1.2473000000002427e-05, 1.1832999999999289e-05, 1.2556000000000372e-05, 1.2471999999999483e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.488" endtime="20201112 12:27:06.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.483" endtime="20201112 12:27:06.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.493" endtime="20201112 12:27:06.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.497" endtime="20201112 12:27:06.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.495" endtime="20201112 12:27:06.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.492" endtime="20201112 12:27:06.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.128" endtime="20201112 12:27:06.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.127" endtime="20201112 12:27:06.518"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.526" endtime="20201112 12:27:06.541"></status>
</kw>
<msg timestamp="20201112 12:27:06.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.525" endtime="20201112 12:27:06.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.543" endtime="20201112 12:27:06.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.545" endtime="20201112 12:27:06.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.522" endtime="20201112 12:27:06.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.520" endtime="20201112 12:27:06.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.554" endtime="20201112 12:27:06.841"></status>
</kw>
<msg timestamp="20201112 12:27:06.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.553" endtime="20201112 12:27:06.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.845" endtime="20201112 12:27:06.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.854" endtime="20201112 12:27:06.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.550" endtime="20201112 12:27:06.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.549" endtime="20201112 12:27:06.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.860" level="INFO">${RESULT} = [{'time': 0.022080139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3860999999996959e-05, 'source_diff': 1.3860999999996959e-05}, {'time': 0.022094806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.857" endtime="20201112 12:27:06.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.874" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.861" endtime="20201112 12:27:06.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.879" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.878" endtime="20201112 12:27:06.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.881" level="INFO">VALUE: [1.3860999999996959e-05, 1.2792000000001053e-05, 1.3401999999999165e-05, 1.3402999999998638e-05, 1.3445000000000817e-05, 1.2486000000002523e-05, 1.2471999999999483e-05, 1.3417000000001678e-05, 1.2806000000000622e-05, 1.3722000000000734e-05, 1.3110999999999678e-05, 1.280499999999768e-05, 1.3415999999998734e-05, 1.3333000000000789e-05, 1.3387999999999595e-05, 1.2805000000001149e-05, 1.2806000000000622e-05, 1.2889000000002038e-05, 1.279099999999811e-05, 1.277699999999854e-05, 1.3360999999999928e-05, 1.279099999999811e-05, 1.2806000000000622e-05, 1.3402999999998638e-05, 1.2721999999999734e-05, 1.2792000000001053e-05, 1.2430000000000774e-05, 1.2805000000001149e-05, 1.279099999999811e-05, 1.2486000000002523e-05, 1.3429999999998304e-05, 1.3417000000001678e-05, 1.3430999999997778e-05, 1.2791999999997583e-05, 1.3388999999999068e-05, 1.3429999999998304e-05, 1.2791000000001579e-05, 1.2805000000001149e-05, 1.2485999999999053e-05, 1.2792000000001053e-05, 1.2471999999999483e-05, 1.3402999999998638e-05, 1.2806000000000622e-05, 1.2792000000001053e-05, 1.3041999999997833e-05, 1.2805000000001149e-05, 1.2791000000001579e-05, 1.3417000000001678e-05, 1.3389000000002538e-05, 1.2805000000001149e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.880" endtime="20201112 12:27:06.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.875" endtime="20201112 12:27:06.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.885" endtime="20201112 12:27:06.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.888" endtime="20201112 12:27:06.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.887" endtime="20201112 12:27:06.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.883" endtime="20201112 12:27:06.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.519" endtime="20201112 12:27:06.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.518" endtime="20201112 12:27:06.909"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.918" endtime="20201112 12:27:06.932"></status>
</kw>
<msg timestamp="20201112 12:27:06.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.916" endtime="20201112 12:27:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.934" endtime="20201112 12:27:06.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.936" endtime="20201112 12:27:06.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.914" endtime="20201112 12:27:06.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.911" endtime="20201112 12:27:06.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.946" endtime="20201112 12:27:07.230"></status>
</kw>
<msg timestamp="20201112 12:27:07.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.944" endtime="20201112 12:27:07.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.235" endtime="20201112 12:27:07.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.243" endtime="20201112 12:27:07.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.942" endtime="20201112 12:27:07.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.940" endtime="20201112 12:27:07.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.249" level="INFO">${RESULT} = [{'time': 0.021869333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.021885083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:07.246" endtime="20201112 12:27:07.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.263" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.250" endtime="20201112 12:27:07.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.267" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.266" endtime="20201112 12:27:07.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.270" level="INFO">VALUE: [1.479100000000011e-05, 1.3957999999997944e-05, 1.4361000000000929e-05, 1.3709000000000637e-05, 1.4027999999999263e-05, 1.4028000000002733e-05, 1.3722000000000734e-05, 1.4361000000000929e-05, 1.3722000000000734e-05, 1.3708000000001164e-05, 1.3736000000000304e-05, 1.4333999999997793e-05, 1.3721999999997264e-05, 1.3722000000000734e-05, 1.4402999999999638e-05, 1.3749999999999873e-05, 1.3736000000000304e-05, 1.431899999999875e-05, 1.4070000000001442e-05, 1.4362000000000402e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.4639000000000318e-05, 1.404099999999936e-05, 1.4111000000000679e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.4389000000000068e-05, 1.3736000000000304e-05, 1.4028000000002733e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.4361000000000929e-05, 1.4319000000002219e-05, 1.434699999999789e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.4347000000001359e-05, 1.3736000000000304e-05, 1.4347000000001359e-05, 1.4665999999999985e-05, 1.4348000000000832e-05, 1.4666999999999458e-05, 1.3667000000001928e-05, 1.3708000000001164e-05, 1.4042000000002303e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4361000000000929e-05, 1.4041999999998833e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.268" endtime="20201112 12:27:07.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.264" endtime="20201112 12:27:07.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.273" endtime="20201112 12:27:07.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.277" endtime="20201112 12:27:07.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.275" endtime="20201112 12:27:07.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.272" endtime="20201112 12:27:07.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.910" endtime="20201112 12:27:07.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.909" endtime="20201112 12:27:07.297"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.306" endtime="20201112 12:27:07.321"></status>
</kw>
<msg timestamp="20201112 12:27:07.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.304" endtime="20201112 12:27:07.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.322" endtime="20201112 12:27:07.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.325" endtime="20201112 12:27:07.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.302" endtime="20201112 12:27:07.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.300" endtime="20201112 12:27:07.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.336" endtime="20201112 12:27:07.621"></status>
</kw>
<msg timestamp="20201112 12:27:07.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.334" endtime="20201112 12:27:07.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.625" endtime="20201112 12:27:07.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.633" endtime="20201112 12:27:07.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.331" endtime="20201112 12:27:07.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.330" endtime="20201112 12:27:07.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.640" level="INFO">${RESULT} = [{'time': 0.021850694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5388000000001595e-05, 'source_diff': 1.5388000000001595e-05}, {'time': 0.021867306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.636" endtime="20201112 12:27:07.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.653" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.641" endtime="20201112 12:27:07.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.658" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.657" endtime="20201112 12:27:07.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.660" level="INFO">VALUE: [1.5388000000001595e-05, 1.5292000000000083e-05, 1.4652999999999888e-05, 1.5264000000000943e-05, 1.5583999999999043e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.4985999999998084e-05, 1.5542000000000333e-05, 1.5222000000002234e-05, 1.5569e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.4665999999999985e-05, 1.4957999999998944e-05, 1.5542000000000333e-05, 1.4652999999999888e-05, 1.4679999999999555e-05, 1.4958999999998418e-05, 1.529099999999714e-05, 1.4985999999998084e-05, 1.5263999999997474e-05, 1.4652999999999888e-05, 1.4721999999998264e-05, 1.561099999999871e-05, 1.4639000000000318e-05, 1.4957999999998944e-05, 1.566700000000046e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.4652000000000415e-05, 1.4679999999999555e-05, 1.4722000000001734e-05, 1.4972000000001984e-05, 1.4944000000002844e-05, 1.5292000000000083e-05, 1.5555999999999903e-05, 1.5278000000000513e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.5278000000000513e-05, 1.4957999999998944e-05, 1.5292000000000083e-05, 1.4652999999999888e-05, 1.561099999999871e-05, 1.527699999999757e-05, 1.558299999999957e-05, 1.4665999999999985e-05, 1.5278000000000513e-05, 1.4958999999998418e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.659" endtime="20201112 12:27:07.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.654" endtime="20201112 12:27:07.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.664" endtime="20201112 12:27:07.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.667" endtime="20201112 12:27:07.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.665" endtime="20201112 12:27:07.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.662" endtime="20201112 12:27:07.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.298" endtime="20201112 12:27:07.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.298" endtime="20201112 12:27:07.688"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.696" endtime="20201112 12:27:07.711"></status>
</kw>
<msg timestamp="20201112 12:27:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.695" endtime="20201112 12:27:07.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.713" endtime="20201112 12:27:07.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.715" endtime="20201112 12:27:07.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.692" endtime="20201112 12:27:07.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.690" endtime="20201112 12:27:07.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.725" endtime="20201112 12:27:08.010"></status>
</kw>
<msg timestamp="20201112 12:27:08.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.723" endtime="20201112 12:27:08.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.014" endtime="20201112 12:27:08.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.022" endtime="20201112 12:27:08.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.721" endtime="20201112 12:27:08.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.719" endtime="20201112 12:27:08.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.029" level="INFO">${RESULT} = [{'time': 0.021834389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6957999999997475e-05, 'source_diff': 1.6957999999997475e-05}, {'time': 0.021852056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.026" endtime="20201112 12:27:08.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.030" endtime="20201112 12:27:08.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.047" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.046" endtime="20201112 12:27:08.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.049" level="INFO">VALUE: [1.6957999999997475e-05, 1.6223000000002707e-05, 1.566700000000046e-05, 1.5584000000002513e-05, 1.587499999999853e-05, 1.6499999999999154e-05, 1.6541999999997864e-05, 1.6195000000000098e-05, 1.6514000000002194e-05, 1.5901999999998195e-05, 1.6514000000002194e-05, 1.58889999999981e-05, 1.6195000000000098e-05, 1.6485999999999584e-05, 1.558299999999957e-05, 1.6527999999998294e-05, 1.6208999999999668e-05, 1.5916000000001235e-05, 1.6528000000001764e-05, 1.6208000000000194e-05, 1.6514000000002194e-05, 1.58889999999981e-05, 1.5847999999998863e-05, 1.6264000000001944e-05, 1.5915999999997765e-05, 1.6514000000002194e-05, 1.58889999999981e-05, 1.6250000000002374e-05, 1.565299999999742e-05, 1.6570000000000473e-05, 1.6514000000002194e-05, 1.58889999999981e-05, 1.6249999999998904e-05, 1.559699999999914e-05, 1.6445000000000348e-05, 1.5875000000002e-05, 1.6513999999998724e-05, 1.6181000000000528e-05, 1.581900000000025e-05, 1.6208999999999668e-05, 1.651299999999925e-05, 1.554100000000086e-05, 1.651300000000272e-05, 1.559699999999914e-05, 1.654100000000186e-05, 1.590299999999767e-05, 1.5944999999999848e-05, 1.6195000000000098e-05, 1.6528000000001764e-05, 1.6528000000001764e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.048" endtime="20201112 12:27:08.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.043" endtime="20201112 12:27:08.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.053" endtime="20201112 12:27:08.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.056" endtime="20201112 12:27:08.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.055" endtime="20201112 12:27:08.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.051" endtime="20201112 12:27:08.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.689" endtime="20201112 12:27:08.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.688" endtime="20201112 12:27:08.077"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.086" endtime="20201112 12:27:08.101"></status>
</kw>
<msg timestamp="20201112 12:27:08.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.084" endtime="20201112 12:27:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.102" endtime="20201112 12:27:08.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.105" endtime="20201112 12:27:08.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.082" endtime="20201112 12:27:08.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.080" endtime="20201112 12:27:08.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.114" endtime="20201112 12:27:08.400"></status>
</kw>
<msg timestamp="20201112 12:27:08.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.113" endtime="20201112 12:27:08.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.404" endtime="20201112 12:27:08.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.412" endtime="20201112 12:27:08.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.110" endtime="20201112 12:27:08.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.109" endtime="20201112 12:27:08.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.419" level="INFO">${RESULT} = [{'time': 0.021956875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7277999999999044e-05, 'source_diff': 1.7277999999999044e-05}, {'time': 0.021975708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.416" endtime="20201112 12:27:08.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.433" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.420" endtime="20201112 12:27:08.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.438" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.437" endtime="20201112 12:27:08.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.440" level="INFO">VALUE: [1.7277999999999044e-05, 1.712499999999978e-05, 1.651299999999925e-05, 1.6834000000000293e-05, 1.6834000000000293e-05, 1.713900000000282e-05, 1.683299999999735e-05, 1.680500000000168e-05, 1.690300000000214e-05, 1.713899999999935e-05, 1.690299999999867e-05, 1.6527999999998294e-05, 1.680499999999821e-05, 1.7459000000000918e-05, 1.7457999999997975e-05, 1.744500000000135e-05, 1.745899999999745e-05, 1.7443999999998405e-05, 1.743099999999831e-05, 1.713899999999935e-05, 1.715300000000239e-05, 1.690300000000214e-05, 1.6528000000001764e-05, 1.737500000000003e-05, 1.6834000000000293e-05, 1.7444000000001875e-05, 1.7458000000001445e-05, 1.713899999999935e-05, 1.684700000000039e-05, 1.712499999999978e-05, 1.7458000000001445e-05, 1.6542000000001333e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.7193999999998155e-05, 1.7513999999999724e-05, 1.7457999999997975e-05, 1.744499999999788e-05, 1.6527999999998294e-05, 1.6820000000000723e-05, 1.6834000000000293e-05, 1.7486000000000584e-05, 1.744500000000135e-05, 1.7458000000001445e-05, 1.7415999999999265e-05, 1.743100000000178e-05, 1.690299999999867e-05, 1.713900000000282e-05, 1.6834000000000293e-05, 1.6528000000001764e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.439" endtime="20201112 12:27:08.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.434" endtime="20201112 12:27:08.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.444" endtime="20201112 12:27:08.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.447" endtime="20201112 12:27:08.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.446" endtime="20201112 12:27:08.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.442" endtime="20201112 12:27:08.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.078" endtime="20201112 12:27:08.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.078" endtime="20201112 12:27:08.468"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.477" endtime="20201112 12:27:08.492"></status>
</kw>
<msg timestamp="20201112 12:27:08.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.475" endtime="20201112 12:27:08.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.493" endtime="20201112 12:27:08.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.496" endtime="20201112 12:27:08.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.473" endtime="20201112 12:27:08.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.471" endtime="20201112 12:27:08.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.506" endtime="20201112 12:27:08.791"></status>
</kw>
<msg timestamp="20201112 12:27:08.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.504" endtime="20201112 12:27:08.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.795" endtime="20201112 12:27:08.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.803" endtime="20201112 12:27:08.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.502" endtime="20201112 12:27:08.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.500" endtime="20201112 12:27:08.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.810" level="INFO">${RESULT} = [{'time': 0.021931569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8486000000001584e-05, 'source_diff': 1.8486000000001584e-05}, {'time': 0.021951389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.807" endtime="20201112 12:27:08.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.811" endtime="20201112 12:27:08.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.828" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.827" endtime="20201112 12:27:08.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.830" level="INFO">VALUE: [1.8486000000001584e-05, 1.83890000000006e-05, 1.838899999999713e-05, 1.7486000000000584e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.7764000000003444e-05, 1.837500000000103e-05, 1.7791999999999114e-05, 1.7750000000000404e-05, 1.841699999999974e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.779099999999964e-05, 1.837500000000103e-05, 1.7459000000000918e-05, 1.83890000000006e-05, 1.7777999999999544e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.8070000000001973e-05, 1.836099999999799e-05, 1.7791999999999114e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7806000000002153e-05, 1.7763999999999974e-05, 1.7722000000001265e-05, 1.780500000000268e-05, 1.768099999999856e-05, 1.7750000000000404e-05, 1.8707999999999225e-05, 1.8362000000000933e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.837500000000103e-05, 1.7736000000000834e-05, 1.7749999999996935e-05, 1.8362000000000933e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.83890000000006e-05, 1.8680000000000085e-05, 1.837500000000103e-05, 1.8680000000000085e-05, 1.83890000000006e-05, 1.843100000000278e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.829" endtime="20201112 12:27:08.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.824" endtime="20201112 12:27:08.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.834" endtime="20201112 12:27:08.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.837" endtime="20201112 12:27:08.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.836" endtime="20201112 12:27:08.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.832" endtime="20201112 12:27:08.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.469" endtime="20201112 12:27:08.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.468" endtime="20201112 12:27:08.858"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.866" endtime="20201112 12:27:08.881"></status>
</kw>
<msg timestamp="20201112 12:27:08.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.865" endtime="20201112 12:27:08.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.883" endtime="20201112 12:27:08.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.885" endtime="20201112 12:27:08.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.862" endtime="20201112 12:27:08.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.860" endtime="20201112 12:27:08.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.895" endtime="20201112 12:27:09.180"></status>
</kw>
<msg timestamp="20201112 12:27:09.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.893" endtime="20201112 12:27:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.184" endtime="20201112 12:27:09.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.192" endtime="20201112 12:27:09.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.891" endtime="20201112 12:27:09.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.889" endtime="20201112 12:27:09.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.199" level="INFO">${RESULT} = [{'time': 0.022000917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0055999999997465e-05, 'source_diff': 2.0055999999997465e-05}, {'time': 0.022021542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:09.196" endtime="20201112 12:27:09.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.200" endtime="20201112 12:27:09.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.217" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.216" endtime="20201112 12:27:09.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.219" level="INFO">VALUE: [2.0055999999997465e-05, 1.9292000000000614e-05, 1.959699999999967e-05, 1.933299999999985e-05, 1.8722000000002265e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.8735999999998365e-05, 1.9000000000001654e-05, 1.9319999999999754e-05, 1.934699999999942e-05, 1.9306000000000184e-05, 1.9264000000001474e-05, 1.8749999999997935e-05, 1.869499999999913e-05, 1.8680000000000085e-05, 1.86950000000026e-05, 1.9028000000000794e-05, 1.962499999999881e-05, 1.9306000000000184e-05, 1.8985999999998615e-05, 1.868099999999956e-05, 1.9637999999998906e-05, 1.963899999999838e-05, 1.8708000000002695e-05, 1.931900000000028e-05, 1.8999999999998185e-05, 1.869499999999913e-05, 1.9652000000001946e-05, 1.961099999999924e-05, 1.869499999999913e-05, 1.9000000000001654e-05, 1.9306000000000184e-05, 1.869499999999913e-05, 1.962499999999881e-05, 1.865300000000042e-05, 1.8693999999999655e-05, 1.8985999999998615e-05, 1.936100000000246e-05, 1.869499999999913e-05, 1.868099999999956e-05, 1.930500000000071e-05, 1.868099999999956e-05, 1.8693999999999655e-05, 1.868099999999956e-05, 1.869499999999913e-05, 1.8999999999998185e-05, 1.963899999999838e-05, 1.869499999999913e-05, 1.9292000000000614e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.218" endtime="20201112 12:27:09.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.213" endtime="20201112 12:27:09.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.223" endtime="20201112 12:27:09.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.226" endtime="20201112 12:27:09.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.225" endtime="20201112 12:27:09.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.221" endtime="20201112 12:27:09.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.859" endtime="20201112 12:27:09.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.858" endtime="20201112 12:27:09.247"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.255" endtime="20201112 12:27:09.271"></status>
</kw>
<msg timestamp="20201112 12:27:09.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.254" endtime="20201112 12:27:09.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.272" endtime="20201112 12:27:09.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.275" endtime="20201112 12:27:09.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.251" endtime="20201112 12:27:09.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.249" endtime="20201112 12:27:09.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.284" endtime="20201112 12:27:09.571"></status>
</kw>
<msg timestamp="20201112 12:27:09.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.283" endtime="20201112 12:27:09.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:09.575" endtime="20201112 12:27:09.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.583" endtime="20201112 12:27:09.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.280" endtime="20201112 12:27:09.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.279" endtime="20201112 12:27:09.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.590" level="INFO">${RESULT} = [{'time': 0.02223875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.066700000000199e-05, 'source_diff': 2.066700000000199e-05}, {'time': 0.022260708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:09.587" endtime="20201112 12:27:09.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.591" endtime="20201112 12:27:09.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.608" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.607" endtime="20201112 12:27:09.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.610" level="INFO">VALUE: [2.066700000000199e-05, 2.056900000000153e-05, 1.9570000000000004e-05, 1.962500000000228e-05, 1.963900000000185e-05, 2.0249999999999435e-05, 1.993100000000081e-05, 2.0527999999998825e-05, 2.056900000000153e-05, 1.95830000000001e-05, 1.963899999999838e-05, 1.962500000000228e-05, 1.962500000000228e-05, 1.9929999999997866e-05, 1.959699999999967e-05, 2.0541999999998395e-05, 2.054100000000239e-05, 1.961099999999924e-05, 2.0263999999999005e-05, 2.054099999999892e-05, 1.993099999999734e-05, 1.9915999999998296e-05, 2.0542000000001864e-05, 2.0249999999999435e-05, 2.054099999999892e-05, 2.0250000000002905e-05, 1.994500000000038e-05, 1.956900000000053e-05, 1.993100000000081e-05, 2.022299999999977e-05, 2.054099999999892e-05, 2.0555999999997965e-05, 2.0222000000000295e-05, 1.959699999999967e-05, 1.962499999999881e-05, 2.055499999999849e-05, 1.963899999999838e-05, 1.9930000000001336e-05, 1.962499999999881e-05, 1.962500000000228e-05, 1.959699999999967e-05, 1.961100000000271e-05, 2.0556000000001434e-05, 2.0528000000002294e-05, 2.0541999999998395e-05, 2.0222000000000295e-05, 2.0541999999998395e-05, 1.962499999999881e-05, 1.962499999999881e-05, 1.961099999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.609" endtime="20201112 12:27:09.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.604" endtime="20201112 12:27:09.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.614" endtime="20201112 12:27:09.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.617" endtime="20201112 12:27:09.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.616" endtime="20201112 12:27:09.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.612" endtime="20201112 12:27:09.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.248" endtime="20201112 12:27:09.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.247" endtime="20201112 12:27:09.638"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.647" endtime="20201112 12:27:09.662"></status>
</kw>
<msg timestamp="20201112 12:27:09.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.645" endtime="20201112 12:27:09.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.663" endtime="20201112 12:27:09.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.666" endtime="20201112 12:27:09.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.642" endtime="20201112 12:27:09.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.640" endtime="20201112 12:27:09.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.675" endtime="20201112 12:27:09.960"></status>
</kw>
<msg timestamp="20201112 12:27:09.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.674" endtime="20201112 12:27:09.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.965" endtime="20201112 12:27:09.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.973" endtime="20201112 12:27:09.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.671" endtime="20201112 12:27:09.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.670" endtime="20201112 12:27:09.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.980" level="INFO">${RESULT} = [{'time': 0.021929958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.156899999999906e-05, 'source_diff': 2.156899999999906e-05}, {'time': 0.021952653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:09.976" endtime="20201112 12:27:09.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.994" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.981" endtime="20201112 12:27:09.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.999" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.998" endtime="20201112 12:27:09.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.001" level="INFO">VALUE: [2.156899999999906e-05, 2.118099999999859e-05, 2.1499999999997216e-05, 2.1472000000001545e-05, 2.0527999999998825e-05, 2.0791999999998645e-05, 2.1443999999998936e-05, 2.1500000000000685e-05, 2.084700000000092e-05, 2.116699999999902e-05, 2.087500000000006e-05, 2.0472000000000545e-05, 2.1486000000001115e-05, 2.055499999999849e-05, 2.087500000000006e-05, 2.083300000000135e-05, 2.056900000000153e-05, 2.1514000000000255e-05, 2.1471999999998076e-05, 2.1471999999998076e-05, 2.0542000000001864e-05, 2.1485999999997646e-05, 2.086100000000049e-05, 2.1472000000001545e-05, 2.1527999999999825e-05, 2.1471999999998076e-05, 2.086100000000049e-05, 2.1500000000000685e-05, 2.116699999999902e-05, 2.086100000000049e-05, 2.086100000000049e-05, 2.087500000000006e-05, 2.1486000000001115e-05, 2.087500000000006e-05, 2.086100000000049e-05, 2.1179999999999116e-05, 2.1486000000001115e-05, 2.055499999999849e-05, 2.1486000000001115e-05, 2.0570000000001004e-05, 2.086100000000049e-05, 2.1486000000001115e-05, 2.0542000000001864e-05, 2.1499999999997216e-05, 2.1472000000001545e-05, 2.1471999999998076e-05, 2.1472000000001545e-05, 2.0486000000000115e-05, 2.1471999999998076e-05, 2.1486000000001115e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.000" endtime="20201112 12:27:10.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.995" endtime="20201112 12:27:10.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.005" endtime="20201112 12:27:10.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.008" endtime="20201112 12:27:10.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.006" endtime="20201112 12:27:10.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.003" endtime="20201112 12:27:10.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.639" endtime="20201112 12:27:10.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.638" endtime="20201112 12:27:10.029"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.037" endtime="20201112 12:27:10.052"></status>
</kw>
<msg timestamp="20201112 12:27:10.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.036" endtime="20201112 12:27:10.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.054" endtime="20201112 12:27:10.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.056" endtime="20201112 12:27:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.033" endtime="20201112 12:27:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.031" endtime="20201112 12:27:10.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.066" endtime="20201112 12:27:10.351"></status>
</kw>
<msg timestamp="20201112 12:27:10.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:10.065" endtime="20201112 12:27:10.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:10.355" endtime="20201112 12:27:10.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.363" endtime="20201112 12:27:10.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.062" endtime="20201112 12:27:10.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.060" endtime="20201112 12:27:10.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.370" level="INFO">${RESULT} = [{'time': 0.022019861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.286100000000249e-05, 'source_diff': 2.286100000000249e-05}, {'time': 0.022043514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.366" endtime="20201112 12:27:10.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.371" endtime="20201112 12:27:10.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.388" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.387" endtime="20201112 12:27:10.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.390" level="INFO">VALUE: [2.286100000000249e-05, 2.20969999999987e-05, 2.179100000000017e-05, 2.1806000000002684e-05, 2.1805999999999215e-05, 2.24030000000007e-05, 2.1862000000000964e-05, 2.2084000000002074e-05, 2.184700000000192e-05, 2.180499999999974e-05, 2.1486000000001115e-05, 2.241700000000027e-05, 2.241700000000027e-05, 2.2415999999997327e-05, 2.1471999999998076e-05, 2.2416000000000796e-05, 2.1792000000003114e-05, 2.1791999999999645e-05, 2.2402000000001226e-05, 2.180499999999974e-05, 2.24030000000007e-05, 2.2472000000002545e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.179100000000017e-05, 2.218099999999959e-05, 2.1791999999999645e-05, 2.181900000000278e-05, 2.2388000000001657e-05, 2.2402000000001226e-05, 2.1805999999999215e-05, 2.241700000000027e-05, 2.2401999999997757e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.184700000000192e-05, 2.241700000000027e-05, 2.1792000000003114e-05, 2.24030000000007e-05, 2.181899999999931e-05, 2.211100000000174e-05, 2.240299999999723e-05, 2.1791999999999645e-05, 2.241700000000027e-05, 2.2416000000000796e-05, 2.2471999999999076e-05, 2.2415999999997327e-05, 2.241700000000027e-05, 2.2471999999999076e-05, 2.240299999999723e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.389" endtime="20201112 12:27:10.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.384" endtime="20201112 12:27:10.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.394" endtime="20201112 12:27:10.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.397" endtime="20201112 12:27:10.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.396" endtime="20201112 12:27:10.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.392" endtime="20201112 12:27:10.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.030" endtime="20201112 12:27:10.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.029" endtime="20201112 12:27:10.418"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.427" endtime="20201112 12:27:10.442"></status>
</kw>
<msg timestamp="20201112 12:27:10.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.425" endtime="20201112 12:27:10.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.443" endtime="20201112 12:27:10.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.446" endtime="20201112 12:27:10.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.423" endtime="20201112 12:27:10.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.421" endtime="20201112 12:27:10.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.456" endtime="20201112 12:27:10.740"></status>
</kw>
<msg timestamp="20201112 12:27:10.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.454" endtime="20201112 12:27:10.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.744" endtime="20201112 12:27:10.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.752" endtime="20201112 12:27:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.451" endtime="20201112 12:27:10.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.450" endtime="20201112 12:27:10.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.759" level="INFO">${RESULT} = [{'time': 0.021929889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3764000000002505e-05, 'source_diff': 2.3764000000002505e-05}, {'time': 0.021954472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:10.755" endtime="20201112 12:27:10.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.760" endtime="20201112 12:27:10.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.777" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.776" endtime="20201112 12:27:10.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.780" level="INFO">VALUE: [2.3764000000002505e-05, 2.2735999999998896e-05, 2.331900000000081e-05, 2.2722000000002796e-05, 2.363900000000238e-05, 2.340299999999823e-05, 2.3651999999999007e-05, 2.358300000000063e-05, 2.334699999999995e-05, 2.270899999999923e-05, 2.334699999999995e-05, 2.2736000000002365e-05, 2.3333999999999855e-05, 2.2749999999998466e-05, 2.302700000000185e-05, 2.330500000000124e-05, 2.2707999999999756e-05, 2.2722000000002796e-05, 2.3291999999997676e-05, 2.336099999999952e-05, 2.2722000000002796e-05, 2.331900000000081e-05, 2.35970000000002e-05, 2.334699999999995e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.2736000000002365e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.333300000000038e-05, 2.333300000000038e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.35970000000002e-05, 2.334699999999995e-05, 2.3333999999999855e-05, 2.338900000000213e-05, 2.2764000000001505e-05, 2.2764000000001505e-05, 2.370900000000023e-05, 2.337500000000256e-05, 2.334699999999995e-05, 2.2736000000002365e-05, 2.334699999999995e-05, 2.305500000000099e-05, 2.3304999999997772e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.368100000000109e-05, 2.336099999999952e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.778" endtime="20201112 12:27:10.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.773" endtime="20201112 12:27:10.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.783" endtime="20201112 12:27:10.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.787" endtime="20201112 12:27:10.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.785" endtime="20201112 12:27:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.782" endtime="20201112 12:27:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.419" endtime="20201112 12:27:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.418" endtime="20201112 12:27:10.808"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.816" endtime="20201112 12:27:10.831"></status>
</kw>
<msg timestamp="20201112 12:27:10.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.815" endtime="20201112 12:27:10.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.833" endtime="20201112 12:27:10.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.835" endtime="20201112 12:27:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.812" endtime="20201112 12:27:10.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.810" endtime="20201112 12:27:10.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.845" endtime="20201112 12:27:11.129"></status>
</kw>
<msg timestamp="20201112 12:27:11.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.843" endtime="20201112 12:27:11.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.133" endtime="20201112 12:27:11.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.141" endtime="20201112 12:27:11.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.841" endtime="20201112 12:27:11.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.839" endtime="20201112 12:27:11.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.148" level="INFO">${RESULT} = [{'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4721999999997857e-05, 'source_diff': 2.4721999999997857e-05}, {'time': 0.021865361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:11.144" endtime="20201112 12:27:11.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.149" endtime="20201112 12:27:11.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.166" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.165" endtime="20201112 12:27:11.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.168" level="INFO">VALUE: [2.4721999999997857e-05, 2.3958000000001006e-05, 2.4264000000003005e-05, 2.3986000000000146e-05, 2.431900000000181e-05, 2.35970000000002e-05, 2.365300000000195e-05, 2.4263999999999536e-05, 2.363899999999891e-05, 2.433300000000138e-05, 2.3958000000001006e-05, 2.4263999999999536e-05, 2.4583999999997636e-05, 2.4584000000001105e-05, 2.4263999999999536e-05, 2.365299999999848e-05, 2.3637999999999437e-05, 2.395900000000048e-05, 2.4333999999997385e-05, 2.463899999999991e-05, 2.365299999999848e-05, 2.4277999999999106e-05, 2.4263999999999536e-05, 2.4596999999997732e-05, 2.365300000000195e-05, 2.4583999999997636e-05, 2.365299999999848e-05, 2.4584000000001105e-05, 2.4278000000002575e-05, 2.4290999999999202e-05, 2.365299999999848e-05, 2.368100000000109e-05, 2.458300000000163e-05, 2.4263000000000062e-05, 2.358300000000063e-05, 2.4249999999999966e-05, 2.3986000000000146e-05, 2.420900000000073e-05, 2.363899999999891e-05, 2.3680000000001616e-05, 2.368099999999762e-05, 2.4612000000000245e-05, 2.3679999999998147e-05, 2.3583999999996635e-05, 2.419500000000116e-05, 2.365299999999848e-05, 2.4278000000002575e-05, 2.365299999999848e-05, 2.365299999999848e-05, 2.365299999999848e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.167" endtime="20201112 12:27:11.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.162" endtime="20201112 12:27:11.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.171" endtime="20201112 12:27:11.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.175" endtime="20201112 12:27:11.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.173" endtime="20201112 12:27:11.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.170" endtime="20201112 12:27:11.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.809" endtime="20201112 12:27:11.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.808" endtime="20201112 12:27:11.196"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.204" endtime="20201112 12:27:11.220"></status>
</kw>
<msg timestamp="20201112 12:27:11.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.203" endtime="20201112 12:27:11.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.221" endtime="20201112 12:27:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.224" endtime="20201112 12:27:11.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.200" endtime="20201112 12:27:11.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.198" endtime="20201112 12:27:11.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.234" endtime="20201112 12:27:11.520"></status>
</kw>
<msg timestamp="20201112 12:27:11.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.232" endtime="20201112 12:27:11.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.524" endtime="20201112 12:27:11.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.532" endtime="20201112 12:27:11.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.230" endtime="20201112 12:27:11.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.228" endtime="20201112 12:27:11.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.539" level="INFO">${RESULT} = [{'time': 0.022056306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5334000000001855e-05, 'source_diff': 2.5334000000001855e-05}, {'time': 0.022082944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:11.535" endtime="20201112 12:27:11.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.540" endtime="20201112 12:27:11.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.557" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.556" endtime="20201112 12:27:11.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.560" level="INFO">VALUE: [2.5334000000001855e-05, 2.486100000000102e-05, 2.5235999999997927e-05, 2.488900000000016e-05, 2.5514000000000786e-05, 2.4582999999998162e-05, 2.5485999999998177e-05, 2.5486000000001646e-05, 2.5499999999997747e-05, 2.519499999999869e-05, 2.488900000000016e-05, 2.5514000000000786e-05, 2.5207999999998787e-05, 2.487500000000059e-05, 2.5499999999997747e-05, 2.5207999999998787e-05, 2.488900000000016e-05, 2.5207999999998787e-05, 2.5514000000000786e-05, 2.4916000000003297e-05, 2.519500000000216e-05, 2.488900000000016e-05, 2.5528000000000356e-05, 2.5528000000000356e-05, 2.458300000000163e-05, 2.4584000000001105e-05, 2.5514000000000786e-05, 2.494499999999844e-05, 2.4652000000000007e-05, 2.483300000000188e-05, 2.488900000000016e-05, 2.461100000000077e-05, 2.5514000000000786e-05, 2.487500000000059e-05, 2.5500000000001216e-05, 2.5514000000000786e-05, 2.5527000000000882e-05, 2.5514000000000786e-05, 2.520899999999826e-05, 2.5499999999997747e-05, 2.5528000000000356e-05, 2.458300000000163e-05, 2.488900000000016e-05, 2.5500000000001216e-05, 2.5514000000000786e-05, 2.5528000000000356e-05, 2.5444000000002936e-05, 2.4596999999997732e-05, 2.5207999999998787e-05, 2.49030000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.558" endtime="20201112 12:27:11.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.554" endtime="20201112 12:27:11.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.563" endtime="20201112 12:27:11.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.567" endtime="20201112 12:27:11.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.565" endtime="20201112 12:27:11.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.562" endtime="20201112 12:27:11.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.197" endtime="20201112 12:27:11.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.196" endtime="20201112 12:27:11.588"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.596" endtime="20201112 12:27:11.611"></status>
</kw>
<msg timestamp="20201112 12:27:11.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.595" endtime="20201112 12:27:11.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.613" endtime="20201112 12:27:11.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.615" endtime="20201112 12:27:11.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.592" endtime="20201112 12:27:11.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.590" endtime="20201112 12:27:11.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.625" endtime="20201112 12:27:11.910"></status>
</kw>
<msg timestamp="20201112 12:27:11.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.624" endtime="20201112 12:27:11.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.914" endtime="20201112 12:27:11.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.922" endtime="20201112 12:27:11.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.621" endtime="20201112 12:27:11.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.620" endtime="20201112 12:27:11.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.929" level="INFO">${RESULT} = [{'time': 0.021891958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6638999999998442e-05, 'source_diff': 2.6638999999998442e-05}, {'time': 0.021919556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:11.925" endtime="20201112 12:27:11.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.930" endtime="20201112 12:27:11.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.947" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.946" endtime="20201112 12:27:11.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.949" level="INFO">VALUE: [2.6638999999998442e-05, 2.5819999999999316e-05, 2.64170000000008e-05, 2.6444000000000467e-05, 2.5791000000000702e-05, 2.6444000000000467e-05, 2.5514000000000786e-05, 2.583300000000288e-05, 2.6472000000003076e-05, 2.5514000000000786e-05, 2.5819999999999316e-05, 2.643100000000037e-05, 2.583300000000288e-05, 2.5792000000000176e-05, 2.6444000000000467e-05, 2.643100000000037e-05, 2.6429999999997428e-05, 2.5805000000000272e-05, 2.5514000000000786e-05, 2.643100000000037e-05, 2.643100000000037e-05, 2.638899999999819e-05, 2.644499999999994e-05, 2.645899999999951e-05, 2.5846999999998982e-05, 2.615300000000098e-05, 2.581900000000331e-05, 2.5471999999998607e-05, 2.5832999999999412e-05, 2.6458000000000037e-05, 2.6416000000001327e-05, 2.5584000000002105e-05, 2.583300000000288e-05, 2.6444000000000467e-05, 2.5818999999999842e-05, 2.6458000000000037e-05, 2.5832999999999412e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2.584700000000245e-05, 2.644499999999994e-05, 2.64309999999969e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.615300000000098e-05, 2.6512999999998843e-05, 2.5846999999998982e-05, 2.643100000000037e-05, 2.613900000000141e-05, 2.5818999999999842e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.948" endtime="20201112 12:27:11.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.943" endtime="20201112 12:27:11.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.952" endtime="20201112 12:27:11.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.956" endtime="20201112 12:27:11.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.954" endtime="20201112 12:27:11.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.951" endtime="20201112 12:27:11.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.588" endtime="20201112 12:27:11.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.588" endtime="20201112 12:27:11.977"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.985" endtime="20201112 12:27:12.001"></status>
</kw>
<msg timestamp="20201112 12:27:12.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.984" endtime="20201112 12:27:12.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.003" endtime="20201112 12:27:12.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.005" endtime="20201112 12:27:12.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.981" endtime="20201112 12:27:12.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.979" endtime="20201112 12:27:12.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.015" endtime="20201112 12:27:12.299"></status>
</kw>
<msg timestamp="20201112 12:27:12.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.013" endtime="20201112 12:27:12.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.303" endtime="20201112 12:27:12.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.311" endtime="20201112 12:27:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.011" endtime="20201112 12:27:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.009" endtime="20201112 12:27:12.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.318" level="INFO">${RESULT} = [{'time': 0.021847208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7804999999998803e-05, 'source_diff': 2.7804999999998803e-05}, {'time': 0.021875861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:12.314" endtime="20201112 12:27:12.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.331" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.319" endtime="20201112 12:27:12.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.336" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.335" endtime="20201112 12:27:12.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.338" level="INFO">VALUE: [2.7804999999998803e-05, 2.6735999999999427e-05, 2.6763000000002563e-05, 2.7374999999999622e-05, 2.740299999999876e-05, 2.7361999999999526e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.6805000000001272e-05, 2.6763999999998567e-05, 2.7679999999998678e-05, 2.7651999999999538e-05, 2.6777999999998137e-05, 2.7347000000000482e-05, 2.7056000000000996e-05, 2.7374999999999622e-05, 2.6763999999998567e-05, 2.6806000000000746e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7694000000001717e-05, 2.7374999999999622e-05, 2.6749999999998997e-05, 2.744500000000094e-05, 2.6735999999999427e-05, 2.6764000000002036e-05, 2.7361000000000052e-05, 2.6749999999998997e-05, 2.74309999999979e-05, 2.6749999999998997e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.6749999999998997e-05, 2.768099999999815e-05, 2.737500000000309e-05, 2.7374999999999622e-05, 2.7430000000001897e-05, 2.6792000000001176e-05, 2.7374999999999622e-05, 2.7361999999999526e-05, 2.6735999999999427e-05, 2.7304999999998303e-05, 2.6735999999999427e-05, 2.6820000000000316e-05, 2.7374999999999622e-05, 2.6764000000002036e-05, 2.7374999999999622e-05, 2.6749999999998997e-05, 2.7430000000001897e-05, 2.6762999999999093e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.337" endtime="20201112 12:27:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.332" endtime="20201112 12:27:12.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.342" endtime="20201112 12:27:12.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.345" endtime="20201112 12:27:12.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.344" endtime="20201112 12:27:12.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.340" endtime="20201112 12:27:12.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.978" endtime="20201112 12:27:12.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.977" endtime="20201112 12:27:12.366"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.374" endtime="20201112 12:27:12.390"></status>
</kw>
<msg timestamp="20201112 12:27:12.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.373" endtime="20201112 12:27:12.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.391" endtime="20201112 12:27:12.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.394" endtime="20201112 12:27:12.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.370" endtime="20201112 12:27:12.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.368" endtime="20201112 12:27:12.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.404" endtime="20201112 12:27:12.691"></status>
</kw>
<msg timestamp="20201112 12:27:12.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.403" endtime="20201112 12:27:12.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.695" endtime="20201112 12:27:12.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.703" endtime="20201112 12:27:12.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.400" endtime="20201112 12:27:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.398" endtime="20201112 12:27:12.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.710" level="INFO">${RESULT} = [{'time': 0.022191292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.84170000000028e-05, 'source_diff': 2.84170000000028e-05}, {'time': 0.022220806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:12.707" endtime="20201112 12:27:12.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.711" endtime="20201112 12:27:12.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.728" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.727" endtime="20201112 12:27:12.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.730" level="INFO">VALUE: [2.84170000000028e-05, 2.798700000000015e-05, 2.770900000000076e-05, 2.8320000000001816e-05, 2.8597000000001732e-05, 2.8291999999999207e-05, 2.8625000000000872e-05, 2.8319999999998346e-05, 2.8304999999999303e-05, 2.8611000000001302e-05, 2.8334000000001386e-05, 2.8013999999999817e-05, 2.8624999999997403e-05, 2.8306000000002246e-05, 2.8332999999998443e-05, 2.8291999999999207e-05, 2.768099999999815e-05, 2.769500000000119e-05, 2.7736000000000427e-05, 2.7693999999998248e-05, 2.8624999999997403e-05, 2.8304999999999303e-05, 2.8000000000000247e-05, 2.768099999999815e-05, 2.8334000000001386e-05, 2.7652999999999012e-05, 2.8070000000001566e-05, 2.7679999999998678e-05, 2.7665999999999108e-05, 2.7679999999998678e-05, 2.766699999999858e-05, 2.8304999999999303e-05, 2.7693999999998248e-05, 2.8625000000000872e-05, 2.766700000000205e-05, 2.8320000000001816e-05, 2.7708000000001287e-05, 2.8304999999999303e-05, 2.8306000000002246e-05, 2.769499999999772e-05, 2.8318999999998873e-05, 2.8277000000000163e-05, 2.8624999999997403e-05, 2.8319000000002342e-05, 2.8625000000000872e-05, 2.8305999999998777e-05, 2.8625000000000872e-05, 2.8319999999998346e-05, 2.7693999999998248e-05, 2.8319000000002342e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.729" endtime="20201112 12:27:12.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.724" endtime="20201112 12:27:12.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.734" endtime="20201112 12:27:12.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.737" endtime="20201112 12:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.736" endtime="20201112 12:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.732" endtime="20201112 12:27:12.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.367" endtime="20201112 12:27:12.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.366" endtime="20201112 12:27:12.758"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.767" endtime="20201112 12:27:12.782"></status>
</kw>
<msg timestamp="20201112 12:27:12.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.765" endtime="20201112 12:27:12.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.784" endtime="20201112 12:27:12.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.786" endtime="20201112 12:27:12.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.763" endtime="20201112 12:27:12.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.761" endtime="20201112 12:27:12.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.796" endtime="20201112 12:27:13.081"></status>
</kw>
<msg timestamp="20201112 12:27:13.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.794" endtime="20201112 12:27:13.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.085" endtime="20201112 12:27:13.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.093" endtime="20201112 12:27:13.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.792" endtime="20201112 12:27:13.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.790" endtime="20201112 12:27:13.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.100" level="INFO">${RESULT} = [{'time': 0.021850708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9360999999998583e-05, 'source_diff': 2.9360999999998583e-05}, {'time': 0.021881264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:13.097" endtime="20201112 12:27:13.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.101" endtime="20201112 12:27:13.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.119" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.118" endtime="20201112 12:27:13.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.121" level="INFO">VALUE: [2.9360999999998583e-05, 2.8666999999999582e-05, 2.9542000000000457e-05, 2.9235999999998458e-05, 2.8596999999998263e-05, 2.8625000000000872e-05, 2.9569999999999597e-05, 2.9235999999998458e-05, 2.8597999999997736e-05, 2.8624999999997403e-05, 2.8693999999999248e-05, 2.8625000000000872e-05, 2.8610999999997833e-05, 2.8611000000001302e-05, 2.9542000000000457e-05, 2.9264000000001067e-05, 2.8652000000000538e-05, 2.9610999999998833e-05, 2.9292000000000207e-05, 2.9250000000001497e-05, 2.8610999999997833e-05, 2.9556000000000027e-05, 2.8611000000001302e-05, 2.8611000000001302e-05, 2.9569000000000123e-05, 2.9541000000000983e-05, 2.9264000000001067e-05, 2.9540999999997514e-05, 2.8679999999999678e-05, 2.9555000000000553e-05, 2.8611000000001302e-05, 2.8929999999999928e-05, 2.8625000000000872e-05, 2.89309999999994e-05, 2.9540999999997514e-05, 2.8611000000001302e-05, 2.9526999999997944e-05, 2.8554999999999553e-05, 2.9221999999998888e-05, 2.9499999999998278e-05, 2.9249999999998028e-05, 2.9540999999997514e-05, 2.9542000000000457e-05, 2.9193999999999748e-05, 2.9540999999997514e-05, 2.9569999999999597e-05, 2.9250000000001497e-05, 2.8612000000000776e-05, 2.8944000000002967e-05, 2.9555000000000553e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.120" endtime="20201112 12:27:13.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.115" endtime="20201112 12:27:13.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.125" endtime="20201112 12:27:13.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.128" endtime="20201112 12:27:13.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.127" endtime="20201112 12:27:13.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.123" endtime="20201112 12:27:13.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.759" endtime="20201112 12:27:13.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.759" endtime="20201112 12:27:13.149"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.158" endtime="20201112 12:27:13.173"></status>
</kw>
<msg timestamp="20201112 12:27:13.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.156" endtime="20201112 12:27:13.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.175" endtime="20201112 12:27:13.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.177" endtime="20201112 12:27:13.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.154" endtime="20201112 12:27:13.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.152" endtime="20201112 12:27:13.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.187" endtime="20201112 12:27:13.476"></status>
</kw>
<msg timestamp="20201112 12:27:13.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.186" endtime="20201112 12:27:13.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.480" endtime="20201112 12:27:13.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.488" endtime="20201112 12:27:13.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.183" endtime="20201112 12:27:13.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.181" endtime="20201112 12:27:13.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.495" level="INFO">${RESULT} = [{'time': 0.021917042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0597999999999737e-05, 'source_diff': 3.0597999999999737e-05}, {'time': 0.021948514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:13.492" endtime="20201112 12:27:13.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.508" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.496" endtime="20201112 12:27:13.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.513" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.512" endtime="20201112 12:27:13.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.515" level="INFO">VALUE: [3.0597999999999737e-05, 2.9860999999999083e-05, 2.9861000000002552e-05, 3.0458000000000568e-05, 3.0485999999999708e-05, 3.0167000000001082e-05, 3.048699999999918e-05, 3.0485999999999708e-05, 3.0124999999998903e-05, 2.9805999999996807e-05, 3.015199999999857e-05, 2.9860999999999083e-05, 3.0500000000002747e-05, 3.0472000000000138e-05, 2.9874999999998653e-05, 3.0194999999996752e-05, 3.0472000000000138e-05, 3.0514000000002317e-05, 3.017999999999771e-05, 3.0485999999999708e-05, 3.0166000000001608e-05, 3.0514000000002317e-05, 2.9846999999999513e-05, 3.019500000000022e-05, 2.9888999999998223e-05, 3.0458000000000568e-05, 2.9860999999999083e-05, 2.9860999999999083e-05, 2.9526999999997944e-05, 3.0472000000000138e-05, 2.9874999999998653e-05, 3.0485999999999708e-05, 2.9542000000000457e-05, 2.9861999999998556e-05, 2.9832999999999943e-05, 3.0472000000000138e-05, 3.0166000000001608e-05, 2.9555000000000553e-05, 2.9819999999999847e-05, 2.9888999999998223e-05, 2.9556000000000027e-05, 2.9846999999999513e-05, 2.9847000000002982e-05, 3.0499999999999278e-05, 2.9860999999999083e-05, 2.9860999999999083e-05, 2.9542000000000457e-05, 3.047299999999961e-05, 3.0166999999997612e-05, 3.0472000000000138e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.514" endtime="20201112 12:27:13.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.509" endtime="20201112 12:27:13.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.519" endtime="20201112 12:27:13.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.522" endtime="20201112 12:27:13.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.521" endtime="20201112 12:27:13.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.517" endtime="20201112 12:27:13.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.150" endtime="20201112 12:27:13.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.150" endtime="20201112 12:27:13.543"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.552" endtime="20201112 12:27:13.568"></status>
</kw>
<msg timestamp="20201112 12:27:13.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.550" endtime="20201112 12:27:13.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.570" endtime="20201112 12:27:13.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.572" endtime="20201112 12:27:13.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.548" endtime="20201112 12:27:13.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.546" endtime="20201112 12:27:13.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.582" endtime="20201112 12:27:13.868"></status>
</kw>
<msg timestamp="20201112 12:27:13.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.581" endtime="20201112 12:27:13.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.872" endtime="20201112 12:27:13.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.881" endtime="20201112 12:27:13.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.578" endtime="20201112 12:27:13.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.577" endtime="20201112 12:27:13.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.887" level="INFO">${RESULT} = [{'time': 0.021990389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.215300000000004e-05, 'source_diff': 3.215300000000004e-05}, {'time': 0.022023097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:13.884" endtime="20201112 12:27:13.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.901" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.888" endtime="20201112 12:27:13.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.905" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.904" endtime="20201112 12:27:13.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.908" level="INFO">VALUE: [3.215300000000004e-05, 3.111099999999686e-05, 3.080600000000128e-05, 3.074999999999953e-05, 3.07639999999991e-05, 3.141599999999939e-05, 3.0776999999999194e-05, 3.142999999999896e-05, 3.137499999999668e-05, 3.0763000000003093e-05, 3.0818999999997904e-05, 3.140299999999929e-05, 3.142999999999896e-05, 3.141599999999939e-05, 3.141599999999939e-05, 3.079200000000171e-05, 3.172200000000139e-05, 3.137500000000015e-05, 3.165200000000007e-05, 3.140199999999982e-05, 3.140199999999982e-05, 3.0499999999999278e-05, 3.140299999999929e-05, 3.077700000000266e-05, 3.140299999999929e-05, 3.0776999999999194e-05, 3.077800000000214e-05, 3.170799999999835e-05, 3.10839999999972e-05, 3.170799999999835e-05, 3.143099999999843e-05, 3.140199999999982e-05, 3.141699999999886e-05, 3.141599999999939e-05, 3.079100000000223e-05, 3.079100000000223e-05, 3.0499999999999278e-05, 3.079200000000171e-05, 3.141699999999886e-05, 3.140299999999929e-05, 3.0804999999998334e-05, 3.082000000000085e-05, 3.1111999999999806e-05, 3.141700000000233e-05, 3.079199999999824e-05, 3.140299999999929e-05, 3.134700000000101e-05, 3.079200000000171e-05, 3.141699999999886e-05, 3.143099999999843e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.906" endtime="20201112 12:27:13.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.902" endtime="20201112 12:27:13.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.911" endtime="20201112 12:27:13.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.915" endtime="20201112 12:27:13.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.913" endtime="20201112 12:27:13.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.909" endtime="20201112 12:27:13.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.544" endtime="20201112 12:27:13.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.544" endtime="20201112 12:27:13.936"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.944" endtime="20201112 12:27:13.960"></status>
</kw>
<msg timestamp="20201112 12:27:13.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.943" endtime="20201112 12:27:13.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.961" endtime="20201112 12:27:13.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.964" endtime="20201112 12:27:13.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.940" endtime="20201112 12:27:13.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.938" endtime="20201112 12:27:13.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.974" endtime="20201112 12:27:14.259"></status>
</kw>
<msg timestamp="20201112 12:27:14.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.972" endtime="20201112 12:27:14.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.263" endtime="20201112 12:27:14.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.271" endtime="20201112 12:27:14.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.970" endtime="20201112 12:27:14.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.968" endtime="20201112 12:27:14.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.278" level="INFO">${RESULT} = [{'time': 0.022494333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2776999999997725e-05, 'source_diff': 3.2776999999997725e-05}, {'time': 0.022528069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.275" endtime="20201112 12:27:14.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.279" endtime="20201112 12:27:14.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.296" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.295" endtime="20201112 12:27:14.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.298" level="INFO">VALUE: [3.2776999999997725e-05, 3.236100000000158e-05, 3.170799999999835e-05, 3.26519999999976e-05, 3.172200000000139e-05, 3.169400000000225e-05, 3.163899999999997e-05, 3.173599999999749e-05, 3.201400000000035e-05, 3.170799999999835e-05, 3.170800000000182e-05, 3.175000000000053e-05, 3.2332999999998974e-05, 3.173600000000096e-05, 3.231999999999888e-05, 3.232000000000235e-05, 3.238900000000072e-05, 3.2027000000000444e-05, 3.2041000000000014e-05, 3.172200000000139e-05, 3.231999999999888e-05, 3.173600000000096e-05, 3.2332999999998974e-05, 3.2041000000000014e-05, 3.232000000000235e-05, 3.265299999999707e-05, 3.265300000000054e-05, 3.170799999999835e-05, 3.234799999999802e-05, 3.204199999999949e-05, 3.266700000000011e-05, 3.2346999999998544e-05, 3.265299999999707e-05, 3.170800000000182e-05, 3.173600000000096e-05, 3.172299999999739e-05, 3.232000000000235e-05, 3.201400000000035e-05, 3.166699999999911e-05, 3.172200000000139e-05, 3.240300000000029e-05, 3.236100000000158e-05, 3.172300000000086e-05, 3.172300000000086e-05, 3.263900000000097e-05, 3.2332999999998974e-05, 3.17640000000001e-05, 3.204199999999949e-05, 3.2332999999998974e-05, 3.199999999999731e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.297" endtime="20201112 12:27:14.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.292" endtime="20201112 12:27:14.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.302" endtime="20201112 12:27:14.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.305" endtime="20201112 12:27:14.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.304" endtime="20201112 12:27:14.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.300" endtime="20201112 12:27:14.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.937" endtime="20201112 12:27:14.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.936" endtime="20201112 12:27:14.326"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.335" endtime="20201112 12:27:14.351"></status>
</kw>
<msg timestamp="20201112 12:27:14.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.333" endtime="20201112 12:27:14.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.352" endtime="20201112 12:27:14.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.355" endtime="20201112 12:27:14.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.331" endtime="20201112 12:27:14.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.329" endtime="20201112 12:27:14.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.365" endtime="20201112 12:27:14.650"></status>
</kw>
<msg timestamp="20201112 12:27:14.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.363" endtime="20201112 12:27:14.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.655" endtime="20201112 12:27:14.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.663" endtime="20201112 12:27:14.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.361" endtime="20201112 12:27:14.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.359" endtime="20201112 12:27:14.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.669" level="INFO">${RESULT} = [{'time': 0.022098417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2444999999998595e-05, 'source_diff': 4.2444999999998595e-05}, {'time': 0.022142417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.666" endtime="20201112 12:27:14.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.684" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.670" endtime="20201112 12:27:14.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.688" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.687" endtime="20201112 12:27:14.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.691" level="INFO">VALUE: [4.2444999999998595e-05, 4.176399999999969e-05, 4.2431000000002494e-05, 4.165199999999966e-05, 4.183399999999754e-05, 4.247199999999826e-05, 4.2611000000001426e-05, 4.169400000000184e-05, 4.2568999999999246e-05, 4.242999999999955e-05, 4.2389000000000315e-05, 4.247199999999826e-05, 4.251400000000044e-05, 4.166599999999923e-05, 4.166599999999923e-05, 4.2347000000001606e-05, 4.1638999999999565e-05, 4.1639000000003035e-05, 4.2611000000001426e-05, 4.243000000000302e-05, 4.1624999999999995e-05, 4.2318999999998996e-05, 4.1680999999998275e-05, 4.248599999999783e-05, 4.255600000000262e-05, 4.254200000000305e-05, 4.2583000000002286e-05, 4.155600000000162e-05, 4.1902999999999385e-05, 4.1638999999999565e-05, 4.1695000000001314e-05, 4.1860999999997206e-05, 4.1903000000002855e-05, 4.2416999999999455e-05, 4.1666999999998705e-05, 4.1860999999997206e-05, 4.248599999999783e-05, 4.2375000000000745e-05, 4.257000000000219e-05, 4.183400000000101e-05, 4.179199999999883e-05, 4.227799999999976e-05, 4.1861000000000675e-05, 4.158400000000076e-05, 4.177799999999926e-05, 4.14860000000003e-05, 4.1875000000000245e-05, 4.1776999999999787e-05, 4.244399999999912e-05, 4.24999999999974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.689" endtime="20201112 12:27:14.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.685" endtime="20201112 12:27:14.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.694" endtime="20201112 12:27:14.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.698" endtime="20201112 12:27:14.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.696" endtime="20201112 12:27:14.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.693" endtime="20201112 12:27:14.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.327" endtime="20201112 12:27:14.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.326" endtime="20201112 12:27:14.718"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.727" endtime="20201112 12:27:14.743"></status>
</kw>
<msg timestamp="20201112 12:27:14.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.725" endtime="20201112 12:27:14.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.744" endtime="20201112 12:27:14.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.747" endtime="20201112 12:27:14.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.723" endtime="20201112 12:27:14.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.721" endtime="20201112 12:27:14.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.757" endtime="20201112 12:27:15.042"></status>
</kw>
<msg timestamp="20201112 12:27:15.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.755" endtime="20201112 12:27:15.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.046" endtime="20201112 12:27:15.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.055" endtime="20201112 12:27:15.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.753" endtime="20201112 12:27:15.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.751" endtime="20201112 12:27:15.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.061" level="INFO">${RESULT} = [{'time': 0.021787153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3180999999999775e-05, 'source_diff': 4.3180999999999775e-05}, {'time': 0.021832167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.058" endtime="20201112 12:27:15.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.062" endtime="20201112 12:27:15.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.079" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.078" endtime="20201112 12:27:15.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.082" level="INFO">VALUE: [4.3180999999999775e-05, 4.2610999999997956e-05, 4.276400000000069e-05, 4.274999999999765e-05, 4.34999999999984e-05, 4.283399999999854e-05, 4.279199999999983e-05, 4.2916999999999955e-05, 4.282000000000244e-05, 4.2874999999997776e-05, 4.276400000000069e-05, 4.351399999999797e-05, 4.3596999999999386e-05, 4.342999999999708e-05, 4.3569000000000246e-05, 4.2610999999997956e-05, 4.3360999999998706e-05, 4.290200000000091e-05, 4.3332999999999566e-05, 4.277800000000026e-05, 4.3569000000000246e-05, 4.355499999999721e-05, 4.3388999999997846e-05, 4.2624999999997526e-05, 4.2638999999997096e-05, 4.2818999999999496e-05, 4.3610999999998956e-05, 4.277800000000026e-05, 4.2625000000000995e-05, 4.3166999999996736e-05, 4.2832999999999066e-05, 4.351399999999797e-05, 4.3610999999998956e-05, 4.2694999999998845e-05, 4.2680999999999275e-05, 4.348599999999883e-05, 4.3458999999999165e-05, 4.2680999999999275e-05, 4.350000000000187e-05, 4.2708999999998415e-05, 4.3416999999996986e-05, 4.2846999999998636e-05, 4.3472999999998735e-05, 4.273599999999808e-05, 4.2666999999999705e-05, 4.28059999999994e-05, 4.265200000000066e-05, 4.347199999999926e-05, 4.3458999999999165e-05, 4.277800000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.080" endtime="20201112 12:27:15.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.076" endtime="20201112 12:27:15.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.085" endtime="20201112 12:27:15.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.089" endtime="20201112 12:27:15.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.087" endtime="20201112 12:27:15.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.083" endtime="20201112 12:27:15.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.719" endtime="20201112 12:27:15.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.719" endtime="20201112 12:27:15.109"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.118" endtime="20201112 12:27:15.134"></status>
</kw>
<msg timestamp="20201112 12:27:15.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.116" endtime="20201112 12:27:15.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.135" endtime="20201112 12:27:15.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.138" endtime="20201112 12:27:15.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.114" endtime="20201112 12:27:15.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.112" endtime="20201112 12:27:15.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.148" endtime="20201112 12:27:15.433"></status>
</kw>
<msg timestamp="20201112 12:27:15.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:15.146" endtime="20201112 12:27:15.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:15.438" endtime="20201112 12:27:15.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.446" endtime="20201112 12:27:15.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.144" endtime="20201112 12:27:15.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.142" endtime="20201112 12:27:15.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.453" level="INFO">${RESULT} = [{'time': 0.0221045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.395800000000019e-05, 'source_diff': 4.395800000000019e-05}, {'time': 0.022150569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:15.450" endtime="20201112 12:27:15.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.454" endtime="20201112 12:27:15.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.471" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.470" endtime="20201112 12:27:15.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.474" level="INFO">VALUE: [4.395800000000019e-05, 4.380499999999746e-05, 4.452800000000201e-05, 4.372199999999951e-05, 4.4403000000001885e-05, 4.451399999999897e-05, 4.3638999999998096e-05, 4.4361000000003176e-05, 4.451399999999897e-05, 4.3736999999998555e-05, 4.4569000000001247e-05, 4.4417000000001455e-05, 4.4624999999999526e-05, 4.3610999999998956e-05, 4.3875000000002246e-05, 4.391600000000148e-05, 4.452699999999907e-05, 4.376300000000222e-05, 4.4459000000000165e-05, 4.447200000000026e-05, 4.373599999999908e-05, 4.3555000000000677e-05, 4.370799999999994e-05, 4.3582999999999816e-05, 4.372199999999951e-05, 4.376399999999822e-05, 4.4445000000000595e-05, 4.367999999999733e-05, 4.444400000000112e-05, 4.4388999999998846e-05, 4.3902999999997916e-05, 4.448599999999983e-05, 4.377800000000126e-05, 4.4402999999998416e-05, 4.3846999999999636e-05, 4.3681000000000275e-05, 4.3888999999998346e-05, 4.4403000000001885e-05, 4.4610999999999956e-05, 4.3903000000001385e-05, 4.377800000000126e-05, 4.381999999999997e-05, 4.4583000000000816e-05, 4.3625000000001996e-05, 4.3833000000000066e-05, 4.3624999999998526e-05, 4.4431000000001025e-05, 4.379200000000083e-05, 4.3652999999997666e-05, 4.3902999999997916e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.472" endtime="20201112 12:27:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.468" endtime="20201112 12:27:15.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.477" endtime="20201112 12:27:15.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.481" endtime="20201112 12:27:15.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.479" endtime="20201112 12:27:15.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.476" endtime="20201112 12:27:15.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.110" endtime="20201112 12:27:15.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.110" endtime="20201112 12:27:15.502"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.510" endtime="20201112 12:27:15.525"></status>
</kw>
<msg timestamp="20201112 12:27:15.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.509" endtime="20201112 12:27:15.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.527" endtime="20201112 12:27:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.529" endtime="20201112 12:27:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.506" endtime="20201112 12:27:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.504" endtime="20201112 12:27:15.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.539" endtime="20201112 12:27:15.825"></status>
</kw>
<msg timestamp="20201112 12:27:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.538" endtime="20201112 12:27:15.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.829" endtime="20201112 12:27:15.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.837" endtime="20201112 12:27:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.535" endtime="20201112 12:27:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.534" endtime="20201112 12:27:15.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.844" level="INFO">${RESULT} = [{'time': 0.021945917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4861000000000206e-05, 'source_diff': 4.4861000000000206e-05}, {'time': 0.021993917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:15.840" endtime="20201112 12:27:15.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.857" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.845" endtime="20201112 12:27:15.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.861" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.860" endtime="20201112 12:27:15.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.864" level="INFO">VALUE: [4.4861000000000206e-05, 4.534800000000061e-05, 4.4874999999999776e-05, 4.473600000000008e-05, 4.4638999999999096e-05, 4.552700000000007e-05, 4.472200000000051e-05, 4.5375000000000276e-05, 4.5445000000001595e-05, 4.5347000000001136e-05, 4.466600000000223e-05, 4.472200000000051e-05, 4.4625000000002996e-05, 4.4638999999999096e-05, 4.548599999999736e-05, 4.548599999999736e-05, 4.55000000000004e-05, 4.4610999999999956e-05, 4.559699999999792e-05, 4.477799999999879e-05, 4.474999999999965e-05, 4.474999999999965e-05, 4.4680999999997806e-05, 4.536099999999724e-05, 4.4888999999999346e-05, 4.4874999999999776e-05, 4.5417000000002455e-05, 4.5375000000000276e-05, 4.545800000000169e-05, 4.474999999999965e-05, 4.557000000000172e-05, 4.548600000000083e-05, 4.4694999999997376e-05, 4.4861000000000206e-05, 4.4652999999998666e-05, 4.4653000000002135e-05, 4.561200000000043e-05, 4.476400000000269e-05, 4.538800000000037e-05, 4.463799999999962e-05, 4.474999999999965e-05, 4.4597000000000386e-05, 4.46939999999979e-05, 4.476299999999975e-05, 4.4861000000000206e-05, 4.548600000000083e-05, 4.4903000000002385e-05, 4.544399999999865e-05, 4.46800000000018e-05, 4.480499999999846e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.863" endtime="20201112 12:27:15.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.858" endtime="20201112 12:27:15.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.871" endtime="20201112 12:27:15.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.875" endtime="20201112 12:27:15.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.873" endtime="20201112 12:27:15.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.870" endtime="20201112 12:27:15.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.502" endtime="20201112 12:27:15.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.502" endtime="20201112 12:27:15.896"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.904" endtime="20201112 12:27:15.920"></status>
</kw>
<msg timestamp="20201112 12:27:15.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.903" endtime="20201112 12:27:15.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.922" endtime="20201112 12:27:15.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.924" endtime="20201112 12:27:15.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.900" endtime="20201112 12:27:15.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.898" endtime="20201112 12:27:15.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.934" endtime="20201112 12:27:16.220"></status>
</kw>
<msg timestamp="20201112 12:27:16.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.933" endtime="20201112 12:27:16.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.224" endtime="20201112 12:27:16.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.232" endtime="20201112 12:27:16.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.930" endtime="20201112 12:27:16.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.929" endtime="20201112 12:27:16.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.239" level="INFO">${RESULT} = [{'time': 0.021935639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5611000000000956e-05, 'source_diff': 4.5611000000000956e-05}, {'time': 0.021984667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:16.235" endtime="20201112 12:27:16.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.253" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.240" endtime="20201112 12:27:16.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.258" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.257" endtime="20201112 12:27:16.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.260" level="INFO">VALUE: [4.5611000000000956e-05, 4.636099999999824e-05, 4.577799999999979e-05, 4.65000000000014e-05, 4.5889000000000346e-05, 4.590200000000044e-05, 4.580499999999946e-05, 4.5652999999999666e-05, 4.58329999999986e-05, 4.569400000000237e-05, 4.656999999999925e-05, 4.579199999999936e-05, 4.565199999999672e-05, 4.576400000000022e-05, 4.648600000000183e-05, 4.567999999999933e-05, 4.579099999999989e-05, 4.567999999999933e-05, 4.645799999999922e-05, 4.641600000000051e-05, 4.648600000000183e-05, 4.577799999999979e-05, 4.5875000000000776e-05, 4.5875000000000776e-05, 4.662499999999806e-05, 4.6430999999999556e-05, 4.5917000000002955e-05, 4.647199999999879e-05, 4.5639000000000096e-05, 4.655600000000315e-05, 4.6430999999999556e-05, 4.652799999999707e-05, 4.649999999999793e-05, 4.555600000000215e-05, 4.582000000000197e-05, 4.6416999999999986e-05, 4.581899999999903e-05, 4.5889000000000346e-05, 4.655599999999968e-05, 4.633400000000204e-05, 4.652800000000054e-05, 4.583400000000154e-05, 4.5666999999999236e-05, 4.6403000000000416e-05, 4.652800000000054e-05, 4.648600000000183e-05, 4.584699999999817e-05, 4.5875000000000776e-05, 4.65130000000015e-05, 4.656999999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.259" endtime="20201112 12:27:16.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.254" endtime="20201112 12:27:16.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.264" endtime="20201112 12:27:16.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.267" endtime="20201112 12:27:16.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.266" endtime="20201112 12:27:16.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.262" endtime="20201112 12:27:16.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.897" endtime="20201112 12:27:16.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.896" endtime="20201112 12:27:16.288"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.296" endtime="20201112 12:27:16.313"></status>
</kw>
<msg timestamp="20201112 12:27:16.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.295" endtime="20201112 12:27:16.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.315" endtime="20201112 12:27:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.317" endtime="20201112 12:27:16.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.292" endtime="20201112 12:27:16.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.290" endtime="20201112 12:27:16.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.327" endtime="20201112 12:27:16.613"></status>
</kw>
<msg timestamp="20201112 12:27:16.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.326" endtime="20201112 12:27:16.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.617" endtime="20201112 12:27:16.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.625" endtime="20201112 12:27:16.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.323" endtime="20201112 12:27:16.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.321" endtime="20201112 12:27:16.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.632" level="INFO">${RESULT} = [{'time': 0.021998667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.655599999999968e-05, 'source_diff': 4.655599999999968e-05}, {'time': 0.022047667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.628" endtime="20201112 12:27:16.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.633" endtime="20201112 12:27:16.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.650" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.649" endtime="20201112 12:27:16.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.652" level="INFO">VALUE: [4.655599999999968e-05, 4.6680999999999806e-05, 4.6722999999998516e-05, 4.670799999999947e-05, 4.747199999999979e-05, 4.743000000000108e-05, 4.7403000000001416e-05, 4.6681000000003275e-05, 4.667999999999686e-05, 4.670799999999947e-05, 4.747199999999979e-05, 4.741599999999804e-05, 4.734699999999967e-05, 4.6931000000000056e-05, 4.680500000000046e-05, 4.7403000000001416e-05, 4.677800000000079e-05, 4.666699999999677e-05, 4.752800000000154e-05, 4.6667000000000236e-05, 4.6889000000001346e-05, 4.676400000000122e-05, 4.749999999999893e-05, 4.6625000000001526e-05, 4.673599999999861e-05, 4.761099999999949e-05, 4.670799999999947e-05, 4.677800000000079e-05, 4.6861000000002206e-05, 4.691600000000101e-05, 4.7167000000000736e-05, 4.674999999999818e-05, 4.687499999999831e-05, 4.658399999999882e-05, 4.7389000000001846e-05, 4.6723000000001985e-05, 4.681900000000003e-05, 4.737499999999881e-05, 4.6639000000001096e-05, 4.744400000000065e-05, 4.736199999999871e-05, 4.6694999999999376e-05, 4.752800000000154e-05, 4.677700000000132e-05, 4.762499999999906e-05, 4.694400000000015e-05, 4.686099999999874e-05, 4.744400000000065e-05, 4.75139999999985e-05, 4.658299999999935e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.651" endtime="20201112 12:27:16.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.646" endtime="20201112 12:27:16.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.656" endtime="20201112 12:27:16.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.659" endtime="20201112 12:27:16.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.657" endtime="20201112 12:27:16.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.654" endtime="20201112 12:27:16.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.289" endtime="20201112 12:27:16.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.288" endtime="20201112 12:27:16.680"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.688" endtime="20201112 12:27:16.705"></status>
</kw>
<msg timestamp="20201112 12:27:16.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.687" endtime="20201112 12:27:16.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.706" endtime="20201112 12:27:16.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.709" endtime="20201112 12:27:16.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.684" endtime="20201112 12:27:16.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.682" endtime="20201112 12:27:16.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.719" endtime="20201112 12:27:17.004"></status>
</kw>
<msg timestamp="20201112 12:27:17.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.717" endtime="20201112 12:27:17.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.008" endtime="20201112 12:27:17.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.016" endtime="20201112 12:27:17.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.715" endtime="20201112 12:27:17.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.713" endtime="20201112 12:27:17.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.023" level="INFO">${RESULT} = [{'time': 0.021933764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7917000000001486e-05, 'source_diff': 4.7917000000001486e-05}, {'time': 0.021983708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:17.019" endtime="20201112 12:27:17.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.024" endtime="20201112 12:27:17.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.040" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.039" endtime="20201112 12:27:17.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.043" level="INFO">VALUE: [4.7917000000001486e-05, 4.755500000000121e-05, 4.76529999999982e-05, 4.779200000000136e-05, 4.836100000000024e-05, 4.849999999999993e-05, 4.837499999999981e-05, 4.76940000000009e-05, 4.774999999999918e-05, 4.755500000000121e-05, 4.841699999999852e-05, 4.784700000000017e-05, 4.836100000000024e-05, 4.754200000000111e-05, 4.773599999999961e-05, 4.761099999999949e-05, 4.85139999999995e-05, 4.7681000000000806e-05, 4.862500000000006e-05, 4.834700000000067e-05, 4.780599999999746e-05, 4.78200000000005e-05, 4.784799999999964e-05, 4.8459000000000696e-05, 4.848600000000036e-05, 4.787499999999931e-05, 4.776399999999875e-05, 4.847200000000079e-05, 4.7945000000000626e-05, 4.848600000000036e-05, 4.838899999999938e-05, 4.85139999999995e-05, 4.841600000000251e-05, 4.776399999999875e-05, 4.777700000000232e-05, 4.763899999999863e-05, 4.844400000000165e-05, 4.854099999999917e-05, 4.7639000000002096e-05, 4.843000000000208e-05, 4.768000000000133e-05, 4.842999999999861e-05, 4.840299999999895e-05, 4.7653000000001666e-05, 4.854199999999864e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.852799999999907e-05, 4.783400000000007e-05, 4.775000000000265e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.042" endtime="20201112 12:27:17.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.037" endtime="20201112 12:27:17.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.047" endtime="20201112 12:27:17.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.050" endtime="20201112 12:27:17.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.048" endtime="20201112 12:27:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.045" endtime="20201112 12:27:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.681" endtime="20201112 12:27:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.680" endtime="20201112 12:27:17.071"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.079" endtime="20201112 12:27:17.096"></status>
</kw>
<msg timestamp="20201112 12:27:17.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.078" endtime="20201112 12:27:17.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.097" endtime="20201112 12:27:17.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.100" endtime="20201112 12:27:17.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.075" endtime="20201112 12:27:17.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.073" endtime="20201112 12:27:17.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.110" endtime="20201112 12:27:17.395"></status>
</kw>
<msg timestamp="20201112 12:27:17.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.108" endtime="20201112 12:27:17.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022010625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.399" endtime="20201112 12:27:17.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.407" endtime="20201112 12:27:17.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.106" endtime="20201112 12:27:17.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.104" endtime="20201112 12:27:17.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.414" level="INFO">${RESULT} = [{'time': 0.022059931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930600000000243e-05, 'source_diff': 4.930600000000243e-05}, {'time': 0.022110931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.411" endtime="20201112 12:27:17.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.428" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.415" endtime="20201112 12:27:17.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.432" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.431" endtime="20201112 12:27:17.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.434" level="INFO">VALUE: [4.930600000000243e-05, 4.877799999999932e-05, 4.867999999999886e-05, 4.886100000000074e-05, 4.9401999999997004e-05, 4.877699999999985e-05, 4.879199999999889e-05, 4.936099999999777e-05, 4.93469999999982e-05, 4.881900000000203e-05, 4.862500000000006e-05, 4.868099999999834e-05, 4.862500000000006e-05, 4.944499999999866e-05, 4.913900000000013e-05, 4.938900000000038e-05, 4.866699999999877e-05, 4.879199999999889e-05, 4.8707999999998e-05, 4.950000000000093e-05, 4.950000000000093e-05, 4.861099999999702e-05, 4.872200000000104e-05, 4.958299999999888e-05, 4.938900000000038e-05, 4.869499999999791e-05, 4.876399999999975e-05, 4.9417000000002986e-05, 4.952800000000007e-05, 4.941699999999952e-05, 4.888899999999988e-05, 4.881999999999803e-05, 4.876399999999975e-05, 4.952800000000007e-05, 4.888899999999988e-05, 4.869399999999843e-05, 4.942999999999961e-05, 4.868000000000233e-05, 4.95140000000005e-05, 4.934700000000167e-05, 4.862500000000006e-05, 4.863899999999963e-05, 4.938899999999691e-05, 4.863899999999963e-05, 4.950000000000093e-05, 4.8931000000002056e-05, 4.936100000000124e-05, 4.916699999999927e-05, 4.886100000000074e-05, 4.8931000000002056e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.433" endtime="20201112 12:27:17.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.428" endtime="20201112 12:27:17.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.438" endtime="20201112 12:27:17.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.441" endtime="20201112 12:27:17.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.440" endtime="20201112 12:27:17.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.436" endtime="20201112 12:27:17.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.072" endtime="20201112 12:27:17.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.071" endtime="20201112 12:27:17.462"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.471" endtime="20201112 12:27:17.487"></status>
</kw>
<msg timestamp="20201112 12:27:17.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.469" endtime="20201112 12:27:17.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.489" endtime="20201112 12:27:17.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.491" endtime="20201112 12:27:17.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.467" endtime="20201112 12:27:17.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.465" endtime="20201112 12:27:17.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.501" endtime="20201112 12:27:17.787"></status>
</kw>
<msg timestamp="20201112 12:27:17.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.500" endtime="20201112 12:27:17.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.791" endtime="20201112 12:27:17.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.799" endtime="20201112 12:27:17.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.497" endtime="20201112 12:27:17.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.496" endtime="20201112 12:27:17.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.806" level="INFO">${RESULT} = [{'time': 0.022390833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.009699999999895e-05, 'source_diff': 5.009699999999895e-05}, {'time': 0.022442847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.802" endtime="20201112 12:27:17.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.807" endtime="20201112 12:27:17.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.825" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.824" endtime="20201112 12:27:17.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.827" level="INFO">VALUE: [5.009699999999895e-05, 4.965299999999673e-05, 4.9972999999998297e-05, 5.03469999999992e-05, 4.991700000000002e-05, 5.052800000000107e-05, 5.063900000000163e-05, 5.054200000000064e-05, 5.040299999999748e-05, 5.044400000000018e-05, 5.055600000000021e-05, 4.959700000000192e-05, 5.056999999999978e-05, 5.048599999999889e-05, 5.059699999999945e-05, 5.048599999999889e-05, 5.055600000000021e-05, 4.9695000000002376e-05, 5.0459000000002696e-05, 5.036099999999877e-05, 4.962499999999759e-05, 5.043100000000009e-05, 5.0473000000002266e-05, 4.954199999999964e-05, 5.058300000000335e-05, 4.9709000000001946e-05, 5.016600000000079e-05, 5.0429999999997144e-05, 5.0402000000001473e-05, 5.044400000000018e-05, 5.065299999999773e-05, 4.988900000000088e-05, 5.027699999999788e-05, 4.973599999999814e-05, 4.9667000000003236e-05, 4.979199999999989e-05, 4.9707999999999e-05, 5.009700000000242e-05, 4.977800000000032e-05, 4.962500000000106e-05, 4.966699999999977e-05, 4.976400000000075e-05, 4.976400000000075e-05, 5.045799999999975e-05, 4.991700000000002e-05, 5.051399999999803e-05, 5.043100000000009e-05, 4.976400000000075e-05, 4.980599999999946e-05, 4.966699999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.826" endtime="20201112 12:27:17.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.821" endtime="20201112 12:27:17.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.831" endtime="20201112 12:27:17.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.834" endtime="20201112 12:27:17.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.832" endtime="20201112 12:27:17.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.829" endtime="20201112 12:27:17.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.463" endtime="20201112 12:27:17.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.463" endtime="20201112 12:27:17.855"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.863" endtime="20201112 12:27:17.880"></status>
</kw>
<msg timestamp="20201112 12:27:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.862" endtime="20201112 12:27:17.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.882" endtime="20201112 12:27:17.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.884" endtime="20201112 12:27:17.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.859" endtime="20201112 12:27:17.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.857" endtime="20201112 12:27:17.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.894" endtime="20201112 12:27:18.179"></status>
</kw>
<msg timestamp="20201112 12:27:18.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.893" endtime="20201112 12:27:18.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.184" endtime="20201112 12:27:18.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.192" endtime="20201112 12:27:18.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.890" endtime="20201112 12:27:18.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.889" endtime="20201112 12:27:18.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.198" level="INFO">${RESULT} = [{'time': 0.021774569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.098599999999939e-05, 'source_diff': 5.098599999999939e-05}, {'time': 0.021827542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.195" endtime="20201112 12:27:18.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.199" endtime="20201112 12:27:18.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.216" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.215" endtime="20201112 12:27:18.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.219" level="INFO">VALUE: [5.098599999999939e-05, 5.069499999999991e-05, 5.062499999999859e-05, 5.14729999999998e-05, 5.072199999999957e-05, 5.129200000000139e-05, 5.086200000000221e-05, 5.079099999999795e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.158300000000088e-05, 5.061099999999902e-05, 5.148599999999989e-05, 5.1415999999998574e-05, 5.140300000000195e-05, 5.143000000000161e-05, 5.079100000000142e-05, 5.079099999999795e-05, 5.136099999999977e-05, 5.063900000000163e-05, 5.1429999999998144e-05, 5.082000000000003e-05, 5.151399999999903e-05, 5.141700000000152e-05, 5.144499999999719e-05, 5.149999999999946e-05, 5.066700000000077e-05, 5.065299999999773e-05, 5.063900000000163e-05, 5.150000000000293e-05, 5.079200000000089e-05, 5.073599999999914e-05, 5.141700000000152e-05, 5.136099999999977e-05, 5.073600000000261e-05, 5.088900000000188e-05, 5.079099999999795e-05, 5.074999999999871e-05, 5.068100000000034e-05, 5.083299999999666e-05, 5.077699999999838e-05, 5.143000000000161e-05, 5.149999999999946e-05, 5.073599999999914e-05, 5.1401999999999004e-05, 5.077700000000185e-05, 5.148600000000336e-05, 5.088899999999841e-05, 5.077800000000132e-05, 5.148599999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.217" endtime="20201112 12:27:18.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.213" endtime="20201112 12:27:18.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.222" endtime="20201112 12:27:18.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.226" endtime="20201112 12:27:18.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.224" endtime="20201112 12:27:18.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.221" endtime="20201112 12:27:18.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.856" endtime="20201112 12:27:18.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.855" endtime="20201112 12:27:18.246"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.255" endtime="20201112 12:27:18.272"></status>
</kw>
<msg timestamp="20201112 12:27:18.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.253" endtime="20201112 12:27:18.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.273" endtime="20201112 12:27:18.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.276" endtime="20201112 12:27:18.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.251" endtime="20201112 12:27:18.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.249" endtime="20201112 12:27:18.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.286" endtime="20201112 12:27:18.572"></status>
</kw>
<msg timestamp="20201112 12:27:18.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.284" endtime="20201112 12:27:18.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.576" endtime="20201112 12:27:18.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.584" endtime="20201112 12:27:18.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.281" endtime="20201112 12:27:18.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.280" endtime="20201112 12:27:18.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.591" level="INFO">${RESULT} = [{'time': 0.022013806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.18340000000006e-05, 'source_diff': 5.18340000000006e-05}, {'time': 0.022068806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:18.588" endtime="20201112 12:27:18.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.592" endtime="20201112 12:27:18.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.609" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.608" endtime="20201112 12:27:18.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.611" level="INFO">VALUE: [5.18340000000006e-05, 5.244499999999819e-05, 5.236100000000077e-05, 5.162499999999959e-05, 5.1929999999998644e-05, 5.158399999999688e-05, 5.1693999999997964e-05, 5.1721999999997104e-05, 5.2402000000000004e-05, 5.168000000000186e-05, 5.188899999999941e-05, 5.252700000000013e-05, 5.248600000000089e-05, 5.255499999999927e-05, 5.261099999999755e-05, 5.240299999999948e-05, 5.234699999999773e-05, 5.188899999999941e-05, 5.251400000000003e-05, 5.1708000000001e-05, 5.250000000000046e-05, 5.172300000000005e-05, 5.179200000000189e-05, 5.250000000000046e-05, 5.16669999999983e-05, 5.247200000000132e-05, 5.2457999999998284e-05, 5.161100000000002e-05, 5.2485999999997424e-05, 5.240300000000295e-05, 5.163899999999916e-05, 5.177799999999885e-05, 5.229199999999892e-05, 5.176399999999928e-05, 5.174999999999971e-05, 5.1651999999999254e-05, 5.255600000000221e-05, 5.177699999999938e-05, 5.176299999999981e-05, 5.1902000000002974e-05, 5.1887999999999934e-05, 5.250000000000046e-05, 5.255499999999927e-05, 5.248600000000089e-05, 5.181900000000156e-05, 5.155500000000174e-05, 5.262500000000059e-05, 5.174999999999971e-05, 5.2457999999998284e-05, 5.168000000000186e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.610" endtime="20201112 12:27:18.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.605" endtime="20201112 12:27:18.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.615" endtime="20201112 12:27:18.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.618" endtime="20201112 12:27:18.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.617" endtime="20201112 12:27:18.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.613" endtime="20201112 12:27:18.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.247" endtime="20201112 12:27:18.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.247" endtime="20201112 12:27:18.639"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.647" endtime="20201112 12:27:18.664"></status>
</kw>
<msg timestamp="20201112 12:27:18.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.646" endtime="20201112 12:27:18.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.666" endtime="20201112 12:27:18.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.668" endtime="20201112 12:27:18.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.643" endtime="20201112 12:27:18.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.641" endtime="20201112 12:27:18.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.678" endtime="20201112 12:27:18.963"></status>
</kw>
<msg timestamp="20201112 12:27:18.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.676" endtime="20201112 12:27:18.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021901597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.968" endtime="20201112 12:27:18.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.976" endtime="20201112 12:27:18.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.674" endtime="20201112 12:27:18.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.672" endtime="20201112 12:27:18.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.982" level="INFO">${RESULT} = [{'time': 0.021901597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33609999999983e-05, 'source_diff': 5.33609999999983e-05}, {'time': 0.021956528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:18.979" endtime="20201112 12:27:18.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.983" endtime="20201112 12:27:18.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.000" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.999" endtime="20201112 12:27:19.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.003" level="INFO">VALUE: [5.33609999999983e-05, 5.261100000000102e-05, 5.294400000000268e-05, 5.270900000000148e-05, 5.270900000000148e-05, 5.351300000000156e-05, 5.351400000000103e-05, 5.287500000000084e-05, 5.362500000000159e-05, 5.276400000000028e-05, 5.352700000000113e-05, 5.272200000000157e-05, 5.276300000000081e-05, 5.2693999999998964e-05, 5.2638000000000684e-05, 5.329100000000045e-05, 5.2902000000000504e-05, 5.3443999999999714e-05, 5.288900000000041e-05, 5.358399999999888e-05, 5.279199999999942e-05, 5.340300000000048e-05, 5.28470000000017e-05, 5.3471999999998854e-05, 5.280600000000246e-05, 5.341699999999658e-05, 5.348700000000137e-05, 5.281899999999909e-05, 5.3499999999997994e-05, 5.279200000000289e-05, 5.343099999999962e-05, 5.333299999999916e-05, 5.273600000000114e-05, 5.336100000000177e-05, 5.270900000000148e-05, 5.351400000000103e-05, 5.291699999999955e-05, 5.273700000000062e-05, 5.280599999999899e-05, 5.279099999999995e-05, 5.3430000000000144e-05, 5.28479999999977e-05, 5.2679999999999394e-05, 5.277700000000038e-05, 5.2679999999999394e-05, 5.28470000000017e-05, 5.2721999999998104e-05, 5.337500000000134e-05, 5.337500000000134e-05, 5.277799999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.001" endtime="20201112 12:27:19.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.997" endtime="20201112 12:27:19.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.006" endtime="20201112 12:27:19.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.010" endtime="20201112 12:27:19.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.008" endtime="20201112 12:27:19.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.005" endtime="20201112 12:27:19.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.640" endtime="20201112 12:27:19.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.639" endtime="20201112 12:27:19.031"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.039" endtime="20201112 12:27:19.056"></status>
</kw>
<msg timestamp="20201112 12:27:19.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.038" endtime="20201112 12:27:19.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.057" endtime="20201112 12:27:19.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.060" endtime="20201112 12:27:19.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.035" endtime="20201112 12:27:19.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.033" endtime="20201112 12:27:19.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.070" endtime="20201112 12:27:19.355"></status>
</kw>
<msg timestamp="20201112 12:27:19.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:19.068" endtime="20201112 12:27:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:19.359" endtime="20201112 12:27:19.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.367" endtime="20201112 12:27:19.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.066" endtime="20201112 12:27:19.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.064" endtime="20201112 12:27:19.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.374" level="INFO">${RESULT} = [{'time': 0.021889792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.454200000000117e-05, 'source_diff': 5.454200000000117e-05}, {'time': 0.021945792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.371" endtime="20201112 12:27:19.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.375" endtime="20201112 12:27:19.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.393" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.392" endtime="20201112 12:27:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.395" level="INFO">VALUE: [5.454200000000117e-05, 5.38479999999987e-05, 5.370899999999901e-05, 5.361099999999855e-05, 5.451400000000203e-05, 5.4499999999998994e-05, 5.4179999999997425e-05, 5.4444000000000714e-05, 5.38470000000027e-05, 5.437499999999887e-05, 5.363900000000116e-05, 5.4444000000000714e-05, 5.3693999999999964e-05, 5.365300000000073e-05, 5.4430000000001144e-05, 5.455500000000127e-05, 5.391700000000055e-05, 5.359700000000245e-05, 5.391700000000055e-05, 5.384699999999923e-05, 5.443100000000062e-05, 5.441700000000105e-05, 5.440299999999801e-05, 5.362499999999812e-05, 5.383299999999966e-05, 5.438900000000191e-05, 5.36670000000003e-05, 5.393099999999665e-05, 5.370899999999901e-05, 5.368099999999987e-05, 5.454200000000117e-05, 5.444500000000019e-05, 5.461199999999902e-05, 5.445899999999976e-05, 5.43609999999993e-05, 5.441700000000105e-05, 5.431900000000059e-05, 5.4416000000001574e-05, 5.433300000000016e-05, 5.359700000000245e-05, 5.438899999999844e-05, 5.384699999999923e-05, 5.438900000000191e-05, 5.362499999999812e-05, 5.3749999999998244e-05, 5.388900000000141e-05, 5.4471999999999854e-05, 5.4429999999997675e-05, 5.440300000000148e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.394" endtime="20201112 12:27:19.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.389" endtime="20201112 12:27:19.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.399" endtime="20201112 12:27:19.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.402" endtime="20201112 12:27:19.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.401" endtime="20201112 12:27:19.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.397" endtime="20201112 12:27:19.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.031" endtime="20201112 12:27:19.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.031" endtime="20201112 12:27:19.423"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.432" endtime="20201112 12:27:19.448"></status>
</kw>
<msg timestamp="20201112 12:27:19.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.430" endtime="20201112 12:27:19.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.450" endtime="20201112 12:27:19.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.452" endtime="20201112 12:27:19.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.428" endtime="20201112 12:27:19.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.426" endtime="20201112 12:27:19.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.462" endtime="20201112 12:27:19.747"></status>
</kw>
<msg timestamp="20201112 12:27:19.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.460" endtime="20201112 12:27:19.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.752" endtime="20201112 12:27:19.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.760" endtime="20201112 12:27:19.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.458" endtime="20201112 12:27:19.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.456" endtime="20201112 12:27:19.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.766" level="INFO">${RESULT} = [{'time': 0.021837625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5457999999997815e-05, 'source_diff': 5.5457999999997815e-05}, {'time': 0.021894625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:19.763" endtime="20201112 12:27:19.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.780" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.767" endtime="20201112 12:27:19.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.784" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.783" endtime="20201112 12:27:19.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.787" level="INFO">VALUE: [5.5457999999997815e-05, 5.459699999999998e-05, 5.481899999999762e-05, 5.538899999999944e-05, 5.463899999999869e-05, 5.490299999999851e-05, 5.533300000000116e-05, 5.470900000000001e-05, 5.5499999999999994e-05, 5.469500000000044e-05, 5.5541999999998704e-05, 5.490300000000198e-05, 5.559700000000098e-05, 5.5443999999998245e-05, 5.554200000000217e-05, 5.4887999999999465e-05, 5.562500000000012e-05, 5.481900000000109e-05, 5.480500000000152e-05, 5.4679999999997925e-05, 5.4722000000000104e-05, 5.5472000000000854e-05, 5.4708000000000534e-05, 5.538899999999944e-05, 5.476400000000228e-05, 5.5527999999999134e-05, 5.479200000000142e-05, 5.483299999999719e-05, 5.541699999999858e-05, 5.5513999999999564e-05, 5.4735999999999674e-05, 5.4708000000000534e-05, 5.541699999999858e-05, 5.465299999999826e-05, 5.565300000000273e-05, 5.532000000000106e-05, 5.562500000000012e-05, 5.451400000000203e-05, 5.490299999999851e-05, 5.470900000000001e-05, 5.557000000000131e-05, 5.533399999999716e-05, 5.538899999999944e-05, 5.5151999999999285e-05, 5.468100000000087e-05, 5.547300000000033e-05, 5.480500000000152e-05, 5.4693999999997495e-05, 5.4665999999998355e-05, 5.475000000000271e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.785" endtime="20201112 12:27:19.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.781" endtime="20201112 12:27:19.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.790" endtime="20201112 12:27:19.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.793" endtime="20201112 12:27:19.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.792" endtime="20201112 12:27:19.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.789" endtime="20201112 12:27:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.424" endtime="20201112 12:27:19.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.423" endtime="20201112 12:27:19.814"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.823" endtime="20201112 12:27:19.840"></status>
</kw>
<msg timestamp="20201112 12:27:19.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.821" endtime="20201112 12:27:19.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.841" endtime="20201112 12:27:19.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.844" endtime="20201112 12:27:19.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.819" endtime="20201112 12:27:19.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.817" endtime="20201112 12:27:19.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.853" endtime="20201112 12:27:20.139"></status>
</kw>
<msg timestamp="20201112 12:27:20.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.852" endtime="20201112 12:27:20.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.143" endtime="20201112 12:27:20.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.151" endtime="20201112 12:27:20.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.849" endtime="20201112 12:27:20.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.848" endtime="20201112 12:27:20.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.158" level="INFO">${RESULT} = [{'time': 0.021910764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.021968778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.154" endtime="20201112 12:27:20.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.171" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.159" endtime="20201112 12:27:20.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.176" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.175" endtime="20201112 12:27:20.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.178" level="INFO">VALUE: [5.6528000000000134e-05, 5.5736000000000674e-05, 5.579200000000242e-05, 5.6528000000000134e-05, 5.5777999999999384e-05, 5.591699999999908e-05, 5.565299999999926e-05, 5.5750000000000244e-05, 5.63610000000013e-05, 5.587500000000037e-05, 5.5763999999999814e-05, 5.569500000000144e-05, 5.641699999999958e-05, 5.562500000000012e-05, 5.5915999999999605e-05, 5.58610000000008e-05, 5.659699999999851e-05, 5.637500000000087e-05, 5.583299999999819e-05, 5.565300000000273e-05, 5.580499999999905e-05, 5.584699999999776e-05, 5.563900000000316e-05, 5.6430000000003144e-05, 5.562500000000012e-05, 5.6429999999999675e-05, 5.637500000000087e-05, 5.6443999999999245e-05, 5.587500000000037e-05, 5.590300000000298e-05, 5.629200000000292e-05, 5.6500000000000994e-05, 5.5777999999999384e-05, 5.63610000000013e-05, 5.6305999999999023e-05, 5.5805999999998523e-05, 5.662500000000112e-05, 5.5750000000000244e-05, 5.5763999999999814e-05, 5.643099999999915e-05, 5.5750000000000244e-05, 5.5679999999998925e-05, 5.6458000000002284e-05, 5.5651999999999785e-05, 5.640300000000001e-05, 5.5693999999998495e-05, 5.6457999999998815e-05, 5.558300000000141e-05, 5.6416000000000105e-05, 5.579099999999948e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.177" endtime="20201112 12:27:20.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.172" endtime="20201112 12:27:20.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.182" endtime="20201112 12:27:20.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.185" endtime="20201112 12:27:20.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.183" endtime="20201112 12:27:20.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.180" endtime="20201112 12:27:20.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.815" endtime="20201112 12:27:20.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.815" endtime="20201112 12:27:20.206"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.214" endtime="20201112 12:27:20.231"></status>
</kw>
<msg timestamp="20201112 12:27:20.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.213" endtime="20201112 12:27:20.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.232" endtime="20201112 12:27:20.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.235" endtime="20201112 12:27:20.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.210" endtime="20201112 12:27:20.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.208" endtime="20201112 12:27:20.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.245" endtime="20201112 12:27:20.529"></status>
</kw>
<msg timestamp="20201112 12:27:20.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.243" endtime="20201112 12:27:20.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.534" endtime="20201112 12:27:20.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.542" endtime="20201112 12:27:20.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.241" endtime="20201112 12:27:20.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.239" endtime="20201112 12:27:20.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.549" level="INFO">${RESULT} = [{'time': 0.021960042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.697299999999836e-05, 'source_diff': 5.697299999999836e-05}, {'time': 0.022019042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.546" endtime="20201112 12:27:20.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.550" endtime="20201112 12:27:20.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.567" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.566" endtime="20201112 12:27:20.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.569" level="INFO">VALUE: [5.697299999999836e-05, 5.684799999999823e-05, 5.683399999999866e-05, 5.7499999999998525e-05, 5.73480000000022e-05, 5.745899999999929e-05, 5.743100000000015e-05, 5.743100000000015e-05, 5.7430000000000675e-05, 5.738900000000144e-05, 5.7444000000000245e-05, 5.73610000000023e-05, 5.73610000000023e-05, 5.68610000000018e-05, 5.744499999999972e-05, 5.6721999999998635e-05, 5.741700000000058e-05, 5.666699999999983e-05, 5.683299999999919e-05, 5.659699999999851e-05, 5.6750000000001244e-05, 5.7542000000000704e-05, 5.758299999999994e-05, 5.7527999999997664e-05, 5.683400000000213e-05, 5.6735999999998205e-05, 5.6819999999999093e-05, 5.666699999999983e-05, 5.669500000000244e-05, 5.6722000000002104e-05, 5.7402000000001535e-05, 5.663900000000069e-05, 5.7569999999999844e-05, 5.743100000000015e-05, 5.759800000000245e-05, 5.7319999999999593e-05, 5.6693999999999495e-05, 5.7416000000001105e-05, 5.6916000000000605e-05, 5.7514000000001564e-05, 5.6916000000000605e-05, 5.6693999999999495e-05, 5.680500000000005e-05, 5.65549999999998e-05, 5.68610000000018e-05, 5.663900000000069e-05, 5.745899999999929e-05, 5.683299999999919e-05, 5.6707999999999065e-05, 5.740300000000101e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.568" endtime="20201112 12:27:20.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.563" endtime="20201112 12:27:20.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.573" endtime="20201112 12:27:20.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.576" endtime="20201112 12:27:20.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.575" endtime="20201112 12:27:20.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.571" endtime="20201112 12:27:20.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.207" endtime="20201112 12:27:20.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.206" endtime="20201112 12:27:20.597"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.606" endtime="20201112 12:27:20.622"></status>
</kw>
<msg timestamp="20201112 12:27:20.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.604" endtime="20201112 12:27:20.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.624" endtime="20201112 12:27:20.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.626" endtime="20201112 12:27:20.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.601" endtime="20201112 12:27:20.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.599" endtime="20201112 12:27:20.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.636" endtime="20201112 12:27:20.920"></status>
</kw>
<msg timestamp="20201112 12:27:20.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.635" endtime="20201112 12:27:20.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.925" endtime="20201112 12:27:20.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.933" endtime="20201112 12:27:20.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.632" endtime="20201112 12:27:20.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.631" endtime="20201112 12:27:20.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.939" level="INFO">${RESULT} = [{'time': 0.021911167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8249999999999275e-05, 'source_diff': 5.8249999999999275e-05}, {'time': 0.021971181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:20.936" endtime="20201112 12:27:20.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.940" endtime="20201112 12:27:20.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.958" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.957" endtime="20201112 12:27:20.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.961" level="INFO">VALUE: [5.8249999999999275e-05, 5.7749999999998775e-05, 5.769499999999997e-05, 5.786200000000227e-05, 5.7637999999998746e-05, 5.83749999999994e-05, 5.858300000000094e-05, 5.756900000000037e-05, 5.83749999999994e-05, 5.791700000000108e-05, 5.7680000000000925e-05, 5.78749999999989e-05, 5.779099999999801e-05, 5.786099999999933e-05, 5.7680000000000925e-05, 5.7708000000000065e-05, 5.765299999999779e-05, 5.7778000000001384e-05, 5.834699999999679e-05, 5.786099999999933e-05, 5.840300000000201e-05, 5.769499999999997e-05, 5.841700000000158e-05, 5.76810000000004e-05, 5.762499999999865e-05, 5.780499999999758e-05, 5.76810000000004e-05, 5.7820000000000094e-05, 5.7791999999997484e-05, 5.779099999999801e-05, 5.838900000000244e-05, 5.761099999999908e-05, 5.7901999999998566e-05, 5.8471999999996915e-05, 5.7694000000000495e-05, 5.762499999999865e-05, 5.7971999999999885e-05, 5.779099999999801e-05, 5.779099999999801e-05, 5.834700000000026e-05, 5.840299999999854e-05, 5.7680000000000925e-05, 5.765300000000126e-05, 5.7708000000000065e-05, 5.78749999999989e-05, 5.838899999999897e-05, 5.7763999999998344e-05, 5.8514000000002564e-05, 5.863899999999922e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.959" endtime="20201112 12:27:20.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.955" endtime="20201112 12:27:20.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.968" endtime="20201112 12:27:20.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.971" endtime="20201112 12:27:20.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.970" endtime="20201112 12:27:20.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.966" endtime="20201112 12:27:20.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.598" endtime="20201112 12:27:20.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.597" endtime="20201112 12:27:20.992"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.001" endtime="20201112 12:27:21.017"></status>
</kw>
<msg timestamp="20201112 12:27:21.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.999" endtime="20201112 12:27:21.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.019" endtime="20201112 12:27:21.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.021" endtime="20201112 12:27:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.997" endtime="20201112 12:27:21.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.994" endtime="20201112 12:27:21.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.031" endtime="20201112 12:27:21.316"></status>
</kw>
<msg timestamp="20201112 12:27:21.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.029" endtime="20201112 12:27:21.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.320" endtime="20201112 12:27:21.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.328" endtime="20201112 12:27:21.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.027" endtime="20201112 12:27:21.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.025" endtime="20201112 12:27:21.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.335" level="INFO">${RESULT} = [{'time': 0.022013028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.894500000000122e-05, 'source_diff': 5.894500000000122e-05}, {'time': 0.022074028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.332" endtime="20201112 12:27:21.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.349" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.336" endtime="20201112 12:27:21.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.353" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.352" endtime="20201112 12:27:21.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.355" level="INFO">VALUE: [5.894500000000122e-05, 5.865299999999879e-05, 5.9665999999999886e-05, 5.8820000000001094e-05, 5.8749999999999775e-05, 5.872300000000011e-05, 5.9584000000001414e-05, 5.8915999999999136e-05, 5.9570000000001844e-05, 5.955499999999933e-05, 5.934700000000126e-05, 5.852699999999919e-05, 5.8694000000001495e-05, 5.881899999999815e-05, 5.8736000000000205e-05, 5.861100000000008e-05, 5.9500000000000525e-05, 5.8916000000002605e-05, 5.863899999999922e-05, 5.944500000000172e-05, 5.959699999999804e-05, 5.940299999999954e-05, 5.888899999999947e-05, 5.886100000000033e-05, 5.883300000000119e-05, 5.9485999999997485e-05, 5.944500000000172e-05, 5.8570000000000844e-05, 5.961100000000108e-05, 5.947299999999739e-05, 5.9570000000001844e-05, 5.8820000000001094e-05, 5.8848000000000233e-05, 5.865300000000226e-05, 5.870900000000054e-05, 5.9362000000000303e-05, 5.883300000000119e-05, 5.9486000000000955e-05, 5.8680000000001925e-05, 5.951299999999715e-05, 5.9444000000002245e-05, 5.9500000000000525e-05, 5.9402000000000066e-05, 5.8694000000001495e-05, 5.859700000000051e-05, 5.93750000000004e-05, 5.941699999999911e-05, 5.88749999999999e-05, 5.880499999999858e-05, 5.859700000000051e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.354" endtime="20201112 12:27:21.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.349" endtime="20201112 12:27:21.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.359" endtime="20201112 12:27:21.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.362" endtime="20201112 12:27:21.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.361" endtime="20201112 12:27:21.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.357" endtime="20201112 12:27:21.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.993" endtime="20201112 12:27:21.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.992" endtime="20201112 12:27:21.383"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.392" endtime="20201112 12:27:21.409"></status>
</kw>
<msg timestamp="20201112 12:27:21.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.390" endtime="20201112 12:27:21.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.410" endtime="20201112 12:27:21.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.413" endtime="20201112 12:27:21.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.388" endtime="20201112 12:27:21.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.386" endtime="20201112 12:27:21.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.423" endtime="20201112 12:27:21.708"></status>
</kw>
<msg timestamp="20201112 12:27:21.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.421" endtime="20201112 12:27:21.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.712" endtime="20201112 12:27:21.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.721" endtime="20201112 12:27:21.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.419" endtime="20201112 12:27:21.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.417" endtime="20201112 12:27:21.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.727" level="INFO">${RESULT} = [{'time': 0.021956306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.968099999999893e-05, 'source_diff': 5.968099999999893e-05}, {'time': 0.022018264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.724" endtime="20201112 12:27:21.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.728" endtime="20201112 12:27:21.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.745" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.744" endtime="20201112 12:27:21.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.748" level="INFO">VALUE: [5.968099999999893e-05, 5.961099999999761e-05, 5.9805999999999054e-05, 6.03889999999975e-05, 5.98750000000009e-05, 5.966700000000283e-05, 5.965299999999979e-05, 6.03750000000014e-05, 6.0528000000000665e-05, 5.9820000000002094e-05, 6.0514000000001095e-05, 5.970900000000154e-05, 6.061100000000208e-05, 6.051299999999815e-05, 6.0471999999998916e-05, 5.981899999999915e-05, 6.0416000000000636e-05, 5.954099999999976e-05, 5.979100000000001e-05, 6.0528000000000665e-05, 5.9750000000000775e-05, 6.038900000000097e-05, 6.0443999999999776e-05, 5.988900000000047e-05, 6.061100000000208e-05, 6.0458000000002815e-05, 6.058299999999947e-05, 5.9569999999998374e-05, 6.043099999999968e-05, 5.9750000000000775e-05, 6.036099999999836e-05, 5.9750000000000775e-05, 5.962500000000065e-05, 5.986100000000133e-05, 6.041700000000011e-05, 5.970900000000154e-05, 6.044499999999925e-05, 5.9888000000000996e-05, 5.98750000000009e-05, 6.0402000000001066e-05, 5.9665999999999886e-05, 6.034699999999879e-05, 6.0457999999999346e-05, 5.983299999999872e-05, 5.980499999999958e-05, 5.9721999999998165e-05, 6.045900000000229e-05, 5.9679999999999456e-05, 5.963900000000022e-05, 6.0485999999998485e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.746" endtime="20201112 12:27:21.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.742" endtime="20201112 12:27:21.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.751" endtime="20201112 12:27:21.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.755" endtime="20201112 12:27:21.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.753" endtime="20201112 12:27:21.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.750" endtime="20201112 12:27:21.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.384" endtime="20201112 12:27:21.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.383" endtime="20201112 12:27:21.775"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.784" endtime="20201112 12:27:21.800"></status>
</kw>
<msg timestamp="20201112 12:27:21.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.782" endtime="20201112 12:27:21.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.802" endtime="20201112 12:27:21.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.804" endtime="20201112 12:27:21.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.780" endtime="20201112 12:27:21.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.778" endtime="20201112 12:27:21.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.814" endtime="20201112 12:27:22.100"></status>
</kw>
<msg timestamp="20201112 12:27:22.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.813" endtime="20201112 12:27:22.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.104" endtime="20201112 12:27:22.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.112" endtime="20201112 12:27:22.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.810" endtime="20201112 12:27:22.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.809" endtime="20201112 12:27:22.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.119" level="INFO">${RESULT} = [{'time': 0.022361667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.140299999999807e-05, 'source_diff': 6.140299999999807e-05}, {'time': 0.022424667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.116" endtime="20201112 12:27:22.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.132" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.120" endtime="20201112 12:27:22.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.137" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.136" endtime="20201112 12:27:22.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.139" level="INFO">VALUE: [6.140299999999807e-05, 6.0819999999999624e-05, 6.138900000000197e-05, 6.086100000000233e-05, 6.0750000000001775e-05, 6.151399999999863e-05, 6.147299999999939e-05, 6.148599999999949e-05, 6.0735999999998735e-05, 6.147199999999992e-05, 6.0778000000000915e-05, 6.081900000000015e-05, 6.0721999999999166e-05, 6.0680000000000456e-05, 6.155500000000133e-05, 6.058300000000294e-05, 6.149999999999906e-05, 6.063900000000122e-05, 6.152800000000166e-05, 6.137499999999893e-05, 6.138900000000197e-05, 6.066700000000036e-05, 6.15140000000021e-05, 6.145800000000035e-05, 6.13750000000024e-05, 6.0763999999997875e-05, 6.0735999999998735e-05, 6.0778000000000915e-05, 6.143100000000068e-05, 6.149999999999906e-05, 6.066700000000036e-05, 6.138900000000197e-05, 6.162499999999918e-05, 6.144400000000078e-05, 6.152800000000166e-05, 6.0778000000000915e-05, 6.140299999999807e-05, 6.0652000000001316e-05, 6.0721999999999166e-05, 6.152699999999872e-05, 6.149999999999906e-05, 6.062500000000165e-05, 6.145799999999688e-05, 6.0707999999999596e-05, 6.0916000000001136e-05, 6.116600000000139e-05, 6.0694000000000026e-05, 6.15140000000021e-05, 6.0694000000000026e-05, 6.148599999999949e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.138" endtime="20201112 12:27:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.133" endtime="20201112 12:27:22.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.143" endtime="20201112 12:27:22.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.146" endtime="20201112 12:27:22.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.145" endtime="20201112 12:27:22.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.141" endtime="20201112 12:27:22.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.776" endtime="20201112 12:27:22.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.776" endtime="20201112 12:27:22.167"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.176" endtime="20201112 12:27:22.192"></status>
</kw>
<msg timestamp="20201112 12:27:22.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.174" endtime="20201112 12:27:22.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.194" endtime="20201112 12:27:22.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.197" endtime="20201112 12:27:22.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.172" endtime="20201112 12:27:22.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.170" endtime="20201112 12:27:22.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.206" endtime="20201112 12:27:22.493"></status>
</kw>
<msg timestamp="20201112 12:27:22.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.205" endtime="20201112 12:27:22.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.497" endtime="20201112 12:27:22.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.505" endtime="20201112 12:27:22.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.202" endtime="20201112 12:27:22.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.201" endtime="20201112 12:27:22.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.512" level="INFO">${RESULT} = [{'time': 0.022295819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.233300000000122e-05, 'source_diff': 6.233300000000122e-05}, {'time': 0.022359833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.508" endtime="20201112 12:27:22.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.526" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.513" endtime="20201112 12:27:22.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.531" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.530" endtime="20201112 12:27:22.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.533" level="INFO">VALUE: [6.233300000000122e-05, 6.1888999999999e-05, 6.258300000000147e-05, 6.250000000000006e-05, 6.240299999999907e-05, 6.236099999999689e-05, 6.259700000000104e-05, 6.175000000000277e-05, 6.172200000000017e-05, 6.165300000000179e-05, 6.181900000000115e-05, 6.163900000000222e-05, 6.25279999999992e-05, 6.251399999999963e-05, 6.166700000000136e-05, 6.25279999999992e-05, 6.163900000000222e-05, 6.166699999999789e-05, 6.166700000000136e-05, 6.163900000000222e-05, 6.181900000000115e-05, 6.161199999999908e-05, 6.247200000000092e-05, 6.23889999999995e-05, 6.23889999999995e-05, 6.24439999999983e-05, 6.248600000000049e-05, 6.177699999999897e-05, 6.255499999999886e-05, 6.15690000000009e-05, 6.2582999999998e-05, 6.179200000000148e-05, 6.25279999999992e-05, 6.17080000000006e-05, 6.216699999999839e-05, 6.216700000000186e-05, 6.243099999999821e-05, 6.194400000000128e-05, 6.23889999999995e-05, 6.16950000000005e-05, 6.236100000000036e-05, 6.157000000000037e-05, 6.182000000000062e-05, 6.157000000000037e-05, 6.180600000000105e-05, 6.241699999999864e-05, 6.165299999999832e-05, 6.237499999999993e-05, 6.187499999999943e-05, 6.254199999999877e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.532" endtime="20201112 12:27:22.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.527" endtime="20201112 12:27:22.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.537" endtime="20201112 12:27:22.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.540" endtime="20201112 12:27:22.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.538" endtime="20201112 12:27:22.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.535" endtime="20201112 12:27:22.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.168" endtime="20201112 12:27:22.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.168" endtime="20201112 12:27:22.561"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.570" endtime="20201112 12:27:22.587"></status>
</kw>
<msg timestamp="20201112 12:27:22.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.569" endtime="20201112 12:27:22.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.588" endtime="20201112 12:27:22.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.591" endtime="20201112 12:27:22.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.566" endtime="20201112 12:27:22.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.564" endtime="20201112 12:27:22.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.601" endtime="20201112 12:27:22.886"></status>
</kw>
<msg timestamp="20201112 12:27:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.599" endtime="20201112 12:27:22.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.891" endtime="20201112 12:27:22.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.899" endtime="20201112 12:27:22.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.597" endtime="20201112 12:27:22.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.595" endtime="20201112 12:27:22.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.905" level="INFO">${RESULT} = [{'time': 0.022675639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.32080000000021e-05, 'source_diff': 6.32080000000021e-05}, {'time': 0.022740694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:22.902" endtime="20201112 12:27:22.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.906" endtime="20201112 12:27:22.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.923" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.922" endtime="20201112 12:27:22.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.926" level="INFO">VALUE: [6.32080000000021e-05, 6.283299999999825e-05, 6.282000000000162e-05, 6.266700000000236e-05, 6.345900000000182e-05, 6.27500000000003e-05, 6.295799999999838e-05, 6.316700000000286e-05, 6.276399999999988e-05, 6.348599999999802e-05, 6.350000000000106e-05, 6.280499999999911e-05, 6.283300000000172e-05, 6.350000000000106e-05, 6.272200000000117e-05, 6.350000000000106e-05, 6.363900000000075e-05, 6.262500000000018e-05, 6.361099999999814e-05, 6.336099999999789e-05, 6.283299999999825e-05, 6.268100000000193e-05, 6.291699999999914e-05, 6.2889e-05, 6.348599999999802e-05, 6.348599999999802e-05, 6.266699999999889e-05, 6.277799999999945e-05, 6.280599999999859e-05, 6.336099999999789e-05, 6.331999999999866e-05, 6.336199999999736e-05, 6.268100000000193e-05, 6.256899999999843e-05, 6.262500000000018e-05, 6.351399999999716e-05, 6.354100000000029e-05, 6.348599999999802e-05, 6.336099999999789e-05, 6.27500000000003e-05, 6.267999999999899e-05, 6.27219999999977e-05, 6.33890000000005e-05, 6.27500000000003e-05, 6.35280000000002e-05, 6.345800000000235e-05, 6.34439999999993e-05, 6.318099999999896e-05, 6.277799999999945e-05, 6.286099999999739e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.924" endtime="20201112 12:27:22.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.920" endtime="20201112 12:27:22.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.929" endtime="20201112 12:27:22.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.933" endtime="20201112 12:27:22.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.931" endtime="20201112 12:27:22.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.928" endtime="20201112 12:27:22.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.562" endtime="20201112 12:27:22.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.561" endtime="20201112 12:27:22.953"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.962" endtime="20201112 12:27:22.979"></status>
</kw>
<msg timestamp="20201112 12:27:22.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.961" endtime="20201112 12:27:22.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.981" endtime="20201112 12:27:22.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.983" endtime="20201112 12:27:22.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.958" endtime="20201112 12:27:22.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.956" endtime="20201112 12:27:22.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.993" endtime="20201112 12:27:23.279"></status>
</kw>
<msg timestamp="20201112 12:27:23.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.991" endtime="20201112 12:27:23.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.283" endtime="20201112 12:27:23.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.291" endtime="20201112 12:27:23.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.989" endtime="20201112 12:27:23.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.987" endtime="20201112 12:27:23.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.298" level="INFO">${RESULT} = [{'time': 0.021998208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381900000000315e-05, 'source_diff': 6.381900000000315e-05}, {'time': 0.022064208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.295" endtime="20201112 12:27:23.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.299" endtime="20201112 12:27:23.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.316" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.315" endtime="20201112 12:27:23.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.318" level="INFO">VALUE: [6.381900000000315e-05, 6.37639999999974e-05, 6.4583e-05, 6.434699999999932e-05, 6.454100000000129e-05, 6.380500000000011e-05, 6.445799999999988e-05, 6.44440000000003e-05, 6.447199999999945e-05, 6.37219999999987e-05, 6.437500000000193e-05, 6.391700000000014e-05, 6.459699999999957e-05, 6.451399999999816e-05, 6.380599999999959e-05, 6.391700000000014e-05, 6.463899999999828e-05, 6.432000000000312e-05, 6.365300000000032e-05, 6.443100000000021e-05, 6.461099999999914e-05, 6.373599999999827e-05, 6.365200000000085e-05, 6.445799999999988e-05, 6.437499999999846e-05, 6.37219999999987e-05, 6.383299999999925e-05, 6.440199999999813e-05, 6.39020000000011e-05, 6.441600000000117e-05, 6.462499999999871e-05, 6.363900000000075e-05, 6.416700000000039e-05, 6.444399999999684e-05, 6.445799999999988e-05, 6.448599999999902e-05, 6.441700000000064e-05, 6.390300000000057e-05, 6.451400000000163e-05, 6.386099999999839e-05, 6.441700000000064e-05, 6.384699999999882e-05, 6.38479999999983e-05, 6.383399999999873e-05, 6.462499999999871e-05, 6.3889000000001e-05, 6.358399999999848e-05, 6.373700000000121e-05, 6.459700000000304e-05, 6.434699999999932e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.317" endtime="20201112 12:27:23.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.312" endtime="20201112 12:27:23.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.322" endtime="20201112 12:27:23.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.325" endtime="20201112 12:27:23.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.323" endtime="20201112 12:27:23.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.320" endtime="20201112 12:27:23.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.954" endtime="20201112 12:27:23.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.954" endtime="20201112 12:27:23.346"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.354" endtime="20201112 12:27:23.371"></status>
</kw>
<msg timestamp="20201112 12:27:23.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.353" endtime="20201112 12:27:23.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.373" endtime="20201112 12:27:23.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.375" endtime="20201112 12:27:23.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.350" endtime="20201112 12:27:23.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.348" endtime="20201112 12:27:23.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.385" endtime="20201112 12:27:23.669"></status>
</kw>
<msg timestamp="20201112 12:27:23.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.384" endtime="20201112 12:27:23.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.673" endtime="20201112 12:27:23.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.681" endtime="20201112 12:27:23.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.381" endtime="20201112 12:27:23.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.379" endtime="20201112 12:27:23.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.688" level="INFO">${RESULT} = [{'time': 0.022418667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.469500000000003e-05, 'source_diff': 6.469500000000003e-05}, {'time': 0.022486667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.685" endtime="20201112 12:27:23.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.702" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.689" endtime="20201112 12:27:23.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.706" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.705" endtime="20201112 12:27:23.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.708" level="INFO">VALUE: [6.469500000000003e-05, 6.533399999999676e-05, 6.548600000000002e-05, 6.476400000000188e-05, 6.542999999999827e-05, 6.463800000000228e-05, 6.547200000000045e-05, 6.461099999999914e-05, 6.55969999999971e-05, 6.4583e-05, 6.462500000000218e-05, 6.544399999999784e-05, 6.491600000000167e-05, 6.53890000000025e-05, 6.487500000000243e-05, 6.55280000000022e-05, 6.484699999999982e-05, 6.537499999999946e-05, 6.551399999999916e-05, 6.463900000000175e-05, 6.555599999999787e-05, 6.47219999999997e-05, 6.545900000000035e-05, 6.455600000000034e-05, 6.559700000000057e-05, 6.537499999999946e-05, 6.536099999999989e-05, 6.532000000000066e-05, 6.54029999999986e-05, 6.537499999999946e-05, 6.497199999999995e-05, 6.474999999999884e-05, 6.533300000000075e-05, 6.548600000000002e-05, 6.474999999999884e-05, 6.459700000000304e-05, 6.467999999999752e-05, 6.543000000000174e-05, 6.556899999999796e-05, 6.547200000000045e-05, 6.469399999999709e-05, 6.474999999999884e-05, 6.536099999999989e-05, 6.486099999999939e-05, 6.55700000000009e-05, 6.486100000000286e-05, 6.488899999999853e-05, 6.465300000000132e-05, 6.53890000000025e-05, 6.490300000000157e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.707" endtime="20201112 12:27:23.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.702" endtime="20201112 12:27:23.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.712" endtime="20201112 12:27:23.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.715" endtime="20201112 12:27:23.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.714" endtime="20201112 12:27:23.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.710" endtime="20201112 12:27:23.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.347" endtime="20201112 12:27:23.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.346" endtime="20201112 12:27:23.736"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.745" endtime="20201112 12:27:23.761"></status>
</kw>
<msg timestamp="20201112 12:27:23.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.743" endtime="20201112 12:27:23.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.763" endtime="20201112 12:27:23.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.765" endtime="20201112 12:27:23.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.741" endtime="20201112 12:27:23.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.739" endtime="20201112 12:27:23.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.775" endtime="20201112 12:27:24.060"></status>
</kw>
<msg timestamp="20201112 12:27:24.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.774" endtime="20201112 12:27:24.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.065" endtime="20201112 12:27:24.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.073" endtime="20201112 12:27:24.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.771" endtime="20201112 12:27:24.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.769" endtime="20201112 12:27:24.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.080" level="INFO">${RESULT} = [{'time': 0.021999639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.643100000000221e-05, 'source_diff': 6.643100000000221e-05}, {'time': 0.022067639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.076" endtime="20201112 12:27:24.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.094" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.081" endtime="20201112 12:27:24.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.098" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.097" endtime="20201112 12:27:24.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.101" level="INFO">VALUE: [6.643100000000221e-05, 6.55700000000009e-05, 6.645799999999841e-05, 6.652799999999973e-05, 6.565300000000232e-05, 6.558400000000048e-05, 6.582000000000116e-05, 6.580599999999812e-05, 6.650000000000059e-05, 6.651400000000016e-05, 6.631899999999871e-05, 6.565199999999938e-05, 6.636100000000089e-05, 6.642999999999927e-05, 6.649999999999712e-05, 6.57220000000007e-05, 6.577800000000245e-05, 6.637499999999699e-05, 6.587499999999996e-05, 6.647200000000145e-05, 6.563899999999928e-05, 6.591699999999867e-05, 6.636100000000089e-05, 6.584699999999735e-05, 6.565299999999885e-05, 6.650000000000059e-05, 6.586100000000039e-05, 6.644500000000178e-05, 6.563899999999928e-05, 6.588899999999953e-05, 6.643100000000221e-05, 6.579199999999855e-05, 6.576400000000288e-05, 6.565299999999885e-05, 6.616699999999892e-05, 6.636200000000037e-05, 6.64440000000023e-05, 6.581899999999821e-05, 6.565199999999938e-05, 6.574999999999984e-05, 6.652700000000025e-05, 6.566599999999895e-05, 6.567999999999852e-05, 6.561100000000014e-05, 6.636100000000089e-05, 6.565299999999885e-05, 6.563900000000275e-05, 6.573600000000027e-05, 6.661100000000114e-05, 6.586100000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.099" endtime="20201112 12:27:24.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.095" endtime="20201112 12:27:24.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.104" endtime="20201112 12:27:24.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.108" endtime="20201112 12:27:24.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.106" endtime="20201112 12:27:24.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.103" endtime="20201112 12:27:24.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.737" endtime="20201112 12:27:24.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.737" endtime="20201112 12:27:24.129"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.137" endtime="20201112 12:27:24.155"></status>
</kw>
<msg timestamp="20201112 12:27:24.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.136" endtime="20201112 12:27:24.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.156" endtime="20201112 12:27:24.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.159" endtime="20201112 12:27:24.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.133" endtime="20201112 12:27:24.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.131" endtime="20201112 12:27:24.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.168" endtime="20201112 12:27:24.454"></status>
</kw>
<msg timestamp="20201112 12:27:24.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.167" endtime="20201112 12:27:24.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.458" endtime="20201112 12:27:24.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.466" endtime="20201112 12:27:24.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.164" endtime="20201112 12:27:24.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.163" endtime="20201112 12:27:24.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.473" level="INFO">${RESULT} = [{'time': 0.022000667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.723600000000177e-05, 'source_diff': 6.723600000000177e-05}, {'time': 0.022069667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.469" endtime="20201112 12:27:24.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.486" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.474" endtime="20201112 12:27:24.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.491" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.490" endtime="20201112 12:27:24.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.493" level="INFO">VALUE: [6.723600000000177e-05, 6.673600000000127e-05, 6.752800000000073e-05, 6.662500000000071e-05, 6.670800000000213e-05, 6.743000000000027e-05, 6.687500000000096e-05, 6.662500000000071e-05, 6.670800000000213e-05, 6.665200000000038e-05, 6.668000000000299e-05, 6.670800000000213e-05, 6.69030000000001e-05, 6.661100000000114e-05, 6.670799999999866e-05, 6.665299999999985e-05, 6.670799999999866e-05, 6.666699999999942e-05, 6.680600000000259e-05, 6.750000000000159e-05, 6.683300000000225e-05, 6.688900000000053e-05, 6.687500000000096e-05, 6.743099999999974e-05, 6.663900000000028e-05, 6.679199999999955e-05, 6.681999999999869e-05, 6.744399999999984e-05, 6.758299999999953e-05, 6.736100000000189e-05, 6.67359999999978e-05, 6.658299999999853e-05, 6.691700000000314e-05, 6.677799999999998e-05, 6.686100000000139e-05, 6.751399999999769e-05, 6.684700000000182e-05, 6.737500000000146e-05, 6.751399999999769e-05, 6.67640000000004e-05, 6.745799999999941e-05, 6.679199999999955e-05, 6.684700000000182e-05, 6.662500000000071e-05, 6.687500000000096e-05, 6.675000000000084e-05, 6.755599999999987e-05, 6.655599999999887e-05, 6.745899999999888e-05, 6.670799999999866e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.492" endtime="20201112 12:27:24.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.487" endtime="20201112 12:27:24.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.497" endtime="20201112 12:27:24.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.500" endtime="20201112 12:27:24.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.498" endtime="20201112 12:27:24.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.495" endtime="20201112 12:27:24.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.129" endtime="20201112 12:27:24.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.129" endtime="20201112 12:27:24.521"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.529" endtime="20201112 12:27:24.547"></status>
</kw>
<msg timestamp="20201112 12:27:24.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.528" endtime="20201112 12:27:24.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.548" endtime="20201112 12:27:24.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.551" endtime="20201112 12:27:24.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.525" endtime="20201112 12:27:24.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.523" endtime="20201112 12:27:24.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.560" endtime="20201112 12:27:24.846"></status>
</kw>
<msg timestamp="20201112 12:27:24.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.559" endtime="20201112 12:27:24.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.850" endtime="20201112 12:27:24.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.858" endtime="20201112 12:27:24.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.556" endtime="20201112 12:27:24.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.555" endtime="20201112 12:27:24.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.865" level="INFO">${RESULT} = [{'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.80559999999969e-05, 'source_diff': 6.80559999999969e-05}, {'time': 0.022042153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:24.861" endtime="20201112 12:27:24.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.878" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.866" endtime="20201112 12:27:24.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.882" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.881" endtime="20201112 12:27:24.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.885" level="INFO">VALUE: [6.80559999999969e-05, 6.781999999999969e-05, 6.841700000000117e-05, 6.756999999999944e-05, 6.768099999999999e-05, 6.779199999999708e-05, 6.855600000000087e-05, 6.773600000000227e-05, 6.857000000000044e-05, 6.774999999999837e-05, 6.841599999999823e-05, 6.84160000000017e-05, 6.85420000000013e-05, 6.787500000000196e-05, 6.787500000000196e-05, 6.77770000000015e-05, 6.854099999999835e-05, 6.849999999999912e-05, 6.852699999999878e-05, 6.781900000000021e-05, 6.768000000000052e-05, 6.84160000000017e-05, 6.834699999999985e-05, 6.836099999999942e-05, 6.783300000000325e-05, 6.77359999999988e-05, 6.847199999999998e-05, 6.843100000000074e-05, 6.772199999999923e-05, 6.75969999999991e-05, 6.837499999999899e-05, 6.791700000000067e-05, 6.77640000000014e-05, 6.765300000000085e-05, 6.783399999999926e-05, 6.768099999999999e-05, 6.843100000000074e-05, 6.833300000000028e-05, 6.786099999999892e-05, 6.769400000000009e-05, 6.790200000000163e-05, 6.847199999999998e-05, 6.787499999999849e-05, 6.774999999999837e-05, 6.862499999999924e-05, 6.845800000000041e-05, 6.84030000000016e-05, 6.77359999999988e-05, 6.775000000000184e-05, 6.852799999999826e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.883" endtime="20201112 12:27:24.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.879" endtime="20201112 12:27:24.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.888" endtime="20201112 12:27:24.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.892" endtime="20201112 12:27:24.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.890" endtime="20201112 12:27:24.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.887" endtime="20201112 12:27:24.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.522" endtime="20201112 12:27:24.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.521" endtime="20201112 12:27:24.913"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.921" endtime="20201112 12:27:24.938"></status>
</kw>
<msg timestamp="20201112 12:27:24.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.920" endtime="20201112 12:27:24.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.940" endtime="20201112 12:27:24.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.942" endtime="20201112 12:27:24.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.917" endtime="20201112 12:27:24.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.915" endtime="20201112 12:27:24.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.952" endtime="20201112 12:27:25.237"></status>
</kw>
<msg timestamp="20201112 12:27:25.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.950" endtime="20201112 12:27:25.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.241" endtime="20201112 12:27:25.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.249" endtime="20201112 12:27:25.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.948" endtime="20201112 12:27:25.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.946" endtime="20201112 12:27:25.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.256" level="INFO">${RESULT} = [{'time': 0.021967333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.920799999999769e-05, 'source_diff': 6.920799999999769e-05}, {'time': 0.022039347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.252" endtime="20201112 12:27:25.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.257" endtime="20201112 12:27:25.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.274" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.273" endtime="20201112 12:27:25.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.276" level="INFO">VALUE: [6.920799999999769e-05, 6.948600000000055e-05, 6.945900000000088e-05, 6.952799999999926e-05, 6.95559999999984e-05, 6.954199999999883e-05, 6.886099999999992e-05, 6.872200000000023e-05, 6.883300000000078e-05, 6.861099999999967e-05, 6.888899999999906e-05, 6.954199999999883e-05, 6.89030000000021e-05, 6.877799999999851e-05, 6.879200000000155e-05, 6.888899999999906e-05, 6.962500000000024e-05, 6.887499999999949e-05, 6.937499999999999e-05, 6.951399999999969e-05, 6.958299999999806e-05, 6.875000000000284e-05, 6.877699999999903e-05, 6.877800000000198e-05, 6.867999999999805e-05, 6.866599999999848e-05, 6.954199999999883e-05, 6.861099999999967e-05, 6.933300000000128e-05, 6.951399999999969e-05, 6.94030000000026e-05, 6.883300000000078e-05, 6.944500000000131e-05, 6.940299999999913e-05, 6.95559999999984e-05, 6.937499999999999e-05, 6.958300000000153e-05, 6.883299999999731e-05, 6.95970000000011e-05, 6.861099999999967e-05, 6.95979999999971e-05, 6.891599999999873e-05, 6.937499999999999e-05, 6.855500000000139e-05, 6.937499999999999e-05, 6.858300000000053e-05, 6.947199999999751e-05, 6.887500000000296e-05, 6.917999999999855e-05, 6.941599999999923e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.275" endtime="20201112 12:27:25.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.270" endtime="20201112 12:27:25.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.280" endtime="20201112 12:27:25.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.283" endtime="20201112 12:27:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.282" endtime="20201112 12:27:25.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.278" endtime="20201112 12:27:25.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.913" endtime="20201112 12:27:25.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.913" endtime="20201112 12:27:25.304"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.312" endtime="20201112 12:27:25.330"></status>
</kw>
<msg timestamp="20201112 12:27:25.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.311" endtime="20201112 12:27:25.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.331" endtime="20201112 12:27:25.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.334" endtime="20201112 12:27:25.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.308" endtime="20201112 12:27:25.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.306" endtime="20201112 12:27:25.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.343" endtime="20201112 12:27:25.629"></status>
</kw>
<msg timestamp="20201112 12:27:25.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:25.342" endtime="20201112 12:27:25.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:25.633" endtime="20201112 12:27:25.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.641" endtime="20201112 12:27:25.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.339" endtime="20201112 12:27:25.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.338" endtime="20201112 12:27:25.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.648" level="INFO">${RESULT} = [{'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.984700000000135e-05, 'source_diff': 6.984700000000135e-05}, {'time': 0.021959778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:25.645" endtime="20201112 12:27:25.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.649" endtime="20201112 12:27:25.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.667" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.666" endtime="20201112 12:27:25.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.669" level="INFO">VALUE: [6.984700000000135e-05, 6.986100000000092e-05, 6.972199999999776e-05, 6.990299999999963e-05, 6.976399999999994e-05, 6.975000000000037e-05, 6.988900000000006e-05, 7.05420000000033e-05, 7.034800000000133e-05, 7.045900000000188e-05, 7.050000000000112e-05, 6.976399999999994e-05, 6.981899999999874e-05, 6.962500000000024e-05, 6.969400000000209e-05, 6.986100000000092e-05, 7.05689999999995e-05, 7.045799999999894e-05, 6.988900000000006e-05, 6.970800000000166e-05, 7.033299999999881e-05, 6.95420000000023e-05, 7.034700000000185e-05, 6.986100000000092e-05, 6.987500000000049e-05, 6.962500000000024e-05, 7.058300000000253e-05, 6.980599999999865e-05, 6.980599999999865e-05, 7.052800000000026e-05, 7.04169999999997e-05, 7.037499999999752e-05, 6.97230000000007e-05, 6.988900000000006e-05, 7.016699999999945e-05, 6.969399999999862e-05, 7.048599999999808e-05, 6.969400000000209e-05, 7.066699999999995e-05, 6.961100000000067e-05, 6.988900000000006e-05, 7.036099999999795e-05, 6.966599999999948e-05, 6.969400000000209e-05, 6.968099999999852e-05, 6.987499999999702e-05, 7.05559999999994e-05, 7.036099999999795e-05, 7.05559999999994e-05, 6.9584000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.668" endtime="20201112 12:27:25.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.663" endtime="20201112 12:27:25.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.673" endtime="20201112 12:27:25.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.676" endtime="20201112 12:27:25.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.675" endtime="20201112 12:27:25.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.671" endtime="20201112 12:27:25.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.305" endtime="20201112 12:27:25.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.304" endtime="20201112 12:27:25.697"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.706" endtime="20201112 12:27:25.722"></status>
</kw>
<msg timestamp="20201112 12:27:25.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.704" endtime="20201112 12:27:25.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.724" endtime="20201112 12:27:25.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.726" endtime="20201112 12:27:25.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.702" endtime="20201112 12:27:25.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.700" endtime="20201112 12:27:25.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.736" endtime="20201112 12:27:26.022"></status>
</kw>
<msg timestamp="20201112 12:27:26.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.735" endtime="20201112 12:27:26.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.026" endtime="20201112 12:27:26.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.034" endtime="20201112 12:27:26.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.732" endtime="20201112 12:27:26.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.731" endtime="20201112 12:27:26.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.041" level="INFO">${RESULT} = [{'time': 0.021978208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.133299999999981e-05, 'source_diff': 7.133299999999981e-05}, {'time': 0.022052208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.038" endtime="20201112 12:27:26.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.054" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.042" endtime="20201112 12:27:26.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.059" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.058" endtime="20201112 12:27:26.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.061" level="INFO">VALUE: [7.133299999999981e-05, 7.134699999999938e-05, 7.066699999999995e-05, 7.080599999999965e-05, 7.073599999999833e-05, 7.087499999999802e-05, 7.136100000000242e-05, 7.140300000000113e-05, 7.087499999999802e-05, 7.087500000000149e-05, 7.140299999999766e-05, 7.06109999999982e-05, 7.081999999999922e-05, 7.077800000000051e-05, 7.069499999999909e-05, 7.05979999999981e-05, 7.09170000000002e-05, 7.141600000000123e-05, 7.072199999999876e-05, 7.152799999999779e-05, 7.072200000000223e-05, 7.148599999999908e-05, 7.091600000000073e-05, 7.147199999999951e-05, 7.156999999999997e-05, 7.136099999999895e-05, 7.081899999999974e-05, 7.14170000000007e-05, 7.084800000000183e-05, 7.066699999999995e-05, 7.134699999999938e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.076400000000094e-05, 7.070899999999866e-05, 7.077800000000051e-05, 7.070900000000213e-05, 7.069499999999909e-05, 7.150000000000212e-05, 7.055600000000287e-05, 7.137499999999852e-05, 7.134799999999886e-05, 7.134800000000233e-05, 7.088800000000159e-05, 7.152699999999831e-05, 7.07499999999979e-05, 7.133299999999981e-05, 7.090200000000116e-05, 7.081899999999974e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.060" endtime="20201112 12:27:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.055" endtime="20201112 12:27:26.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.069" endtime="20201112 12:27:26.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.072" endtime="20201112 12:27:26.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.071" endtime="20201112 12:27:26.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.067" endtime="20201112 12:27:26.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.698" endtime="20201112 12:27:26.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.698" endtime="20201112 12:27:26.093"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.102" endtime="20201112 12:27:26.118"></status>
</kw>
<msg timestamp="20201112 12:27:26.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.100" endtime="20201112 12:27:26.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.120" endtime="20201112 12:27:26.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.122" endtime="20201112 12:27:26.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.098" endtime="20201112 12:27:26.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.096" endtime="20201112 12:27:26.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.132" endtime="20201112 12:27:26.418"></status>
</kw>
<msg timestamp="20201112 12:27:26.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.131" endtime="20201112 12:27:26.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.422" endtime="20201112 12:27:26.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.430" endtime="20201112 12:27:26.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.128" endtime="20201112 12:27:26.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.126" endtime="20201112 12:27:26.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.437" level="INFO">${RESULT} = [{'time': 0.022040653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208400000000004e-05, 'source_diff': 7.208400000000004e-05}, {'time': 0.022115667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.433" endtime="20201112 12:27:26.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.450" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.438" endtime="20201112 12:27:26.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.454" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.453" endtime="20201112 12:27:26.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.457" level="INFO">VALUE: [7.208400000000004e-05, 7.248600000000008e-05, 7.237499999999952e-05, 7.190299999999816e-05, 7.170899999999966e-05, 7.168100000000052e-05, 7.18620000000024e-05, 7.186099999999945e-05, 7.251299999999974e-05, 7.184699999999988e-05, 7.245800000000094e-05, 7.179099999999813e-05, 7.186099999999945e-05, 7.252800000000226e-05, 7.238899999999909e-05, 7.177799999999804e-05, 7.172199999999976e-05, 7.152799999999779e-05, 7.172199999999976e-05, 7.186099999999945e-05, 7.237499999999952e-05, 7.16109999999992e-05, 7.186099999999945e-05, 7.165299999999791e-05, 7.25560000000014e-05, 7.244500000000084e-05, 7.243100000000127e-05, 7.254199999999836e-05, 7.18620000000024e-05, 7.251399999999922e-05, 7.163900000000181e-05, 7.190199999999869e-05, 7.24300000000018e-05, 7.163900000000181e-05, 7.177799999999804e-05, 7.163899999999834e-05, 7.26110000000002e-05, 7.238899999999909e-05, 7.251399999999922e-05, 7.251399999999922e-05, 7.247200000000051e-05, 7.240300000000213e-05, 7.166700000000095e-05, 7.187499999999902e-05, 7.241699999999823e-05, 7.247200000000051e-05, 7.169500000000009e-05, 7.216699999999798e-05, 7.24170000000017e-05, 7.249999999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.456" endtime="20201112 12:27:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.451" endtime="20201112 12:27:26.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.460" endtime="20201112 12:27:26.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.464" endtime="20201112 12:27:26.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.462" endtime="20201112 12:27:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.459" endtime="20201112 12:27:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.094" endtime="20201112 12:27:26.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.093" endtime="20201112 12:27:26.485"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.493" endtime="20201112 12:27:26.510"></status>
</kw>
<msg timestamp="20201112 12:27:26.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.492" endtime="20201112 12:27:26.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.512" endtime="20201112 12:27:26.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.514" endtime="20201112 12:27:26.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.489" endtime="20201112 12:27:26.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.487" endtime="20201112 12:27:26.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.524" endtime="20201112 12:27:26.810"></status>
</kw>
<msg timestamp="20201112 12:27:26.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:26.522" endtime="20201112 12:27:26.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:26.814" endtime="20201112 12:27:26.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.822" endtime="20201112 12:27:26.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.520" endtime="20201112 12:27:26.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.518" endtime="20201112 12:27:26.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.829" level="INFO">${RESULT} = [{'time': 0.021929472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.297199999999754e-05, 'source_diff': 7.297199999999754e-05}, {'time': 0.022004486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.826" endtime="20201112 12:27:26.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.830" endtime="20201112 12:27:26.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.847" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.846" endtime="20201112 12:27:26.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.849" level="INFO">VALUE: [7.297199999999754e-05, 7.265299999999891e-05, 7.35829999999986e-05, 7.336100000000095e-05, 7.294500000000134e-05, 7.251399999999922e-05, 7.341699999999923e-05, 7.266699999999848e-05, 7.358300000000206e-05, 7.352799999999979e-05, 7.348600000000108e-05, 7.290299999999916e-05, 7.329199999999911e-05, 7.277799999999904e-05, 7.267999999999858e-05, 7.338800000000062e-05, 7.362500000000077e-05, 7.258400000000054e-05, 7.280599999999818e-05, 7.330500000000267e-05, 7.35690000000025e-05, 7.355499999999945e-05, 7.281899999999827e-05, 7.259700000000063e-05, 7.277799999999904e-05, 7.347199999999804e-05, 7.347200000000151e-05, 7.342999999999933e-05, 7.283300000000131e-05, 7.292999999999883e-05, 7.273600000000033e-05, 7.272199999999729e-05, 7.348599999999761e-05, 7.257000000000097e-05, 7.316699999999898e-05, 7.293100000000177e-05, 7.29309999999983e-05, 7.284800000000036e-05, 7.277799999999904e-05, 7.337500000000052e-05, 7.268099999999805e-05, 7.347200000000151e-05, 7.337500000000052e-05, 7.341699999999923e-05, 7.345799999999847e-05, 7.27499999999999e-05, 7.341600000000323e-05, 7.270800000000119e-05, 7.342999999999933e-05, 7.355599999999893e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.848" endtime="20201112 12:27:26.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.843" endtime="20201112 12:27:26.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.853" endtime="20201112 12:27:26.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.856" endtime="20201112 12:27:26.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.855" endtime="20201112 12:27:26.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.851" endtime="20201112 12:27:26.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.486" endtime="20201112 12:27:26.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.485" endtime="20201112 12:27:26.877"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.886" endtime="20201112 12:27:26.904"></status>
</kw>
<msg timestamp="20201112 12:27:26.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.884" endtime="20201112 12:27:26.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.905" endtime="20201112 12:27:26.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.908" endtime="20201112 12:27:26.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.881" endtime="20201112 12:27:26.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.879" endtime="20201112 12:27:26.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.918" endtime="20201112 12:27:27.203"></status>
</kw>
<msg timestamp="20201112 12:27:27.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.916" endtime="20201112 12:27:27.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.207" endtime="20201112 12:27:27.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.215" endtime="20201112 12:27:27.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.914" endtime="20201112 12:27:27.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.912" endtime="20201112 12:27:27.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.222" level="INFO">${RESULT} = [{'time': 0.022159847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.401400000000072e-05, 'source_diff': 7.401400000000072e-05}, {'time': 0.022235847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.218" endtime="20201112 12:27:27.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.223" endtime="20201112 12:27:27.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.241" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.240" endtime="20201112 12:27:27.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.243" level="INFO">VALUE: [7.401400000000072e-05, 7.384699999999841e-05, 7.447199999999904e-05, 7.366699999999948e-05, 7.387499999999755e-05, 7.390300000000016e-05, 7.383300000000231e-05, 7.37500000000009e-05, 7.384700000000188e-05, 7.362500000000077e-05, 7.366699999999948e-05, 7.381999999999875e-05, 7.365299999999991e-05, 7.387500000000102e-05, 7.363900000000034e-05, 7.437500000000152e-05, 7.377800000000004e-05, 7.372300000000123e-05, 7.377700000000056e-05, 7.416600000000051e-05, 7.451400000000122e-05, 7.386100000000145e-05, 7.391600000000026e-05, 7.374999999999743e-05, 7.392999999999983e-05, 7.434699999999891e-05, 7.391699999999973e-05, 7.449999999999818e-05, 7.441700000000023e-05, 7.376400000000047e-05, 7.454200000000036e-05, 7.354199999999936e-05, 7.379199999999961e-05, 7.36110000000012e-05, 7.386100000000145e-05, 7.382000000000222e-05, 7.455599999999993e-05, 7.376400000000047e-05, 7.387500000000102e-05, 7.369499999999862e-05, 7.438800000000162e-05, 7.383299999999884e-05, 7.461099999999873e-05, 7.370799999999872e-05, 7.46249999999983e-05, 7.455500000000045e-05, 7.363900000000034e-05, 7.376400000000047e-05, 7.454200000000036e-05, 7.362500000000077e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.242" endtime="20201112 12:27:27.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.237" endtime="20201112 12:27:27.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.247" endtime="20201112 12:27:27.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.250" endtime="20201112 12:27:27.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.248" endtime="20201112 12:27:27.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.245" endtime="20201112 12:27:27.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.878" endtime="20201112 12:27:27.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.877" endtime="20201112 12:27:27.271"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.279" endtime="20201112 12:27:27.297"></status>
</kw>
<msg timestamp="20201112 12:27:27.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.278" endtime="20201112 12:27:27.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.298" endtime="20201112 12:27:27.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.301" endtime="20201112 12:27:27.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.275" endtime="20201112 12:27:27.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.273" endtime="20201112 12:27:27.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.311" endtime="20201112 12:27:27.596"></status>
</kw>
<msg timestamp="20201112 12:27:27.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.309" endtime="20201112 12:27:27.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.600" endtime="20201112 12:27:27.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.608" endtime="20201112 12:27:27.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.307" endtime="20201112 12:27:27.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.305" endtime="20201112 12:27:27.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.615" level="INFO">${RESULT} = [{'time': 0.021943958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.461099999999873e-05, 'source_diff': 7.461099999999873e-05}, {'time': 0.022021944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.611" endtime="20201112 12:27:27.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.628" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.616" endtime="20201112 12:27:27.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.633" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.632" endtime="20201112 12:27:27.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.636" level="INFO">VALUE: [7.461099999999873e-05, 7.540200000000219e-05, 7.551299999999928e-05, 7.487500000000202e-05, 7.555499999999798e-05, 7.54440000000009e-05, 7.483299999999984e-05, 7.47500000000019e-05, 7.468100000000005e-05, 7.548599999999961e-05, 7.54310000000008e-05, 7.541699999999776e-05, 7.547200000000004e-05, 7.47500000000019e-05, 7.465300000000091e-05, 7.551399999999875e-05, 7.545899999999994e-05, 7.461200000000168e-05, 7.49029999999977e-05, 7.458399999999907e-05, 7.541700000000123e-05, 7.481999999999975e-05, 7.518000000000108e-05, 7.46249999999983e-05, 7.545800000000047e-05, 7.541599999999829e-05, 7.479200000000061e-05, 7.491699999999726e-05, 7.556900000000102e-05, 7.548599999999961e-05, 7.54310000000008e-05, 7.487500000000202e-05, 7.558400000000007e-05, 7.472199999999929e-05, 7.463899999999787e-05, 7.458399999999907e-05, 7.551400000000222e-05, 7.537499999999905e-05, 7.554200000000136e-05, 7.491699999999726e-05, 7.468100000000005e-05, 7.477800000000104e-05, 7.543000000000133e-05, 7.466700000000048e-05, 7.481900000000027e-05, 7.46249999999983e-05, 7.466600000000101e-05, 7.541600000000176e-05, 7.566700000000148e-05, 7.484699999999941e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.634" endtime="20201112 12:27:27.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.629" endtime="20201112 12:27:27.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.640" endtime="20201112 12:27:27.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.644" endtime="20201112 12:27:27.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.642" endtime="20201112 12:27:27.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.638" endtime="20201112 12:27:27.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.272" endtime="20201112 12:27:27.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.271" endtime="20201112 12:27:27.664"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.673" endtime="20201112 12:27:27.690"></status>
</kw>
<msg timestamp="20201112 12:27:27.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.671" endtime="20201112 12:27:27.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.692" endtime="20201112 12:27:27.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.694" endtime="20201112 12:27:27.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.669" endtime="20201112 12:27:27.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.667" endtime="20201112 12:27:27.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.704" endtime="20201112 12:27:27.989"></status>
</kw>
<msg timestamp="20201112 12:27:27.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.703" endtime="20201112 12:27:27.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.993" endtime="20201112 12:27:28.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.002" endtime="20201112 12:27:28.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.700" endtime="20201112 12:27:28.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.699" endtime="20201112 12:27:28.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.008" level="INFO">${RESULT} = [{'time': 0.021889639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.59579999999975e-05, 'source_diff': 7.59579999999975e-05}, {'time': 0.021967639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:28.005" endtime="20201112 12:27:28.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.009" endtime="20201112 12:27:28.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.026" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.025" endtime="20201112 12:27:28.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.029" level="INFO">VALUE: [7.59579999999975e-05, 7.563900000000234e-05, 7.569399999999768e-05, 7.644500000000137e-05, 7.64029999999992e-05, 7.584699999999694e-05, 7.574999999999943e-05, 7.652799999999932e-05, 7.650000000000018e-05, 7.636100000000048e-05, 7.654199999999889e-05, 7.651300000000028e-05, 7.572299999999976e-05, 7.648600000000061e-05, 7.638800000000015e-05, 7.579099999999866e-05, 7.570799999999725e-05, 7.577799999999857e-05, 7.655499999999898e-05, 7.572200000000029e-05, 7.579199999999814e-05, 7.652800000000279e-05, 7.66250000000003e-05, 7.566700000000148e-05, 7.65700000000015e-05, 7.559700000000016e-05, 7.583300000000084e-05, 7.573599999999986e-05, 7.658299999999812e-05, 7.587499999999955e-05, 7.582000000000075e-05, 7.566700000000148e-05, 7.644500000000137e-05, 7.587499999999955e-05, 7.647200000000104e-05, 7.587499999999955e-05, 7.636099999999701e-05, 7.57769999999991e-05, 7.633299999999787e-05, 7.64440000000019e-05, 7.56249999999993e-05, 7.579100000000213e-05, 7.636100000000048e-05, 7.656999999999803e-05, 7.638899999999962e-05, 7.616699999999851e-05, 7.641699999999876e-05, 7.645900000000094e-05, 7.567999999999811e-05, 7.586099999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.027" endtime="20201112 12:27:28.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.022" endtime="20201112 12:27:28.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.032" endtime="20201112 12:27:28.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.035" endtime="20201112 12:27:28.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.034" endtime="20201112 12:27:28.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.030" endtime="20201112 12:27:28.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.665" endtime="20201112 12:27:28.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.665" endtime="20201112 12:27:28.056"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.066" endtime="20201112 12:27:28.082"></status>
</kw>
<msg timestamp="20201112 12:27:28.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.064" endtime="20201112 12:27:28.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.084" endtime="20201112 12:27:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.086" endtime="20201112 12:27:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.061" endtime="20201112 12:27:28.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.059" endtime="20201112 12:27:28.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.096" endtime="20201112 12:27:28.382"></status>
</kw>
<msg timestamp="20201112 12:27:28.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.095" endtime="20201112 12:27:28.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.386" endtime="20201112 12:27:28.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.394" endtime="20201112 12:27:28.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.092" endtime="20201112 12:27:28.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.091" endtime="20201112 12:27:28.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.401" level="INFO">${RESULT} = [{'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.661100000000073e-05, 'source_diff': 7.661100000000073e-05}, {'time': 0.022717833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.398" endtime="20201112 12:27:28.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.414" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.402" endtime="20201112 12:27:28.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.419" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.418" endtime="20201112 12:27:28.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.421" level="INFO">VALUE: [7.661100000000073e-05, 7.658299999999812e-05, 7.663899999999987e-05, 7.742999999999986e-05, 7.670800000000172e-05, 7.719499999999865e-05, 7.69029999999997e-05, 7.7457999999999e-05, 7.752800000000032e-05, 7.747199999999857e-05, 7.752799999999685e-05, 7.672200000000129e-05, 7.683400000000132e-05, 7.716699999999951e-05, 7.665299999999944e-05, 7.752800000000032e-05, 7.686099999999751e-05, 7.663899999999987e-05, 7.661100000000073e-05, 7.675000000000043e-05, 7.744399999999943e-05, 7.680499999999923e-05, 7.756900000000302e-05, 7.748599999999814e-05, 7.691699999999926e-05, 7.665299999999944e-05, 7.677800000000304e-05, 7.679200000000261e-05, 7.74440000000029e-05, 7.737500000000105e-05, 7.756900000000302e-05, 7.683400000000132e-05, 7.66250000000003e-05, 7.74449999999989e-05, 7.674999999999696e-05, 7.669399999999868e-05, 7.680599999999871e-05, 7.748600000000161e-05, 7.69029999999997e-05, 7.755499999999999e-05, 7.741699999999976e-05, 7.738899999999715e-05, 7.68189999999988e-05, 7.751399999999728e-05, 7.761099999999826e-05, 7.673600000000086e-05, 7.761100000000173e-05, 7.741699999999976e-05, 7.677799999999957e-05, 7.748600000000161e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.420" endtime="20201112 12:27:28.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.415" endtime="20201112 12:27:28.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.425" endtime="20201112 12:27:28.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.428" endtime="20201112 12:27:28.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.427" endtime="20201112 12:27:28.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.423" endtime="20201112 12:27:28.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.057" endtime="20201112 12:27:28.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.057" endtime="20201112 12:27:28.449"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.458" endtime="20201112 12:27:28.476"></status>
</kw>
<msg timestamp="20201112 12:27:28.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.456" endtime="20201112 12:27:28.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.477" endtime="20201112 12:27:28.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.479" endtime="20201112 12:27:28.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.454" endtime="20201112 12:27:28.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.451" endtime="20201112 12:27:28.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.489" endtime="20201112 12:27:28.775"></status>
</kw>
<msg timestamp="20201112 12:27:28.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.488" endtime="20201112 12:27:28.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.779" endtime="20201112 12:27:28.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.787" endtime="20201112 12:27:28.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.485" endtime="20201112 12:27:28.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.484" endtime="20201112 12:27:28.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.794" level="INFO">${RESULT} = [{'time': 0.021930986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.786099999999851e-05, 'source_diff': 7.786099999999851e-05}, {'time': 0.022010986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.790" endtime="20201112 12:27:28.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.808" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.795" endtime="20201112 12:27:28.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.813" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.812" endtime="20201112 12:27:28.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.815" level="INFO">VALUE: [7.786099999999851e-05, 7.758299999999912e-05, 7.773599999999839e-05, 7.756899999999955e-05, 7.777800000000057e-05, 7.8458e-05, 7.781999999999928e-05, 7.851400000000175e-05, 7.862499999999883e-05, 7.75839999999986e-05, 7.837500000000205e-05, 7.779200000000014e-05, 7.848599999999914e-05, 7.766599999999707e-05, 7.837499999999858e-05, 7.768000000000011e-05, 7.761099999999826e-05, 7.768000000000011e-05, 7.833299999999987e-05, 7.786099999999851e-05, 7.770799999999925e-05, 7.841700000000076e-05, 7.765300000000044e-05, 7.755499999999999e-05, 7.768100000000305e-05, 7.847199999999957e-05, 7.843100000000033e-05, 7.769499999999915e-05, 7.784699999999894e-05, 7.780599999999971e-05, 7.769499999999915e-05, 7.848600000000261e-05, 7.765200000000097e-05, 7.838899999999815e-05, 7.777800000000057e-05, 7.779100000000067e-05, 7.852700000000185e-05, 7.847199999999957e-05, 7.788900000000112e-05, 7.752699999999738e-05, 7.861099999999926e-05, 7.784699999999894e-05, 7.843099999999686e-05, 7.75969999999987e-05, 7.766700000000001e-05, 7.761100000000173e-05, 7.841700000000076e-05, 7.849999999999871e-05, 7.758299999999912e-05, 7.762499999999783e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.814" endtime="20201112 12:27:28.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.809" endtime="20201112 12:27:28.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.819" endtime="20201112 12:27:28.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.822" endtime="20201112 12:27:28.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.820" endtime="20201112 12:27:28.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.817" endtime="20201112 12:27:28.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.450" endtime="20201112 12:27:28.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.449" endtime="20201112 12:27:28.843"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.851" endtime="20201112 12:27:28.869"></status>
</kw>
<msg timestamp="20201112 12:27:28.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.850" endtime="20201112 12:27:28.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.870" endtime="20201112 12:27:28.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.873" endtime="20201112 12:27:28.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.847" endtime="20201112 12:27:28.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.845" endtime="20201112 12:27:28.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.883" endtime="20201112 12:27:29.169"></status>
</kw>
<msg timestamp="20201112 12:27:29.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.881" endtime="20201112 12:27:29.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.173" endtime="20201112 12:27:29.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.181" endtime="20201112 12:27:29.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.879" endtime="20201112 12:27:29.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.877" endtime="20201112 12:27:29.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.188" level="INFO">${RESULT} = [{'time': 0.022257639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.926399999999903e-05, 'source_diff': 7.926399999999903e-05}, {'time': 0.022338653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.184" endtime="20201112 12:27:29.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.201" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.189" endtime="20201112 12:27:29.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.206" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.204" endtime="20201112 12:27:29.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.208" level="INFO">VALUE: [7.926399999999903e-05, 7.919500000000065e-05, 7.94169999999983e-05, 7.882000000000028e-05, 7.883399999999985e-05, 7.85839999999996e-05, 7.947300000000004e-05, 7.863900000000187e-05, 7.893100000000083e-05, 7.869400000000068e-05, 7.887500000000255e-05, 7.874999999999896e-05, 7.883300000000037e-05, 7.851400000000175e-05, 7.956900000000156e-05, 7.888900000000212e-05, 7.872199999999982e-05, 7.87779999999981e-05, 7.966700000000201e-05, 7.858300000000012e-05, 7.962499999999983e-05, 7.861099999999926e-05, 7.936100000000001e-05, 7.940299999999872e-05, 7.95970000000007e-05, 7.861099999999926e-05, 7.947200000000057e-05, 7.866699999999754e-05, 7.876399999999853e-05, 7.870899999999972e-05, 7.948699999999961e-05, 7.933300000000088e-05, 7.876299999999906e-05, 7.863799999999893e-05, 7.944399999999796e-05, 7.936100000000001e-05, 7.88329999999969e-05, 7.870800000000025e-05, 7.883300000000037e-05, 7.873599999999939e-05, 7.956900000000156e-05, 7.873599999999939e-05, 7.9458000000001e-05, 7.884699999999994e-05, 7.865299999999797e-05, 7.86389999999984e-05, 7.888899999999865e-05, 7.948600000000014e-05, 7.961199999999974e-05, 7.89030000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.207" endtime="20201112 12:27:29.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.202" endtime="20201112 12:27:29.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.211" endtime="20201112 12:27:29.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.215" endtime="20201112 12:27:29.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.213" endtime="20201112 12:27:29.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.210" endtime="20201112 12:27:29.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.844" endtime="20201112 12:27:29.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.843" endtime="20201112 12:27:29.236"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.244" endtime="20201112 12:27:29.262"></status>
</kw>
<msg timestamp="20201112 12:27:29.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.243" endtime="20201112 12:27:29.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.263" endtime="20201112 12:27:29.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.266" endtime="20201112 12:27:29.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.240" endtime="20201112 12:27:29.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.238" endtime="20201112 12:27:29.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.276" endtime="20201112 12:27:29.562"></status>
</kw>
<msg timestamp="20201112 12:27:29.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.274" endtime="20201112 12:27:29.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.566" endtime="20201112 12:27:29.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.574" endtime="20201112 12:27:29.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.272" endtime="20201112 12:27:29.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.270" endtime="20201112 12:27:29.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.581" level="INFO">${RESULT} = [{'time': 0.022333347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.042999999999939e-05, 'source_diff': 8.042999999999939e-05}, {'time': 0.022416319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.578" endtime="20201112 12:27:29.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.594" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.582" endtime="20201112 12:27:29.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.599" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.598" endtime="20201112 12:27:29.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.601" level="INFO">VALUE: [8.042999999999939e-05, 8.041599999999982e-05, 8.061100000000126e-05, 8.045799999999853e-05, 7.983300000000138e-05, 7.951399999999928e-05, 7.986099999999705e-05, 7.972200000000082e-05, 8.037500000000058e-05, 8.038900000000015e-05, 7.969399999999821e-05, 8.04450000000019e-05, 7.972200000000082e-05, 7.976399999999953e-05, 8.04450000000019e-05, 8.038900000000015e-05, 7.979199999999867e-05, 7.9764000000003e-05, 7.97779999999991e-05, 7.966699999999854e-05, 7.968000000000211e-05, 8.013800000000043e-05, 8.050000000000071e-05, 8.040200000000025e-05, 7.96519999999995e-05, 7.979199999999867e-05, 8.048599999999767e-05, 8.018100000000208e-05, 7.977800000000257e-05, 7.976399999999953e-05, 8.043100000000233e-05, 7.990299999999922e-05, 7.972200000000082e-05, 7.969500000000115e-05, 7.969499999999768e-05, 7.95840000000006e-05, 8.062500000000083e-05, 8.048700000000061e-05, 7.991600000000279e-05, 7.957000000000103e-05, 7.99169999999988e-05, 7.96519999999995e-05, 8.050000000000071e-05, 8.0458000000002e-05, 7.974999999999996e-05, 8.016699999999904e-05, 8.038900000000015e-05, 7.96389999999994e-05, 8.034699999999798e-05, 7.970800000000125e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.600" endtime="20201112 12:27:29.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.595" endtime="20201112 12:27:29.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.605" endtime="20201112 12:27:29.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.608" endtime="20201112 12:27:29.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.607" endtime="20201112 12:27:29.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.603" endtime="20201112 12:27:29.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.237" endtime="20201112 12:27:29.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.236" endtime="20201112 12:27:29.629"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.637" endtime="20201112 12:27:29.656"></status>
</kw>
<msg timestamp="20201112 12:27:29.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.636" endtime="20201112 12:27:29.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.658" endtime="20201112 12:27:29.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.660" endtime="20201112 12:27:29.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.633" endtime="20201112 12:27:29.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.631" endtime="20201112 12:27:29.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.671" endtime="20201112 12:27:29.957"></status>
</kw>
<msg timestamp="20201112 12:27:29.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.670" endtime="20201112 12:27:29.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.961" endtime="20201112 12:27:29.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.969" endtime="20201112 12:27:29.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.667" endtime="20201112 12:27:29.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.665" endtime="20201112 12:27:29.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.976" level="INFO">${RESULT} = [{'time': 0.022180583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.061100000000126e-05, 'source_diff': 8.061100000000126e-05}, {'time': 0.022264569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.973" endtime="20201112 12:27:29.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.989" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.977" endtime="20201112 12:27:29.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.994" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.993" endtime="20201112 12:27:29.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.996" level="INFO">VALUE: [8.061100000000126e-05, 8.134700000000245e-05, 8.16390000000014e-05, 8.080499999999977e-05, 8.084700000000195e-05, 8.06390000000004e-05, 8.161100000000227e-05, 8.058300000000213e-05, 8.147200000000257e-05, 8.061100000000126e-05, 8.093099999999936e-05, 8.073599999999792e-05, 8.079199999999967e-05, 8.144499999999943e-05, 8.144499999999943e-05, 8.090300000000022e-05, 8.151400000000128e-05, 8.147300000000204e-05, 8.141600000000082e-05, 8.090300000000022e-05, 8.156900000000009e-05, 8.073599999999792e-05, 8.134699999999898e-05, 8.070799999999878e-05, 8.154099999999748e-05, 8.152800000000085e-05, 8.070799999999878e-05, 8.14719999999991e-05, 8.070799999999878e-05, 8.152800000000085e-05, 8.16109999999988e-05, 8.073599999999792e-05, 8.075000000000096e-05, 8.149999999999824e-05, 8.080599999999924e-05, 8.081999999999881e-05, 8.080599999999924e-05, 8.079200000000314e-05, 8.080499999999977e-05, 8.145799999999953e-05, 8.156900000000009e-05, 8.081899999999934e-05, 8.08329999999989e-05, 8.08329999999989e-05, 8.149999999999824e-05, 8.084700000000195e-05, 8.134699999999898e-05, 8.056900000000256e-05, 8.086100000000151e-05, 8.141699999999683e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.995" endtime="20201112 12:27:29.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.990" endtime="20201112 12:27:29.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.000" endtime="20201112 12:27:30.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.003" endtime="20201112 12:27:30.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.002" endtime="20201112 12:27:30.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.998" endtime="20201112 12:27:30.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.630" endtime="20201112 12:27:30.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.629" endtime="20201112 12:27:30.024"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.033" endtime="20201112 12:27:30.051"></status>
</kw>
<msg timestamp="20201112 12:27:30.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.031" endtime="20201112 12:27:30.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.052" endtime="20201112 12:27:30.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.055" endtime="20201112 12:27:30.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.029" endtime="20201112 12:27:30.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.027" endtime="20201112 12:27:30.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.065" endtime="20201112 12:27:30.350"></status>
</kw>
<msg timestamp="20201112 12:27:30.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.063" endtime="20201112 12:27:30.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.354" endtime="20201112 12:27:30.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.363" endtime="20201112 12:27:30.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.061" endtime="20201112 12:27:30.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.059" endtime="20201112 12:27:30.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.369" level="INFO">${RESULT} = [{'time': 0.022129819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.217999999999767e-05, 'source_diff': 8.217999999999767e-05}, {'time': 0.022214875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.366" endtime="20201112 12:27:30.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.384" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.370" endtime="20201112 12:27:30.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.388" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.387" endtime="20201112 12:27:30.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.390" level="INFO">VALUE: [8.217999999999767e-05, 8.258299999999719e-05, 8.181900000000034e-05, 8.180500000000077e-05, 8.176400000000153e-05, 8.159699999999923e-05, 8.240300000000172e-05, 8.244399999999749e-05, 8.172199999999935e-05, 8.170799999999978e-05, 8.259700000000023e-05, 8.156900000000009e-05, 8.166700000000054e-05, 8.188899999999819e-05, 8.259700000000023e-05, 8.186100000000252e-05, 8.16529999999975e-05, 8.24170000000013e-05, 8.159800000000217e-05, 8.252699999999891e-05, 8.233399999999988e-05, 8.166700000000054e-05, 8.18049999999973e-05, 8.238799999999921e-05, 8.188900000000165e-05, 8.181900000000034e-05, 8.190300000000122e-05, 8.16390000000014e-05, 8.166700000000054e-05, 8.249999999999924e-05, 8.238899999999869e-05, 8.24720000000001e-05, 8.18329999999999e-05, 8.244500000000043e-05, 8.24170000000013e-05, 8.233399999999988e-05, 8.262499999999937e-05, 8.179200000000067e-05, 8.233399999999988e-05, 8.254100000000195e-05, 8.261199999999927e-05, 8.163899999999794e-05, 8.176400000000153e-05, 8.162500000000183e-05, 8.188900000000165e-05, 8.15269999999979e-05, 8.190299999999776e-05, 8.176399999999806e-05, 8.245800000000053e-05, 8.166700000000054e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.389" endtime="20201112 12:27:30.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.385" endtime="20201112 12:27:30.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.394" endtime="20201112 12:27:30.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.397" endtime="20201112 12:27:30.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.396" endtime="20201112 12:27:30.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.392" endtime="20201112 12:27:30.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.025" endtime="20201112 12:27:30.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.025" endtime="20201112 12:27:30.418"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.427" endtime="20201112 12:27:30.445"></status>
</kw>
<msg timestamp="20201112 12:27:30.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.425" endtime="20201112 12:27:30.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.447" endtime="20201112 12:27:30.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.449" endtime="20201112 12:27:30.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.423" endtime="20201112 12:27:30.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.421" endtime="20201112 12:27:30.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.459" endtime="20201112 12:27:30.745"></status>
</kw>
<msg timestamp="20201112 12:27:30.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.458" endtime="20201112 12:27:30.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.750" endtime="20201112 12:27:30.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.758" endtime="20201112 12:27:30.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.455" endtime="20201112 12:27:30.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.453" endtime="20201112 12:27:30.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.765" level="INFO">${RESULT} = [{'time': 0.021830347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.268000000000164e-05, 'source_diff': 8.268000000000164e-05}, {'time': 0.021916319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:30.761" endtime="20201112 12:27:30.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.778" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.766" endtime="20201112 12:27:30.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.782" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.781" endtime="20201112 12:27:30.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.785" level="INFO">VALUE: [8.268000000000164e-05, 8.34720000000011e-05, 8.351399999999981e-05, 8.352799999999938e-05, 8.342999999999892e-05, 8.263899999999894e-05, 8.340300000000272e-05, 8.27919999999982e-05, 8.33049999999988e-05, 8.336100000000055e-05, 8.284799999999995e-05, 8.343100000000186e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.332000000000131e-05, 8.288900000000265e-05, 8.272299999999982e-05, 8.27230000000033e-05, 8.282000000000081e-05, 8.281900000000134e-05, 8.34720000000011e-05, 8.281899999999787e-05, 8.280500000000177e-05, 8.337500000000012e-05, 8.281900000000134e-05, 8.344399999999849e-05, 8.284700000000048e-05, 8.284700000000048e-05, 8.286100000000005e-05, 8.273599999999992e-05, 8.3459000000001e-05, 8.287499999999962e-05, 8.348600000000067e-05, 8.338899999999969e-05, 8.27919999999982e-05, 8.272299999999982e-05, 8.28330000000009e-05, 8.347300000000057e-05, 8.274999999999949e-05, 8.338899999999969e-05, 8.291600000000232e-05, 8.283299999999744e-05, 8.356900000000209e-05, 8.281900000000134e-05, 8.345800000000153e-05, 8.283400000000038e-05, 8.279200000000167e-05, 8.340299999999926e-05, 8.336100000000055e-05, 8.26390000000024e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.784" endtime="20201112 12:27:30.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.779" endtime="20201112 12:27:30.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.788" endtime="20201112 12:27:30.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.792" endtime="20201112 12:27:30.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.790" endtime="20201112 12:27:30.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.787" endtime="20201112 12:27:30.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.419" endtime="20201112 12:27:30.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.418" endtime="20201112 12:27:30.813"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.821" endtime="20201112 12:27:30.839"></status>
</kw>
<msg timestamp="20201112 12:27:30.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.820" endtime="20201112 12:27:30.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.841" endtime="20201112 12:27:30.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.843" endtime="20201112 12:27:30.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.817" endtime="20201112 12:27:30.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.815" endtime="20201112 12:27:30.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.853" endtime="20201112 12:27:31.138"></status>
</kw>
<msg timestamp="20201112 12:27:31.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:30.852" endtime="20201112 12:27:31.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:31.143" endtime="20201112 12:27:31.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.151" endtime="20201112 12:27:31.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.849" endtime="20201112 12:27:31.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.847" endtime="20201112 12:27:31.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.157" level="INFO">${RESULT} = [{'time': 0.021941181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39309999999989e-05, 'source_diff': 8.39309999999989e-05}, {'time': 0.022027153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:31.154" endtime="20201112 12:27:31.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.171" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.158" endtime="20201112 12:27:31.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.175" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.174" endtime="20201112 12:27:31.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.178" level="INFO">VALUE: [8.39309999999989e-05, 8.377799999999963e-05, 8.459700000000223e-05, 8.437500000000112e-05, 8.444500000000243e-05, 8.390299999999976e-05, 8.458399999999866e-05, 8.386099999999758e-05, 8.465200000000103e-05, 8.38049999999993e-05, 8.452800000000038e-05, 8.373599999999745e-05, 8.458299999999919e-05, 8.391699999999933e-05, 8.379099999999973e-05, 8.392999999999942e-05, 8.36249999999969e-05, 8.386100000000105e-05, 8.434700000000198e-05, 8.369399999999874e-05, 8.438900000000069e-05, 8.386099999999758e-05, 8.363899999999994e-05, 8.384700000000148e-05, 8.437500000000112e-05, 8.418099999999915e-05, 8.456899999999962e-05, 8.391699999999933e-05, 8.384700000000148e-05, 8.351399999999981e-05, 8.387500000000062e-05, 8.370799999999831e-05, 8.390199999999681e-05, 8.373600000000092e-05, 8.440200000000078e-05, 8.359700000000123e-05, 8.447199999999863e-05, 8.449999999999777e-05, 8.436100000000155e-05, 8.441600000000035e-05, 8.380599999999877e-05, 8.450000000000124e-05, 8.37919999999992e-05, 8.375000000000049e-05, 8.369500000000168e-05, 8.363899999999994e-05, 8.390299999999976e-05, 8.366700000000254e-05, 8.391699999999933e-05, 8.377700000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.176" endtime="20201112 12:27:31.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.172" endtime="20201112 12:27:31.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.186" endtime="20201112 12:27:31.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.189" endtime="20201112 12:27:31.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.188" endtime="20201112 12:27:31.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.184" endtime="20201112 12:27:31.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.813" endtime="20201112 12:27:31.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.813" endtime="20201112 12:27:31.210"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.218" endtime="20201112 12:27:31.237"></status>
</kw>
<msg timestamp="20201112 12:27:31.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.217" endtime="20201112 12:27:31.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.238" endtime="20201112 12:27:31.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.241" endtime="20201112 12:27:31.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.214" endtime="20201112 12:27:31.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.212" endtime="20201112 12:27:31.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.250" endtime="20201112 12:27:31.536"></status>
</kw>
<msg timestamp="20201112 12:27:31.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.249" endtime="20201112 12:27:31.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.540" endtime="20201112 12:27:31.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.548" endtime="20201112 12:27:31.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.246" endtime="20201112 12:27:31.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.245" endtime="20201112 12:27:31.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.555" level="INFO">${RESULT} = [{'time': 0.022167639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.491700000000033e-05, 'source_diff': 8.491700000000033e-05}, {'time': 0.022254667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.552" endtime="20201112 12:27:31.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.556" endtime="20201112 12:27:31.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.573" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.572" endtime="20201112 12:27:31.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.575" level="INFO">VALUE: [8.491700000000033e-05, 8.468099999999965e-05, 8.54729999999991e-05, 8.487500000000162e-05, 8.486200000000152e-05, 8.477800000000063e-05, 8.469399999999974e-05, 8.537499999999865e-05, 8.473599999999845e-05, 8.470799999999931e-05, 8.53469999999995e-05, 8.541600000000135e-05, 8.465200000000103e-05, 8.484700000000248e-05, 8.472200000000235e-05, 8.56119999999988e-05, 8.54859999999992e-05, 8.487500000000162e-05, 8.545800000000006e-05, 8.486100000000205e-05, 8.561099999999933e-05, 8.49309999999999e-05, 8.474999999999802e-05, 8.4846999999999e-05, 8.475000000000149e-05, 8.552800000000138e-05, 8.544499999999997e-05, 8.543000000000092e-05, 8.561099999999933e-05, 8.53469999999995e-05, 8.484700000000248e-05, 8.483299999999944e-05, 8.555500000000105e-05, 8.469399999999974e-05, 8.46530000000005e-05, 8.54310000000004e-05, 8.473600000000192e-05, 8.541699999999736e-05, 8.465299999999704e-05, 8.47920000000002e-05, 8.549999999999877e-05, 8.459799999999823e-05, 8.53469999999995e-05, 8.487500000000162e-05, 8.486200000000152e-05, 8.481999999999934e-05, 8.548699999999868e-05, 8.466599999999713e-05, 8.531900000000037e-05, 8.455500000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.574" endtime="20201112 12:27:31.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.569" endtime="20201112 12:27:31.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.579" endtime="20201112 12:27:31.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.582" endtime="20201112 12:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.581" endtime="20201112 12:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.577" endtime="20201112 12:27:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.211" endtime="20201112 12:27:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.210" endtime="20201112 12:27:31.603"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.612" endtime="20201112 12:27:31.629"></status>
</kw>
<msg timestamp="20201112 12:27:31.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.610" endtime="20201112 12:27:31.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.631" endtime="20201112 12:27:31.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.633" endtime="20201112 12:27:31.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.608" endtime="20201112 12:27:31.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.606" endtime="20201112 12:27:31.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.643" endtime="20201112 12:27:31.929"></status>
</kw>
<msg timestamp="20201112 12:27:31.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.641" endtime="20201112 12:27:31.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.933" endtime="20201112 12:27:31.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.941" endtime="20201112 12:27:31.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.639" endtime="20201112 12:27:31.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.637" endtime="20201112 12:27:31.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.948" level="INFO">${RESULT} = [{'time': 0.021968597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.565299999999804e-05, 'source_diff': 8.565299999999804e-05}, {'time': 0.022056611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:31.945" endtime="20201112 12:27:31.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.962" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.949" endtime="20201112 12:27:31.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.967" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.966" endtime="20201112 12:27:31.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.969" level="INFO">VALUE: [8.565299999999804e-05, 8.555500000000105e-05, 8.640299999999879e-05, 8.5847e-05, 8.580600000000077e-05, 8.64860000000002e-05, 8.64310000000014e-05, 8.577799999999816e-05, 8.586099999999958e-05, 8.566700000000108e-05, 8.665299999999904e-05, 8.587500000000262e-05, 8.637499999999965e-05, 8.586200000000252e-05, 8.644500000000097e-05, 8.56530000000015e-05, 8.595800000000056e-05, 8.644400000000149e-05, 8.577699999999869e-05, 8.568000000000117e-05, 8.656900000000162e-05, 8.651399999999934e-05, 8.64860000000002e-05, 8.558300000000019e-05, 8.651399999999934e-05, 8.59310000000009e-05, 8.5847e-05, 8.5847e-05, 8.655600000000152e-05, 8.636100000000008e-05, 8.651399999999934e-05, 8.61669999999981e-05, 8.590300000000176e-05, 8.590299999999829e-05, 8.587499999999915e-05, 8.588799999999924e-05, 8.641599999999888e-05, 8.568000000000117e-05, 8.651399999999934e-05, 8.652799999999891e-05, 8.656899999999815e-05, 8.56249999999989e-05, 8.591700000000133e-05, 8.573599999999945e-05, 8.5847e-05, 8.554200000000095e-05, 8.586099999999958e-05, 8.570899999999979e-05, 8.659700000000076e-05, 8.640299999999879e-05]</msg>
<status status="PASS" starttime="20201112 12:27:31.968" endtime="20201112 12:27:31.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.963" endtime="20201112 12:27:31.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.973" endtime="20201112 12:27:31.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.976" endtime="20201112 12:27:31.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.975" endtime="20201112 12:27:31.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.971" endtime="20201112 12:27:31.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.604" endtime="20201112 12:27:31.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.603" endtime="20201112 12:27:31.997"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.006" endtime="20201112 12:27:32.024"></status>
</kw>
<msg timestamp="20201112 12:27:32.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.004" endtime="20201112 12:27:32.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.026" endtime="20201112 12:27:32.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.028" endtime="20201112 12:27:32.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.002" endtime="20201112 12:27:32.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.000" endtime="20201112 12:27:32.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.038" endtime="20201112 12:27:32.323"></status>
</kw>
<msg timestamp="20201112 12:27:32.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.037" endtime="20201112 12:27:32.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.328" endtime="20201112 12:27:32.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.336" endtime="20201112 12:27:32.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.034" endtime="20201112 12:27:32.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.033" endtime="20201112 12:27:32.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.343" level="INFO">${RESULT} = [{'time': 0.022400389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.700000000000027e-05, 'source_diff': 8.700000000000027e-05}, {'time': 0.022490389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.339" endtime="20201112 12:27:32.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.356" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.344" endtime="20201112 12:27:32.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.360" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.359" endtime="20201112 12:27:32.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.363" level="INFO">VALUE: [8.700000000000027e-05, 8.736100000000108e-05, 8.692999999999895e-05, 8.66249999999999e-05, 8.743099999999893e-05, 8.74449999999985e-05, 8.668100000000165e-05, 8.665299999999904e-05, 8.66799999999987e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.663799999999999e-05, 8.745800000000206e-05, 8.688899999999972e-05, 8.755499999999958e-05, 8.656900000000162e-05, 8.738900000000022e-05, 8.66669999999986e-05, 8.663899999999947e-05, 8.661100000000033e-05, 8.744399999999902e-05, 8.741699999999936e-05, 8.734699999999804e-05, 8.690299999999929e-05, 8.738900000000022e-05, 8.719500000000172e-05, 8.761100000000133e-05, 8.71669999999991e-05, 8.742999999999945e-05, 8.663899999999947e-05, 8.688800000000024e-05, 8.663799999999999e-05, 8.672200000000088e-05, 8.680499999999883e-05, 8.745799999999859e-05, 8.655499999999858e-05, 8.681900000000187e-05, 8.68059999999983e-05, 8.747200000000163e-05, 8.754200000000295e-05, 8.738900000000022e-05, 8.682000000000134e-05, 8.68059999999983e-05, 8.657000000000109e-05, 8.6847000000001e-05, 8.690299999999929e-05, 8.737500000000065e-05, 8.684800000000048e-05, 8.672299999999689e-05, 8.68189999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.361" endtime="20201112 12:27:32.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.357" endtime="20201112 12:27:32.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.366" endtime="20201112 12:27:32.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.370" endtime="20201112 12:27:32.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.368" endtime="20201112 12:27:32.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.365" endtime="20201112 12:27:32.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.998" endtime="20201112 12:27:32.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.998" endtime="20201112 12:27:32.391"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.399" endtime="20201112 12:27:32.418"></status>
</kw>
<msg timestamp="20201112 12:27:32.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.398" endtime="20201112 12:27:32.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.419" endtime="20201112 12:27:32.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.422" endtime="20201112 12:27:32.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.395" endtime="20201112 12:27:32.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.393" endtime="20201112 12:27:32.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.432" endtime="20201112 12:27:32.717"></status>
</kw>
<msg timestamp="20201112 12:27:32.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.430" endtime="20201112 12:27:32.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.721" endtime="20201112 12:27:32.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.729" endtime="20201112 12:27:32.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.428" endtime="20201112 12:27:32.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.426" endtime="20201112 12:27:32.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.736" level="INFO">${RESULT} = [{'time': 0.022048764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.798599999999823e-05, 'source_diff': 8.798599999999823e-05}, {'time': 0.022138764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:32.733" endtime="20201112 12:27:32.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.737" endtime="20201112 12:27:32.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.754" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.753" endtime="20201112 12:27:32.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.756" level="INFO">VALUE: [8.798599999999823e-05, 8.78059999999993e-05, 8.777700000000069e-05, 8.840200000000131e-05, 8.788900000000072e-05, 8.76669999999996e-05, 8.776300000000112e-05, 8.790300000000029e-05, 8.841700000000036e-05, 8.766600000000013e-05, 8.773600000000145e-05, 8.766600000000013e-05, 8.84860000000022e-05, 8.845799999999959e-05, 8.770799999999884e-05, 8.763900000000047e-05, 8.783299999999897e-05, 8.838900000000122e-05, 8.784699999999854e-05, 8.838900000000122e-05, 8.852800000000091e-05, 8.757000000000209e-05, 8.770900000000179e-05, 8.845899999999907e-05, 8.841699999999689e-05, 8.834799999999851e-05, 8.773600000000145e-05, 8.780499999999983e-05, 8.78189999999994e-05, 8.791600000000038e-05, 8.84999999999983e-05, 8.76669999999996e-05, 8.859699999999929e-05, 8.793099999999943e-05, 8.76250000000009e-05, 8.851399999999787e-05, 8.851399999999787e-05, 8.84999999999983e-05, 8.837500000000165e-05, 8.759700000000176e-05, 8.783399999999844e-05, 8.773699999999746e-05, 8.855600000000005e-05, 8.847299999999864e-05, 8.859800000000223e-05, 8.78189999999994e-05, 8.769399999999927e-05, 8.787500000000115e-05, 8.777800000000016e-05, 8.844400000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:27:32.755" endtime="20201112 12:27:32.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.750" endtime="20201112 12:27:32.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.760" endtime="20201112 12:27:32.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.763" endtime="20201112 12:27:32.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.762" endtime="20201112 12:27:32.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.758" endtime="20201112 12:27:32.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.391" endtime="20201112 12:27:32.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.391" endtime="20201112 12:27:32.784"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.793" endtime="20201112 12:27:32.812"></status>
</kw>
<msg timestamp="20201112 12:27:32.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.791" endtime="20201112 12:27:32.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.813" endtime="20201112 12:27:32.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.816" endtime="20201112 12:27:32.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.789" endtime="20201112 12:27:32.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.787" endtime="20201112 12:27:32.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.826" endtime="20201112 12:27:33.111"></status>
</kw>
<msg timestamp="20201112 12:27:33.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.824" endtime="20201112 12:27:33.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.115" endtime="20201112 12:27:33.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.123" endtime="20201112 12:27:33.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.822" endtime="20201112 12:27:33.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.820" endtime="20201112 12:27:33.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.130" level="INFO">${RESULT} = [{'time': 0.022307375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.911099999999936e-05, 'source_diff': 8.911099999999936e-05}, {'time': 0.022399389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.127" endtime="20201112 12:27:33.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.131" endtime="20201112 12:27:33.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.148" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.147" endtime="20201112 12:27:33.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.150" level="INFO">VALUE: [8.911099999999936e-05, 8.94999999999993e-05, 8.879200000000073e-05, 8.886199999999858e-05, 8.938900000000222e-05, 8.879200000000073e-05, 8.884799999999901e-05, 8.895800000000009e-05, 8.952700000000244e-05, 8.883299999999997e-05, 8.948599999999973e-05, 8.873600000000245e-05, 8.947200000000016e-05, 8.869400000000027e-05, 8.891700000000086e-05, 8.940299999999832e-05, 8.886099999999911e-05, 8.944400000000102e-05, 8.961099999999986e-05, 8.868100000000018e-05, 8.874999999999855e-05, 8.86670000000006e-05, 8.956999999999715e-05, 8.855600000000005e-05, 8.958400000000019e-05, 8.938899999999875e-05, 8.940200000000231e-05, 8.941599999999841e-05, 8.9638999999999e-05, 8.86939999999968e-05, 8.874999999999855e-05, 8.854099999999754e-05, 8.94450000000005e-05, 8.894400000000052e-05, 8.954199999999801e-05, 8.952800000000191e-05, 8.883299999999997e-05, 8.874999999999855e-05, 8.868100000000018e-05, 8.858399999999919e-05, 8.86250000000019e-05, 8.865300000000104e-05, 8.937499999999918e-05, 8.940300000000179e-05, 8.954199999999801e-05, 8.951399999999887e-05, 8.958300000000072e-05, 8.874999999999855e-05, 8.865200000000156e-05, 8.938899999999875e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.149" endtime="20201112 12:27:33.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.144" endtime="20201112 12:27:33.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.154" endtime="20201112 12:27:33.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.157" endtime="20201112 12:27:33.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.156" endtime="20201112 12:27:33.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.152" endtime="20201112 12:27:33.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.785" endtime="20201112 12:27:33.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.785" endtime="20201112 12:27:33.178"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.187" endtime="20201112 12:27:33.204"></status>
</kw>
<msg timestamp="20201112 12:27:33.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.185" endtime="20201112 12:27:33.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.206" endtime="20201112 12:27:33.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.208" endtime="20201112 12:27:33.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.183" endtime="20201112 12:27:33.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.181" endtime="20201112 12:27:33.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.218" endtime="20201112 12:27:33.505"></status>
</kw>
<msg timestamp="20201112 12:27:33.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.217" endtime="20201112 12:27:33.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.509" endtime="20201112 12:27:33.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.518" endtime="20201112 12:27:33.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.214" endtime="20201112 12:27:33.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.212" endtime="20201112 12:27:33.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.524" level="INFO">${RESULT} = [{'time': 0.022068875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986100000000011e-05, 'source_diff': 8.986100000000011e-05}, {'time': 0.022160847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.521" endtime="20201112 12:27:33.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.539" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.525" endtime="20201112 12:27:33.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.543" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.542" endtime="20201112 12:27:33.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.546" level="INFO">VALUE: [8.986100000000011e-05, 8.976400000000259e-05, 8.966599999999866e-05, 9.051399999999987e-05, 8.970800000000084e-05, 8.969400000000127e-05, 9.033300000000147e-05, 8.966699999999814e-05, 9.048600000000073e-05, 9.055499999999911e-05, 8.969499999999728e-05, 8.997200000000066e-05, 9.05000000000003e-05, 8.972299999999989e-05, 8.988899999999925e-05, 8.959799999999976e-05, 8.96519999999991e-05, 8.974999999999955e-05, 9.052799999999944e-05, 8.976400000000259e-05, 9.061100000000086e-05, 9.042999999999898e-05, 8.96670000000016e-05, 8.968100000000118e-05, 9.047200000000116e-05, 8.958300000000072e-05, 8.973599999999998e-05, 8.986100000000011e-05, 8.973599999999998e-05, 9.038899999999975e-05, 9.036200000000008e-05, 8.988900000000272e-05, 8.973699999999946e-05, 8.983400000000044e-05, 9.048600000000073e-05, 8.955499999999811e-05, 8.96800000000017e-05, 8.956899999999768e-05, 8.973599999999998e-05, 8.966599999999866e-05, 8.986100000000011e-05, 8.959700000000029e-05, 8.974999999999955e-05, 9.037499999999671e-05, 8.986100000000011e-05, 8.970799999999737e-05, 9.037500000000018e-05, 9.056899999999868e-05, 8.988900000000272e-05, 8.977799999999869e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.544" endtime="20201112 12:27:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.540" endtime="20201112 12:27:33.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.550" endtime="20201112 12:27:33.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.553" endtime="20201112 12:27:33.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.551" endtime="20201112 12:27:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.548" endtime="20201112 12:27:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.179" endtime="20201112 12:27:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.178" endtime="20201112 12:27:33.574"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.582" endtime="20201112 12:27:33.600"></status>
</kw>
<msg timestamp="20201112 12:27:33.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.581" endtime="20201112 12:27:33.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.602" endtime="20201112 12:27:33.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.604" endtime="20201112 12:27:33.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.578" endtime="20201112 12:27:33.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.576" endtime="20201112 12:27:33.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.614" endtime="20201112 12:27:33.901"></status>
</kw>
<msg timestamp="20201112 12:27:33.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.613" endtime="20201112 12:27:33.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:33.905" endtime="20201112 12:27:33.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.913" endtime="20201112 12:27:33.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.610" endtime="20201112 12:27:33.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.608" endtime="20201112 12:27:33.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:33.920" level="INFO">${RESULT} = [{'time': 0.022335875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.059700000000129e-05, 'source_diff': 9.059700000000129e-05}, {'time': 0.022428917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:33.916" endtime="20201112 12:27:33.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:33.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:33.921" endtime="20201112 12:27:33.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.938" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:33.936" endtime="20201112 12:27:33.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.940" level="INFO">VALUE: [9.059700000000129e-05, 9.094499999999853e-05, 9.087500000000068e-05, 9.070799999999837e-05, 9.140300000000032e-05, 9.137499999999771e-05, 9.086099999999764e-05, 9.062500000000043e-05, 9.070799999999837e-05, 9.080499999999936e-05, 9.066599999999966e-05, 9.088800000000077e-05, 9.084700000000154e-05, 9.147200000000216e-05, 9.155500000000011e-05, 9.091599999999991e-05, 9.15139999999974e-05, 9.090299999999982e-05, 9.068100000000218e-05, 9.069400000000227e-05, 9.137500000000118e-05, 9.083399999999797e-05, 9.070899999999785e-05, 9.082000000000187e-05, 9.136099999999814e-05, 9.140300000000032e-05, 9.120799999999887e-05, 9.137500000000118e-05, 9.067999999999923e-05, 9.081899999999893e-05, 9.088900000000025e-05, 9.06520000000001e-05, 9.147200000000216e-05, 9.140300000000032e-05, 9.148599999999826e-05, 9.058300000000172e-05, 9.073600000000098e-05, 9.054199999999901e-05, 9.0945000000002e-05, 9.058300000000172e-05, 9.133300000000247e-05, 9.141600000000041e-05, 9.154100000000054e-05, 9.069500000000175e-05, 9.065299999999957e-05, 9.144499999999903e-05, 9.137500000000118e-05, 9.062500000000043e-05, 9.163899999999753e-05, 9.090200000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:27:33.939" endtime="20201112 12:27:33.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.934" endtime="20201112 12:27:33.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.943" endtime="20201112 12:27:33.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:33.947" endtime="20201112 12:27:33.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.945" endtime="20201112 12:27:33.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.942" endtime="20201112 12:27:33.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.575" endtime="20201112 12:27:33.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.574" endtime="20201112 12:27:33.968"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.976" endtime="20201112 12:27:33.994"></status>
</kw>
<msg timestamp="20201112 12:27:33.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.975" endtime="20201112 12:27:33.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:33.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:33.996" endtime="20201112 12:27:33.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:33.998" endtime="20201112 12:27:34.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.972" endtime="20201112 12:27:34.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.970" endtime="20201112 12:27:34.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.008" endtime="20201112 12:27:34.293"></status>
</kw>
<msg timestamp="20201112 12:27:34.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:34.007" endtime="20201112 12:27:34.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:34.298" endtime="20201112 12:27:34.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.306" endtime="20201112 12:27:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.004" endtime="20201112 12:27:34.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.002" endtime="20201112 12:27:34.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.313" level="INFO">${RESULT} = [{'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.226399999999815e-05, 'source_diff': 9.226399999999815e-05}, {'time': 0.022070264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:34.309" endtime="20201112 12:27:34.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.314" endtime="20201112 12:27:34.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.330" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.329" endtime="20201112 12:27:34.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.333" level="INFO">VALUE: [9.226399999999815e-05, 9.163899999999753e-05, 9.163899999999753e-05, 9.180599999999983e-05, 9.248599999999926e-05, 9.255600000000058e-05, 9.166700000000014e-05, 9.184699999999907e-05, 9.245800000000012e-05, 9.158299999999925e-05, 9.238800000000227e-05, 9.172200000000241e-05, 9.238899999999828e-05, 9.236099999999914e-05, 9.247299999999917e-05, 9.237499999999871e-05, 9.181899999999993e-05, 9.248599999999926e-05, 9.173600000000198e-05, 9.188900000000125e-05, 9.24589999999996e-05, 9.168099999999971e-05, 9.170899999999885e-05, 9.190299999999735e-05, 9.173599999999851e-05, 9.244500000000003e-05, 9.165300000000057e-05, 9.16520000000011e-05, 9.163800000000152e-05, 9.191600000000091e-05, 9.212500000000193e-05, 9.187500000000168e-05, 9.187500000000168e-05, 9.242999999999751e-05, 9.166700000000014e-05, 9.241700000000089e-05, 9.24719999999997e-05, 9.258300000000025e-05, 9.2333e-05, 9.161099999999839e-05, 9.183399999999897e-05, 9.159700000000229e-05, 9.181899999999993e-05, 9.179200000000026e-05, 9.1639000000001e-05, 9.163800000000152e-05, 9.175000000000155e-05, 9.248599999999926e-05, 9.190199999999787e-05, 9.168000000000023e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.332" endtime="20201112 12:27:34.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.327" endtime="20201112 12:27:34.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.337" endtime="20201112 12:27:34.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.340" endtime="20201112 12:27:34.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.338" endtime="20201112 12:27:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.335" endtime="20201112 12:27:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.969" endtime="20201112 12:27:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:33.968" endtime="20201112 12:27:34.361"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.369" endtime="20201112 12:27:34.388"></status>
</kw>
<msg timestamp="20201112 12:27:34.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.368" endtime="20201112 12:27:34.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.389" endtime="20201112 12:27:34.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.392" endtime="20201112 12:27:34.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.365" endtime="20201112 12:27:34.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.363" endtime="20201112 12:27:34.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.402" endtime="20201112 12:27:34.687"></status>
</kw>
<msg timestamp="20201112 12:27:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022408972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.400" endtime="20201112 12:27:34.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022408972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.691" endtime="20201112 12:27:34.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.700" endtime="20201112 12:27:34.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.398" endtime="20201112 12:27:34.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.396" endtime="20201112 12:27:34.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:34.706" level="INFO">${RESULT} = [{'time': 0.022501764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.279200000000126e-05, 'source_diff': 9.279200000000126e-05}, {'time': 0.022597736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:34.703" endtime="20201112 12:27:34.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:34.720" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:34.707" endtime="20201112 12:27:34.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.724" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:34.723" endtime="20201112 12:27:34.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.727" level="INFO">VALUE: [9.279200000000126e-05, 9.3333000000001e-05, 9.340300000000232e-05, 9.272199999999994e-05, 9.345799999999765e-05, 9.274999999999908e-05, 9.280600000000083e-05, 9.28330000000005e-05, 9.266699999999767e-05, 9.337499999999971e-05, 9.36529999999991e-05, 9.256900000000068e-05, 9.358300000000125e-05, 9.287500000000268e-05, 9.345800000000112e-05, 9.2639000000002e-05, 9.274999999999908e-05, 9.262499999999896e-05, 9.28330000000005e-05, 9.345800000000112e-05, 9.352799999999897e-05, 9.261099999999939e-05, 9.276399999999865e-05, 9.276399999999865e-05, 9.273599999999951e-05, 9.269500000000028e-05, 9.358300000000125e-05, 9.279200000000126e-05, 9.280500000000136e-05, 9.257000000000015e-05, 9.345800000000112e-05, 9.258300000000025e-05, 9.337500000000318e-05, 9.338899999999928e-05, 9.280500000000136e-05, 9.273599999999951e-05, 9.343100000000146e-05, 9.337499999999971e-05, 9.290300000000182e-05, 9.288899999999878e-05, 9.358300000000125e-05, 9.338899999999928e-05, 9.283399999999997e-05, 9.269500000000028e-05, 9.283399999999997e-05, 9.355600000000158e-05, 9.340299999999885e-05, 9.255600000000058e-05, 9.348600000000026e-05, 9.341599999999894e-05]</msg>
<status status="PASS" starttime="20201112 12:27:34.725" endtime="20201112 12:27:34.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.721" endtime="20201112 12:27:34.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.730" endtime="20201112 12:27:34.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:34.734" endtime="20201112 12:27:34.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.732" endtime="20201112 12:27:34.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.728" endtime="20201112 12:27:34.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.362" endtime="20201112 12:27:34.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.361" endtime="20201112 12:27:34.755"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.764" endtime="20201112 12:27:34.783"></status>
</kw>
<msg timestamp="20201112 12:27:34.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.762" endtime="20201112 12:27:34.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:34.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:34.784" endtime="20201112 12:27:34.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.787" endtime="20201112 12:27:34.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.760" endtime="20201112 12:27:34.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.758" endtime="20201112 12:27:34.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:34.797" endtime="20201112 12:27:35.082"></status>
</kw>
<msg timestamp="20201112 12:27:35.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:34.795" endtime="20201112 12:27:35.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.086" endtime="20201112 12:27:35.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.094" endtime="20201112 12:27:35.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.793" endtime="20201112 12:27:35.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.791" endtime="20201112 12:27:35.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.101" level="INFO">${RESULT} = [{'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.407000000000165e-05, 'source_diff': 9.407000000000165e-05}, {'time': 0.022558056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.097" endtime="20201112 12:27:35.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.102" endtime="20201112 12:27:35.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.120" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.119" endtime="20201112 12:27:35.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.122" level="INFO">VALUE: [9.407000000000165e-05, 9.436200000000061e-05, 9.450000000000083e-05, 9.376399999999965e-05, 9.449999999999736e-05, 9.455500000000311e-05, 9.444400000000255e-05, 9.436100000000114e-05, 9.466699999999967e-05, 9.381899999999846e-05, 9.441699999999942e-05, 9.386100000000064e-05, 9.386099999999717e-05, 9.373600000000051e-05, 9.388899999999978e-05, 9.368099999999824e-05, 9.362499999999996e-05, 9.434800000000104e-05, 9.375000000000008e-05, 9.372299999999695e-05, 9.445800000000212e-05, 9.438900000000028e-05, 9.375000000000008e-05, 9.45140000000004e-05, 9.462499999999749e-05, 9.362499999999996e-05, 9.369499999999781e-05, 9.372200000000094e-05, 9.43469999999981e-05, 9.44720000000017e-05, 9.440299999999985e-05, 9.380599999999836e-05, 9.375000000000008e-05, 9.418099999999874e-05, 9.458399999999825e-05, 9.369499999999781e-05, 9.437499999999724e-05, 9.434800000000104e-05, 9.454200000000301e-05, 9.369399999999833e-05, 9.461099999999792e-05, 9.441599999999994e-05, 9.365199999999962e-05, 9.372200000000094e-05, 9.455499999999964e-05, 9.375000000000008e-05, 9.455600000000258e-05, 9.388899999999978e-05, 9.416699999999917e-05, 9.38200000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.121" endtime="20201112 12:27:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.116" endtime="20201112 12:27:35.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.126" endtime="20201112 12:27:35.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.129" endtime="20201112 12:27:35.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.128" endtime="20201112 12:27:35.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.124" endtime="20201112 12:27:35.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.756" endtime="20201112 12:27:35.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:34.755" endtime="20201112 12:27:35.150"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.158" endtime="20201112 12:27:35.177"></status>
</kw>
<msg timestamp="20201112 12:27:35.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.157" endtime="20201112 12:27:35.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.178" endtime="20201112 12:27:35.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.180" endtime="20201112 12:27:35.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.154" endtime="20201112 12:27:35.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.152" endtime="20201112 12:27:35.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.190" endtime="20201112 12:27:35.476"></status>
</kw>
<msg timestamp="20201112 12:27:35.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.189" endtime="20201112 12:27:35.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.480" endtime="20201112 12:27:35.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.488" endtime="20201112 12:27:35.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.186" endtime="20201112 12:27:35.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.185" endtime="20201112 12:27:35.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.495" level="INFO">${RESULT} = [{'time': 0.021900375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.523599999999854e-05, 'source_diff': 9.523599999999854e-05}, {'time': 0.021997389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.492" endtime="20201112 12:27:35.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.508" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.496" endtime="20201112 12:27:35.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.513" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.512" endtime="20201112 12:27:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.515" level="INFO">VALUE: [9.523599999999854e-05, 9.476400000000065e-05, 9.543099999999999e-05, 9.468099999999924e-05, 9.481999999999893e-05, 9.549999999999836e-05, 9.465199999999716e-05, 9.548700000000174e-05, 9.461200000000086e-05, 9.467999999999976e-05, 9.54859999999988e-05, 9.556900000000021e-05, 9.472200000000194e-05, 9.545800000000312e-05, 9.484700000000207e-05, 9.462500000000096e-05, 9.545799999999965e-05, 9.516700000000017e-05, 9.466699999999967e-05, 9.480599999999936e-05, 9.541700000000042e-05, 9.488900000000078e-05, 9.491699999999992e-05, 9.493099999999949e-05, 9.550000000000183e-05, 9.490300000000035e-05, 9.55270000000015e-05, 9.547199999999922e-05, 9.555500000000064e-05, 9.455499999999964e-05, 9.552800000000097e-05, 9.491600000000044e-05, 9.463899999999706e-05, 9.554200000000054e-05, 9.487499999999774e-05, 9.549999999999836e-05, 9.486099999999817e-05, 9.461099999999792e-05, 9.46530000000001e-05, 9.463899999999706e-05, 9.475000000000108e-05, 9.486100000000164e-05, 9.562500000000196e-05, 9.46530000000001e-05, 9.558299999999978e-05, 9.459699999999835e-05, 9.462500000000096e-05, 9.54019999999979e-05, 9.538899999999781e-05, 9.449999999999736e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.514" endtime="20201112 12:27:35.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.509" endtime="20201112 12:27:35.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.519" endtime="20201112 12:27:35.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.522" endtime="20201112 12:27:35.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.521" endtime="20201112 12:27:35.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.517" endtime="20201112 12:27:35.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.151" endtime="20201112 12:27:35.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.150" endtime="20201112 12:27:35.543"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.552" endtime="20201112 12:27:35.570"></status>
</kw>
<msg timestamp="20201112 12:27:35.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.550" endtime="20201112 12:27:35.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.572" endtime="20201112 12:27:35.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.574" endtime="20201112 12:27:35.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.548" endtime="20201112 12:27:35.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.545" endtime="20201112 12:27:35.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.584" endtime="20201112 12:27:35.869"></status>
</kw>
<msg timestamp="20201112 12:27:35.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.583" endtime="20201112 12:27:35.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.873" endtime="20201112 12:27:35.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.881" endtime="20201112 12:27:35.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.580" endtime="20201112 12:27:35.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.579" endtime="20201112 12:27:35.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:35.888" level="INFO">${RESULT} = [{'time': 0.022022264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.587499999999874e-05, 'source_diff': 9.587499999999874e-05}, {'time': 0.022121264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:35.885" endtime="20201112 12:27:35.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:35.901" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:35.889" endtime="20201112 12:27:35.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.906" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:35.905" endtime="20201112 12:27:35.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.908" level="INFO">VALUE: [9.587499999999874e-05, 9.643100000000099e-05, 9.56669999999972e-05, 9.568100000000024e-05, 9.637499999999924e-05, 9.583400000000297e-05, 9.562499999999849e-05, 9.588799999999884e-05, 9.654100000000207e-05, 9.63470000000001e-05, 9.661099999999992e-05, 9.566700000000067e-05, 9.658300000000078e-05, 9.573599999999904e-05, 9.642999999999805e-05, 9.569400000000033e-05, 9.640300000000185e-05, 9.56530000000011e-05, 9.561099999999892e-05, 9.647200000000022e-05, 9.580600000000036e-05, 9.644500000000056e-05, 9.645900000000013e-05, 9.566700000000067e-05, 9.562499999999849e-05, 9.587499999999874e-05, 9.581900000000046e-05, 9.640299999999838e-05, 9.572199999999947e-05, 9.573599999999904e-05, 9.643000000000151e-05, 9.636099999999967e-05, 9.65140000000024e-05, 9.583300000000003e-05, 9.57079999999999e-05, 9.573599999999904e-05, 9.623599999999954e-05, 9.65140000000024e-05, 9.658400000000025e-05, 9.570899999999938e-05, 9.636199999999914e-05, 9.563899999999806e-05, 9.563800000000205e-05, 9.644399999999761e-05, 9.658300000000078e-05, 9.558300000000325e-05, 9.647200000000022e-05, 9.569400000000033e-05, 9.59729999999992e-05, 9.651399999999893e-05]</msg>
<status status="PASS" starttime="20201112 12:27:35.907" endtime="20201112 12:27:35.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.902" endtime="20201112 12:27:35.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.912" endtime="20201112 12:27:35.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:35.915" endtime="20201112 12:27:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.914" endtime="20201112 12:27:35.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.910" endtime="20201112 12:27:35.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.544" endtime="20201112 12:27:35.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.543" endtime="20201112 12:27:35.936"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.945" endtime="20201112 12:27:35.964"></status>
</kw>
<msg timestamp="20201112 12:27:35.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.943" endtime="20201112 12:27:35.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.966" endtime="20201112 12:27:35.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.968" endtime="20201112 12:27:35.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.941" endtime="20201112 12:27:35.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.939" endtime="20201112 12:27:35.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.978" endtime="20201112 12:27:36.262"></status>
</kw>
<msg timestamp="20201112 12:27:36.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.977" endtime="20201112 12:27:36.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.267" endtime="20201112 12:27:36.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.275" endtime="20201112 12:27:36.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.974" endtime="20201112 12:27:36.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.972" endtime="20201112 12:27:36.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.281" level="INFO">${RESULT} = [{'time': 0.021953153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736100000000067e-05, 'source_diff': 9.736100000000067e-05}, {'time': 0.022052153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.278" endtime="20201112 12:27:36.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.295" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.282" endtime="20201112 12:27:36.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.299" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.298" endtime="20201112 12:27:36.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.302" level="INFO">VALUE: [9.736100000000067e-05, 9.658400000000025e-05, 9.75279999999995e-05, 9.658400000000025e-05, 9.68340000000005e-05, 9.66669999999982e-05, 9.763900000000006e-05, 9.74019999999999e-05, 9.736100000000067e-05, 9.688900000000278e-05, 9.736100000000067e-05, 9.659700000000035e-05, 9.680500000000189e-05, 9.662500000000296e-05, 9.68470000000006e-05, 9.743099999999852e-05, 9.666700000000167e-05, 9.676399999999918e-05, 9.755599999999864e-05, 9.679199999999832e-05, 9.661099999999992e-05, 9.665299999999863e-05, 9.744499999999809e-05, 9.747199999999775e-05, 9.751300000000046e-05, 9.75409999999996e-05, 9.750000000000036e-05, 9.679100000000232e-05, 9.756900000000221e-05, 9.661099999999992e-05, 9.676399999999918e-05, 9.736100000000067e-05, 9.750000000000036e-05, 9.688899999999931e-05, 9.750000000000036e-05, 9.738899999999981e-05, 9.676399999999918e-05, 9.745900000000113e-05, 9.743099999999852e-05, 9.684800000000007e-05, 9.661099999999992e-05, 9.65270000000025e-05, 9.745799999999818e-05, 9.661099999999992e-05, 9.750000000000036e-05, 9.673600000000004e-05, 9.676399999999918e-05, 9.727799999999925e-05, 9.66530000000021e-05, 9.754199999999907e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.300" endtime="20201112 12:27:36.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.296" endtime="20201112 12:27:36.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.309" endtime="20201112 12:27:36.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.313" endtime="20201112 12:27:36.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.311" endtime="20201112 12:27:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.308" endtime="20201112 12:27:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.937" endtime="20201112 12:27:36.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.937" endtime="20201112 12:27:36.333"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.342" endtime="20201112 12:27:36.361"></status>
</kw>
<msg timestamp="20201112 12:27:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.341" endtime="20201112 12:27:36.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.362" endtime="20201112 12:27:36.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.365" endtime="20201112 12:27:36.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.338" endtime="20201112 12:27:36.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.336" endtime="20201112 12:27:36.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.375" endtime="20201112 12:27:36.661"></status>
</kw>
<msg timestamp="20201112 12:27:36.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.373" endtime="20201112 12:27:36.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.665" endtime="20201112 12:27:36.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.673" endtime="20201112 12:27:36.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.371" endtime="20201112 12:27:36.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.369" endtime="20201112 12:27:36.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.680" level="INFO">${RESULT} = [{'time': 0.022263347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.843000000000005e-05, 'source_diff': 9.843000000000005e-05}, {'time': 0.022363347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.676" endtime="20201112 12:27:36.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.694" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.681" endtime="20201112 12:27:36.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.699" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.698" endtime="20201112 12:27:36.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.701" level="INFO">VALUE: [9.843000000000005e-05, 9.774999999999714e-05, 9.856899999999974e-05, 9.813899999999709e-05, 9.83609999999982e-05, 9.83609999999982e-05, 9.787500000000074e-05, 9.850000000000136e-05, 9.76669999999992e-05, 9.833300000000253e-05, 9.768099999999877e-05, 9.787500000000074e-05, 9.837499999999777e-05, 9.779199999999932e-05, 9.784800000000107e-05, 9.779099999999985e-05, 9.856899999999974e-05, 9.794399999999912e-05, 9.859699999999888e-05, 9.783299999999856e-05, 9.779099999999985e-05, 9.855599999999964e-05, 9.837499999999777e-05, 9.816700000000317e-05, 9.775000000000061e-05, 9.844499999999909e-05, 9.791699999999945e-05, 9.837500000000124e-05, 9.851400000000093e-05, 9.761100000000092e-05, 9.858399999999878e-05, 9.770899999999791e-05, 9.769399999999887e-05, 9.777700000000028e-05, 9.791599999999998e-05, 9.84020000000009e-05, 9.854200000000007e-05, 9.775000000000061e-05, 9.840300000000038e-05, 9.765299999999963e-05, 9.790299999999988e-05, 9.790299999999988e-05, 9.841699999999995e-05, 9.782000000000193e-05, 9.783399999999803e-05, 9.756999999999821e-05, 9.78340000000015e-05, 9.761100000000092e-05, 9.854200000000007e-05, 9.845800000000265e-05]</msg>
<status status="PASS" starttime="20201112 12:27:36.700" endtime="20201112 12:27:36.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.695" endtime="20201112 12:27:36.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.705" endtime="20201112 12:27:36.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.708" endtime="20201112 12:27:36.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.707" endtime="20201112 12:27:36.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.703" endtime="20201112 12:27:36.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.334" endtime="20201112 12:27:36.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.334" endtime="20201112 12:27:36.729"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.738" endtime="20201112 12:27:36.757"></status>
</kw>
<msg timestamp="20201112 12:27:36.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.736" endtime="20201112 12:27:36.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.759" endtime="20201112 12:27:36.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.761" endtime="20201112 12:27:36.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.734" endtime="20201112 12:27:36.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.732" endtime="20201112 12:27:36.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.772" endtime="20201112 12:27:37.059"></status>
</kw>
<msg timestamp="20201112 12:27:37.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.770" endtime="20201112 12:27:37.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022226333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.063" endtime="20201112 12:27:37.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.071" endtime="20201112 12:27:37.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.768" endtime="20201112 12:27:37.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.766" endtime="20201112 12:27:37.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.078" level="INFO">${RESULT} = [{'time': 0.022226333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.913900000000156e-05, 'source_diff': 9.913900000000156e-05}, {'time': 0.022327292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:37.074" endtime="20201112 12:27:37.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.079" endtime="20201112 12:27:37.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.096" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.095" endtime="20201112 12:27:37.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.098" level="INFO">VALUE: [9.913900000000156e-05, 9.870899999999891e-05, 9.879200000000032e-05, 9.88479999999986e-05, 9.870899999999891e-05, 9.881999999999946e-05, 9.951300000000246e-05, 9.888900000000131e-05, 9.865199999999769e-05, 9.933300000000006e-05, 9.940300000000138e-05, 9.858299999999931e-05, 9.938899999999834e-05, 9.954200000000107e-05, 9.95280000000015e-05, 9.936100000000267e-05, 9.888899999999784e-05, 9.861099999999845e-05, 9.957000000000021e-05, 9.894499999999959e-05, 9.863900000000106e-05, 9.881999999999946e-05, 9.890300000000088e-05, 9.947199999999976e-05, 9.938899999999834e-05, 9.877800000000075e-05, 9.944400000000062e-05, 9.887500000000174e-05, 9.88609999999987e-05, 9.872200000000247e-05, 9.959699999999988e-05, 9.850000000000136e-05, 9.861099999999845e-05, 9.88609999999987e-05, 9.877800000000075e-05, 9.856999999999921e-05, 9.869399999999987e-05, 9.937500000000224e-05, 9.881899999999999e-05, 9.870899999999891e-05, 9.876400000000118e-05, 9.877800000000075e-05, 9.94999999999989e-05, 9.858299999999931e-05, 9.934699999999963e-05, 9.866699999999673e-05, 9.888899999999784e-05, 9.941700000000095e-05, 9.945800000000019e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201112 12:27:37.097" endtime="20201112 12:27:37.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.092" endtime="20201112 12:27:37.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.102" endtime="20201112 12:27:37.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.105" endtime="20201112 12:27:37.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.103" endtime="20201112 12:27:37.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.100" endtime="20201112 12:27:37.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.730" endtime="20201112 12:27:37.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.729" endtime="20201112 12:27:37.126"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.134" endtime="20201112 12:27:37.154"></status>
</kw>
<msg timestamp="20201112 12:27:37.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.133" endtime="20201112 12:27:37.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.156" endtime="20201112 12:27:37.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.158" endtime="20201112 12:27:37.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.130" endtime="20201112 12:27:37.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.128" endtime="20201112 12:27:37.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.168" endtime="20201112 12:27:37.452"></status>
</kw>
<msg timestamp="20201112 12:27:37.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.167" endtime="20201112 12:27:37.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.456" endtime="20201112 12:27:37.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.464" endtime="20201112 12:27:37.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.164" endtime="20201112 12:27:37.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.162" endtime="20201112 12:27:37.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.471" level="INFO">${RESULT} = [{'time': 0.022050097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010048600000000033, 'source_diff': 0.00010048600000000033}, {'time': 0.022152111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.468" endtime="20201112 12:27:37.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.484" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.472" endtime="20201112 12:27:37.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.489" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.488" endtime="20201112 12:27:37.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.491" level="INFO">VALUE: [0.00010048600000000033, 9.973599999999957e-05, 0.00010052799999999903, 9.968100000000077e-05, 0.00010043100000000152, 0.00010041699999999848, 9.990300000000188e-05, 9.96809999999973e-05, 9.983400000000003e-05, 9.973699999999905e-05, 0.00010058400000000078, 9.977699999999881e-05, 9.993000000000155e-05, 9.983300000000056e-05, 9.987499999999927e-05, 9.99159999999985e-05, 9.973599999999957e-05, 0.0001001800000000018, 0.00010041699999999848, 0.00010052799999999903, 9.9722e-05, 9.961099999999945e-05, 9.976399999999871e-05, 0.00010055600000000164, 9.9819999999997e-05, 0.00010047300000000023, 9.973599999999957e-05, 0.00010033300000000106, 0.00010044499999999762, 0.0001003610000000002, 9.963799999999912e-05, 0.0001004999999999999, 0.000100415999999999, 9.986100000000317e-05, 9.974999999999914e-05, 9.980500000000142e-05, 0.00010040299999999891, 9.98609999999997e-05, 9.979200000000132e-05, 0.00010016699999999823, 0.00010057000000000121, 0.00010040299999999891, 0.00010055600000000164, 9.982000000000046e-05, 9.962500000000249e-05, 0.0001004999999999999, 0.00010051299999999999, 9.966599999999826e-05, 9.970800000000044e-05, 0.0001005419999999986]</msg>
<status status="PASS" starttime="20201112 12:27:37.490" endtime="20201112 12:27:37.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.485" endtime="20201112 12:27:37.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.495" endtime="20201112 12:27:37.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.498" endtime="20201112 12:27:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.497" endtime="20201112 12:27:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.493" endtime="20201112 12:27:37.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.127" endtime="20201112 12:27:37.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.126" endtime="20201112 12:27:37.519"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.528" endtime="20201112 12:27:37.547"></status>
</kw>
<msg timestamp="20201112 12:27:37.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.526" endtime="20201112 12:27:37.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.548" endtime="20201112 12:27:37.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.551" endtime="20201112 12:27:37.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.524" endtime="20201112 12:27:37.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.522" endtime="20201112 12:27:37.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.561" endtime="20201112 12:27:37.846"></status>
</kw>
<msg timestamp="20201112 12:27:37.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.559" endtime="20201112 12:27:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.850" endtime="20201112 12:27:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.858" endtime="20201112 12:27:37.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.556" endtime="20201112 12:27:37.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.555" endtime="20201112 12:27:37.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.865" level="INFO">${RESULT} = [{'time': 0.021987889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010107000000000171, 'source_diff': 0.00010107000000000171}, {'time': 0.022090889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:37.862" endtime="20201112 12:27:37.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.878" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.866" endtime="20201112 12:27:37.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.882" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.881" endtime="20201112 12:27:37.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.885" level="INFO">VALUE: [0.00010107000000000171, 0.00010072199999999754, 0.0001006670000000022, 0.00010076399999999971, 0.00010076399999999971, 0.00010151400000000046, 0.00010159800000000135, 0.00010138900000000034, 0.00010152800000000003, 0.00010088899999999984, 0.00010090199999999994, 0.00010148600000000133, 0.00010144400000000262, 0.0001006809999999983, 0.00010072199999999754, 0.00010145799999999872, 0.0001013610000000012, 0.00010061100000000045, 0.00010079199999999885, 0.0001008610000000007, 0.00010073600000000058, 0.00010057000000000121, 0.000101416, 0.00010145800000000219, 0.0001013610000000012, 0.00010076399999999971, 0.00010144399999999915, 0.00010084699999999766, 0.00010140299999999991, 0.00010147200000000176, 0.00010061100000000045, 0.00010151400000000046, 0.00010065300000000263, 0.00010077799999999928, 0.00010075000000000014, 0.00010145800000000219, 0.00010070800000000144, 0.0001006809999999983, 0.00010163800000000112, 0.00010081899999999852, 0.00010151299999999752, 0.000100722000000001, 0.00010152700000000056, 0.00010147199999999829, 0.00010148600000000133, 0.00010141699999999948, 0.00010162499999999755, 0.00010068100000000177, 0.0001006939999999984, 0.00010059699999999741]</msg>
<status status="PASS" starttime="20201112 12:27:37.883" endtime="20201112 12:27:37.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.879" endtime="20201112 12:27:37.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.888" endtime="20201112 12:27:37.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.892" endtime="20201112 12:27:37.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.890" endtime="20201112 12:27:37.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.887" endtime="20201112 12:27:37.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.520" endtime="20201112 12:27:37.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.519" endtime="20201112 12:27:37.913"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.921" endtime="20201112 12:27:37.940"></status>
</kw>
<msg timestamp="20201112 12:27:37.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.920" endtime="20201112 12:27:37.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.942" endtime="20201112 12:27:37.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.944" endtime="20201112 12:27:37.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.917" endtime="20201112 12:27:37.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.915" endtime="20201112 12:27:37.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.954" endtime="20201112 12:27:38.240"></status>
</kw>
<msg timestamp="20201112 12:27:38.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.953" endtime="20201112 12:27:38.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.244" endtime="20201112 12:27:38.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.252" endtime="20201112 12:27:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.950" endtime="20201112 12:27:38.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.949" endtime="20201112 12:27:38.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.259" level="INFO">${RESULT} = [{'time': 0.021994514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010180599999999942, 'source_diff': 0.00010180599999999942}, {'time': 0.022099514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.256" endtime="20201112 12:27:38.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.273" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.260" endtime="20201112 12:27:38.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.278" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.277" endtime="20201112 12:27:38.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.280" level="INFO">VALUE: [0.00010180599999999942, 0.00010245799999999972, 0.00010230599999999992, 0.00010187500000000127, 0.00010229200000000035, 0.00010167999999999983, 0.00010245899999999919, 0.00010161099999999798, 0.00010176400000000071, 0.00010179100000000038, 0.00010169400000000287, 0.00010236099999999873, 0.00010165300000000016, 0.00010193099999999955, 0.0001016939999999994, 0.00010170800000000244, 0.0001017359999999981, 0.00010247200000000276, 0.00010194399999999965, 0.00010230599999999992, 0.00010241699999999701, 0.00010169500000000234, 0.00010163900000000059, 0.00010162500000000102, 0.00010258299999999984, 0.00010188900000000084, 0.00010248599999999886, 0.00010183299999999909, 0.0001016939999999994, 0.00010248599999999886, 0.00010184699999999866, 0.00010245799999999972, 0.00010169500000000234, 0.00010175000000000115, 0.00010188900000000084, 0.00010236099999999873, 0.0001023619999999982, 0.00010180599999999942, 0.00010261200000000192, 0.00010232000000000296, 0.0001018610000000017, 0.00010179199999999985, 0.00010254100000000113, 0.00010247199999999929, 0.00010243000000000058, 0.00010241700000000048, 0.00010181899999999952, 0.00010176400000000071, 0.00010183299999999909, 0.00010158399999999831]</msg>
<status status="PASS" starttime="20201112 12:27:38.279" endtime="20201112 12:27:38.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.274" endtime="20201112 12:27:38.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.284" endtime="20201112 12:27:38.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.287" endtime="20201112 12:27:38.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.285" endtime="20201112 12:27:38.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.282" endtime="20201112 12:27:38.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.913" endtime="20201112 12:27:38.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.913" endtime="20201112 12:27:38.308"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.316" endtime="20201112 12:27:38.335"></status>
</kw>
<msg timestamp="20201112 12:27:38.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.315" endtime="20201112 12:27:38.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.337" endtime="20201112 12:27:38.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.339" endtime="20201112 12:27:38.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.312" endtime="20201112 12:27:38.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.310" endtime="20201112 12:27:38.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.350" endtime="20201112 12:27:38.636"></status>
</kw>
<msg timestamp="20201112 12:27:38.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.349" endtime="20201112 12:27:38.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.640" endtime="20201112 12:27:38.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.648" endtime="20201112 12:27:38.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.346" endtime="20201112 12:27:38.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.344" endtime="20201112 12:27:38.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.654" level="INFO">${RESULT} = [{'time': 0.022004833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010259700000000288, 'source_diff': 0.00010259700000000288}, {'time': 0.022110847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.651" endtime="20201112 12:27:38.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.655" endtime="20201112 12:27:38.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.672" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.671" endtime="20201112 12:27:38.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.674" level="INFO">VALUE: [0.00010259700000000288, 0.0001033749999999993, 0.00010276400000000172, 0.00010334700000000016, 0.0001033749999999993, 0.00010273600000000258, 0.00010279200000000085, 0.00010344500000000062, 0.00010272199999999954, 0.00010343100000000105, 0.00010284799999999913, 0.00010338900000000234, 0.00010273700000000205, 0.00010256999999999974, 0.00010352799999999857, 0.00010269399999999693, 0.00010347200000000029, 0.00010283300000000009, 0.00010336099999999973, 0.00010343000000000158, 0.00010352799999999857, 0.00010281900000000052, 0.00010334699999999669, 0.00010343100000000105, 0.00010284699999999966, 0.00010263899999999812, 0.00010277799999999782, 0.00010282, 0.00010355600000000117, 0.00010340299999999844, 0.00010273699999999858, 0.00010298599999999936, 0.00010362499999999955, 0.00010272199999999954, 0.00010316600000000176, 0.00010344399999999768, 0.00010262499999999855, 0.00010279200000000085, 0.00010279200000000085, 0.00010284700000000313, 0.00010348599999999986, 0.00010274999999999868, 0.00010263900000000159, 0.00010340299999999844, 0.00010282, 0.00010340299999999844, 0.00010341599999999854, 0.00010283399999999956, 0.00010273600000000258, 0.00010267999999999736]</msg>
<status status="PASS" starttime="20201112 12:27:38.673" endtime="20201112 12:27:38.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.668" endtime="20201112 12:27:38.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.678" endtime="20201112 12:27:38.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.681" endtime="20201112 12:27:38.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.680" endtime="20201112 12:27:38.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.676" endtime="20201112 12:27:38.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.309" endtime="20201112 12:27:38.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.308" endtime="20201112 12:27:38.702"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.711" endtime="20201112 12:27:38.730"></status>
</kw>
<msg timestamp="20201112 12:27:38.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.709" endtime="20201112 12:27:38.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.731" endtime="20201112 12:27:38.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.734" endtime="20201112 12:27:38.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.707" endtime="20201112 12:27:38.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.704" endtime="20201112 12:27:38.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.744" endtime="20201112 12:27:39.029"></status>
</kw>
<msg timestamp="20201112 12:27:39.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:38.742" endtime="20201112 12:27:39.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:39.033" endtime="20201112 12:27:39.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.041" endtime="20201112 12:27:39.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.740" endtime="20201112 12:27:39.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.738" endtime="20201112 12:27:39.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.048" level="INFO">${RESULT} = [{'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010411100000000048, 'source_diff': 0.00010411100000000048}, {'time': 0.022031597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.045" endtime="20201112 12:27:39.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.061" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.049" endtime="20201112 12:27:39.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.065" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.064" endtime="20201112 12:27:39.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.068" level="INFO">VALUE: [0.00010411100000000048, 0.0001036940000000014, 0.00010462500000000055, 0.00010455600000000217, 0.0001045689999999988, 0.00010383300000000109, 0.00010367999999999836, 0.00010362499999999955, 0.00010459699999999794, 0.00010372200000000054, 0.00010365299999999869, 0.0001043750000000003, 0.00010418099999999833, 0.00010390300000000241, 0.00010384700000000066, 0.00010434800000000063, 0.00010365199999999922, 0.00010365199999999922, 0.00010447200000000129, 0.0001038749999999998, 0.00010381900000000152, 0.00010390299999999894, 0.00010441699999999901, 0.00010445800000000172, 0.00010457000000000174, 0.00010386100000000023, 0.00010440299999999944, 0.00010412500000000005, 0.00010388899999999937, 0.00010370900000000044, 0.00010373699999999958, 0.00010450000000000043, 0.00010365199999999922, 0.00010359699999999694, 0.00010440299999999944, 0.00010377699999999934, 0.00010390299999999894, 0.0001045420000000026, 0.0001037360000000001, 0.00010450000000000043, 0.000104514, 0.00010447199999999782, 0.00010459800000000088, 0.00010450000000000043, 0.00010443099999999858, 0.00010365299999999869, 0.00010458300000000184, 0.00010454099999999966, 0.0001038749999999998, 0.00010451299999999705]</msg>
<status status="PASS" starttime="20201112 12:27:39.067" endtime="20201112 12:27:39.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.062" endtime="20201112 12:27:39.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.071" endtime="20201112 12:27:39.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.075" endtime="20201112 12:27:39.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.073" endtime="20201112 12:27:39.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.070" endtime="20201112 12:27:39.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.703" endtime="20201112 12:27:39.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.702" endtime="20201112 12:27:39.096"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.104" endtime="20201112 12:27:39.123"></status>
</kw>
<msg timestamp="20201112 12:27:39.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.103" endtime="20201112 12:27:39.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.125" endtime="20201112 12:27:39.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.127" endtime="20201112 12:27:39.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.100" endtime="20201112 12:27:39.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.098" endtime="20201112 12:27:39.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.137" endtime="20201112 12:27:39.422"></status>
</kw>
<msg timestamp="20201112 12:27:39.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02187125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:39.136" endtime="20201112 12:27:39.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02187125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:39.426" endtime="20201112 12:27:39.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.434" endtime="20201112 12:27:39.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.133" endtime="20201112 12:27:39.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.132" endtime="20201112 12:27:39.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.441" level="INFO">${RESULT} = [{'time': 0.02187125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010562499999999808, 'source_diff': 0.00010562499999999808}, {'time': 0.021978208, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:39.438" endtime="20201112 12:27:39.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.442" endtime="20201112 12:27:39.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.459" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.458" endtime="20201112 12:27:39.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.461" level="INFO">VALUE: [0.00010562499999999808, 0.00010465200000000022, 0.00010549999999999796, 0.00010454099999999966, 0.00010543099999999958, 0.00010462500000000055, 0.00010556900000000327, 0.00010555600000000318, 0.00010522199999999857, 0.00010475000000000068, 0.00010486099999999776, 0.00010488900000000037, 0.00010463900000000012, 0.00010549999999999796, 0.00010549999999999796, 0.00010458400000000131, 0.00010558299999999937, 0.00010475000000000068, 0.00010488900000000037, 0.00010476400000000025, 0.00010543000000000011, 0.0001053750000000013, 0.00010493099999999908, 0.00010473599999999764, 0.00010466699999999926, 0.00010458300000000184, 0.00010556999999999928, 0.00010472200000000154, 0.00010550000000000143, 0.00010454199999999914, 0.00010559699999999894, 0.00010540200000000097, 0.00010541600000000054, 0.00010545900000000219, 0.00010558299999999937, 0.00010481899999999905, 0.00010563900000000112, 0.00010486099999999776, 0.00010554200000000014, 0.00010548700000000133, 0.0001046949999999984, 0.00010458400000000131, 0.0001053889999999974, 0.00010465299999999969, 0.00010462500000000055, 0.000105514000000001, 0.00010494400000000265, 0.00010559699999999894, 0.00010477700000000034, 0.00010462500000000055]</msg>
<status status="PASS" starttime="20201112 12:27:39.460" endtime="20201112 12:27:39.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.455" endtime="20201112 12:27:39.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.464" endtime="20201112 12:27:39.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.468" endtime="20201112 12:27:39.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.466" endtime="20201112 12:27:39.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.463" endtime="20201112 12:27:39.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.097" endtime="20201112 12:27:39.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.096" endtime="20201112 12:27:39.489"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.497" endtime="20201112 12:27:39.516"></status>
</kw>
<msg timestamp="20201112 12:27:39.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.496" endtime="20201112 12:27:39.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.518" endtime="20201112 12:27:39.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.520" endtime="20201112 12:27:39.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.493" endtime="20201112 12:27:39.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.491" endtime="20201112 12:27:39.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.530" endtime="20201112 12:27:39.815"></status>
</kw>
<msg timestamp="20201112 12:27:39.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.528" endtime="20201112 12:27:39.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.819" endtime="20201112 12:27:39.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.828" endtime="20201112 12:27:39.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.526" endtime="20201112 12:27:39.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.524" endtime="20201112 12:27:39.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.834" level="INFO">${RESULT} = [{'time': 0.022335764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010616700000000076, 'source_diff': 0.00010616700000000076}, {'time': 0.022444681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.831" endtime="20201112 12:27:39.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.848" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.835" endtime="20201112 12:27:39.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.853" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.852" endtime="20201112 12:27:39.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.855" level="INFO">VALUE: [0.00010616700000000076, 0.00010645899999999972, 0.00010647199999999982, 0.00010649999999999896, 0.00010583299999999962, 0.00010581900000000005, 0.00010562500000000155, 0.0001065279999999981, 0.00010590300000000094, 0.00010581900000000005, 0.00010654200000000114, 0.00010654200000000114, 0.00010565300000000069, 0.00010558399999999885, 0.00010648599999999939, 0.00010559799999999842, 0.00010563800000000165, 0.00010569399999999993, 0.0001058880000000019, 0.00010633300000000012, 0.00010648599999999939, 0.00010641600000000154, 0.0001058750000000018, 0.00010645800000000025, 0.0001058889999999979, 0.00010636099999999926, 0.00010575000000000168, 0.00010561100000000198, 0.00010655599999999724, 0.0001057079999999995, 0.00010641700000000101, 0.00010556999999999928, 0.00010652800000000157, 0.00010586099999999876, 0.00010637499999999883, 0.00010562500000000155, 0.00010648600000000286, 0.00010590300000000094, 0.00010640299999999797, 0.0001057079999999995, 0.00010650000000000243, 0.00010641699999999754, 0.00010630600000000046, 0.00010654200000000114, 0.0001056949999999994, 0.000105820000000003, 0.00010641700000000101, 0.00010587499999999833, 0.00010644400000000068, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201112 12:27:39.854" endtime="20201112 12:27:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.849" endtime="20201112 12:27:39.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.859" endtime="20201112 12:27:39.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.862" endtime="20201112 12:27:39.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.861" endtime="20201112 12:27:39.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.857" endtime="20201112 12:27:39.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.490" endtime="20201112 12:27:39.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.489" endtime="20201112 12:27:39.883"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.892" endtime="20201112 12:27:39.911"></status>
</kw>
<msg timestamp="20201112 12:27:39.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.890" endtime="20201112 12:27:39.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.913" endtime="20201112 12:27:39.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.915" endtime="20201112 12:27:39.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.888" endtime="20201112 12:27:39.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.885" endtime="20201112 12:27:39.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.925" endtime="20201112 12:27:40.210"></status>
</kw>
<msg timestamp="20201112 12:27:40.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:39.923" endtime="20201112 12:27:40.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354819, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:40.214" endtime="20201112 12:27:40.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.222" endtime="20201112 12:27:40.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.921" endtime="20201112 12:27:40.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.919" endtime="20201112 12:27:40.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.229" level="INFO">${RESULT} = [{'time': 0.022354819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010731900000000155, 'source_diff': 0.00010731900000000155}, {'time': 0.022463875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:40.225" endtime="20201112 12:27:40.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.242" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.230" endtime="20201112 12:27:40.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.246" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.245" endtime="20201112 12:27:40.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.249" level="INFO">VALUE: [0.00010731900000000155, 0.00010666700000000126, 0.00010676399999999878, 0.00010683299999999715, 0.00010679099999999844, 0.00010675000000000268, 0.00010744399999999821, 0.0001066950000000004, 0.00010733300000000112, 0.00010668100000000083, 0.0001075279999999991, 0.00010665199999999875, 0.00010745900000000072, 0.00010749999999999996, 0.0001068889999999989, 0.00010667999999999789, 0.00010762500000000008, 0.00010661099999999951, 0.00010690300000000194, 0.00010751399999999953, 0.00010756899999999833, 0.00010743000000000211, 0.00010666700000000126, 0.00010743099999999811, 0.00010740300000000244, 0.00010754199999999867, 0.00010736100000000026, 0.00010755599999999824, 0.0001066950000000004, 0.00010670899999999997, 0.00010743100000000158, 0.00010669400000000093, 0.00010758300000000137, 0.0001068889999999989, 0.00010662499999999908, 0.00010754099999999919, 0.00010668000000000136, 0.00010734700000000069, 0.00010740300000000244, 0.0001068889999999989, 0.0001071950000000009, 0.00010672200000000007, 0.00010676399999999878, 0.000107514000000003, 0.0001075560000000017, 0.00010668100000000083, 0.0001075279999999991, 0.00010684700000000019, 0.00010677699999999887, 0.0001073750000000033]</msg>
<status status="PASS" starttime="20201112 12:27:40.247" endtime="20201112 12:27:40.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.243" endtime="20201112 12:27:40.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.252" endtime="20201112 12:27:40.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.256" endtime="20201112 12:27:40.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.254" endtime="20201112 12:27:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.251" endtime="20201112 12:27:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.884" endtime="20201112 12:27:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.883" endtime="20201112 12:27:40.276"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.285" endtime="20201112 12:27:40.304"></status>
</kw>
<msg timestamp="20201112 12:27:40.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.283" endtime="20201112 12:27:40.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.306" endtime="20201112 12:27:40.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.308" endtime="20201112 12:27:40.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.281" endtime="20201112 12:27:40.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.279" endtime="20201112 12:27:40.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.318" endtime="20201112 12:27:40.603"></status>
</kw>
<msg timestamp="20201112 12:27:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.317" endtime="20201112 12:27:40.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.608" endtime="20201112 12:27:40.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.616" endtime="20201112 12:27:40.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.314" endtime="20201112 12:27:40.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.312" endtime="20201112 12:27:40.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.622" level="INFO">${RESULT} = [{'time': 0.021980556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010763899999999965, 'source_diff': 0.00010763899999999965}, {'time': 0.022090528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:40.619" endtime="20201112 12:27:40.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.623" endtime="20201112 12:27:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.640" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.639" endtime="20201112 12:27:40.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.642" level="INFO">VALUE: [0.00010763899999999965, 0.00010773600000000064, 0.00010777799999999935, 0.00010776399999999978, 0.00010855599999999924, 0.00010773600000000064, 0.00010786100000000076, 0.0001077500000000002, 0.00010791599999999957, 0.00010780599999999849, 0.00010862500000000108, 0.00010843099999999911, 0.00010780499999999901, 0.00010837500000000083, 0.00010766699999999879, 0.00010766699999999879, 0.0001077500000000002, 0.00010769499999999793, 0.00010833399999999813, 0.00010834800000000117, 0.00010854100000000019, 0.00010848599999999792, 0.00010844399999999921, 0.0001077500000000002, 0.00010855499999999976, 0.00010772200000000107, 0.00010791700000000251, 0.00010836100000000126, 0.00010786100000000076, 0.00010770799999999803, 0.00010841699999999954, 0.00010836099999999779, 0.00010858399999999838, 0.00010782000000000153, 0.0001077500000000002, 0.00010769400000000193, 0.0001085690000000028, 0.00010759700000000094, 0.00010770799999999803, 0.00010766600000000279, 0.00010833300000000212, 0.00010841600000000007, 0.00010769399999999846, 0.0001077500000000002, 0.00010850000000000096, 0.00010772200000000107, 0.00010783399999999763, 0.00010841699999999954, 0.00010843099999999911, 0.00010840299999999997]</msg>
<status status="PASS" starttime="20201112 12:27:40.641" endtime="20201112 12:27:40.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.636" endtime="20201112 12:27:40.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.646" endtime="20201112 12:27:40.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.649" endtime="20201112 12:27:40.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.647" endtime="20201112 12:27:40.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.644" endtime="20201112 12:27:40.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.277" endtime="20201112 12:27:40.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.277" endtime="20201112 12:27:40.670"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.678" endtime="20201112 12:27:40.698"></status>
</kw>
<msg timestamp="20201112 12:27:40.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.677" endtime="20201112 12:27:40.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.699" endtime="20201112 12:27:40.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.702" endtime="20201112 12:27:40.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.674" endtime="20201112 12:27:40.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.672" endtime="20201112 12:27:40.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.711" endtime="20201112 12:27:40.998"></status>
</kw>
<msg timestamp="20201112 12:27:41.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.710" endtime="20201112 12:27:41.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.002" endtime="20201112 12:27:41.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.010" endtime="20201112 12:27:41.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.707" endtime="20201112 12:27:41.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.706" endtime="20201112 12:27:41.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.016" level="INFO">${RESULT} = [{'time': 0.022010903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000109208999999999, 'source_diff': 0.000109208999999999}, {'time': 0.022122875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:41.013" endtime="20201112 12:27:41.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.030" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.017" endtime="20201112 12:27:41.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.034" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.033" endtime="20201112 12:27:41.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.036" level="INFO">VALUE: [0.000109208999999999, 0.00010951400000000153, 0.00010961099999999904, 0.00010947200000000282, 0.00010934699999999922, 0.00010942999999999717, 0.00010876400000000078, 0.00010866699999999979, 0.00010874999999999774, 0.0001087769999999974, 0.00010951399999999806, 0.00010944400000000021, 0.00010863900000000065, 0.00010936100000000226, 0.00010950000000000196, 0.00010888799999999796, 0.00010879199999999992, 0.00010943099999999664, 0.00010962499999999861, 0.00010869499999999893, 0.00010867999999999989, 0.00010880600000000296, 0.00010872200000000207, 0.00010891600000000057, 0.00010876400000000078, 0.00010879100000000044, 0.0001087080000000025, 0.00010937500000000183, 0.00010931900000000008, 0.00010945799999999978, 0.00010866699999999979, 0.00010887499999999786, 0.00010936099999999879, 0.00010937500000000183, 0.00010943100000000011, 0.00010863900000000065, 0.00010877800000000035, 0.00010954100000000119, 0.00010959699999999947, 0.00010890199999999753, 0.00010949999999999849, 0.00010947199999999935, 0.00010929100000000094, 0.00010873600000000164, 0.00010944499999999968, 0.00010862500000000108, 0.00010945799999999978, 0.00010877800000000035, 0.0001088890000000009, 0.00010876400000000078]</msg>
<status status="PASS" starttime="20201112 12:27:41.035" endtime="20201112 12:27:41.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.031" endtime="20201112 12:27:41.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.040" endtime="20201112 12:27:41.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.043" endtime="20201112 12:27:41.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.042" endtime="20201112 12:27:41.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.038" endtime="20201112 12:27:41.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.671" endtime="20201112 12:27:41.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.670" endtime="20201112 12:27:41.064"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.073" endtime="20201112 12:27:41.093"></status>
</kw>
<msg timestamp="20201112 12:27:41.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.071" endtime="20201112 12:27:41.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.094" endtime="20201112 12:27:41.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.097" endtime="20201112 12:27:41.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.069" endtime="20201112 12:27:41.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.067" endtime="20201112 12:27:41.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.107" endtime="20201112 12:27:41.392"></status>
</kw>
<msg timestamp="20201112 12:27:41.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:41.105" endtime="20201112 12:27:41.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:41.396" endtime="20201112 12:27:41.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.404" endtime="20201112 12:27:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.102" endtime="20201112 12:27:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.101" endtime="20201112 12:27:41.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.411" level="INFO">${RESULT} = [{'time': 0.0223195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010956900000000033, 'source_diff': 0.00010956900000000033}, {'time': 0.022431528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:41.407" endtime="20201112 12:27:41.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.425" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.412" endtime="20201112 12:27:41.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.429" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.428" endtime="20201112 12:27:41.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.432" level="INFO">VALUE: [0.00010956900000000033, 0.00010987499999999886, 0.00010986099999999929, 0.00011038899999999893, 0.00010979199999999745, 0.00010958399999999938, 0.00010963800000000218, 0.00011040199999999903, 0.00011052799999999863, 0.00010997199999999985, 0.00010987499999999886, 0.00010986099999999929, 0.0001098890000000019, 0.00011048599999999992, 0.00011040300000000197, 0.00011045800000000078, 0.00010979200000000092, 0.00010980600000000049, 0.00010968100000000036, 0.00011052799999999863, 0.00010959799999999895, 0.0001097630000000023, 0.00010987499999999886, 0.00011047200000000035, 0.00010980600000000049, 0.00011036099999999979, 0.00010970800000000003, 0.0001104029999999985, 0.00011033300000000065, 0.00010970800000000003, 0.00011052799999999863, 0.00011040300000000197, 0.00011051399999999906, 0.00010979200000000092, 0.00011037500000000283, 0.00010987499999999886, 0.00011062499999999961, 0.00010991700000000104, 0.00010987499999999886, 0.00011037499999999936, 0.0001102769999999989, 0.00010983300000000015, 0.00011058299999999743, 0.0001097219999999996, 0.00010988899999999843, 0.00010976399999999831, 0.00010980500000000101, 0.00010970800000000003, 0.00011063899999999918, 0.00011048599999999992]</msg>
<status status="PASS" starttime="20201112 12:27:41.431" endtime="20201112 12:27:41.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.426" endtime="20201112 12:27:41.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.441" endtime="20201112 12:27:41.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.444" endtime="20201112 12:27:41.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.443" endtime="20201112 12:27:41.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.439" endtime="20201112 12:27:41.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.065" endtime="20201112 12:27:41.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.065" endtime="20201112 12:27:41.465"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.473" endtime="20201112 12:27:41.492"></status>
</kw>
<msg timestamp="20201112 12:27:41.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.472" endtime="20201112 12:27:41.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.494" endtime="20201112 12:27:41.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.497" endtime="20201112 12:27:41.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.469" endtime="20201112 12:27:41.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.467" endtime="20201112 12:27:41.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.506" endtime="20201112 12:27:41.792"></status>
</kw>
<msg timestamp="20201112 12:27:41.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.505" endtime="20201112 12:27:41.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.796" endtime="20201112 12:27:41.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.804" endtime="20201112 12:27:41.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.502" endtime="20201112 12:27:41.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.501" endtime="20201112 12:27:41.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.810" level="INFO">${RESULT} = [{'time': 0.021935847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011155500000000276, 'source_diff': 0.00011155500000000276}, {'time': 0.022049847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:41.807" endtime="20201112 12:27:41.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.811" endtime="20201112 12:27:41.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.828" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.827" endtime="20201112 12:27:41.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.830" level="INFO">VALUE: [0.00011155500000000276, 0.00011144400000000221, 0.00011162500000000061, 0.0001105700000000008, 0.00011143100000000211, 0.00011149999999999702, 0.00011136100000000079, 0.00011084700000000072, 0.0001107090000000005, 0.00011076399999999931, 0.00011138899999999993, 0.00011088799999999996, 0.00011158299999999843, 0.00011091699999999857, 0.0001114029999999995, 0.00011151400000000006, 0.00011159700000000147, 0.00011097200000000085, 0.00011136099999999732, 0.00011077799999999888, 0.00011137500000000036, 0.00011133299999999818, 0.00011158399999999791, 0.00011140200000000003, 0.00011083400000000063, 0.00011136200000000027, 0.00011118000000000239, 0.00011081899999999811, 0.00011136099999999732, 0.00011083300000000115, 0.000111596999999998, 0.00011087499999999986, 0.00011083300000000115, 0.00011137499999999689, 0.00011088899999999943, 0.00011136100000000079, 0.0001108890000000029, 0.00011058400000000038, 0.00011138899999999993, 0.00011068100000000136, 0.00011062499999999961, 0.00011068000000000189, 0.00011147200000000135, 0.00011068000000000189, 0.00011161100000000104, 0.00011066599999999885, 0.00011065300000000222, 0.00011136100000000079, 0.00011069499999999746, 0.00011083300000000115]</msg>
<status status="PASS" starttime="20201112 12:27:41.829" endtime="20201112 12:27:41.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.824" endtime="20201112 12:27:41.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.834" endtime="20201112 12:27:41.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.837" endtime="20201112 12:27:41.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.836" endtime="20201112 12:27:41.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.832" endtime="20201112 12:27:41.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.466" endtime="20201112 12:27:41.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.465" endtime="20201112 12:27:41.858"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.867" endtime="20201112 12:27:41.886"></status>
</kw>
<msg timestamp="20201112 12:27:41.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.865" endtime="20201112 12:27:41.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.888" endtime="20201112 12:27:41.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.890" endtime="20201112 12:27:41.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.863" endtime="20201112 12:27:41.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.861" endtime="20201112 12:27:41.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.900" endtime="20201112 12:27:42.186"></status>
</kw>
<msg timestamp="20201112 12:27:42.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02213175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:41.898" endtime="20201112 12:27:42.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02213175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:42.190" endtime="20201112 12:27:42.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.198" endtime="20201112 12:27:42.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.896" endtime="20201112 12:27:42.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.894" endtime="20201112 12:27:42.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.204" level="INFO">${RESULT} = [{'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011243099999999964, 'source_diff': 0.00011243099999999964}, {'time': 0.022359125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.201" endtime="20201112 12:27:42.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.205" endtime="20201112 12:27:42.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.222" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.221" endtime="20201112 12:27:42.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.224" level="INFO">VALUE: [0.00011243099999999964, 0.00011236100000000179, 0.00011179199999999945, 0.00011191699999999957, 0.000111903, 0.00011159700000000147, 0.0001124030000000005, 0.0001115419999999992, 0.00011237500000000136, 0.00011158299999999843, 0.00011170799999999856, 0.0001115549999999993, 0.00011183300000000215, 0.0001115830000000019, 0.0001125830000000029, 0.00011236100000000179, 0.00011169400000000246, 0.00011237500000000136, 0.00011251400000000106, 0.00011152799999999963, 0.00011251400000000106, 0.0001117090000000015, 0.00011251400000000106, 0.00011163900000000018, 0.0001125420000000002, 0.00011243000000000017, 0.00011167999999999942, 0.00011188900000000043, 0.0001124030000000005, 0.00011188900000000043, 0.00011165299999999975, 0.00011176300000000083, 0.0001117220000000016, 0.00011181999999999859, 0.00011252800000000063, 0.00011179199999999945, 0.00011255599999999977, 0.00011161099999999757, 0.00011186100000000129, 0.00011173700000000064, 0.0001124030000000005, 0.0001119160000000001, 0.00011244399999999974, 0.0001124160000000006, 0.00011255599999999977, 0.00011250000000000149, 0.0001125830000000029, 0.0001125420000000002, 0.00011168100000000236, 0.00011165299999999975]</msg>
<status status="PASS" starttime="20201112 12:27:42.223" endtime="20201112 12:27:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.218" endtime="20201112 12:27:42.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.228" endtime="20201112 12:27:42.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.231" endtime="20201112 12:27:42.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.230" endtime="20201112 12:27:42.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.226" endtime="20201112 12:27:42.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.859" endtime="20201112 12:27:42.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.859" endtime="20201112 12:27:42.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.965" endtime="20201112 12:27:42.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.257" endtime="20201112 12:27:42.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.255" endtime="20201112 12:27:42.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.253" endtime="20201112 12:27:42.277"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:02.896" endtime="20201112 12:27:42.277" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:21.609" endtime="20201112 12:27:42.282"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.338" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:27:42.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:27:43.505" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:27:42.337" endtime="20201112 12:27:43.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.511" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:27:43.509" endtime="20201112 12:27:43.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.335" endtime="20201112 12:27:43.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.518" endtime="20201112 12:27:43.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.515" endtime="20201112 12:27:43.777"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.790" endtime="20201112 12:27:43.804"></status>
</kw>
<msg timestamp="20201112 12:27:43.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.788" endtime="20201112 12:27:43.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.806" endtime="20201112 12:27:43.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:43.808" endtime="20201112 12:27:43.810"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:43.786" endtime="20201112 12:27:43.811"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:43.783" endtime="20201112 12:27:43.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.782" endtime="20201112 12:27:43.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:43.817" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:43.816" endtime="20201112 12:27:43.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.813" endtime="20201112 12:27:43.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.781" endtime="20201112 12:27:43.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.781" endtime="20201112 12:27:43.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.818" endtime="20201112 12:27:43.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.779" endtime="20201112 12:27:43.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.822" endtime="20201112 12:27:43.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.778" endtime="20201112 12:27:43.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.334" endtime="20201112 12:27:43.824"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.830" endtime="20201112 12:27:43.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.829" endtime="20201112 12:27:43.850"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.863" endtime="20201112 12:27:43.876"></status>
</kw>
<msg timestamp="20201112 12:27:43.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.861" endtime="20201112 12:27:43.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.878" endtime="20201112 12:27:43.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.883" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:43.881" endtime="20201112 12:27:43.883"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:43.859" endtime="20201112 12:27:43.884"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:43.857" endtime="20201112 12:27:43.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.855" endtime="20201112 12:27:43.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:43.889" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:43.888" endtime="20201112 12:27:43.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.886" endtime="20201112 12:27:43.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.855" endtime="20201112 12:27:43.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.854" endtime="20201112 12:27:43.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.890" endtime="20201112 12:27:43.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.853" endtime="20201112 12:27:43.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.851" endtime="20201112 12:27:43.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.827" endtime="20201112 12:27:43.893"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:43.897" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.906" endtime="20201112 12:27:46.017"></status>
</kw>
<msg timestamp="20201112 12:27:46.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105689942, 'wakeups': [105699948, 105709948, 105719948, 105729948, 105...</msg>
<status status="PASS" starttime="20201112 12:27:43.905" endtime="20201112 12:27:46.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 105689942, 'wakeups': [105699948, 105709948, 105719948, 105729948, 105...</msg>
<status status="PASS" starttime="20201112 12:27:46.020" endtime="20201112 12:27:46.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.027" endtime="20201112 12:27:46.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.902" endtime="20201112 12:27:46.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.899" endtime="20201112 12:27:46.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.038" level="INFO">${RESULT} = {'wakeups': [105699948, 105709948, 105719948, 105729948, 105739948, 105749948, 105759948, 105769948, 105779948, 105789948, 105799948, 105809948, 105819948, 105829948, 105839948, 105849948, 105859948, ...</msg>
<status status="PASS" starttime="20201112 12:27:46.034" endtime="20201112 12:27:46.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.046" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:46.044" endtime="20201112 12:27:46.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.051" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:46.049" endtime="20201112 12:27:46.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.039" endtime="20201112 12:27:46.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.061" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:46.059" endtime="20201112 12:27:46.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.065" level="INFO">VALUE: 105689942</msg>
<status status="PASS" starttime="20201112 12:27:46.063" endtime="20201112 12:27:46.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.053" endtime="20201112 12:27:46.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.075" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:46.073" endtime="20201112 12:27:46.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.078" level="INFO">VALUE: [105699948, 105709948, 105719948, 105729948, 105739948, 105749948, 105759948, 105769948, 105779948, 105789948, 105799948, 105809948, 105819948, 105829948, 105839948, 105849948, 105859948, 105869948, 105879948, 105889948, 105899948, 105909948, 105919948, 105929948, 105939948, 105949948, 105959948, 105969948, 105979948, 105989948, 105999948, 106009948, 106019948, 106029948, 106039948, 106049948, 106059948, 106069948, 106079948, 106089948, 106099948, 106109948, 106119948, 106129948, 106139948, 106149948, 106159948, 106169948, 106179948, 106189948, 106199948, 106209948, 106219948, 106229948, 106239948, 106249948, 106259948, 106269948, 106279948, 106289948, 106299948, 106309948, 106319948, 106329948, 106339948, 106349948, 106359948, 106369948, 106379948, 106389948, 106399948, 106409948, 106419948, 106429948, 106439948, 106449948, 106459948, 106469948, 106479948, 106489948, 106499948, 106509948, 106519948, 106529948, 106539948, 106549948, 106559948, 106569948, 106579948, 106589948, 106599948, 106609948, 106619948, 106629948, 106639948, 106649948, 106659948, 106669948, 106679948, 106689948]</msg>
<status status="PASS" starttime="20201112 12:27:46.077" endtime="20201112 12:27:46.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.068" endtime="20201112 12:27:46.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.085" endtime="20201112 12:27:46.380"></status>
</kw>
<msg timestamp="20201112 12:27:46.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065940472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075947389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.083" endtime="20201112 12:27:46.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065940472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075947389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.383" endtime="20201112 12:27:46.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.391" endtime="20201112 12:27:46.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.081" endtime="20201112 12:27:46.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.079" endtime="20201112 12:27:46.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.418" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.394" endtime="20201112 12:27:46.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.423" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:46.422" endtime="20201112 12:27:46.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.425" level="INFO">VALUE: 0.065940472</msg>
<status status="PASS" starttime="20201112 12:27:46.424" endtime="20201112 12:27:46.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.419" endtime="20201112 12:27:46.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.430" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:46.429" endtime="20201112 12:27:46.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.432" level="INFO">VALUE: [0.075947389, 0.085948375, 0.095948944, 0.105949861, 0.115950417, 0.125951347, 0.135951875, 0.145952819, 0.155953361, 0.165954292, 0.175954847, 0.185955764, 0.195956306, 0.205957236, 0.215957778, 0.225958722, 0.235959264, 0.245960194, 0.25596075, 0.265961681, 0.275962208, 0.285963139, 0.295963694, 0.305964639, 0.315965167, 0.325966097, 0.335966653, 0.345967569, 0.355968167, 0.365969056, 0.375969597, 0.385970583, 0.395971069, 0.405972, 0.415972556, 0.425973486, 0.435974042, 0.445974972, 0.4559755, 0.465976431, 0.475976986, 0.485977917, 0.495978458, 0.505979389, 0.515979944, 0.525980889, 0.535981417, 0.545982347, 0.555982875, 0.565983792, 0.575984375, 0.58598525, 0.595985806, 0.605986722, 0.615987292, 0.625988181, 0.635988722, 0.645989653, 0.655990181, 0.665991125, 0.675991653, 0.685992583, 0.695993111, 0.705994056, 0.715994583, 0.7259955, 0.735996056, 0.745996972, 0.755997514, 0.765998431, 0.775998972, 0.785999931, 0.796000472, 0.806001361, 0.816001903, 0.826002847, 0.836003375, 0.846004292, 0.856004833, 0.866005778, 0.876006333, 0.886007278, 0.896007778, 0.906008694, 0.91600925, 0.926010194, 0.936010694, 0.946011625, 0.956012181, 0.966013097, 0.976013625, 0.986014569, 0.996015097, 1.006016042, 1.016016569, 1.026017486, 1.036018028, 1.046018958, 1.056019514, 1.066020417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:46.431" endtime="20201112 12:27:46.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.426" endtime="20201112 12:27:46.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.435" endtime="20201112 12:27:46.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.439" endtime="20201112 12:27:46.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.437" endtime="20201112 12:27:46.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.434" endtime="20201112 12:27:46.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.898" endtime="20201112 12:27:46.459"></status>
</kw>
<msg timestamp="20201112 12:27:46.460" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.468" endtime="20201112 12:27:48.578"></status>
</kw>
<msg timestamp="20201112 12:27:48.580" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108251289, 'wakeups': [108261295, 108271295, 108281295, 108291295, 108...</msg>
<status status="PASS" starttime="20201112 12:27:46.466" endtime="20201112 12:27:48.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.585" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108251289, 'wakeups': [108261295, 108271295, 108281295, 108291295, 108...</msg>
<status status="PASS" starttime="20201112 12:27:48.582" endtime="20201112 12:27:48.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.588" endtime="20201112 12:27:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.463" endtime="20201112 12:27:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.462" endtime="20201112 12:27:48.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.599" level="INFO">${RESULT} = {'wakeups': [108261295, 108271295, 108281295, 108291295, 108301295, 108311295, 108321295, 108331295, 108341295, 108351295, 108361295, 108371295, 108381295, 108391295, 108401295, 108411295, 108421295, ...</msg>
<status status="PASS" starttime="20201112 12:27:48.595" endtime="20201112 12:27:48.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.609" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:48.605" endtime="20201112 12:27:48.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.613" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:48.611" endtime="20201112 12:27:48.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.600" endtime="20201112 12:27:48.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.624" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:48.622" endtime="20201112 12:27:48.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.628" level="INFO">VALUE: 108251289</msg>
<status status="PASS" starttime="20201112 12:27:48.626" endtime="20201112 12:27:48.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.616" endtime="20201112 12:27:48.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.637" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:48.636" endtime="20201112 12:27:48.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.639" level="INFO">VALUE: [108261295, 108271295, 108281295, 108291295, 108301295, 108311295, 108321295, 108331295, 108341295, 108351295, 108361295, 108371295, 108381295, 108391295, 108401295, 108411295, 108421295, 108431295, 108441295, 108451295, 108461295, 108471295, 108481295, 108491295, 108501295, 108511295, 108521295, 108531295, 108541295, 108551295, 108561295, 108571295, 108581295, 108591295, 108601295, 108611295, 108621295, 108631295, 108641295, 108651295, 108661295, 108671295, 108681295, 108691295, 108701295, 108711295, 108721295, 108731295, 108741295, 108751295, 108761295, 108771295, 108781295, 108791295, 108801295, 108811295, 108821295, 108831295, 108841295, 108851295, 108861295, 108871295, 108881295, 108891295, 108901295, 108911295, 108921295, 108931295, 108941295, 108951295, 108961295, 108971295, 108981295, 108991295, 109001295, 109011295, 109021295, 109031295, 109041295, 109051295, 109061295, 109071295, 109081295, 109091295, 109101295, 109111295, 109121295, 109131295, 109141295, 109151295, 109161295, 109171295, 109181295, 109191295, 109201295, 109211295, 109221295, 109231295, 109241295, 109251295]</msg>
<status status="PASS" starttime="20201112 12:27:48.638" endtime="20201112 12:27:48.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.631" endtime="20201112 12:27:48.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.646" endtime="20201112 12:27:48.938"></status>
</kw>
<msg timestamp="20201112 12:27:48.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018966514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028973736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.645" endtime="20201112 12:27:48.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018966514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028973736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.941" endtime="20201112 12:27:48.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.949" endtime="20201112 12:27:48.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.642" endtime="20201112 12:27:48.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.640" endtime="20201112 12:27:48.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.975" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.952" endtime="20201112 12:27:48.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.980" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:48.979" endtime="20201112 12:27:48.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.982" level="INFO">VALUE: 0.018966514</msg>
<status status="PASS" starttime="20201112 12:27:48.981" endtime="20201112 12:27:48.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.976" endtime="20201112 12:27:48.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.988" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:48.986" endtime="20201112 12:27:48.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.990" level="INFO">VALUE: [0.028973736, 0.038974736, 0.048975278, 0.058976222, 0.068976764, 0.078977708, 0.088978236, 0.098979167, 0.108979708, 0.118980653, 0.128981236, 0.138982153, 0.148982667, 0.158983597, 0.168984153, 0.178985069, 0.188985625, 0.198986542, 0.208987083, 0.218988042, 0.228988569, 0.2389895, 0.248990056, 0.258990986, 0.268991514, 0.278992458, 0.288993, 0.298993958, 0.308994472, 0.318995389, 0.328995931, 0.338996931, 0.348997417, 0.358998319, 0.368998861, 0.378999806, 0.389000319, 0.39900125, 0.409001833, 0.419002708, 0.42900325, 0.439004194, 0.449004722, 0.459005639, 0.469006181, 0.479007125, 0.489007667, 0.499008597, 0.509009111, 0.519010042, 0.529010583, 0.5390115, 0.549012069, 0.559012986, 0.569013514, 0.579014431, 0.589014986, 0.599015903, 0.609016431, 0.619017361, 0.629017903, 0.639018875, 0.649019361, 0.659020292, 0.669020889, 0.679021764, 0.689022319, 0.699023236, 0.709023764, 0.719024694, 0.72902525, 0.739026194, 0.749026708, 0.759027625, 0.769028167, 0.779029097, 0.789029639, 0.799030569, 0.809031153, 0.819032028, 0.829032569, 0.8390335, 0.849034028, 0.859034972, 0.8690355, 0.879036486, 0.889036986, 0.899037903, 0.909038486, 0.919039403, 0.929039903, 0.939040847, 0.949041389, 0.959042292, 0.969042875, 0.979043764, 0.989044319, 0.99904525, 1.009045764, 1.019046694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:48.989" endtime="20201112 12:27:48.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.983" endtime="20201112 12:27:48.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.993" endtime="20201112 12:27:48.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.997" endtime="20201112 12:27:49.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.995" endtime="20201112 12:27:49.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.991" endtime="20201112 12:27:49.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.460" endtime="20201112 12:27:49.017"></status>
</kw>
<msg timestamp="20201112 12:27:49.018" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.026" endtime="20201112 12:27:51.136"></status>
</kw>
<msg timestamp="20201112 12:27:51.137" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 110809394, 'wakeups': [110819400, 110829400, 110839400, 110849400, 110...</msg>
<status status="PASS" starttime="20201112 12:27:49.024" endtime="20201112 12:27:51.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 110809394, 'wakeups': [110819400, 110829400, 110839400, 110849400, 110...</msg>
<status status="PASS" starttime="20201112 12:27:51.139" endtime="20201112 12:27:51.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.145" endtime="20201112 12:27:51.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.021" endtime="20201112 12:27:51.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.020" endtime="20201112 12:27:51.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.156" level="INFO">${RESULT} = {'wakeups': [110819400, 110829400, 110839400, 110849400, 110859400, 110869400, 110879400, 110889400, 110899400, 110909400, 110919400, 110929400, 110939400, 110949400, 110959400, 110969400, 110979400, ...</msg>
<status status="PASS" starttime="20201112 12:27:51.152" endtime="20201112 12:27:51.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.164" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:51.162" endtime="20201112 12:27:51.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.169" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:51.167" endtime="20201112 12:27:51.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.158" endtime="20201112 12:27:51.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.179" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:51.177" endtime="20201112 12:27:51.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.183" level="INFO">VALUE: 110809394</msg>
<status status="PASS" starttime="20201112 12:27:51.181" endtime="20201112 12:27:51.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.172" endtime="20201112 12:27:51.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.193" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:51.191" endtime="20201112 12:27:51.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.197" level="INFO">VALUE: [110819400, 110829400, 110839400, 110849400, 110859400, 110869400, 110879400, 110889400, 110899400, 110909400, 110919400, 110929400, 110939400, 110949400, 110959400, 110969400, 110979400, 110989400, 110999400, 111009400, 111019400, 111029400, 111039400, 111049400, 111059400, 111069400, 111079400, 111089400, 111099400, 111109400, 111119400, 111129400, 111139400, 111149400, 111159400, 111169400, 111179400, 111189400, 111199400, 111209400, 111219400, 111229400, 111239400, 111249400, 111259400, 111269400, 111279400, 111289400, 111299400, 111309400, 111319400, 111329400, 111339400, 111349400, 111359400, 111369400, 111379400, 111389400, 111399400, 111409400, 111419400, 111429400, 111439400, 111449400, 111459400, 111469400, 111479400, 111489400, 111499400, 111509400, 111519400, 111529400, 111539400, 111549400, 111559400, 111569400, 111579400, 111589400, 111599400, 111609400, 111619400, 111629400, 111639400, 111649400, 111659400, 111669400, 111679400, 111689400, 111699400, 111709400, 111719400, 111729400, 111739400, 111749400, 111759400, 111769400, 111779400, 111789400, 111799400, 111809400]</msg>
<status status="PASS" starttime="20201112 12:27:51.195" endtime="20201112 12:27:51.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.186" endtime="20201112 12:27:51.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.215" endtime="20201112 12:27:51.511"></status>
</kw>
<msg timestamp="20201112 12:27:51.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029268472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.212" endtime="20201112 12:27:51.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029268472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.515" endtime="20201112 12:27:51.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.522" endtime="20201112 12:27:51.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.205" endtime="20201112 12:27:51.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.201" endtime="20201112 12:27:51.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.548" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:51.525" endtime="20201112 12:27:51.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.553" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:27:51.552" endtime="20201112 12:27:51.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.555" level="INFO">VALUE: 0.019261583</msg>
<status status="PASS" starttime="20201112 12:27:51.554" endtime="20201112 12:27:51.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.549" endtime="20201112 12:27:51.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.560" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:51.559" endtime="20201112 12:27:51.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.562" level="INFO">VALUE: [0.029268472, 0.039269486, 0.049270056, 0.059270972, 0.069271528, 0.079272458, 0.089272986, 0.099273917, 0.109274472, 0.119275403, 0.129275931, 0.139276875, 0.149277486, 0.159278361, 0.169278889, 0.179279833, 0.189280375, 0.199281292, 0.209281833, 0.219282792, 0.229283333, 0.239284264, 0.249284792, 0.259285764, 0.269286264, 0.279287208, 0.28928775, 0.299288722, 0.309289222, 0.319290167, 0.329290694, 0.339291625, 0.349292181, 0.359293097, 0.369293653, 0.379294583, 0.389295125, 0.399296056, 0.409296597, 0.419297528, 0.429298069, 0.439299, 0.449299514, 0.459300444, 0.469300986, 0.479301903, 0.489302458, 0.499303375, 0.509303903, 0.519304833, 0.529305375, 0.539306306, 0.549306833, 0.559307764, 0.569308319, 0.579309236, 0.589309833, 0.599310681, 0.609311222, 0.619312167, 0.629312708, 0.639313611, 0.649314153, 0.659315083, 0.669315611, 0.679316542, 0.689317125, 0.699318014, 0.709318542, 0.719319486, 0.729320014, 0.739320931, 0.749321514, 0.759322403, 0.769322944, 0.779323861, 0.789324417, 0.799325347, 0.809325889, 0.819326792, 0.829327333, 0.839328264, 0.849328847, 0.859329722, 0.869330278, 0.879331208, 0.889331736, 0.899332667, 0.909333194, 0.919334139, 0.929334667, 0.939335597, 0.949336125, 0.959337056, 0.969337597, 0.979338556, 0.989339056, 0.999339986, 1.009340556, 1.019341472] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:51.561" endtime="20201112 12:27:51.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.556" endtime="20201112 12:27:51.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.565" endtime="20201112 12:27:51.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.569" endtime="20201112 12:27:51.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.567" endtime="20201112 12:27:51.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.564" endtime="20201112 12:27:51.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.018" endtime="20201112 12:27:51.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.895" endtime="20201112 12:27:51.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.894" endtime="20201112 12:27:51.590"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:51.592" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.602" endtime="20201112 12:27:53.711"></status>
</kw>
<msg timestamp="20201112 12:27:53.712" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 113385249, 'wakeups': [113395261, 113405254, 113415260, 113425254, 113...</msg>
<status status="PASS" starttime="20201112 12:27:51.600" endtime="20201112 12:27:53.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.718" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 113385249, 'wakeups': [113395261, 113405254, 113415260, 113425254, 113...</msg>
<status status="PASS" starttime="20201112 12:27:53.715" endtime="20201112 12:27:53.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.721" endtime="20201112 12:27:53.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.597" endtime="20201112 12:27:53.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.594" endtime="20201112 12:27:53.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.732" level="INFO">${RESULT} = {'wakeups': [113395261, 113405254, 113415260, 113425254, 113435260, 113445254, 113455260, 113465254, 113475260, 113485254, 113495260, 113505254, 113515260, 113525254, 113535260, 113545254, 113555260, ...</msg>
<status status="PASS" starttime="20201112 12:27:53.728" endtime="20201112 12:27:53.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.740" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:53.738" endtime="20201112 12:27:53.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.744" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:53.742" endtime="20201112 12:27:53.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.733" endtime="20201112 12:27:53.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.754" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:53.752" endtime="20201112 12:27:53.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.759" level="INFO">VALUE: 113385249</msg>
<status status="PASS" starttime="20201112 12:27:53.757" endtime="20201112 12:27:53.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.747" endtime="20201112 12:27:53.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.769" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:53.767" endtime="20201112 12:27:53.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.774" level="INFO">VALUE: [113395261, 113405254, 113415260, 113425254, 113435260, 113445254, 113455260, 113465254, 113475260, 113485254, 113495260, 113505254, 113515260, 113525254, 113535260, 113545254, 113555260, 113565254, 113575260, 113585254, 113595260, 113605254, 113615260, 113625254, 113635260, 113645254, 113655260, 113665254, 113675260, 113685254, 113695260, 113705254, 113715260, 113725254, 113735260, 113745254, 113755260, 113765254, 113775260, 113785254, 113795260, 113805254, 113815260, 113825254, 113835260, 113845254, 113855260, 113865254, 113875260, 113885254, 113895260, 113905254, 113915260, 113925254, 113935260, 113945254, 113955260, 113965254, 113975260, 113985254, 113995260, 114005254, 114015260, 114025254, 114035260, 114045254, 114055260, 114065254, 114075260, 114085254, 114095260, 114105254, 114115260, 114125254, 114135260, 114145254, 114155260, 114165254, 114175260, 114185254, 114195260, 114205254, 114215260, 114225254, 114235260, 114245254, 114255260, 114265254, 114275260, 114285254, 114295260, 114305254, 114315260, 114325254, 114335260, 114345254, 114355260, 114365254, 114375260, 114385254]</msg>
<status status="PASS" starttime="20201112 12:27:53.771" endtime="20201112 12:27:53.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.762" endtime="20201112 12:27:53.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.790" endtime="20201112 12:27:54.084"></status>
</kw>
<msg timestamp="20201112 12:27:54.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032914417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.786" endtime="20201112 12:27:54.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032914417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.087" endtime="20201112 12:27:54.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.095" endtime="20201112 12:27:54.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.781" endtime="20201112 12:27:54.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.777" endtime="20201112 12:27:54.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.122" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:54.099" endtime="20201112 12:27:54.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.127" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:54.126" endtime="20201112 12:27:54.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.129" level="INFO">VALUE: 0.022901833</msg>
<status status="PASS" starttime="20201112 12:27:54.128" endtime="20201112 12:27:54.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.123" endtime="20201112 12:27:54.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.134" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:54.133" endtime="20201112 12:27:54.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.137" level="INFO">VALUE: [0.032914417, 0.042909056, 0.052914917, 0.062910528, 0.072916389, 0.082912, 0.092917861, 0.102913486, 0.112919361, 0.122914944, 0.132920806, 0.142916458, 0.152922278, 0.162917917, 0.172923792, 0.182919417, 0.192925236, 0.202920847, 0.212926694, 0.222922319, 0.232928167, 0.242923847, 0.252929653, 0.262925278, 0.272931139, 0.282926736, 0.292932597, 0.302928236, 0.312934069, 0.322929694, 0.332935556, 0.342931181, 0.352937014, 0.362932639, 0.3729385, 0.382934167, 0.392939986, 0.402935583, 0.412941444, 0.422937125, 0.432942931, 0.442938528, 0.452944389, 0.46294, 0.472945833, 0.482941528, 0.492947306, 0.502942931, 0.51294875, 0.522944403, 0.532950222, 0.542945847, 0.552951681, 0.562947361, 0.572953153, 0.582948819, 0.592954625, 0.602950222, 0.612956069, 0.622951681, 0.632957542, 0.642953153, 0.652959014, 0.662954611, 0.672960458, 0.682956069, 0.692961931, 0.702957542, 0.712963389, 0.722959, 0.732964861, 0.742960472, 0.752966306, 0.762961944, 0.772967792, 0.782963389, 0.792969236, 0.802964889, 0.812970722, 0.822966319, 0.832972167, 0.842967792, 0.852973639, 0.86296925, 0.872975125, 0.882970708, 0.892976569, 0.902972181, 0.912978028, 0.922973653, 0.932979569, 0.942975111, 0.952980958, 0.962976569, 0.972982417, 0.982978042, 0.992983917, 1.002979528, 1.012985347, 1.022980958] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:54.135" endtime="20201112 12:27:54.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.130" endtime="20201112 12:27:54.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.140" endtime="20201112 12:27:54.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.144" endtime="20201112 12:27:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.142" endtime="20201112 12:27:54.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.138" endtime="20201112 12:27:54.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.593" endtime="20201112 12:27:54.165"></status>
</kw>
<msg timestamp="20201112 12:27:54.165" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.173" endtime="20201112 12:27:56.283"></status>
</kw>
<msg timestamp="20201112 12:27:56.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115956476, 'wakeups': [115966487, 115976481, 115986487, 115996481, 116...</msg>
<status status="PASS" starttime="20201112 12:27:54.171" endtime="20201112 12:27:56.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115956476, 'wakeups': [115966487, 115976481, 115986487, 115996481, 116...</msg>
<status status="PASS" starttime="20201112 12:27:56.287" endtime="20201112 12:27:56.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.293" endtime="20201112 12:27:56.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.169" endtime="20201112 12:27:56.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.167" endtime="20201112 12:27:56.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.303" level="INFO">${RESULT} = {'wakeups': [115966487, 115976481, 115986487, 115996481, 116006487, 116016481, 116026487, 116036481, 116046487, 116056481, 116066487, 116076481, 116086487, 116096481, 116106487, 116116481, 116126487, ...</msg>
<status status="PASS" starttime="20201112 12:27:56.300" endtime="20201112 12:27:56.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.313" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:56.311" endtime="20201112 12:27:56.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.317" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:56.315" endtime="20201112 12:27:56.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.306" endtime="20201112 12:27:56.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.329" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:56.325" endtime="20201112 12:27:56.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.333" level="INFO">VALUE: 115956476</msg>
<status status="PASS" starttime="20201112 12:27:56.331" endtime="20201112 12:27:56.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.320" endtime="20201112 12:27:56.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.343" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:56.341" endtime="20201112 12:27:56.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.348" level="INFO">VALUE: [115966487, 115976481, 115986487, 115996481, 116006487, 116016481, 116026487, 116036481, 116046487, 116056481, 116066487, 116076481, 116086487, 116096481, 116106487, 116116481, 116126487, 116136481, 116146487, 116156481, 116166487, 116176481, 116186487, 116196481, 116206487, 116216481, 116226487, 116236481, 116246487, 116256481, 116266487, 116276481, 116286487, 116296481, 116306487, 116316481, 116326487, 116336481, 116346487, 116356481, 116366487, 116376481, 116386487, 116396481, 116406487, 116416481, 116426487, 116436481, 116446487, 116456481, 116466487, 116476481, 116486487, 116496481, 116506487, 116516481, 116526487, 116536481, 116546487, 116556481, 116566487, 116576481, 116586487, 116596481, 116606487, 116616481, 116626487, 116636481, 116646487, 116656481, 116666487, 116676481, 116686487, 116696481, 116706487, 116716481, 116726487, 116736481, 116746487, 116756481, 116766487, 116776481, 116786487, 116796481, 116806487, 116816481, 116826487, 116836481, 116846487, 116856481, 116866487, 116876481, 116886487, 116896481, 116906487, 116916481, 116926487, 116936481, 116946487, 116956481]</msg>
<status status="PASS" starttime="20201112 12:27:56.346" endtime="20201112 12:27:56.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.336" endtime="20201112 12:27:56.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.363" endtime="20201112 12:27:56.656"></status>
</kw>
<msg timestamp="20201112 12:27:56.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028964806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.360" endtime="20201112 12:27:56.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018952903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028964806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.660" endtime="20201112 12:27:56.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.667" endtime="20201112 12:27:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.355" endtime="20201112 12:27:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.351" endtime="20201112 12:27:56.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.694" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:56.671" endtime="20201112 12:27:56.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.698" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:56.697" endtime="20201112 12:27:56.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.700" level="INFO">VALUE: 0.018952903</msg>
<status status="PASS" starttime="20201112 12:27:56.699" endtime="20201112 12:27:56.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.695" endtime="20201112 12:27:56.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.706" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:56.704" endtime="20201112 12:27:56.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.709" level="INFO">VALUE: [0.028964806, 0.038960444, 0.048966292, 0.058961931, 0.068967764, 0.078963403, 0.08896925, 0.098964861, 0.108970722, 0.118966333, 0.128972181, 0.138967806, 0.148973653, 0.158969278, 0.168975139, 0.178970764, 0.188976611, 0.198972222, 0.208978111, 0.218973694, 0.228979556, 0.238975181, 0.248981028, 0.258976653, 0.268982528, 0.278978139, 0.288983972, 0.298979681, 0.308985444, 0.318981069, 0.328986917, 0.338982542, 0.348988403, 0.358984028, 0.368989889, 0.378985514, 0.388991347, 0.398986958, 0.408992819, 0.418988431, 0.428994264, 0.438989875, 0.448995722, 0.458991347, 0.468997264, 0.478992806, 0.488998653, 0.498994264, 0.509000125, 0.518995722, 0.529001569, 0.538997194, 0.549003028, 0.558998639, 0.569004486, 0.579000111, 0.589005958, 0.599001569, 0.609007431, 0.619003083, 0.629008875, 0.639004486, 0.649010347, 0.659005958, 0.669011806, 0.679007431, 0.689013264, 0.699008875, 0.709014736, 0.719010347, 0.729016194, 0.739011806, 0.749017681, 0.759013278, 0.769019181, 0.779014778, 0.789020583, 0.799016264, 0.809022042, 0.819017722, 0.829023528, 0.839019125, 0.849024986, 0.859020597, 0.869026431, 0.879022056, 0.889027903, 0.899023514, 0.909029361, 0.919024972, 0.929030819, 0.939026458, 0.949032361, 0.959027917, 0.96903375, 0.979029375, 0.989035222, 0.999030833, 1.009036694, 1.019032306] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:56.708" endtime="20201112 12:27:56.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.702" endtime="20201112 12:27:56.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.712" endtime="20201112 12:27:56.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.715" endtime="20201112 12:27:56.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.714" endtime="20201112 12:27:56.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.710" endtime="20201112 12:27:56.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.166" endtime="20201112 12:27:56.736"></status>
</kw>
<msg timestamp="20201112 12:27:56.736" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.744" endtime="20201112 12:27:58.855"></status>
</kw>
<msg timestamp="20201112 12:27:58.856" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118527832, 'wakeups': [118537844, 118547837, 118557843, 118567837, 118...</msg>
<status status="PASS" starttime="20201112 12:27:56.743" endtime="20201112 12:27:58.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118527832, 'wakeups': [118537844, 118547837, 118557843, 118567837, 118...</msg>
<status status="PASS" starttime="20201112 12:27:58.858" endtime="20201112 12:27:58.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.864" endtime="20201112 12:27:58.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.740" endtime="20201112 12:27:58.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.738" endtime="20201112 12:27:58.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.875" level="INFO">${RESULT} = {'wakeups': [118537844, 118547837, 118557843, 118567837, 118577843, 118587837, 118597843, 118607837, 118617843, 118627837, 118637843, 118647837, 118657843, 118667837, 118677843, 118687837, 118697843, ...</msg>
<status status="PASS" starttime="20201112 12:27:58.871" endtime="20201112 12:27:58.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.883" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:27:58.881" endtime="20201112 12:27:58.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.888" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:27:58.886" endtime="20201112 12:27:58.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.877" endtime="20201112 12:27:58.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.898" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:58.896" endtime="20201112 12:27:58.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.902" level="INFO">VALUE: 118527832</msg>
<status status="PASS" starttime="20201112 12:27:58.900" endtime="20201112 12:27:58.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.891" endtime="20201112 12:27:58.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.912" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:58.910" endtime="20201112 12:27:58.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.917" level="INFO">VALUE: [118537844, 118547837, 118557843, 118567837, 118577843, 118587837, 118597843, 118607837, 118617843, 118627837, 118637843, 118647837, 118657843, 118667837, 118677843, 118687837, 118697843, 118707837, 118717843, 118727837, 118737843, 118747837, 118757843, 118767837, 118777843, 118787837, 118797843, 118807837, 118817843, 118827837, 118837843, 118847837, 118857843, 118867837, 118877843, 118887837, 118897843, 118907837, 118917843, 118927837, 118937843, 118947837, 118957843, 118967837, 118977843, 118987837, 118997843, 119007837, 119017843, 119027837, 119037843, 119047837, 119057843, 119067837, 119077843, 119087837, 119097843, 119107837, 119117843, 119127837, 119137843, 119147837, 119157843, 119167837, 119177843, 119187837, 119197843, 119207837, 119217843, 119227837, 119237843, 119247837, 119257843, 119267837, 119277843, 119287837, 119297843, 119307837, 119317843, 119327837, 119337843, 119347837, 119357843, 119367837, 119377843, 119387837, 119397843, 119407837, 119417843, 119427837, 119437843, 119447837, 119457843, 119467837, 119477843, 119487837, 119497843, 119507837, 119517843, 119527837]</msg>
<status status="PASS" starttime="20201112 12:27:58.915" endtime="20201112 12:27:58.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.905" endtime="20201112 12:27:58.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.932" endtime="20201112 12:27:59.224"></status>
</kw>
<msg timestamp="20201112 12:27:59.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018948931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028961167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.929" endtime="20201112 12:27:59.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018948931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028961167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.228" endtime="20201112 12:27:59.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.236" endtime="20201112 12:27:59.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.924" endtime="20201112 12:27:59.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.920" endtime="20201112 12:27:59.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.261" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.239" endtime="20201112 12:27:59.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.266" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:27:59.265" endtime="20201112 12:27:59.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.268" level="INFO">VALUE: 0.018948931</msg>
<status status="PASS" starttime="20201112 12:27:59.267" endtime="20201112 12:27:59.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.262" endtime="20201112 12:27:59.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.274" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:27:59.273" endtime="20201112 12:27:59.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.277" level="INFO">VALUE: [0.028961167, 0.038955792, 0.048961653, 0.058957278, 0.068963139, 0.078958736, 0.088964653, 0.09896025, 0.108966069, 0.118961681, 0.128967597, 0.138963194, 0.148969014, 0.158964639, 0.168970486, 0.178966097, 0.188971958, 0.198967569, 0.208973444, 0.218969042, 0.228974903, 0.238970542, 0.248976375, 0.258972, 0.268977847, 0.278973472, 0.288979375, 0.298974944, 0.308980806, 0.318976431, 0.328982278, 0.338977889, 0.34898375, 0.358979375, 0.368985222, 0.378980847, 0.388986694, 0.398982292, 0.408988153, 0.418983764, 0.428989653, 0.438985208, 0.448991139, 0.458986681, 0.468992528, 0.478988167, 0.488994, 0.498989597, 0.508995458, 0.518991083, 0.528996903, 0.538992528, 0.548998361, 0.558993986, 0.568999847, 0.578995458, 0.589001292, 0.598996903, 0.609002764, 0.618998431, 0.629004236, 0.638999833, 0.649005681, 0.659001292, 0.669007139, 0.679002764, 0.689008611, 0.699004222, 0.709010083, 0.719005681, 0.729011528, 0.739007153, 0.749013, 0.759008625, 0.769014458, 0.779010083, 0.789015931, 0.799011569, 0.809017389, 0.819013, 0.829018847, 0.839014472, 0.849020319, 0.859015931, 0.869021792, 0.879017417, 0.88902325, 0.899018861, 0.909024708, 0.919020333, 0.929026181, 0.939021792, 0.949027708, 0.95902325, 0.969029111, 0.979024722, 0.989030569, 0.999026181, 1.009032028, 1.019027667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:27:59.276" endtime="20201112 12:27:59.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.270" endtime="20201112 12:27:59.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.280" endtime="20201112 12:27:59.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.284" endtime="20201112 12:27:59.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.282" endtime="20201112 12:27:59.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.278" endtime="20201112 12:27:59.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.737" endtime="20201112 12:27:59.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.591" endtime="20201112 12:27:59.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.590" endtime="20201112 12:27:59.305"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:27:59.308" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.317" endtime="20201112 12:28:01.427"></status>
</kw>
<msg timestamp="20201112 12:28:01.428" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 121100307, 'wakeups': [121110324, 121120323, 121130323, 121140323, 121...</msg>
<status status="PASS" starttime="20201112 12:27:59.315" endtime="20201112 12:28:01.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 121100307, 'wakeups': [121110324, 121120323, 121130323, 121140323, 121...</msg>
<status status="PASS" starttime="20201112 12:28:01.431" endtime="20201112 12:28:01.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.436" endtime="20201112 12:28:01.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.312" endtime="20201112 12:28:01.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.310" endtime="20201112 12:28:01.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.447" level="INFO">${RESULT} = {'wakeups': [121110324, 121120323, 121130323, 121140323, 121150323, 121160323, 121170323, 121180323, 121190323, 121200323, 121210323, 121220323, 121230323, 121240323, 121250323, 121260323, 121270323, ...</msg>
<status status="PASS" starttime="20201112 12:28:01.443" endtime="20201112 12:28:01.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.456" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:01.453" endtime="20201112 12:28:01.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.460" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:01.458" endtime="20201112 12:28:01.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.449" endtime="20201112 12:28:01.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.470" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:01.468" endtime="20201112 12:28:01.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.474" level="INFO">VALUE: 121100307</msg>
<status status="PASS" starttime="20201112 12:28:01.472" endtime="20201112 12:28:01.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.463" endtime="20201112 12:28:01.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.484" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:01.482" endtime="20201112 12:28:01.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.489" level="INFO">VALUE: [121110324, 121120323, 121130323, 121140323, 121150323, 121160323, 121170323, 121180323, 121190323, 121200323, 121210323, 121220323, 121230323, 121240323, 121250323, 121260323, 121270323, 121280323, 121290323, 121300323, 121310323, 121320323, 121330323, 121340323, 121350323, 121360323, 121370323, 121380323, 121390323, 121400323, 121410323, 121420323, 121430323, 121440323, 121450323, 121460323, 121470323, 121480323, 121490323, 121500323, 121510323, 121520323, 121530323, 121540323, 121550323, 121560323, 121570323, 121580323, 121590323, 121600323, 121610323, 121620323, 121630323, 121640323, 121650323, 121660323, 121670323, 121680323, 121690323, 121700323, 121710323, 121720323, 121730323, 121740323, 121750323, 121760323, 121770323, 121780323, 121790323, 121800323, 121810323, 121820323, 121830323, 121840323, 121850323, 121860323, 121870323, 121880323, 121890323, 121900323, 121910323, 121920323, 121930323, 121940323, 121950323, 121960323, 121970323, 121980323, 121990323, 122000323, 122010323, 122020323, 122030323, 122040323, 122050323, 122060323, 122070323, 122080323, 122090323, 122100323]</msg>
<status status="PASS" starttime="20201112 12:28:01.486" endtime="20201112 12:28:01.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.477" endtime="20201112 12:28:01.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.500" endtime="20201112 12:28:01.792"></status>
</kw>
<msg timestamp="20201112 12:28:01.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0327055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:01.499" endtime="20201112 12:28:01.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0327055, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:01.796" endtime="20201112 12:28:01.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.804" endtime="20201112 12:28:01.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.496" endtime="20201112 12:28:01.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.492" endtime="20201112 12:28:01.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.831" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.807" endtime="20201112 12:28:01.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.835" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:01.834" endtime="20201112 12:28:01.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.837" level="INFO">VALUE: 0.022687431</msg>
<status status="PASS" starttime="20201112 12:28:01.836" endtime="20201112 12:28:01.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.832" endtime="20201112 12:28:01.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.843" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:01.842" endtime="20201112 12:28:01.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.845" level="INFO">VALUE: [0.0327055, 0.042705514, 0.052706069, 0.062706986, 0.072707528, 0.082708472, 0.092709014, 0.10271, 0.112710472, 0.122711444, 0.132711944, 0.142712861, 0.152713403, 0.162714361, 0.172714889, 0.182715819, 0.192716361, 0.202717306, 0.212717819, 0.222718764, 0.232719306, 0.24272025, 0.252720764, 0.262721708, 0.27272225, 0.282723194, 0.292723708, 0.302724639, 0.312725181, 0.322726139, 0.332726667, 0.342727597, 0.352728139, 0.362729097, 0.372729667, 0.382730556, 0.392731083, 0.402732028, 0.412732556, 0.422733514, 0.432734042, 0.442734972, 0.4527355, 0.462736431, 0.472736986, 0.482737931, 0.492738444, 0.502739403, 0.512739917, 0.522740861, 0.532741375, 0.542742333, 0.552742833, 0.562743806, 0.572744292, 0.582745222, 0.592745847, 0.602746708, 0.612747222, 0.622748153, 0.632748681, 0.642749639, 0.652750181, 0.662751083, 0.672751597, 0.682752569, 0.692753069, 0.702753986, 0.712754542, 0.722755486, 0.732755986, 0.742756903, 0.752757444, 0.762758389, 0.772758917, 0.782759833, 0.792760389, 0.802761319, 0.812761833, 0.82276275, 0.832763292, 0.842764236, 0.85276475, 0.862765681, 0.872766222, 0.882767181, 0.892767694, 0.902768611, 0.912769139, 0.922770097, 0.932770611, 0.942771542, 0.952772069, 0.962773014, 0.972773542, 0.982774486, 0.992775, 1.002775944, 1.012776486, 1.022777403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:01.844" endtime="20201112 12:28:01.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.839" endtime="20201112 12:28:01.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.848" endtime="20201112 12:28:01.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.851" endtime="20201112 12:28:01.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.850" endtime="20201112 12:28:01.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.846" endtime="20201112 12:28:01.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.308" endtime="20201112 12:28:01.872"></status>
</kw>
<msg timestamp="20201112 12:28:01.872" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.880" endtime="20201112 12:28:03.990"></status>
</kw>
<msg timestamp="20201112 12:28:03.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123663534, 'wakeups': [123673551, 123683550, 123693550, 123703550, 123...</msg>
<status status="PASS" starttime="20201112 12:28:01.878" endtime="20201112 12:28:03.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123663534, 'wakeups': [123673551, 123683550, 123693550, 123703550, 123...</msg>
<status status="PASS" starttime="20201112 12:28:03.994" endtime="20201112 12:28:03.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.000" endtime="20201112 12:28:04.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.876" endtime="20201112 12:28:04.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.874" endtime="20201112 12:28:04.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.011" level="INFO">${RESULT} = {'wakeups': [123673551, 123683550, 123693550, 123703550, 123713550, 123723550, 123733550, 123743550, 123753550, 123763550, 123773550, 123783550, 123793550, 123803550, 123813550, 123823550, 123833550, ...</msg>
<status status="PASS" starttime="20201112 12:28:04.007" endtime="20201112 12:28:04.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.019" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:04.017" endtime="20201112 12:28:04.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.024" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:04.022" endtime="20201112 12:28:04.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.013" endtime="20201112 12:28:04.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.036" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:04.034" endtime="20201112 12:28:04.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.040" level="INFO">VALUE: 123663534</msg>
<status status="PASS" starttime="20201112 12:28:04.038" endtime="20201112 12:28:04.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.027" endtime="20201112 12:28:04.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.050" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:04.048" endtime="20201112 12:28:04.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.055" level="INFO">VALUE: [123673551, 123683550, 123693550, 123703550, 123713550, 123723550, 123733550, 123743550, 123753550, 123763550, 123773550, 123783550, 123793550, 123803550, 123813550, 123823550, 123833550, 123843550, 123853550, 123863550, 123873550, 123883550, 123893550, 123903550, 123913550, 123923550, 123933550, 123943550, 123953550, 123963550, 123973550, 123983550, 123993550, 124003550, 124013550, 124023550, 124033550, 124043550, 124053550, 124063550, 124073550, 124083550, 124093550, 124103550, 124113550, 124123550, 124133550, 124143550, 124153550, 124163550, 124173550, 124183550, 124193550, 124203550, 124213550, 124223550, 124233550, 124243550, 124253550, 124263550, 124273550, 124283550, 124293550, 124303550, 124313550, 124323550, 124333550, 124343550, 124353550, 124363550, 124373550, 124383550, 124393550, 124403550, 124413550, 124423550, 124433550, 124443550, 124453550, 124463550, 124473550, 124483550, 124493550, 124503550, 124513550, 124523550, 124533550, 124543550, 124553550, 124563550, 124573550, 124583550, 124593550, 124603550, 124613550, 124623550, 124633550, 124643550, 124653550, 124663550]</msg>
<status status="PASS" starttime="20201112 12:28:04.052" endtime="20201112 12:28:04.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.043" endtime="20201112 12:28:04.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.069" endtime="20201112 12:28:04.361"></status>
</kw>
<msg timestamp="20201112 12:28:04.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:04.067" endtime="20201112 12:28:04.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028966, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:04.365" endtime="20201112 12:28:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.372" endtime="20201112 12:28:04.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.061" endtime="20201112 12:28:04.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.058" endtime="20201112 12:28:04.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.399" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:04.376" endtime="20201112 12:28:04.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.404" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:04.402" endtime="20201112 12:28:04.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.406" level="INFO">VALUE: 0.018948278</msg>
<status status="PASS" starttime="20201112 12:28:04.405" endtime="20201112 12:28:04.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.400" endtime="20201112 12:28:04.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.413" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:04.411" endtime="20201112 12:28:04.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.415" level="INFO">VALUE: [0.028966, 0.038966014, 0.048966556, 0.058967486, 0.068968042, 0.078968972, 0.088969514, 0.098970444, 0.108970986, 0.118971917, 0.128972444, 0.138973375, 0.148973917, 0.158974861, 0.168975389, 0.178976319, 0.188976861, 0.198977806, 0.208978333, 0.218979264, 0.228979819, 0.238980764, 0.248981278, 0.258982208, 0.26898275, 0.278983778, 0.288984264, 0.298985153, 0.308985694, 0.318986681, 0.328987181, 0.338988097, 0.348988639, 0.358989583, 0.368990097, 0.378991042, 0.388991569, 0.398992514, 0.408993028, 0.418993944, 0.428994472, 0.438995431, 0.448996, 0.458996861, 0.468997417, 0.478998361, 0.488998861, 0.498999778, 0.509000319, 0.519001264, 0.529001778, 0.53900275, 0.549003236, 0.559004194, 0.569004694, 0.579005639, 0.589006167, 0.599007111, 0.609007639, 0.619008542, 0.629009097, 0.639010028, 0.649010542, 0.659011472, 0.669012014, 0.679012958, 0.689013472, 0.699014389, 0.709014944, 0.719015875, 0.729016417, 0.739017319, 0.749017889, 0.759018792, 0.769019319, 0.779020264, 0.789020778, 0.799021736, 0.809022236, 0.819023167, 0.829023708, 0.839024667, 0.849025167, 0.859026097, 0.869026639, 0.879027569, 0.889028097, 0.899029028, 0.909029556, 0.9190305, 0.929031028, 0.939031944, 0.949032472, 0.959033486, 0.969033958, 0.979034889, 0.989035403, 0.999036347, 1.009036861, 1.019037806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:04.414" endtime="20201112 12:28:04.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.408" endtime="20201112 12:28:04.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.418" endtime="20201112 12:28:04.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.421" endtime="20201112 12:28:04.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.420" endtime="20201112 12:28:04.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.416" endtime="20201112 12:28:04.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.873" endtime="20201112 12:28:04.442"></status>
</kw>
<msg timestamp="20201112 12:28:04.442" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.450" endtime="20201112 12:28:06.560"></status>
</kw>
<msg timestamp="20201112 12:28:06.562" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126233634, 'wakeups': [126243651, 126253650, 126263650, 126273650, 126...</msg>
<status status="PASS" starttime="20201112 12:28:04.449" endtime="20201112 12:28:06.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.568" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126233634, 'wakeups': [126243651, 126253650, 126263650, 126273650, 126...</msg>
<status status="PASS" starttime="20201112 12:28:06.564" endtime="20201112 12:28:06.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.570" endtime="20201112 12:28:06.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.446" endtime="20201112 12:28:06.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.444" endtime="20201112 12:28:06.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.581" level="INFO">${RESULT} = {'wakeups': [126243651, 126253650, 126263650, 126273650, 126283650, 126293650, 126303650, 126313650, 126323650, 126333650, 126343650, 126353650, 126363650, 126373650, 126383650, 126393650, 126403650, ...</msg>
<status status="PASS" starttime="20201112 12:28:06.577" endtime="20201112 12:28:06.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.589" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:06.587" endtime="20201112 12:28:06.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.594" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:06.592" endtime="20201112 12:28:06.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.582" endtime="20201112 12:28:06.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.604" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:06.602" endtime="20201112 12:28:06.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.608" level="INFO">VALUE: 126233634</msg>
<status status="PASS" starttime="20201112 12:28:06.606" endtime="20201112 12:28:06.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.597" endtime="20201112 12:28:06.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.618" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:06.616" endtime="20201112 12:28:06.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.623" level="INFO">VALUE: [126243651, 126253650, 126263650, 126273650, 126283650, 126293650, 126303650, 126313650, 126323650, 126333650, 126343650, 126353650, 126363650, 126373650, 126383650, 126393650, 126403650, 126413650, 126423650, 126433650, 126443650, 126453650, 126463650, 126473650, 126483650, 126493650, 126503650, 126513650, 126523650, 126533650, 126543650, 126553650, 126563650, 126573650, 126583650, 126593650, 126603650, 126613650, 126623650, 126633650, 126643650, 126653650, 126663650, 126673650, 126683650, 126693650, 126703650, 126713650, 126723650, 126733650, 126743650, 126753650, 126763650, 126773650, 126783650, 126793650, 126803650, 126813650, 126823650, 126833650, 126843650, 126853650, 126863650, 126873650, 126883650, 126893650, 126903650, 126913650, 126923650, 126933650, 126943650, 126953650, 126963650, 126973650, 126983650, 126993650, 127003650, 127013650, 127023650, 127033650, 127043650, 127053650, 127063650, 127073650, 127083650, 127093650, 127103650, 127113650, 127123650, 127133650, 127143650, 127153650, 127163650, 127173650, 127183650, 127193650, 127203650, 127213650, 127223650, 127233650]</msg>
<status status="PASS" starttime="20201112 12:28:06.621" endtime="20201112 12:28:06.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.611" endtime="20201112 12:28:06.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.631" endtime="20201112 12:28:06.923"></status>
</kw>
<msg timestamp="20201112 12:28:06.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028926181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.629" endtime="20201112 12:28:06.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028926181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.927" endtime="20201112 12:28:06.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.934" endtime="20201112 12:28:06.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.626" endtime="20201112 12:28:06.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.625" endtime="20201112 12:28:06.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.960" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.937" endtime="20201112 12:28:06.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.965" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:06.964" endtime="20201112 12:28:06.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.967" level="INFO">VALUE: 0.018908444</msg>
<status status="PASS" starttime="20201112 12:28:06.966" endtime="20201112 12:28:06.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.961" endtime="20201112 12:28:06.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.972" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:06.971" endtime="20201112 12:28:06.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.974" level="INFO">VALUE: [0.028926181, 0.038926208, 0.048926792, 0.058927667, 0.068928208, 0.078929167, 0.088929694, 0.098930611, 0.108931167, 0.118932097, 0.128932625, 0.138933597, 0.148934083, 0.158935056, 0.168935569, 0.178936486, 0.188937028, 0.198937986, 0.208938514, 0.218939444, 0.228939986, 0.238940944, 0.248941444, 0.258942375, 0.268942931, 0.278943944, 0.288944389, 0.298945319, 0.308945875, 0.318946833, 0.328947347, 0.338948264, 0.348948819, 0.358949778, 0.368950278, 0.378951208, 0.388951764, 0.398952708, 0.408953236, 0.418954167, 0.428954708, 0.438955667, 0.448956181, 0.458957111, 0.468957653, 0.478958611, 0.488959125, 0.498960056, 0.508960639, 0.518961611, 0.528962069, 0.538963, 0.548963542, 0.5589645, 0.568965042, 0.578965958, 0.5889665, 0.598967472, 0.608967972, 0.618968931, 0.628969472, 0.638970417, 0.648970931, 0.658971861, 0.668972389, 0.678973347, 0.688973861, 0.698974792, 0.708975319, 0.718976264, 0.728976778, 0.738977722, 0.74897825, 0.758979264, 0.768979708, 0.778980639, 0.788981181, 0.798982111, 0.808982639, 0.818983556, 0.828984097, 0.838985056, 0.848985583, 0.8589865, 0.868987028, 0.878987972, 0.8889885, 0.898989431, 0.908989958, 0.918990917, 0.928991417, 0.938992347, 0.948992903, 0.958993833, 0.968994417, 0.978995278, 0.988995806, 0.998996764, 1.008997333, 1.018998222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:06.973" endtime="20201112 12:28:06.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.968" endtime="20201112 12:28:06.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.978" endtime="20201112 12:28:06.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.981" endtime="20201112 12:28:07.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.980" endtime="20201112 12:28:07.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.976" endtime="20201112 12:28:07.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.443" endtime="20201112 12:28:07.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.306" endtime="20201112 12:28:07.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.306" endtime="20201112 12:28:07.003"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:07.005" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.014" endtime="20201112 12:28:09.124"></status>
</kw>
<msg timestamp="20201112 12:28:09.126" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 128797997, 'wakeups': [128808020, 128818019, 128828019, 128838019, 128...</msg>
<status status="PASS" starttime="20201112 12:28:07.012" endtime="20201112 12:28:09.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.132" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 128797997, 'wakeups': [128808020, 128818019, 128828019, 128838019, 128...</msg>
<status status="PASS" starttime="20201112 12:28:09.128" endtime="20201112 12:28:09.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.134" endtime="20201112 12:28:09.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.009" endtime="20201112 12:28:09.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.007" endtime="20201112 12:28:09.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.145" level="INFO">${RESULT} = {'wakeups': [128808020, 128818019, 128828019, 128838019, 128848019, 128858019, 128868019, 128878019, 128888019, 128898019, 128908019, 128918019, 128928019, 128938019, 128948019, 128958019, 128968019, ...</msg>
<status status="PASS" starttime="20201112 12:28:09.141" endtime="20201112 12:28:09.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.153" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:09.151" endtime="20201112 12:28:09.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.158" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:09.156" endtime="20201112 12:28:09.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.147" endtime="20201112 12:28:09.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.168" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:09.166" endtime="20201112 12:28:09.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.172" level="INFO">VALUE: 128797997</msg>
<status status="PASS" starttime="20201112 12:28:09.170" endtime="20201112 12:28:09.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.161" endtime="20201112 12:28:09.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.182" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:09.180" endtime="20201112 12:28:09.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.186" level="INFO">VALUE: [128808020, 128818019, 128828019, 128838019, 128848019, 128858019, 128868019, 128878019, 128888019, 128898019, 128908019, 128918019, 128928019, 128938019, 128948019, 128958019, 128968019, 128978019, 128988019, 128998019, 129008019, 129018019, 129028019, 129038019, 129048019, 129058019, 129068019, 129078019, 129088019, 129098019, 129108019, 129118019, 129128019, 129138019, 129148019, 129158019, 129168019, 129178019, 129188019, 129198019, 129208019, 129218019, 129228019, 129238019, 129248019, 129258019, 129268019, 129278019, 129288019, 129298019, 129308019, 129318019, 129328019, 129338019, 129348019, 129358019, 129368019, 129378019, 129388019, 129398019, 129408019, 129418019, 129428019, 129438019, 129448019, 129458019, 129468019, 129478019, 129488019, 129498019, 129508019, 129518019, 129528019, 129538019, 129548019, 129558019, 129568019, 129578019, 129588019, 129598019, 129608019, 129618019, 129628019, 129638019, 129648019, 129658019, 129668019, 129678019, 129688019, 129698019, 129708019, 129718019, 129728019, 129738019, 129748019, 129758019, 129768019, 129778019, 129788019, 129798019]</msg>
<status status="PASS" starttime="20201112 12:28:09.184" endtime="20201112 12:28:09.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.175" endtime="20201112 12:28:09.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.202" endtime="20201112 12:28:09.494"></status>
</kw>
<msg timestamp="20201112 12:28:09.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032951944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.199" endtime="20201112 12:28:09.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032951944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.498" endtime="20201112 12:28:09.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.505" endtime="20201112 12:28:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.194" endtime="20201112 12:28:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.190" endtime="20201112 12:28:09.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.532" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.509" endtime="20201112 12:28:09.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.537" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:09.536" endtime="20201112 12:28:09.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.539" level="INFO">VALUE: 0.022927667</msg>
<status status="PASS" starttime="20201112 12:28:09.538" endtime="20201112 12:28:09.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.533" endtime="20201112 12:28:09.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.545" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:09.544" endtime="20201112 12:28:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.547" level="INFO">VALUE: [0.032951944, 0.042951792, 0.052952333, 0.062953278, 0.072953861, 0.082954764, 0.092955278, 0.102956222, 0.112956764, 0.122957694, 0.132958222, 0.142959208, 0.152959694, 0.162960639, 0.172961167, 0.182962111, 0.192962639, 0.202963597, 0.212964111, 0.222965069, 0.232965597, 0.242966542, 0.252967069, 0.262968014, 0.272968556, 0.282969486, 0.292970028, 0.302970958, 0.3129715, 0.322972431, 0.332972958, 0.342973917, 0.352974431, 0.362975403, 0.372975917, 0.382976861, 0.392977403, 0.402978333, 0.412978903, 0.422979819, 0.432980347, 0.442981292, 0.452981847, 0.462982764, 0.472983292, 0.482984236, 0.492984764, 0.502985708, 0.512986236, 0.522987208, 0.532987708, 0.542988667, 0.552989194, 0.562990153, 0.572990667, 0.582991611, 0.592992153, 0.602993111, 0.612993611, 0.622994569, 0.632995153, 0.642996097, 0.652996583, 0.662997528, 0.672998056, 0.682999, 0.692999514, 0.703000486, 0.713001, 0.723001944, 0.733002472, 0.743003431, 0.753003944, 0.763004917, 0.773005417, 0.783006375, 0.793006903, 0.803007847, 0.813008375, 0.823009306, 0.833009819, 0.843010764, 0.853011306, 0.86301225, 0.873012806, 0.883013708, 0.893014222, 0.903015167, 0.913015667, 0.923016639, 0.933017153, 0.943018083, 0.953018611, 0.963019542, 0.973020056, 0.983021, 0.993021528, 1.003022486, 1.013022986, 1.023023931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:09.546" endtime="20201112 12:28:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.541" endtime="20201112 12:28:09.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.550" endtime="20201112 12:28:09.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.553" endtime="20201112 12:28:09.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.552" endtime="20201112 12:28:09.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.549" endtime="20201112 12:28:09.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.006" endtime="20201112 12:28:09.574"></status>
</kw>
<msg timestamp="20201112 12:28:09.574" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.582" endtime="20201112 12:28:11.694"></status>
</kw>
<msg timestamp="20201112 12:28:11.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131366346, 'wakeups': [131376369, 131386368, 131396368, 131406368, 131...</msg>
<status status="PASS" starttime="20201112 12:28:09.581" endtime="20201112 12:28:11.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131366346, 'wakeups': [131376369, 131386368, 131396368, 131406368, 131...</msg>
<status status="PASS" starttime="20201112 12:28:11.698" endtime="20201112 12:28:11.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.704" endtime="20201112 12:28:11.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.578" endtime="20201112 12:28:11.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.576" endtime="20201112 12:28:11.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.715" level="INFO">${RESULT} = {'wakeups': [131376369, 131386368, 131396368, 131406368, 131416368, 131426368, 131436368, 131446368, 131456368, 131466368, 131476368, 131486368, 131496368, 131506368, 131516368, 131526368, 131536368, ...</msg>
<status status="PASS" starttime="20201112 12:28:11.711" endtime="20201112 12:28:11.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.725" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:11.722" endtime="20201112 12:28:11.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.729" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:11.727" endtime="20201112 12:28:11.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.717" endtime="20201112 12:28:11.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.740" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:11.738" endtime="20201112 12:28:11.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.747" level="INFO">VALUE: 131366346</msg>
<status status="PASS" starttime="20201112 12:28:11.745" endtime="20201112 12:28:11.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.732" endtime="20201112 12:28:11.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.758" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:11.756" endtime="20201112 12:28:11.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.763" level="INFO">VALUE: [131376369, 131386368, 131396368, 131406368, 131416368, 131426368, 131436368, 131446368, 131456368, 131466368, 131476368, 131486368, 131496368, 131506368, 131516368, 131526368, 131536368, 131546368, 131556368, 131566368, 131576368, 131586368, 131596368, 131606368, 131616368, 131626368, 131636368, 131646368, 131656368, 131666368, 131676368, 131686368, 131696368, 131706368, 131716368, 131726368, 131736368, 131746368, 131756368, 131766368, 131776368, 131786368, 131796368, 131806368, 131816368, 131826368, 131836368, 131846368, 131856368, 131866368, 131876368, 131886368, 131896368, 131906368, 131916368, 131926368, 131936368, 131946368, 131956368, 131966368, 131976368, 131986368, 131996368, 132006368, 132016368, 132026368, 132036368, 132046368, 132056368, 132066368, 132076368, 132086368, 132096368, 132106368, 132116368, 132126368, 132136368, 132146368, 132156368, 132166368, 132176368, 132186368, 132196368, 132206368, 132216368, 132226368, 132236368, 132246368, 132256368, 132266368, 132276368, 132286368, 132296368, 132306368, 132316368, 132326368, 132336368, 132346368, 132356368, 132366368]</msg>
<status status="PASS" starttime="20201112 12:28:11.760" endtime="20201112 12:28:11.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.750" endtime="20201112 12:28:11.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.773" endtime="20201112 12:28:12.063"></status>
</kw>
<msg timestamp="20201112 12:28:12.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029390917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:11.771" endtime="20201112 12:28:12.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029390917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:12.067" endtime="20201112 12:28:12.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.075" endtime="20201112 12:28:12.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.768" endtime="20201112 12:28:12.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.766" endtime="20201112 12:28:12.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.107" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:12.083" endtime="20201112 12:28:12.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.111" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:12.110" endtime="20201112 12:28:12.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.113" level="INFO">VALUE: 0.019367</msg>
<status status="PASS" starttime="20201112 12:28:12.112" endtime="20201112 12:28:12.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.108" endtime="20201112 12:28:12.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.119" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:12.118" endtime="20201112 12:28:12.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.122" level="INFO">VALUE: [0.029390917, 0.039390764, 0.049391306, 0.059392278, 0.069392792, 0.079393736, 0.089394278, 0.099395208, 0.109395722, 0.119396681, 0.129397194, 0.139398167, 0.149398681, 0.159399639, 0.169400167, 0.179401097, 0.189401639, 0.199402569, 0.209403097, 0.219404042, 0.229404583, 0.239405514, 0.249406069, 0.259407, 0.269407528, 0.279408486, 0.289408986, 0.299409958, 0.309410486, 0.319411444, 0.329411958, 0.339412889, 0.349413431, 0.359414431, 0.369414875, 0.379415819, 0.389416347, 0.399417292, 0.409417806, 0.419418736, 0.429419264, 0.439420222, 0.449420722, 0.459421694, 0.469422194, 0.479423125, 0.489423653, 0.499424597, 0.509425111, 0.519426056, 0.529426569, 0.539427514, 0.549428097, 0.559428972, 0.5694295, 0.579430458, 0.589430986, 0.599431917, 0.609432417, 0.619433361, 0.629433875, 0.639434833, 0.649435347, 0.659436292, 0.669436806, 0.67943775, 0.689438278, 0.699439236, 0.709439764, 0.71944075, 0.729441194, 0.739442139, 0.749442667, 0.759443611, 0.769444125, 0.779445069, 0.789445611, 0.799446542, 0.809447069, 0.819448, 0.829448528, 0.839449486, 0.84945, 0.859450931, 0.869451444, 0.879452403, 0.889452972, 0.899453861, 0.909454389, 0.919455319, 0.929455875, 0.939456806, 0.949457306, 0.95945825, 0.969458778, 0.979459708, 0.989460278, 0.999461194, 1.009461708, 1.019462653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:12.121" endtime="20201112 12:28:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.115" endtime="20201112 12:28:12.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.125" endtime="20201112 12:28:12.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.129" endtime="20201112 12:28:12.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.127" endtime="20201112 12:28:12.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.124" endtime="20201112 12:28:12.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.575" endtime="20201112 12:28:12.150"></status>
</kw>
<msg timestamp="20201112 12:28:12.150" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.158" endtime="20201112 12:28:14.269"></status>
</kw>
<msg timestamp="20201112 12:28:14.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133942071, 'wakeups': [133952094, 133962093, 133972093, 133982093, 133...</msg>
<status status="PASS" starttime="20201112 12:28:12.157" endtime="20201112 12:28:14.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.276" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133942071, 'wakeups': [133952094, 133962093, 133972093, 133982093, 133...</msg>
<status status="PASS" starttime="20201112 12:28:14.273" endtime="20201112 12:28:14.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.279" endtime="20201112 12:28:14.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.154" endtime="20201112 12:28:14.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.152" endtime="20201112 12:28:14.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.290" level="INFO">${RESULT} = {'wakeups': [133952094, 133962093, 133972093, 133982093, 133992093, 134002093, 134012093, 134022093, 134032093, 134042093, 134052093, 134062093, 134072093, 134082093, 134092093, 134102093, 134112093, ...</msg>
<status status="PASS" starttime="20201112 12:28:14.286" endtime="20201112 12:28:14.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.299" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:14.297" endtime="20201112 12:28:14.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.303" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:14.301" endtime="20201112 12:28:14.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.292" endtime="20201112 12:28:14.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.313" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:14.311" endtime="20201112 12:28:14.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.317" level="INFO">VALUE: 133942071</msg>
<status status="PASS" starttime="20201112 12:28:14.315" endtime="20201112 12:28:14.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.306" endtime="20201112 12:28:14.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.327" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:14.325" endtime="20201112 12:28:14.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.333" level="INFO">VALUE: [133952094, 133962093, 133972093, 133982093, 133992093, 134002093, 134012093, 134022093, 134032093, 134042093, 134052093, 134062093, 134072093, 134082093, 134092093, 134102093, 134112093, 134122093, 134132093, 134142093, 134152093, 134162093, 134172093, 134182093, 134192093, 134202093, 134212093, 134222093, 134232093, 134242093, 134252093, 134262093, 134272093, 134282093, 134292093, 134302093, 134312093, 134322093, 134332093, 134342093, 134352093, 134362093, 134372093, 134382093, 134392093, 134402093, 134412093, 134422093, 134432093, 134442093, 134452093, 134462093, 134472093, 134482093, 134492093, 134502093, 134512093, 134522093, 134532093, 134542093, 134552093, 134562093, 134572093, 134582093, 134592093, 134602093, 134612093, 134622093, 134632093, 134642093, 134652093, 134662093, 134672093, 134682093, 134692093, 134702093, 134712093, 134722093, 134732093, 134742093, 134752093, 134762093, 134772093, 134782093, 134792093, 134802093, 134812093, 134822093, 134832093, 134842093, 134852093, 134862093, 134872093, 134882093, 134892093, 134902093, 134912093, 134922093, 134932093, 134942093]</msg>
<status status="PASS" starttime="20201112 12:28:14.329" endtime="20201112 12:28:14.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.320" endtime="20201112 12:28:14.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.349" endtime="20201112 12:28:14.649"></status>
</kw>
<msg timestamp="20201112 12:28:14.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029574694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.345" endtime="20201112 12:28:14.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029574694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.652" endtime="20201112 12:28:14.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.660" endtime="20201112 12:28:14.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.340" endtime="20201112 12:28:14.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.336" endtime="20201112 12:28:14.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.687" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:14.663" endtime="20201112 12:28:14.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.691" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:14.690" endtime="20201112 12:28:14.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.693" level="INFO">VALUE: 0.019550403</msg>
<status status="PASS" starttime="20201112 12:28:14.692" endtime="20201112 12:28:14.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.687" endtime="20201112 12:28:14.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.699" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:14.697" endtime="20201112 12:28:14.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.701" level="INFO">VALUE: [0.029574694, 0.039574542, 0.049575042, 0.059575986, 0.0695765, 0.079577472, 0.089578, 0.099578931, 0.109579458, 0.119580403, 0.129580931, 0.139581875, 0.149582417, 0.159583361, 0.169583875, 0.179584819, 0.189585361, 0.199586319, 0.209586819, 0.219587764, 0.229588319, 0.23958925, 0.249589792, 0.259590722, 0.26959125, 0.279592194, 0.289592722, 0.299593667, 0.309594194, 0.319595139, 0.329595667, 0.339596625, 0.349597139, 0.359598083, 0.369598611, 0.379599542, 0.389600069, 0.399601, 0.409601514, 0.419602472, 0.429602986, 0.439603944, 0.449604458, 0.459605389, 0.469605903, 0.479606847, 0.489607361, 0.499608306, 0.509608833, 0.519609778, 0.529610292, 0.539611236, 0.54961175, 0.559612694, 0.569613222, 0.579614167, 0.589614694, 0.599615625, 0.609616139, 0.619617083, 0.629617653, 0.639618556, 0.649619069, 0.659620014, 0.669620528, 0.679621472, 0.689622, 0.699622944, 0.709623458, 0.719624403, 0.729624917, 0.739625889, 0.749626403, 0.759627333, 0.769627861, 0.779628792, 0.789629319, 0.799630292, 0.809630778, 0.819631722, 0.829632264, 0.839633194, 0.849633708, 0.859634667, 0.869635181, 0.879636139, 0.889636708, 0.899637583, 0.909638097, 0.919639042, 0.929639583, 0.939640528, 0.949641042, 0.959641972, 0.9696425, 0.979643444, 0.989643958, 0.999644931, 1.009645417, 1.019646375] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:14.700" endtime="20201112 12:28:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.694" endtime="20201112 12:28:14.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.704" endtime="20201112 12:28:14.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.707" endtime="20201112 12:28:14.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.706" endtime="20201112 12:28:14.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.702" endtime="20201112 12:28:14.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.151" endtime="20201112 12:28:14.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.004" endtime="20201112 12:28:14.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.003" endtime="20201112 12:28:14.728"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:14.732" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.741" endtime="20201112 12:28:16.852"></status>
</kw>
<msg timestamp="20201112 12:28:16.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136524798, 'wakeups': [136534828, 136544827, 136554827, 136564827, 136...</msg>
<status status="PASS" starttime="20201112 12:28:14.739" endtime="20201112 12:28:16.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.859" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 136524798, 'wakeups': [136534828, 136544827, 136554827, 136564827, 136...</msg>
<status status="PASS" starttime="20201112 12:28:16.855" endtime="20201112 12:28:16.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.861" endtime="20201112 12:28:16.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.736" endtime="20201112 12:28:16.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.734" endtime="20201112 12:28:16.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:16.872" level="INFO">${RESULT} = {'wakeups': [136534828, 136544827, 136554827, 136564827, 136574827, 136584827, 136594827, 136604827, 136614827, 136624827, 136634827, 136644827, 136654827, 136664827, 136674827, 136684827, 136694827, ...</msg>
<status status="PASS" starttime="20201112 12:28:16.868" endtime="20201112 12:28:16.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.880" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:16.878" endtime="20201112 12:28:16.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.885" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:16.883" endtime="20201112 12:28:16.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.873" endtime="20201112 12:28:16.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.895" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:16.893" endtime="20201112 12:28:16.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.899" level="INFO">VALUE: 136524798</msg>
<status status="PASS" starttime="20201112 12:28:16.897" endtime="20201112 12:28:16.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.888" endtime="20201112 12:28:16.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.910" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:16.908" endtime="20201112 12:28:16.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.914" level="INFO">VALUE: [136534828, 136544827, 136554827, 136564827, 136574827, 136584827, 136594827, 136604827, 136614827, 136624827, 136634827, 136644827, 136654827, 136664827, 136674827, 136684827, 136694827, 136704827, 136714827, 136724827, 136734827, 136744827, 136754827, 136764827, 136774827, 136784827, 136794827, 136804827, 136814827, 136824827, 136834827, 136844827, 136854827, 136864827, 136874827, 136884827, 136894827, 136904827, 136914827, 136924827, 136934827, 136944827, 136954827, 136964827, 136974827, 136984827, 136994827, 137004827, 137014827, 137024827, 137034827, 137044827, 137054827, 137064827, 137074827, 137084827, 137094827, 137104827, 137114827, 137124827, 137134827, 137144827, 137154827, 137164827, 137174827, 137184827, 137194827, 137204827, 137214827, 137224827, 137234827, 137244827, 137254827, 137264827, 137274827, 137284827, 137294827, 137304827, 137314827, 137324827, 137334827, 137344827, 137354827, 137364827, 137374827, 137384827, 137394827, 137404827, 137414827, 137424827, 137434827, 137444827, 137454827, 137464827, 137474827, 137484827, 137494827, 137504827, 137514827, 137524827]</msg>
<status status="PASS" starttime="20201112 12:28:16.912" endtime="20201112 12:28:16.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.903" endtime="20201112 12:28:16.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:16.930" endtime="20201112 12:28:17.228"></status>
</kw>
<msg timestamp="20201112 12:28:17.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023867806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:16.926" endtime="20201112 12:28:17.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023867806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:17.232" endtime="20201112 12:28:17.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.239" endtime="20201112 12:28:17.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.921" endtime="20201112 12:28:17.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.917" endtime="20201112 12:28:17.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:17.267" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:17.243" endtime="20201112 12:28:17.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.271" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:17.270" endtime="20201112 12:28:17.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.273" level="INFO">VALUE: 0.023867806</msg>
<status status="PASS" starttime="20201112 12:28:17.272" endtime="20201112 12:28:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.268" endtime="20201112 12:28:17.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.278" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:17.277" endtime="20201112 12:28:17.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:17.280" level="INFO">VALUE: [0.033898167, 0.043897875, 0.053898417, 0.063899347, 0.073899889, 0.083900833, 0.093901361, 0.103902306, 0.113902833, 0.123903778, 0.133904306, 0.143905236, 0.153905792, 0.163906722, 0.17390725, 0.183908194, 0.193908722, 0.203909667, 0.213910222, 0.223911125, 0.233911667, 0.243912625, 0.253913139, 0.263914083, 0.273914625, 0.283915556, 0.293916083, 0.303917042, 0.313917639, 0.323918528, 0.333919028, 0.343919958, 0.3539205, 0.363921458, 0.373921986, 0.383922917, 0.393923458, 0.403924403, 0.413924931, 0.423925875, 0.433926417, 0.443927347, 0.453927875, 0.463928819, 0.473929375, 0.483930306, 0.493930819, 0.50393175, 0.513932347, 0.523933236, 0.533933778, 0.543934694, 0.553935222, 0.563936181, 0.573936681, 0.583937611, 0.593938139, 0.603939083, 0.613939597, 0.623940528, 0.633941056, 0.643942, 0.653942528, 0.663943458, 0.673944056, 0.683944931, 0.693945444, 0.703946375, 0.713946917, 0.723947847, 0.733948375, 0.743949306, 0.753949847, 0.763950778, 0.773951319, 0.783952222, 0.79395275, 0.803953708, 0.813954222, 0.823955181, 0.833955681, 0.843956625, 0.853957139, 0.863958125, 0.873958611, 0.883959556, 0.893960069, 0.903961, 0.913961542, 0.923962556, 0.933963028, 0.943963917, 0.953964458, 0.963965403, 0.973965917, 0.983966861, 0.993967403, 1.003968375, 1.013968847, 1.023969778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:17.279" endtime="20201112 12:28:17.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.274" endtime="20201112 12:28:17.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.288" endtime="20201112 12:28:17.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:17.292" endtime="20201112 12:28:17.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.290" endtime="20201112 12:28:17.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.286" endtime="20201112 12:28:17.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.733" endtime="20201112 12:28:17.312"></status>
</kw>
<msg timestamp="20201112 12:28:17.313" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.320" endtime="20201112 12:28:19.432"></status>
</kw>
<msg timestamp="20201112 12:28:19.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139104033, 'wakeups': [139114063, 139124062, 139134062, 139144062, 139...</msg>
<status status="PASS" starttime="20201112 12:28:17.319" endtime="20201112 12:28:19.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.440" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139104033, 'wakeups': [139114063, 139124062, 139134062, 139144062, 139...</msg>
<status status="PASS" starttime="20201112 12:28:19.436" endtime="20201112 12:28:19.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.442" endtime="20201112 12:28:19.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.316" endtime="20201112 12:28:19.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.315" endtime="20201112 12:28:19.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.454" level="INFO">${RESULT} = {'wakeups': [139114063, 139124062, 139134062, 139144062, 139154062, 139164062, 139174062, 139184062, 139194062, 139204062, 139214062, 139224062, 139234062, 139244062, 139254062, 139264062, 139274062, ...</msg>
<status status="PASS" starttime="20201112 12:28:19.450" endtime="20201112 12:28:19.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.463" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:19.461" endtime="20201112 12:28:19.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.468" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:19.466" endtime="20201112 12:28:19.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.456" endtime="20201112 12:28:19.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.481" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:19.478" endtime="20201112 12:28:19.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.485" level="INFO">VALUE: 139104033</msg>
<status status="PASS" starttime="20201112 12:28:19.483" endtime="20201112 12:28:19.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.471" endtime="20201112 12:28:19.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.496" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:19.494" endtime="20201112 12:28:19.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.501" level="INFO">VALUE: [139114063, 139124062, 139134062, 139144062, 139154062, 139164062, 139174062, 139184062, 139194062, 139204062, 139214062, 139224062, 139234062, 139244062, 139254062, 139264062, 139274062, 139284062, 139294062, 139304062, 139314062, 139324062, 139334062, 139344062, 139354062, 139364062, 139374062, 139384062, 139394062, 139404062, 139414062, 139424062, 139434062, 139444062, 139454062, 139464062, 139474062, 139484062, 139494062, 139504062, 139514062, 139524062, 139534062, 139544062, 139554062, 139564062, 139574062, 139584062, 139594062, 139604062, 139614062, 139624062, 139634062, 139644062, 139654062, 139664062, 139674062, 139684062, 139694062, 139704062, 139714062, 139724062, 139734062, 139744062, 139754062, 139764062, 139774062, 139784062, 139794062, 139804062, 139814062, 139824062, 139834062, 139844062, 139854062, 139864062, 139874062, 139884062, 139894062, 139904062, 139914062, 139924062, 139934062, 139944062, 139954062, 139964062, 139974062, 139984062, 139994062, 140004062, 140014062, 140024062, 140034062, 140044062, 140054062, 140064062, 140074062, 140084062, 140094062, 140104062]</msg>
<status status="PASS" starttime="20201112 12:28:19.499" endtime="20201112 12:28:19.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.489" endtime="20201112 12:28:19.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.518" endtime="20201112 12:28:19.812"></status>
</kw>
<msg timestamp="20201112 12:28:19.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028893667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.515" endtime="20201112 12:28:19.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028893667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:19.817" endtime="20201112 12:28:19.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.825" endtime="20201112 12:28:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.509" endtime="20201112 12:28:19.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.505" endtime="20201112 12:28:19.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:19.852" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:19.828" endtime="20201112 12:28:19.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.856" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:19.855" endtime="20201112 12:28:19.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.858" level="INFO">VALUE: 0.018862944</msg>
<status status="PASS" starttime="20201112 12:28:19.857" endtime="20201112 12:28:19.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.853" endtime="20201112 12:28:19.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.865" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:19.863" endtime="20201112 12:28:19.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:19.867" level="INFO">VALUE: [0.028893667, 0.038893361, 0.048893903, 0.058894819, 0.068895361, 0.078896319, 0.088896833, 0.098897778, 0.108898319, 0.118899264, 0.128899792, 0.138900708, 0.148901264, 0.158902208, 0.168902792, 0.178903681, 0.188904208, 0.198905167, 0.208905667, 0.218906597, 0.228907139, 0.238908111, 0.248908611, 0.258909542, 0.268910097, 0.278911056, 0.288911556, 0.298912486, 0.308913042, 0.318913986, 0.3289145, 0.338915431, 0.348916, 0.358916931, 0.368917444, 0.378918389, 0.388918972, 0.398919875, 0.408920403, 0.418921347, 0.428921875, 0.438922819, 0.448923347, 0.458924292, 0.468924847, 0.478925792, 0.488926292, 0.498927208, 0.50892775, 0.518928708, 0.528929208, 0.538930139, 0.548930694, 0.558931625, 0.568932125, 0.578933056, 0.588933583, 0.598934542, 0.608935056, 0.618935972, 0.628936514, 0.638937458, 0.648937986, 0.658938889, 0.668939431, 0.678940375, 0.688940903, 0.698941833, 0.708942361, 0.718943292, 0.728943819, 0.738944736, 0.748945278, 0.758946222, 0.768946736, 0.778947667, 0.788948194, 0.798949139, 0.808949681, 0.818950583, 0.828951153, 0.838952069, 0.848952597, 0.858953514, 0.868954056, 0.878955, 0.888955514, 0.898956444, 0.908956972, 0.918957944, 0.928958528, 0.938959375, 0.948959903, 0.958960861, 0.968961375, 0.978962292, 0.988962833, 0.998963792, 1.008964292, 1.018965222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:19.866" endtime="20201112 12:28:19.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.860" endtime="20201112 12:28:19.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.870" endtime="20201112 12:28:19.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:19.874" endtime="20201112 12:28:19.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.872" endtime="20201112 12:28:19.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.869" endtime="20201112 12:28:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.313" endtime="20201112 12:28:19.895"></status>
</kw>
<msg timestamp="20201112 12:28:19.895" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:19.904" endtime="20201112 12:28:22.015"></status>
</kw>
<msg timestamp="20201112 12:28:22.016" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141687254, 'wakeups': [141697284, 141707283, 141717283, 141727283, 141...</msg>
<status status="PASS" starttime="20201112 12:28:19.902" endtime="20201112 12:28:22.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 141687254, 'wakeups': [141697284, 141707283, 141717283, 141727283, 141...</msg>
<status status="PASS" starttime="20201112 12:28:22.019" endtime="20201112 12:28:22.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.026" endtime="20201112 12:28:22.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.899" endtime="20201112 12:28:22.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.897" endtime="20201112 12:28:22.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.037" level="INFO">${RESULT} = {'wakeups': [141697284, 141707283, 141717283, 141727283, 141737283, 141747283, 141757283, 141767283, 141777283, 141787283, 141797283, 141807283, 141817283, 141827283, 141837283, 141847283, 141857283, ...</msg>
<status status="PASS" starttime="20201112 12:28:22.033" endtime="20201112 12:28:22.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.046" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:22.044" endtime="20201112 12:28:22.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.051" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:22.049" endtime="20201112 12:28:22.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.039" endtime="20201112 12:28:22.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.062" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:22.060" endtime="20201112 12:28:22.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.066" level="INFO">VALUE: 141687254</msg>
<status status="PASS" starttime="20201112 12:28:22.064" endtime="20201112 12:28:22.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.054" endtime="20201112 12:28:22.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.072" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:22.071" endtime="20201112 12:28:22.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.074" level="INFO">VALUE: [141697284, 141707283, 141717283, 141727283, 141737283, 141747283, 141757283, 141767283, 141777283, 141787283, 141797283, 141807283, 141817283, 141827283, 141837283, 141847283, 141857283, 141867283, 141877283, 141887283, 141897283, 141907283, 141917283, 141927283, 141937283, 141947283, 141957283, 141967283, 141977283, 141987283, 141997283, 142007283, 142017283, 142027283, 142037283, 142047283, 142057283, 142067283, 142077283, 142087283, 142097283, 142107283, 142117283, 142127283, 142137283, 142147283, 142157283, 142167283, 142177283, 142187283, 142197283, 142207283, 142217283, 142227283, 142237283, 142247283, 142257283, 142267283, 142277283, 142287283, 142297283, 142307283, 142317283, 142327283, 142337283, 142347283, 142357283, 142367283, 142377283, 142387283, 142397283, 142407283, 142417283, 142427283, 142437283, 142447283, 142457283, 142467283, 142477283, 142487283, 142497283, 142507283, 142517283, 142527283, 142537283, 142547283, 142557283, 142567283, 142577283, 142587283, 142597283, 142607283, 142617283, 142627283, 142637283, 142647283, 142657283, 142667283, 142677283, 142687283]</msg>
<status status="PASS" starttime="20201112 12:28:22.073" endtime="20201112 12:28:22.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.068" endtime="20201112 12:28:22.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.081" endtime="20201112 12:28:22.374"></status>
</kw>
<msg timestamp="20201112 12:28:22.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029706597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.080" endtime="20201112 12:28:22.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029706597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:22.378" endtime="20201112 12:28:22.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.386" endtime="20201112 12:28:22.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.077" endtime="20201112 12:28:22.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.075" endtime="20201112 12:28:22.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:22.417" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:22.394" endtime="20201112 12:28:22.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.422" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:22.421" endtime="20201112 12:28:22.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.424" level="INFO">VALUE: 0.019676222</msg>
<status status="PASS" starttime="20201112 12:28:22.423" endtime="20201112 12:28:22.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.418" endtime="20201112 12:28:22.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.430" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:22.429" endtime="20201112 12:28:22.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:22.432" level="INFO">VALUE: [0.029706597, 0.039706375, 0.049706847, 0.059707792, 0.069708319, 0.079709264, 0.089709764, 0.099710722, 0.109711236, 0.119712194, 0.129712722, 0.139713653, 0.149714194, 0.159715153, 0.169715708, 0.179716597, 0.189717125, 0.199718153, 0.209718597, 0.219719569, 0.229720125, 0.239721042, 0.249721556, 0.2597225, 0.269723028, 0.279723972, 0.2897245, 0.299725458, 0.309725972, 0.319726931, 0.329727444, 0.339728431, 0.349728917, 0.359729861, 0.369730389, 0.379731319, 0.389731861, 0.399732833, 0.409733333, 0.419734278, 0.429734819, 0.439735778, 0.449736306, 0.459737208, 0.46973775, 0.479738694, 0.489739208, 0.499740125, 0.509740667, 0.519741611, 0.529742139, 0.539743069, 0.549743583, 0.559744542, 0.569745042, 0.579745972, 0.589746514, 0.599747444, 0.609747986, 0.619748931, 0.629749458, 0.639750375, 0.649750903, 0.659751819, 0.669752389, 0.679753292, 0.689753819, 0.699754736, 0.709755319, 0.719756208, 0.729756764, 0.739757681, 0.749758208, 0.759759139, 0.769759653, 0.779760583, 0.789761139, 0.799762069, 0.809762597, 0.8197635, 0.829764056, 0.839765, 0.849765542, 0.859766431, 0.869766972, 0.879767931, 0.889768444, 0.899769375, 0.909769889, 0.919770833, 0.929771417, 0.939772278, 0.949772833, 0.959773778, 0.969774278, 0.979775208, 0.989775819, 0.999776708, 1.009777208, 1.019778139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:22.431" endtime="20201112 12:28:22.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.426" endtime="20201112 12:28:22.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.435" endtime="20201112 12:28:22.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:22.439" endtime="20201112 12:28:22.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.437" endtime="20201112 12:28:22.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.433" endtime="20201112 12:28:22.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:19.896" endtime="20201112 12:28:22.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.730" endtime="20201112 12:28:22.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.729" endtime="20201112 12:28:22.460"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:22.463" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:22.473" endtime="20201112 12:28:24.585"></status>
</kw>
<msg timestamp="20201112 12:28:24.586" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 144256609, 'wakeups': [144266646, 144276645, 144286645, 144296645, 144...</msg>
<status status="PASS" starttime="20201112 12:28:22.471" endtime="20201112 12:28:24.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 144256609, 'wakeups': [144266646, 144276645, 144286645, 144296645, 144...</msg>
<status status="PASS" starttime="20201112 12:28:24.588" endtime="20201112 12:28:24.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.595" endtime="20201112 12:28:24.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.467" endtime="20201112 12:28:24.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.465" endtime="20201112 12:28:24.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.607" level="INFO">${RESULT} = {'wakeups': [144266646, 144276645, 144286645, 144296645, 144306645, 144316645, 144326645, 144336645, 144346645, 144356645, 144366645, 144376645, 144386645, 144396645, 144406645, 144416645, 144426645, ...</msg>
<status status="PASS" starttime="20201112 12:28:24.602" endtime="20201112 12:28:24.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.616" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:24.614" endtime="20201112 12:28:24.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.621" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:24.619" endtime="20201112 12:28:24.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.609" endtime="20201112 12:28:24.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.632" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:24.629" endtime="20201112 12:28:24.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.636" level="INFO">VALUE: 144256609</msg>
<status status="PASS" starttime="20201112 12:28:24.634" endtime="20201112 12:28:24.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.624" endtime="20201112 12:28:24.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.647" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:24.645" endtime="20201112 12:28:24.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.649" level="INFO">VALUE: [144266646, 144276645, 144286645, 144296645, 144306645, 144316645, 144326645, 144336645, 144346645, 144356645, 144366645, 144376645, 144386645, 144396645, 144406645, 144416645, 144426645, 144436645, 144446645, 144456645, 144466645, 144476645, 144486645, 144496645, 144506645, 144516645, 144526645, 144536645, 144546645, 144556645, 144566645, 144576645, 144586645, 144596645, 144606645, 144616645, 144626645, 144636645, 144646645, 144656645, 144666645, 144676645, 144686645, 144696645, 144706645, 144716645, 144726645, 144736645, 144746645, 144756645, 144766645, 144776645, 144786645, 144796645, 144806645, 144816645, 144826645, 144836645, 144846645, 144856645, 144866645, 144876645, 144886645, 144896645, 144906645, 144916645, 144926645, 144936645, 144946645, 144956645, 144966645, 144976645, 144986645, 144996645, 145006645, 145016645, 145026645, 145036645, 145046645, 145056645, 145066645, 145076645, 145086645, 145096645, 145106645, 145116645, 145126645, 145136645, 145146645, 145156645, 145166645, 145176645, 145186645, 145196645, 145206645, 145216645, 145226645, 145236645, 145246645, 145256645]</msg>
<status status="PASS" starttime="20201112 12:28:24.648" endtime="20201112 12:28:24.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.639" endtime="20201112 12:28:24.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.657" endtime="20201112 12:28:24.949"></status>
</kw>
<msg timestamp="20201112 12:28:24.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.655" endtime="20201112 12:28:24.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024231806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034269542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:24.953" endtime="20201112 12:28:24.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:24.960" endtime="20201112 12:28:24.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.652" endtime="20201112 12:28:24.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.651" endtime="20201112 12:28:24.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:24.988" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:24.964" endtime="20201112 12:28:24.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.993" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:24.992" endtime="20201112 12:28:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:24.995" level="INFO">VALUE: 0.024231806</msg>
<status status="PASS" starttime="20201112 12:28:24.994" endtime="20201112 12:28:24.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.989" endtime="20201112 12:28:24.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.001" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:24.999" endtime="20201112 12:28:25.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.003" level="INFO">VALUE: [0.034269542, 0.044269236, 0.054269764, 0.064270708, 0.074271222, 0.084272194, 0.094272708, 0.104273639, 0.114274181, 0.124275125, 0.134275639, 0.144276583, 0.154277111, 0.164278083, 0.174278597, 0.184279542, 0.194280083, 0.204281, 0.214281528, 0.224282472, 0.234283014, 0.244283944, 0.254284472, 0.264285417, 0.274285944, 0.284286889, 0.294287431, 0.304288361, 0.314288903, 0.324289833, 0.334290375, 0.344291306, 0.354291861, 0.364292792, 0.374293306, 0.384294333, 0.394294792, 0.404295722, 0.414296264, 0.424297208, 0.434297722, 0.444298681, 0.454299208, 0.464300153, 0.474300667, 0.484301625, 0.494302139, 0.504303139, 0.514303611, 0.524304583, 0.534305083, 0.544306028, 0.554306542, 0.5643075, 0.574308, 0.584308944, 0.594309472, 0.604310417, 0.614310972, 0.624311875, 0.634312458, 0.644313347, 0.654313861, 0.664314792, 0.674315306, 0.684316264, 0.694316764, 0.704317722, 0.714318222, 0.724319222, 0.734319681, 0.744320639, 0.754321139, 0.764322083, 0.774322611, 0.784323569, 0.794324069, 0.804325014, 0.814325528, 0.824326472, 0.834326986, 0.844328, 0.854328444, 0.864329389, 0.874329944, 0.884330861, 0.894331389, 0.904332333, 0.914332833, 0.924333778, 0.934334306, 0.94433525, 0.954335764, 0.964336708, 0.974337222, 0.984338167, 0.994338694, 1.004339639, 1.014340153, 1.024341097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:25.002" endtime="20201112 12:28:25.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:24.996" endtime="20201112 12:28:25.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.007" endtime="20201112 12:28:25.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.010" endtime="20201112 12:28:25.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.009" endtime="20201112 12:28:25.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.005" endtime="20201112 12:28:25.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.463" endtime="20201112 12:28:25.031"></status>
</kw>
<msg timestamp="20201112 12:28:25.031" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.039" endtime="20201112 12:28:27.151"></status>
</kw>
<msg timestamp="20201112 12:28:27.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 146823216, 'wakeups': [146833253, 146843252, 146853252, 146863252, 146...</msg>
<status status="PASS" starttime="20201112 12:28:25.038" endtime="20201112 12:28:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.159" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 146823216, 'wakeups': [146833253, 146843252, 146853252, 146863252, 146...</msg>
<status status="PASS" starttime="20201112 12:28:27.155" endtime="20201112 12:28:27.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.161" endtime="20201112 12:28:27.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.035" endtime="20201112 12:28:27.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.033" endtime="20201112 12:28:27.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.173" level="INFO">${RESULT} = {'wakeups': [146833253, 146843252, 146853252, 146863252, 146873252, 146883252, 146893252, 146903252, 146913252, 146923252, 146933252, 146943252, 146953252, 146963252, 146973252, 146983252, 146993252, ...</msg>
<status status="PASS" starttime="20201112 12:28:27.168" endtime="20201112 12:28:27.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.184" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:27.181" endtime="20201112 12:28:27.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.190" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:27.187" endtime="20201112 12:28:27.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.175" endtime="20201112 12:28:27.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.203" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:27.201" endtime="20201112 12:28:27.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.210" level="INFO">VALUE: 146823216</msg>
<status status="PASS" starttime="20201112 12:28:27.208" endtime="20201112 12:28:27.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.194" endtime="20201112 12:28:27.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.222" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:27.219" endtime="20201112 12:28:27.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.227" level="INFO">VALUE: [146833253, 146843252, 146853252, 146863252, 146873252, 146883252, 146893252, 146903252, 146913252, 146923252, 146933252, 146943252, 146953252, 146963252, 146973252, 146983252, 146993252, 147003252, 147013252, 147023252, 147033252, 147043252, 147053252, 147063252, 147073252, 147083252, 147093252, 147103252, 147113252, 147123252, 147133252, 147143252, 147153252, 147163252, 147173252, 147183252, 147193252, 147203252, 147213252, 147223252, 147233252, 147243252, 147253252, 147263252, 147273252, 147283252, 147293252, 147303252, 147313252, 147323252, 147333252, 147343252, 147353252, 147363252, 147373252, 147383252, 147393252, 147403252, 147413252, 147423252, 147433252, 147443252, 147453252, 147463252, 147473252, 147483252, 147493252, 147503252, 147513252, 147523252, 147533252, 147543252, 147553252, 147563252, 147573252, 147583252, 147593252, 147603252, 147613252, 147623252, 147633252, 147643252, 147653252, 147663252, 147673252, 147683252, 147693252, 147703252, 147713252, 147723252, 147733252, 147743252, 147753252, 147763252, 147773252, 147783252, 147793252, 147803252, 147813252, 147823252]</msg>
<status status="PASS" starttime="20201112 12:28:27.224" endtime="20201112 12:28:27.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.213" endtime="20201112 12:28:27.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.243" endtime="20201112 12:28:27.545"></status>
</kw>
<msg timestamp="20201112 12:28:27.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029698653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.240" endtime="20201112 12:28:27.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029698653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.549" endtime="20201112 12:28:27.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.556" endtime="20201112 12:28:27.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.234" endtime="20201112 12:28:27.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.230" endtime="20201112 12:28:27.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.584" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:27.560" endtime="20201112 12:28:27.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.588" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:27.587" endtime="20201112 12:28:27.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.590" level="INFO">VALUE: 0.019661236</msg>
<status status="PASS" starttime="20201112 12:28:27.589" endtime="20201112 12:28:27.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.585" endtime="20201112 12:28:27.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.596" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:27.595" endtime="20201112 12:28:27.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.599" level="INFO">VALUE: [0.029698653, 0.039698333, 0.049698861, 0.059699819, 0.069700333, 0.079701278, 0.089701819, 0.09970275, 0.109703278, 0.119704222, 0.12970475, 0.139705694, 0.149706236, 0.159707181, 0.169707694, 0.179708639, 0.189709167, 0.199710125, 0.209710639, 0.219711597, 0.229712167, 0.239713056, 0.249713597, 0.259714528, 0.269715056, 0.279716, 0.289716528, 0.299717472, 0.309718056, 0.319718986, 0.329719472, 0.339720417, 0.349720944, 0.359721889, 0.369722431, 0.379723375, 0.389723875, 0.399724833, 0.409725333, 0.419726278, 0.429726806, 0.439727764, 0.44972825, 0.459729194, 0.469729708, 0.479730667, 0.489731167, 0.499732125, 0.509732639, 0.519733569, 0.529734097, 0.539735069, 0.549735542, 0.5597365, 0.569737014, 0.579737944, 0.589738458, 0.599739403, 0.609739931, 0.619740861, 0.629741403, 0.639742319, 0.649742847, 0.659743792, 0.669744306, 0.67974525, 0.689745764, 0.699746708, 0.709747236, 0.719748167, 0.729748681, 0.739749625, 0.749750139, 0.759751097, 0.769751611, 0.779752556, 0.789753069, 0.799754014, 0.809754528, 0.819755472, 0.829755986, 0.839756931, 0.849757514, 0.859758431, 0.869758944, 0.879759861, 0.889760375, 0.899761333, 0.909761833, 0.919762806, 0.929763319, 0.939764236, 0.949764778, 0.959765722, 0.969766264, 0.979767167, 0.989767681, 0.999768625, 1.009769153, 1.019770111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:27.598" endtime="20201112 12:28:27.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.592" endtime="20201112 12:28:27.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.602" endtime="20201112 12:28:27.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:27.610" endtime="20201112 12:28:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.609" endtime="20201112 12:28:27.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.600" endtime="20201112 12:28:27.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.032" endtime="20201112 12:28:27.631"></status>
</kw>
<msg timestamp="20201112 12:28:27.631" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.640" endtime="20201112 12:28:29.751"></status>
</kw>
<msg timestamp="20201112 12:28:29.753" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149423563, 'wakeups': [149433600, 149443599, 149453599, 149463599, 149...</msg>
<status status="PASS" starttime="20201112 12:28:27.638" endtime="20201112 12:28:29.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.759" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149423563, 'wakeups': [149433600, 149443599, 149453599, 149463599, 149...</msg>
<status status="PASS" starttime="20201112 12:28:29.755" endtime="20201112 12:28:29.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.762" endtime="20201112 12:28:29.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.636" endtime="20201112 12:28:29.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.633" endtime="20201112 12:28:29.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:29.773" level="INFO">${RESULT} = {'wakeups': [149433600, 149443599, 149453599, 149463599, 149473599, 149483599, 149493599, 149503599, 149513599, 149523599, 149533599, 149543599, 149553599, 149563599, 149573599, 149583599, 149593599, ...</msg>
<status status="PASS" starttime="20201112 12:28:29.769" endtime="20201112 12:28:29.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.782" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:29.780" endtime="20201112 12:28:29.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.787" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:29.785" endtime="20201112 12:28:29.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.775" endtime="20201112 12:28:29.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.798" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:29.795" endtime="20201112 12:28:29.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.802" level="INFO">VALUE: 149423563</msg>
<status status="PASS" starttime="20201112 12:28:29.800" endtime="20201112 12:28:29.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.790" endtime="20201112 12:28:29.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.813" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:29.811" endtime="20201112 12:28:29.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:29.818" level="INFO">VALUE: [149433600, 149443599, 149453599, 149463599, 149473599, 149483599, 149493599, 149503599, 149513599, 149523599, 149533599, 149543599, 149553599, 149563599, 149573599, 149583599, 149593599, 149603599, 149613599, 149623599, 149633599, 149643599, 149653599, 149663599, 149673599, 149683599, 149693599, 149703599, 149713599, 149723599, 149733599, 149743599, 149753599, 149763599, 149773599, 149783599, 149793599, 149803599, 149813599, 149823599, 149833599, 149843599, 149853599, 149863599, 149873599, 149883599, 149893599, 149903599, 149913599, 149923599, 149933599, 149943599, 149953599, 149963599, 149973599, 149983599, 149993599, 150003599, 150013599, 150023599, 150033599, 150043599, 150053599, 150063599, 150073599, 150083599, 150093599, 150103599, 150113599, 150123599, 150133599, 150143599, 150153599, 150163599, 150173599, 150183599, 150193599, 150203599, 150213599, 150223599, 150233599, 150243599, 150253599, 150263599, 150273599, 150283599, 150293599, 150303599, 150313599, 150323599, 150333599, 150343599, 150353599, 150363599, 150373599, 150383599, 150393599, 150403599, 150413599, 150423599]</msg>
<status status="PASS" starttime="20201112 12:28:29.816" endtime="20201112 12:28:29.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.805" endtime="20201112 12:28:29.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:29.835" endtime="20201112 12:28:30.129"></status>
</kw>
<msg timestamp="20201112 12:28:30.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029693208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:29.831" endtime="20201112 12:28:30.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029693208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.133" endtime="20201112 12:28:30.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.141" endtime="20201112 12:28:30.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.825" endtime="20201112 12:28:30.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:29.821" endtime="20201112 12:28:30.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.168" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:30.144" endtime="20201112 12:28:30.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.172" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.171" endtime="20201112 12:28:30.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.175" level="INFO">VALUE: 0.019655444</msg>
<status status="PASS" starttime="20201112 12:28:30.174" endtime="20201112 12:28:30.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.169" endtime="20201112 12:28:30.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.180" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.179" endtime="20201112 12:28:30.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.182" level="INFO">VALUE: [0.029693208, 0.039692931, 0.049693417, 0.059694347, 0.069694861, 0.079695819, 0.089696361, 0.099697278, 0.109697819, 0.119698792, 0.129699278, 0.139700236, 0.149700764, 0.159701694, 0.169702222, 0.179703181, 0.189703708, 0.199704639, 0.209705153, 0.219706125, 0.229706625, 0.239707583, 0.249708097, 0.259709056, 0.269709569, 0.279710528, 0.289711056, 0.299712, 0.309712514, 0.319713458, 0.329713986, 0.339714931, 0.349715528, 0.359716403, 0.369716944, 0.379717875, 0.389718403, 0.399719361, 0.409719875, 0.419720819, 0.429721347, 0.439722292, 0.449722819, 0.459723764, 0.469724306, 0.47972525, 0.489725792, 0.499726764, 0.509727236, 0.519728181, 0.529728708, 0.539729722, 0.549730264, 0.559731139, 0.569731667, 0.579732653, 0.589733153, 0.599734083, 0.609734681, 0.619735583, 0.629736097, 0.639737042, 0.649737583, 0.659738514, 0.669739042, 0.679740014, 0.689740542, 0.699741458, 0.709741972, 0.719742931, 0.729743444, 0.739744389, 0.749744903, 0.759745903, 0.769746361, 0.779747319, 0.789747819, 0.799748778, 0.809749319, 0.819750236, 0.829750764, 0.839751764, 0.849752222, 0.859753222, 0.869753681, 0.879754625, 0.889755153, 0.899756083, 0.909756597, 0.919757583, 0.929758083, 0.939759014, 0.949759542, 0.959760486, 0.969761, 0.979761972, 0.989762458, 0.999763417, 1.009763944, 1.019764931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:30.181" endtime="20201112 12:28:30.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.176" endtime="20201112 12:28:30.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.186" endtime="20201112 12:28:30.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.189" endtime="20201112 12:28:30.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.188" endtime="20201112 12:28:30.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.184" endtime="20201112 12:28:30.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.632" endtime="20201112 12:28:30.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.461" endtime="20201112 12:28:30.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:22.460" endtime="20201112 12:28:30.211"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:30.213" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.223" endtime="20201112 12:28:32.335"></status>
</kw>
<msg timestamp="20201112 12:28:32.337" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 152006542, 'wakeups': [152016585, 152026585, 152036585, 152046585, 152...</msg>
<status status="PASS" starttime="20201112 12:28:30.221" endtime="20201112 12:28:32.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 152006542, 'wakeups': [152016585, 152026585, 152036585, 152046585, 152...</msg>
<status status="PASS" starttime="20201112 12:28:32.340" endtime="20201112 12:28:32.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.346" endtime="20201112 12:28:32.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.218" endtime="20201112 12:28:32.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.216" endtime="20201112 12:28:32.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:32.358" level="INFO">${RESULT} = {'wakeups': [152016585, 152026585, 152036585, 152046585, 152056585, 152066585, 152076585, 152086585, 152096585, 152106585, 152116585, 152126585, 152136585, 152146585, 152156585, 152166585, 152176585, ...</msg>
<status status="PASS" starttime="20201112 12:28:32.353" endtime="20201112 12:28:32.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.367" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:32.364" endtime="20201112 12:28:32.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.371" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:32.369" endtime="20201112 12:28:32.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.359" endtime="20201112 12:28:32.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.382" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:32.380" endtime="20201112 12:28:32.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.387" level="INFO">VALUE: 152006542</msg>
<status status="PASS" starttime="20201112 12:28:32.384" endtime="20201112 12:28:32.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.375" endtime="20201112 12:28:32.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.396" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:32.395" endtime="20201112 12:28:32.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.398" level="INFO">VALUE: [152016585, 152026585, 152036585, 152046585, 152056585, 152066585, 152076585, 152086585, 152096585, 152106585, 152116585, 152126585, 152136585, 152146585, 152156585, 152166585, 152176585, 152186585, 152196585, 152206585, 152216585, 152226585, 152236585, 152246585, 152256585, 152266585, 152276585, 152286585, 152296585, 152306585, 152316585, 152326585, 152336585, 152346585, 152356585, 152366585, 152376585, 152386585, 152396585, 152406585, 152416585, 152426585, 152436585, 152446585, 152456585, 152466585, 152476585, 152486585, 152496585, 152506585, 152516585, 152526585, 152536585, 152546585, 152556585, 152566585, 152576585, 152586585, 152596585, 152606585, 152616585, 152626585, 152636585, 152646585, 152656585, 152666585, 152676585, 152686585, 152696585, 152706585, 152716585, 152726585, 152736585, 152746585, 152756585, 152766585, 152776585, 152786585, 152796585, 152806585, 152816585, 152826585, 152836585, 152846585, 152856585, 152866585, 152876585, 152886585, 152896585, 152906585, 152916585, 152926585, 152936585, 152946585, 152956585, 152966585, 152976585, 152986585, 152996585, 153006585]</msg>
<status status="PASS" starttime="20201112 12:28:32.397" endtime="20201112 12:28:32.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.390" endtime="20201112 12:28:32.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.406" endtime="20201112 12:28:32.697"></status>
</kw>
<msg timestamp="20201112 12:28:32.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023736083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.404" endtime="20201112 12:28:32.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023736083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033780653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:32.701" endtime="20201112 12:28:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.709" endtime="20201112 12:28:32.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.402" endtime="20201112 12:28:32.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.400" endtime="20201112 12:28:32.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:32.742" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:32.718" endtime="20201112 12:28:32.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.746" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:32.745" endtime="20201112 12:28:32.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.749" level="INFO">VALUE: 0.023736083</msg>
<status status="PASS" starttime="20201112 12:28:32.748" endtime="20201112 12:28:32.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.743" endtime="20201112 12:28:32.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.754" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:32.753" endtime="20201112 12:28:32.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:32.756" level="INFO">VALUE: [0.033780653, 0.043781014, 0.053781528, 0.063782486, 0.073782986, 0.083783986, 0.0937845, 0.103785403, 0.113785944, 0.123786903, 0.133787431, 0.143788361, 0.153788931, 0.163789833, 0.173790361, 0.183791292, 0.193791833, 0.203792847, 0.213793389, 0.223794236, 0.233794778, 0.24379575, 0.25379625, 0.263797194, 0.27379775, 0.283798681, 0.293799208, 0.303800139, 0.313800681, 0.323801639, 0.333802181, 0.343803083, 0.353803625, 0.363804597, 0.373805111, 0.383806042, 0.393806625, 0.403807597, 0.413808056, 0.423808986, 0.433809542, 0.443810472, 0.453811014, 0.463811944, 0.473812472, 0.483813403, 0.493813917, 0.503814861, 0.513815403, 0.523816319, 0.533816847, 0.543817806, 0.553818306, 0.563819264, 0.573819778, 0.583820708, 0.593821236, 0.603822194, 0.613822694, 0.623823639, 0.633824153, 0.643825111, 0.653825625, 0.663826556, 0.673827083, 0.683828028, 0.693828597, 0.703829472, 0.713830028, 0.723830972, 0.7338315, 0.743832444, 0.753832944, 0.763833917, 0.773834403, 0.783835333, 0.793835889, 0.803836833, 0.813837389, 0.823838264, 0.833838806, 0.843839778, 0.853840278, 0.863841194, 0.873841736, 0.883842681, 0.893843208, 0.903844125, 0.913844681, 0.923845625, 0.933846139, 0.943847056, 0.953847667, 0.963848542, 0.973849069, 0.98385, 0.993850528, 1.003851472, 1.013852, 1.023852944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:32.755" endtime="20201112 12:28:32.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.750" endtime="20201112 12:28:32.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.760" endtime="20201112 12:28:32.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:32.763" endtime="20201112 12:28:32.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.762" endtime="20201112 12:28:32.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.758" endtime="20201112 12:28:32.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.214" endtime="20201112 12:28:32.784"></status>
</kw>
<msg timestamp="20201112 12:28:32.784" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:32.792" endtime="20201112 12:28:34.904"></status>
</kw>
<msg timestamp="20201112 12:28:34.905" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154576026, 'wakeups': [154586070, 154596069, 154606069, 154616069, 154...</msg>
<status status="PASS" starttime="20201112 12:28:32.791" endtime="20201112 12:28:34.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154576026, 'wakeups': [154586070, 154596069, 154606069, 154616069, 154...</msg>
<status status="PASS" starttime="20201112 12:28:34.908" endtime="20201112 12:28:34.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.914" endtime="20201112 12:28:34.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.788" endtime="20201112 12:28:34.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.786" endtime="20201112 12:28:34.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:34.926" level="INFO">${RESULT} = {'wakeups': [154586070, 154596069, 154606069, 154616069, 154626069, 154636069, 154646069, 154656069, 154666069, 154676069, 154686069, 154696069, 154706069, 154716069, 154726069, 154736069, 154746069, ...</msg>
<status status="PASS" starttime="20201112 12:28:34.921" endtime="20201112 12:28:34.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.936" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:34.934" endtime="20201112 12:28:34.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.940" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:34.938" endtime="20201112 12:28:34.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.927" endtime="20201112 12:28:34.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.953" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:34.951" endtime="20201112 12:28:34.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.957" level="INFO">VALUE: 154576026</msg>
<status status="PASS" starttime="20201112 12:28:34.956" endtime="20201112 12:28:34.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.944" endtime="20201112 12:28:34.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.962" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:34.961" endtime="20201112 12:28:34.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:34.965" level="INFO">VALUE: [154586070, 154596069, 154606069, 154616069, 154626069, 154636069, 154646069, 154656069, 154666069, 154676069, 154686069, 154696069, 154706069, 154716069, 154726069, 154736069, 154746069, 154756069, 154766069, 154776069, 154786069, 154796069, 154806069, 154816069, 154826069, 154836069, 154846069, 154856069, 154866069, 154876069, 154886069, 154896069, 154906069, 154916069, 154926069, 154936069, 154946069, 154956069, 154966069, 154976069, 154986069, 154996069, 155006069, 155016069, 155026069, 155036069, 155046069, 155056069, 155066069, 155076069, 155086069, 155096069, 155106069, 155116069, 155126069, 155136069, 155146069, 155156069, 155166069, 155176069, 155186069, 155196069, 155206069, 155216069, 155226069, 155236069, 155246069, 155256069, 155266069, 155276069, 155286069, 155296069, 155306069, 155316069, 155326069, 155336069, 155346069, 155356069, 155366069, 155376069, 155386069, 155396069, 155406069, 155416069, 155426069, 155436069, 155446069, 155456069, 155466069, 155476069, 155486069, 155496069, 155506069, 155516069, 155526069, 155536069, 155546069, 155556069, 155566069, 155576069]</msg>
<status status="PASS" starttime="20201112 12:28:34.964" endtime="20201112 12:28:34.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.959" endtime="20201112 12:28:34.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:34.972" endtime="20201112 12:28:35.263"></status>
</kw>
<msg timestamp="20201112 12:28:35.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029433083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:34.971" endtime="20201112 12:28:35.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029433083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.267" endtime="20201112 12:28:35.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.275" endtime="20201112 12:28:35.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.968" endtime="20201112 12:28:35.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:34.966" endtime="20201112 12:28:35.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.302" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:35.278" endtime="20201112 12:28:35.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.307" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.306" endtime="20201112 12:28:35.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.310" level="INFO">VALUE: 0.019388194</msg>
<status status="PASS" starttime="20201112 12:28:35.309" endtime="20201112 12:28:35.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.303" endtime="20201112 12:28:35.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.316" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.314" endtime="20201112 12:28:35.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.318" level="INFO">VALUE: [0.029433083, 0.039432403, 0.049432944, 0.059433875, 0.069434431, 0.079435361, 0.089435903, 0.099436819, 0.109437375, 0.119438306, 0.129438833, 0.139439764, 0.149440319, 0.159441292, 0.169441778, 0.179442764, 0.189443278, 0.199444208, 0.209444736, 0.21944575, 0.229446208, 0.239447167, 0.249447681, 0.259448667, 0.269449153, 0.279450111, 0.289450653, 0.299451556, 0.309452111, 0.319453069, 0.329453597, 0.339454528, 0.349455069, 0.359456, 0.369456542, 0.379457458, 0.389458014, 0.399459, 0.4094595, 0.419460417, 0.429460958, 0.439461889, 0.449462417, 0.459463361, 0.469463889, 0.479464861, 0.489465347, 0.499466278, 0.509466833, 0.519467764, 0.529468278, 0.539469208, 0.54946975, 0.559470694, 0.569471208, 0.579472139, 0.589472694, 0.599473708, 0.609474153, 0.619475069, 0.629475625, 0.639476556, 0.649477083, 0.659478028, 0.669478556, 0.6794795, 0.689480014, 0.699480958, 0.709481486, 0.719482431, 0.729482958, 0.739483903, 0.749484431, 0.759485375, 0.769485889, 0.779486861, 0.789487361, 0.799488319, 0.809488861, 0.819489778, 0.829490292, 0.83949125, 0.849491778, 0.85949275, 0.869493236, 0.879494181, 0.889494722, 0.899495681, 0.909496194, 0.919497153, 0.929497681, 0.939498583, 0.949499111, 0.959500069, 0.969500583, 0.979501514, 0.989502056, 0.999503, 1.009503514, 1.019504444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:35.317" endtime="20201112 12:28:35.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.311" endtime="20201112 12:28:35.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.321" endtime="20201112 12:28:35.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.325" endtime="20201112 12:28:35.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.323" endtime="20201112 12:28:35.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.320" endtime="20201112 12:28:35.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:32.785" endtime="20201112 12:28:35.346"></status>
</kw>
<msg timestamp="20201112 12:28:35.346" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.355" endtime="20201112 12:28:37.467"></status>
</kw>
<msg timestamp="20201112 12:28:37.468" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157138248, 'wakeups': [157148292, 157158291, 157168291, 157178291, 157...</msg>
<status status="PASS" starttime="20201112 12:28:35.353" endtime="20201112 12:28:37.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.474" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157138248, 'wakeups': [157148292, 157158291, 157168291, 157178291, 157...</msg>
<status status="PASS" starttime="20201112 12:28:37.470" endtime="20201112 12:28:37.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.477" endtime="20201112 12:28:37.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.350" endtime="20201112 12:28:37.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.348" endtime="20201112 12:28:37.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:37.488" level="INFO">${RESULT} = {'wakeups': [157148292, 157158291, 157168291, 157178291, 157188291, 157198291, 157208291, 157218291, 157228291, 157238291, 157248291, 157258291, 157268291, 157278291, 157288291, 157298291, 157308291, ...</msg>
<status status="PASS" starttime="20201112 12:28:37.484" endtime="20201112 12:28:37.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.497" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:37.495" endtime="20201112 12:28:37.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.502" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:37.500" endtime="20201112 12:28:37.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.490" endtime="20201112 12:28:37.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.513" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:37.510" endtime="20201112 12:28:37.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.517" level="INFO">VALUE: 157138248</msg>
<status status="PASS" starttime="20201112 12:28:37.515" endtime="20201112 12:28:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.505" endtime="20201112 12:28:37.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.528" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:37.526" endtime="20201112 12:28:37.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.534" level="INFO">VALUE: [157148292, 157158291, 157168291, 157178291, 157188291, 157198291, 157208291, 157218291, 157228291, 157238291, 157248291, 157258291, 157268291, 157278291, 157288291, 157298291, 157308291, 157318291, 157328291, 157338291, 157348291, 157358291, 157368291, 157378291, 157388291, 157398291, 157408291, 157418291, 157428291, 157438291, 157448291, 157458291, 157468291, 157478291, 157488291, 157498291, 157508291, 157518291, 157528291, 157538291, 157548291, 157558291, 157568291, 157578291, 157588291, 157598291, 157608291, 157618291, 157628291, 157638291, 157648291, 157658291, 157668291, 157678291, 157688291, 157698291, 157708291, 157718291, 157728291, 157738291, 157748291, 157758291, 157768291, 157778291, 157788291, 157798291, 157808291, 157818291, 157828291, 157838291, 157848291, 157858291, 157868291, 157878291, 157888291, 157898291, 157908291, 157918291, 157928291, 157938291, 157948291, 157958291, 157968291, 157978291, 157988291, 157998291, 158008291, 158018291, 158028291, 158038291, 158048291, 158058291, 158068291, 158078291, 158088291, 158098291, 158108291, 158118291, 158128291, 158138291]</msg>
<status status="PASS" starttime="20201112 12:28:37.531" endtime="20201112 12:28:37.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.521" endtime="20201112 12:28:37.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.552" endtime="20201112 12:28:37.854"></status>
</kw>
<msg timestamp="20201112 12:28:37.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029694167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.549" endtime="20201112 12:28:37.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019649222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029694167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:37.858" endtime="20201112 12:28:37.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.865" endtime="20201112 12:28:37.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.541" endtime="20201112 12:28:37.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.537" endtime="20201112 12:28:37.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:37.892" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:37.869" endtime="20201112 12:28:37.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.897" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:28:37.896" endtime="20201112 12:28:37.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.899" level="INFO">VALUE: 0.019649222</msg>
<status status="PASS" starttime="20201112 12:28:37.898" endtime="20201112 12:28:37.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.893" endtime="20201112 12:28:37.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.905" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:37.904" endtime="20201112 12:28:37.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:37.907" level="INFO">VALUE: [0.029694167, 0.039693472, 0.049694028, 0.059694944, 0.069695486, 0.079696431, 0.089696958, 0.099697889, 0.109698431, 0.119699431, 0.129699903, 0.139700833, 0.149701375, 0.159702375, 0.169702861, 0.179703778, 0.189704319, 0.199705278, 0.209705806, 0.219706792, 0.229707278, 0.239708236, 0.24970875, 0.259709681, 0.269710222, 0.279711167, 0.289711694, 0.299712625, 0.309713167, 0.319714111, 0.329714639, 0.339715583, 0.349716111, 0.359717069, 0.369717597, 0.379718528, 0.389719097, 0.399720042, 0.409720542, 0.4197215, 0.429722014, 0.439722986, 0.4497235, 0.459724472, 0.469724972, 0.479725931, 0.489726444, 0.499727375, 0.509727931, 0.519728875, 0.529729403, 0.539730389, 0.549730875, 0.559731847, 0.569732347, 0.579733278, 0.589733861, 0.599734778, 0.609735306, 0.619736236, 0.629736806, 0.639737722, 0.64973825, 0.659739181, 0.669739736, 0.679740681, 0.689741208, 0.699742139, 0.709742681, 0.719743639, 0.729744139, 0.739745069, 0.749745625, 0.759746542, 0.769747069, 0.779747986, 0.789748542, 0.799749472, 0.809750014, 0.819750944, 0.829751444, 0.839752389, 0.849752917, 0.859753833, 0.869754375, 0.879755319, 0.889755833, 0.899756764, 0.909757389, 0.919758319, 0.929758764, 0.939759694, 0.949760236, 0.959761181, 0.96976175, 0.979762653, 0.989763167, 0.999764111, 1.009764625, 1.019765569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:37.906" endtime="20201112 12:28:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.901" endtime="20201112 12:28:37.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.910" endtime="20201112 12:28:37.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:37.914" endtime="20201112 12:28:37.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.912" endtime="20201112 12:28:37.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.909" endtime="20201112 12:28:37.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.347" endtime="20201112 12:28:37.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.212" endtime="20201112 12:28:37.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.211" endtime="20201112 12:28:37.940"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:37.942" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:37.952" endtime="20201112 12:28:40.063"></status>
</kw>
<msg timestamp="20201112 12:28:40.065" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159735484, 'wakeups': [159745535, 159755535, 159765535, 159775535, 159...</msg>
<status status="PASS" starttime="20201112 12:28:37.950" endtime="20201112 12:28:40.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.071" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 159735484, 'wakeups': [159745535, 159755535, 159765535, 159775535, 159...</msg>
<status status="PASS" starttime="20201112 12:28:40.067" endtime="20201112 12:28:40.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.073" endtime="20201112 12:28:40.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.947" endtime="20201112 12:28:40.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.945" endtime="20201112 12:28:40.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.085" level="INFO">${RESULT} = {'wakeups': [159745535, 159755535, 159765535, 159775535, 159785535, 159795535, 159805535, 159815535, 159825535, 159835535, 159845535, 159855535, 159865535, 159875535, 159885535, 159895535, 159905535, ...</msg>
<status status="PASS" starttime="20201112 12:28:40.081" endtime="20201112 12:28:40.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.094" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:40.092" endtime="20201112 12:28:40.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.099" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:40.097" endtime="20201112 12:28:40.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.087" endtime="20201112 12:28:40.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.110" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:40.107" endtime="20201112 12:28:40.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.114" level="INFO">VALUE: 159735484</msg>
<status status="PASS" starttime="20201112 12:28:40.112" endtime="20201112 12:28:40.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.102" endtime="20201112 12:28:40.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.125" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:40.123" endtime="20201112 12:28:40.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.130" level="INFO">VALUE: [159745535, 159755535, 159765535, 159775535, 159785535, 159795535, 159805535, 159815535, 159825535, 159835535, 159845535, 159855535, 159865535, 159875535, 159885535, 159895535, 159905535, 159915535, 159925535, 159935535, 159945535, 159955535, 159965535, 159975535, 159985535, 159995535, 160005535, 160015535, 160025535, 160035535, 160045535, 160055535, 160065535, 160075535, 160085535, 160095535, 160105535, 160115535, 160125535, 160135535, 160145535, 160155535, 160165535, 160175535, 160185535, 160195535, 160205535, 160215535, 160225535, 160235535, 160245535, 160255535, 160265535, 160275535, 160285535, 160295535, 160305535, 160315535, 160325535, 160335535, 160345535, 160355535, 160365535, 160375535, 160385535, 160395535, 160405535, 160415535, 160425535, 160435535, 160445535, 160455535, 160465535, 160475535, 160485535, 160495535, 160505535, 160515535, 160525535, 160535535, 160545535, 160555535, 160565535, 160575535, 160585535, 160595535, 160605535, 160615535, 160625535, 160635535, 160645535, 160655535, 160665535, 160675535, 160685535, 160695535, 160705535, 160715535, 160725535, 160735535]</msg>
<status status="PASS" starttime="20201112 12:28:40.127" endtime="20201112 12:28:40.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.117" endtime="20201112 12:28:40.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.147" endtime="20201112 12:28:40.441"></status>
</kw>
<msg timestamp="20201112 12:28:40.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038181764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.144" endtime="20201112 12:28:40.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038181764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.445" endtime="20201112 12:28:40.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.453" endtime="20201112 12:28:40.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.137" endtime="20201112 12:28:40.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.133" endtime="20201112 12:28:40.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.481" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:40.456" endtime="20201112 12:28:40.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.486" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:40.485" endtime="20201112 12:28:40.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.488" level="INFO">VALUE: 0.028129764</msg>
<status status="PASS" starttime="20201112 12:28:40.487" endtime="20201112 12:28:40.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.482" endtime="20201112 12:28:40.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.494" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:40.492" endtime="20201112 12:28:40.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.496" level="INFO">VALUE: [0.038181764, 0.048183, 0.058183514, 0.068184472, 0.078185014, 0.088185958, 0.098186472, 0.108187403, 0.118187944, 0.128188889, 0.138189431, 0.148190389, 0.158190889, 0.168191833, 0.178192361, 0.188193319, 0.198193819, 0.208194792, 0.218195306, 0.22819625, 0.238196778, 0.248197736, 0.25819825, 0.268199194, 0.278199722, 0.288200681, 0.298201194, 0.308202153, 0.318202681, 0.328203639, 0.338204153, 0.348205097, 0.358205625, 0.368206556, 0.378207083, 0.388208028, 0.398208542, 0.408209486, 0.418210028, 0.428210944, 0.438211458, 0.448212403, 0.458212931, 0.468213875, 0.478214403, 0.488215403, 0.498215847, 0.508216806, 0.518217306, 0.528218292, 0.538218778, 0.548219736, 0.558220264, 0.568221181, 0.578221708, 0.588222639, 0.598223181, 0.608224111, 0.618224625, 0.628225583, 0.638226083, 0.648227028, 0.658227556, 0.6682285, 0.678229014, 0.688229958, 0.6982305, 0.708231431, 0.718231944, 0.728232889, 0.738233403, 0.748234361, 0.758234875, 0.768235819, 0.778236347, 0.788237278, 0.798237806, 0.80823875, 0.818239264, 0.828240208, 0.838240722, 0.848241694, 0.858242208, 0.868243139, 0.878243653, 0.888244667, 0.898245125, 0.908246083, 0.918246583, 0.928247528, 0.938248056, 0.948249, 0.958249514, 0.968250472, 0.978250986, 0.988251944, 0.998252458, 1.008253389, 1.018253931, 1.028254875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:40.495" endtime="20201112 12:28:40.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.489" endtime="20201112 12:28:40.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.499" endtime="20201112 12:28:40.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:40.503" endtime="20201112 12:28:40.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.501" endtime="20201112 12:28:40.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.497" endtime="20201112 12:28:40.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.943" endtime="20201112 12:28:40.523"></status>
</kw>
<msg timestamp="20201112 12:28:40.524" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.532" endtime="20201112 12:28:42.643"></status>
</kw>
<msg timestamp="20201112 12:28:42.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162315706, 'wakeups': [162325758, 162335757, 162345757, 162355757, 162...</msg>
<status status="PASS" starttime="20201112 12:28:40.530" endtime="20201112 12:28:42.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.652" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162315706, 'wakeups': [162325758, 162335757, 162345757, 162355757, 162...</msg>
<status status="PASS" starttime="20201112 12:28:42.648" endtime="20201112 12:28:42.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.654" endtime="20201112 12:28:42.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.528" endtime="20201112 12:28:42.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.526" endtime="20201112 12:28:42.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:42.666" level="INFO">${RESULT} = {'wakeups': [162325758, 162335757, 162345757, 162355757, 162365757, 162375757, 162385757, 162395757, 162405757, 162415757, 162425757, 162435757, 162445757, 162455757, 162465757, 162475757, 162485757, ...</msg>
<status status="PASS" starttime="20201112 12:28:42.662" endtime="20201112 12:28:42.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.677" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:42.675" endtime="20201112 12:28:42.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.682" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:42.679" endtime="20201112 12:28:42.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.668" endtime="20201112 12:28:42.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.692" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:42.690" endtime="20201112 12:28:42.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.698" level="INFO">VALUE: 162315706</msg>
<status status="PASS" starttime="20201112 12:28:42.695" endtime="20201112 12:28:42.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.685" endtime="20201112 12:28:42.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.708" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:42.706" endtime="20201112 12:28:42.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:42.713" level="INFO">VALUE: [162325758, 162335757, 162345757, 162355757, 162365757, 162375757, 162385757, 162395757, 162405757, 162415757, 162425757, 162435757, 162445757, 162455757, 162465757, 162475757, 162485757, 162495757, 162505757, 162515757, 162525757, 162535757, 162545757, 162555757, 162565757, 162575757, 162585757, 162595757, 162605757, 162615757, 162625757, 162635757, 162645757, 162655757, 162665757, 162675757, 162685757, 162695757, 162705757, 162715757, 162725757, 162735757, 162745757, 162755757, 162765757, 162775757, 162785757, 162795757, 162805757, 162815757, 162825757, 162835757, 162845757, 162855757, 162865757, 162875757, 162885757, 162895757, 162905757, 162915757, 162925757, 162935757, 162945757, 162955757, 162965757, 162975757, 162985757, 162995757, 163005757, 163015757, 163025757, 163035757, 163045757, 163055757, 163065757, 163075757, 163085757, 163095757, 163105757, 163115757, 163125757, 163135757, 163145757, 163155757, 163165757, 163175757, 163185757, 163195757, 163205757, 163215757, 163225757, 163235757, 163245757, 163255757, 163265757, 163275757, 163285757, 163295757, 163305757, 163315757]</msg>
<status status="PASS" starttime="20201112 12:28:42.711" endtime="20201112 12:28:42.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.701" endtime="20201112 12:28:42.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:42.723" endtime="20201112 12:28:43.015"></status>
</kw>
<msg timestamp="20201112 12:28:43.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029679375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:42.721" endtime="20201112 12:28:43.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029679375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:43.018" endtime="20201112 12:28:43.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.026" endtime="20201112 12:28:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.718" endtime="20201112 12:28:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:42.717" endtime="20201112 12:28:43.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.054" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:43.030" endtime="20201112 12:28:43.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.062" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.061" endtime="20201112 12:28:43.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.065" level="INFO">VALUE: 0.019627028</msg>
<status status="PASS" starttime="20201112 12:28:43.063" endtime="20201112 12:28:43.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.059" endtime="20201112 12:28:43.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.070" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.069" endtime="20201112 12:28:43.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.072" level="INFO">VALUE: [0.029679375, 0.039679611, 0.049680125, 0.059681069, 0.069681625, 0.079682542, 0.089683083, 0.099684097, 0.109684583, 0.119685486, 0.129686014, 0.139686972, 0.1496875, 0.159688431, 0.169688958, 0.179689917, 0.189690431, 0.199691389, 0.209691917, 0.219692875, 0.229693375, 0.239694361, 0.249694875, 0.259695833, 0.269696333, 0.279697292, 0.289697806, 0.29969875, 0.309699347, 0.319700222, 0.32970075, 0.339701708, 0.349702222, 0.359703194, 0.369703708, 0.379704653, 0.389705181, 0.399706139, 0.409706653, 0.419707611, 0.429708125, 0.439709069, 0.449709583, 0.459710528, 0.469711042, 0.479712, 0.489712514, 0.499713444, 0.509713958, 0.519714903, 0.529715431, 0.539716375, 0.549716903, 0.559717833, 0.569718347, 0.579719292, 0.589719819, 0.599720806, 0.609721278, 0.619722222, 0.629722778, 0.639723694, 0.649724222, 0.659725167, 0.669725681, 0.679726625, 0.689727139, 0.699728097, 0.709728611, 0.719729556, 0.729730069, 0.739731014, 0.749731611, 0.7597325, 0.769733, 0.779733958, 0.789734458, 0.799735417, 0.809735931, 0.819736875, 0.829737389, 0.839738347, 0.849738875, 0.859739806, 0.869740347, 0.879741278, 0.889741806, 0.899742792, 0.909743264, 0.919744208, 0.92974475, 0.939745694, 0.949746194, 0.959747139, 0.969747667, 0.979748625, 0.989749125, 0.999750083, 1.009750583, 1.019751542] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:43.071" endtime="20201112 12:28:43.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.066" endtime="20201112 12:28:43.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.076" endtime="20201112 12:28:43.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.079" endtime="20201112 12:28:43.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.078" endtime="20201112 12:28:43.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.074" endtime="20201112 12:28:43.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.524" endtime="20201112 12:28:43.100"></status>
</kw>
<msg timestamp="20201112 12:28:43.100" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.109" endtime="20201112 12:28:45.220"></status>
</kw>
<msg timestamp="20201112 12:28:45.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 164892185, 'wakeups': [164902237, 164912236, 164922236, 164932236, 164...</msg>
<status status="PASS" starttime="20201112 12:28:43.107" endtime="20201112 12:28:45.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 164892185, 'wakeups': [164902237, 164912236, 164922236, 164932236, 164...</msg>
<status status="PASS" starttime="20201112 12:28:45.224" endtime="20201112 12:28:45.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.230" endtime="20201112 12:28:45.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.104" endtime="20201112 12:28:45.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.102" endtime="20201112 12:28:45.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.242" level="INFO">${RESULT} = {'wakeups': [164902237, 164912236, 164922236, 164932236, 164942236, 164952236, 164962236, 164972236, 164982236, 164992236, 165002236, 165012236, 165022236, 165032236, 165042236, 165052236, 165062236, ...</msg>
<status status="PASS" starttime="20201112 12:28:45.237" endtime="20201112 12:28:45.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.251" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:45.249" endtime="20201112 12:28:45.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.257" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:45.254" endtime="20201112 12:28:45.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.243" endtime="20201112 12:28:45.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.268" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:45.265" endtime="20201112 12:28:45.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.272" level="INFO">VALUE: 164892185</msg>
<status status="PASS" starttime="20201112 12:28:45.270" endtime="20201112 12:28:45.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.260" endtime="20201112 12:28:45.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.280" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:45.279" endtime="20201112 12:28:45.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.283" level="INFO">VALUE: [164902237, 164912236, 164922236, 164932236, 164942236, 164952236, 164962236, 164972236, 164982236, 164992236, 165002236, 165012236, 165022236, 165032236, 165042236, 165052236, 165062236, 165072236, 165082236, 165092236, 165102236, 165112236, 165122236, 165132236, 165142236, 165152236, 165162236, 165172236, 165182236, 165192236, 165202236, 165212236, 165222236, 165232236, 165242236, 165252236, 165262236, 165272236, 165282236, 165292236, 165302236, 165312236, 165322236, 165332236, 165342236, 165352236, 165362236, 165372236, 165382236, 165392236, 165402236, 165412236, 165422236, 165432236, 165442236, 165452236, 165462236, 165472236, 165482236, 165492236, 165502236, 165512236, 165522236, 165532236, 165542236, 165552236, 165562236, 165572236, 165582236, 165592236, 165602236, 165612236, 165622236, 165632236, 165642236, 165652236, 165662236, 165672236, 165682236, 165692236, 165702236, 165712236, 165722236, 165732236, 165742236, 165752236, 165762236, 165772236, 165782236, 165792236, 165802236, 165812236, 165822236, 165832236, 165842236, 165852236, 165862236, 165872236, 165882236, 165892236]</msg>
<status status="PASS" starttime="20201112 12:28:45.281" endtime="20201112 12:28:45.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.276" endtime="20201112 12:28:45.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.291" endtime="20201112 12:28:45.582"></status>
</kw>
<msg timestamp="20201112 12:28:45.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029549042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:45.290" endtime="20201112 12:28:45.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029549042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:45.586" endtime="20201112 12:28:45.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.593" endtime="20201112 12:28:45.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.287" endtime="20201112 12:28:45.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.285" endtime="20201112 12:28:45.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.621" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:45.597" endtime="20201112 12:28:45.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.625" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:28:45.624" endtime="20201112 12:28:45.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.627" level="INFO">VALUE: 0.019496347</msg>
<status status="PASS" starttime="20201112 12:28:45.626" endtime="20201112 12:28:45.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.622" endtime="20201112 12:28:45.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.633" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:45.632" endtime="20201112 12:28:45.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.635" level="INFO">VALUE: [0.029549042, 0.03954925, 0.049549806, 0.059550722, 0.069551264, 0.079552194, 0.089552722, 0.099553681, 0.109554194, 0.119555153, 0.129555667, 0.139556611, 0.149557139, 0.159558083, 0.169558611, 0.179559569, 0.189560083, 0.199561028, 0.209561569, 0.219562514, 0.229563028, 0.239564028, 0.2495645, 0.259565458, 0.269565972, 0.279566958, 0.289567514, 0.299568389, 0.309568986, 0.319569861, 0.329570389, 0.339571333, 0.349571861, 0.359572819, 0.369573333, 0.379574292, 0.389574819, 0.399575764, 0.409576333, 0.419577236, 0.429577736, 0.439578681, 0.449579194, 0.459580153, 0.469580667, 0.479581597, 0.489582153, 0.499583056, 0.509583597, 0.519584514, 0.529585069, 0.539586, 0.5495865, 0.559587444, 0.569587972, 0.579588958, 0.589589431, 0.599590361, 0.609590889, 0.619591833, 0.629592403, 0.639593292, 0.649593806, 0.659594764, 0.669595292, 0.679596222, 0.689596736, 0.699597681, 0.709598194, 0.719599139, 0.729599653, 0.739600611, 0.749601125, 0.759602097, 0.769602583, 0.779603528, 0.789604056, 0.799605014, 0.809605514, 0.819606458, 0.829606972, 0.839607931, 0.849608458, 0.859609403, 0.869609917, 0.879610847, 0.889611361, 0.899612306, 0.909612847, 0.919613778, 0.929614306, 0.939615236, 0.949615792, 0.959616708, 0.969617222, 0.979618167, 0.989618681, 0.999619639, 1.009620167, 1.019621097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:45.634" endtime="20201112 12:28:45.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.629" endtime="20201112 12:28:45.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.639" endtime="20201112 12:28:45.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:45.643" endtime="20201112 12:28:45.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.641" endtime="20201112 12:28:45.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.637" endtime="20201112 12:28:45.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.101" endtime="20201112 12:28:45.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.941" endtime="20201112 12:28:45.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:37.940" endtime="20201112 12:28:45.665"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:45.667" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.676" endtime="20201112 12:28:47.788"></status>
</kw>
<msg timestamp="20201112 12:28:47.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 167459416, 'wakeups': [167469477, 167479475, 167489475, 167499475, 167...</msg>
<status status="PASS" starttime="20201112 12:28:45.674" endtime="20201112 12:28:47.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.795" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 167459416, 'wakeups': [167469477, 167479475, 167489475, 167499475, 167...</msg>
<status status="PASS" starttime="20201112 12:28:47.791" endtime="20201112 12:28:47.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.798" endtime="20201112 12:28:47.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.671" endtime="20201112 12:28:47.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.669" endtime="20201112 12:28:47.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:47.809" level="INFO">${RESULT} = {'wakeups': [167469477, 167479475, 167489475, 167499475, 167509475, 167519475, 167529475, 167539475, 167549475, 167559475, 167569475, 167579475, 167589475, 167599475, 167609475, 167619475, 167629475, ...</msg>
<status status="PASS" starttime="20201112 12:28:47.805" endtime="20201112 12:28:47.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.819" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:47.816" endtime="20201112 12:28:47.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.823" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:47.821" endtime="20201112 12:28:47.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.811" endtime="20201112 12:28:47.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.834" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:47.832" endtime="20201112 12:28:47.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.838" level="INFO">VALUE: 167459416</msg>
<status status="PASS" starttime="20201112 12:28:47.836" endtime="20201112 12:28:47.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.826" endtime="20201112 12:28:47.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.849" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:47.847" endtime="20201112 12:28:47.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:47.854" level="INFO">VALUE: [167469477, 167479475, 167489475, 167499475, 167509475, 167519475, 167529475, 167539475, 167549475, 167559475, 167569475, 167579475, 167589475, 167599475, 167609475, 167619475, 167629475, 167639475, 167649475, 167659475, 167669475, 167679475, 167689475, 167699475, 167709475, 167719475, 167729475, 167739475, 167749475, 167759475, 167769475, 167779475, 167789475, 167799475, 167809475, 167819475, 167829475, 167839475, 167849475, 167859475, 167869475, 167879475, 167889475, 167899475, 167909475, 167919475, 167929475, 167939475, 167949475, 167959475, 167969475, 167979475, 167989475, 167999475, 168009475, 168019475, 168029475, 168039475, 168049475, 168059475, 168069475, 168079475, 168089475, 168099475, 168109475, 168119475, 168129475, 168139475, 168149475, 168159475, 168169475, 168179475, 168189475, 168199475, 168209475, 168219475, 168229475, 168239475, 168249475, 168259475, 168269475, 168279475, 168289475, 168299475, 168309475, 168319475, 168329475, 168339475, 168349475, 168359475, 168369475, 168379475, 168389475, 168399475, 168409475, 168419475, 168429475, 168439475, 168449475, 168459475]</msg>
<status status="PASS" starttime="20201112 12:28:47.852" endtime="20201112 12:28:47.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.842" endtime="20201112 12:28:47.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:47.871" endtime="20201112 12:28:48.174"></status>
</kw>
<msg timestamp="20201112 12:28:48.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032417569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:47.868" endtime="20201112 12:28:48.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032417569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:48.178" endtime="20201112 12:28:48.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.186" endtime="20201112 12:28:48.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.862" endtime="20201112 12:28:48.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:47.858" endtime="20201112 12:28:48.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.213" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:48.189" endtime="20201112 12:28:48.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.217" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:48.216" endtime="20201112 12:28:48.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.219" level="INFO">VALUE: 0.022356</msg>
<status status="PASS" starttime="20201112 12:28:48.218" endtime="20201112 12:28:48.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.213" endtime="20201112 12:28:48.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.225" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:48.224" endtime="20201112 12:28:48.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.227" level="INFO">VALUE: [0.032417569, 0.042416653, 0.052417194, 0.062418139, 0.072418694, 0.082419611, 0.092420153, 0.102421069, 0.112421611, 0.122422556, 0.132423083, 0.142424014, 0.152424569, 0.1624255, 0.172426056, 0.182426958, 0.192427542, 0.202428444, 0.212429028, 0.222429917, 0.232430458, 0.242431403, 0.252431917, 0.262432847, 0.272433403, 0.282434333, 0.292434861, 0.302435792, 0.312436347, 0.322437306, 0.332437806, 0.342438736, 0.352439278, 0.362440278, 0.372440778, 0.382441694, 0.392442236, 0.402443167, 0.412443694, 0.422444625, 0.432445167, 0.442446111, 0.452446611, 0.462447528, 0.472448069, 0.482449028, 0.492449528, 0.502450472, 0.512451028, 0.522451931, 0.532452444, 0.542453403, 0.552453917, 0.562454861, 0.572455389, 0.582456306, 0.592456833, 0.602457833, 0.612458292, 0.622459222, 0.632459764, 0.642460778, 0.652461306, 0.662462153, 0.672462736, 0.682463653, 0.692464139, 0.702465069, 0.712465611, 0.722466569, 0.732467069, 0.742468028, 0.752468556, 0.762469472, 0.77247, 0.782470931, 0.792471458, 0.802472403, 0.812472931, 0.822473847, 0.832474389, 0.842475333, 0.852475903, 0.862476778, 0.872477319, 0.882478264, 0.892478792, 0.902479708, 0.912480236, 0.922481181, 0.932481708, 0.942482625, 0.952483167, 0.962484125, 0.972484694, 0.982485569, 0.992486097, 1.002487042, 1.012487556, 1.022488486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:48.226" endtime="20201112 12:28:48.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.221" endtime="20201112 12:28:48.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.231" endtime="20201112 12:28:48.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:48.234" endtime="20201112 12:28:48.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.232" endtime="20201112 12:28:48.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.229" endtime="20201112 12:28:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.668" endtime="20201112 12:28:48.255"></status>
</kw>
<msg timestamp="20201112 12:28:48.255" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.264" endtime="20201112 12:28:50.382"></status>
</kw>
<msg timestamp="20201112 12:28:50.383" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170053263, 'wakeups': [170063324, 170073322, 170083322, 170093322, 170...</msg>
<status status="PASS" starttime="20201112 12:28:48.262" endtime="20201112 12:28:50.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170053263, 'wakeups': [170063324, 170073322, 170083322, 170093322, 170...</msg>
<status status="PASS" starttime="20201112 12:28:50.385" endtime="20201112 12:28:50.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.392" endtime="20201112 12:28:50.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.259" endtime="20201112 12:28:50.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.257" endtime="20201112 12:28:50.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.403" level="INFO">${RESULT} = {'wakeups': [170063324, 170073322, 170083322, 170093322, 170103322, 170113322, 170123322, 170133322, 170143322, 170153322, 170163322, 170173322, 170183322, 170193322, 170203322, 170213322, 170223322, ...</msg>
<status status="PASS" starttime="20201112 12:28:50.399" endtime="20201112 12:28:50.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.412" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:50.410" endtime="20201112 12:28:50.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.417" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:50.415" endtime="20201112 12:28:50.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.405" endtime="20201112 12:28:50.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.428" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:50.425" endtime="20201112 12:28:50.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.432" level="INFO">VALUE: 170053263</msg>
<status status="PASS" starttime="20201112 12:28:50.430" endtime="20201112 12:28:50.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.420" endtime="20201112 12:28:50.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.443" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:50.441" endtime="20201112 12:28:50.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.448" level="INFO">VALUE: [170063324, 170073322, 170083322, 170093322, 170103322, 170113322, 170123322, 170133322, 170143322, 170153322, 170163322, 170173322, 170183322, 170193322, 170203322, 170213322, 170223322, 170233322, 170243322, 170253322, 170263322, 170273322, 170283322, 170293322, 170303322, 170313322, 170323322, 170333322, 170343322, 170353322, 170363322, 170373322, 170383322, 170393322, 170403322, 170413322, 170423322, 170433322, 170443322, 170453322, 170463322, 170473322, 170483322, 170493322, 170503322, 170513322, 170523322, 170533322, 170543322, 170553322, 170563322, 170573322, 170583322, 170593322, 170603322, 170613322, 170623322, 170633322, 170643322, 170653322, 170663322, 170673322, 170683322, 170693322, 170703322, 170713322, 170723322, 170733322, 170743322, 170753322, 170763322, 170773322, 170783322, 170793322, 170803322, 170813322, 170823322, 170833322, 170843322, 170853322, 170863322, 170873322, 170883322, 170893322, 170903322, 170913322, 170923322, 170933322, 170943322, 170953322, 170963322, 170973322, 170983322, 170993322, 171003322, 171013322, 171023322, 171033322, 171043322, 171053322]</msg>
<status status="PASS" starttime="20201112 12:28:50.446" endtime="20201112 12:28:50.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.436" endtime="20201112 12:28:50.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.465" endtime="20201112 12:28:50.756"></status>
</kw>
<msg timestamp="20201112 12:28:50.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025707958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035769861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.461" endtime="20201112 12:28:50.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025707958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035769861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.760" endtime="20201112 12:28:50.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.768" endtime="20201112 12:28:50.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.455" endtime="20201112 12:28:50.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.451" endtime="20201112 12:28:50.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.797" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:50.772" endtime="20201112 12:28:50.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.801" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:50.800" endtime="20201112 12:28:50.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.803" level="INFO">VALUE: 0.025707958</msg>
<status status="PASS" starttime="20201112 12:28:50.802" endtime="20201112 12:28:50.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.798" endtime="20201112 12:28:50.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.809" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:50.808" endtime="20201112 12:28:50.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.811" level="INFO">VALUE: [0.035769861, 0.045768986, 0.055769486, 0.065770417, 0.075770958, 0.085771917, 0.095772431, 0.105773361, 0.115773903, 0.125774847, 0.135775403, 0.145776306, 0.155776847, 0.165777792, 0.175778319, 0.185779264, 0.195779792, 0.205780764, 0.215781278, 0.225782194, 0.235782736, 0.245783722, 0.255784222, 0.265785167, 0.275785694, 0.285786639, 0.295787167, 0.305788097, 0.315788639, 0.325789583, 0.335790111, 0.345791042, 0.355791569, 0.365792542, 0.375793042, 0.385793958, 0.395794486, 0.405795431, 0.415795958, 0.425796889, 0.435797458, 0.445798361, 0.455798875, 0.465799806, 0.475800333, 0.485801292, 0.495801792, 0.505802736, 0.515803264, 0.525804222, 0.535804722, 0.545805653, 0.555806181, 0.565807194, 0.575807694, 0.585808583, 0.595809111, 0.605810056, 0.615810583, 0.625811583, 0.635812042, 0.645812972, 0.6558135, 0.665814417, 0.675814958, 0.685815917, 0.695816431, 0.705817417, 0.715817889, 0.725818833, 0.735819375, 0.745820292, 0.755820806, 0.765821778, 0.775822278, 0.785823208, 0.79582375, 0.805824681, 0.815825208, 0.825826125, 0.835826667, 0.845827611, 0.855828125, 0.865829097, 0.875829597, 0.885830542, 0.895831069, 0.905831986, 0.915832528, 0.925833472, 0.935833986, 0.945834917, 0.955835486, 0.965836403, 0.975836944, 0.985837889, 0.995838389, 1.005839319, 1.015839833, 1.025840764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:50.810" endtime="20201112 12:28:50.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.805" endtime="20201112 12:28:50.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.815" endtime="20201112 12:28:50.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:50.818" endtime="20201112 12:28:50.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.816" endtime="20201112 12:28:50.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.813" endtime="20201112 12:28:50.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.256" endtime="20201112 12:28:50.839"></status>
</kw>
<msg timestamp="20201112 12:28:50.839" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.847" endtime="20201112 12:28:52.959"></status>
</kw>
<msg timestamp="20201112 12:28:52.961" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 172630990, 'wakeups': [172641050, 172651049, 172661049, 172671049, 172...</msg>
<status status="PASS" starttime="20201112 12:28:50.846" endtime="20201112 12:28:52.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 172630990, 'wakeups': [172641050, 172651049, 172661049, 172671049, 172...</msg>
<status status="PASS" starttime="20201112 12:28:52.963" endtime="20201112 12:28:52.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:52.969" endtime="20201112 12:28:52.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.843" endtime="20201112 12:28:52.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.841" endtime="20201112 12:28:52.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:52.981" level="INFO">${RESULT} = {'wakeups': [172641050, 172651049, 172661049, 172671049, 172681049, 172691049, 172701049, 172711049, 172721049, 172731049, 172741049, 172751049, 172761049, 172771049, 172781049, 172791049, 172801049, ...</msg>
<status status="PASS" starttime="20201112 12:28:52.977" endtime="20201112 12:28:52.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.991" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:52.989" endtime="20201112 12:28:52.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:52.996" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:52.993" endtime="20201112 12:28:52.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.983" endtime="20201112 12:28:52.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.006" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.004" endtime="20201112 12:28:53.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.013" level="INFO">VALUE: 172630990</msg>
<status status="PASS" starttime="20201112 12:28:53.009" endtime="20201112 12:28:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:52.999" endtime="20201112 12:28:53.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.022" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.021" endtime="20201112 12:28:53.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.025" level="INFO">VALUE: [172641050, 172651049, 172661049, 172671049, 172681049, 172691049, 172701049, 172711049, 172721049, 172731049, 172741049, 172751049, 172761049, 172771049, 172781049, 172791049, 172801049, 172811049, 172821049, 172831049, 172841049, 172851049, 172861049, 172871049, 172881049, 172891049, 172901049, 172911049, 172921049, 172931049, 172941049, 172951049, 172961049, 172971049, 172981049, 172991049, 173001049, 173011049, 173021049, 173031049, 173041049, 173051049, 173061049, 173071049, 173081049, 173091049, 173101049, 173111049, 173121049, 173131049, 173141049, 173151049, 173161049, 173171049, 173181049, 173191049, 173201049, 173211049, 173221049, 173231049, 173241049, 173251049, 173261049, 173271049, 173281049, 173291049, 173301049, 173311049, 173321049, 173331049, 173341049, 173351049, 173361049, 173371049, 173381049, 173391049, 173401049, 173411049, 173421049, 173431049, 173441049, 173451049, 173461049, 173471049, 173481049, 173491049, 173501049, 173511049, 173521049, 173531049, 173541049, 173551049, 173561049, 173571049, 173581049, 173591049, 173601049, 173611049, 173621049, 173631049]</msg>
<status status="PASS" starttime="20201112 12:28:53.024" endtime="20201112 12:28:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.017" endtime="20201112 12:28:53.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.032" endtime="20201112 12:28:53.324"></status>
</kw>
<msg timestamp="20201112 12:28:53.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029561472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.031" endtime="20201112 12:28:53.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029561472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.328" endtime="20201112 12:28:53.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.335" endtime="20201112 12:28:53.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.028" endtime="20201112 12:28:53.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.026" endtime="20201112 12:28:53.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.370" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:53.339" endtime="20201112 12:28:53.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.376" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.375" endtime="20201112 12:28:53.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.379" level="INFO">VALUE: 0.019500208</msg>
<status status="PASS" starttime="20201112 12:28:53.377" endtime="20201112 12:28:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.372" endtime="20201112 12:28:53.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.385" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.383" endtime="20201112 12:28:53.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.388" level="INFO">VALUE: [0.029561472, 0.039561597, 0.049562083, 0.059563014, 0.069563597, 0.0795645, 0.089565042, 0.099565972, 0.1095665, 0.119567472, 0.129567986, 0.139568917, 0.149569458, 0.159570403, 0.169570931, 0.179571875, 0.189572417, 0.199573361, 0.209573889, 0.219574819, 0.229575389, 0.239576306, 0.249576833, 0.259577764, 0.269578319, 0.279579264, 0.289579792, 0.299580722, 0.309581264, 0.319582222, 0.32958275, 0.33958375, 0.34958425, 0.359585194, 0.369585764, 0.379586681, 0.389587167, 0.399588125, 0.409588639, 0.419589556, 0.429590111, 0.439591042, 0.449591556, 0.459592486, 0.469593014, 0.479593972, 0.489594486, 0.499595417, 0.509595944, 0.519596889, 0.529597431, 0.539598333, 0.549598889, 0.559599847, 0.569600361, 0.579601292, 0.589601806, 0.599602764, 0.609603292, 0.619604208, 0.629604736, 0.639605681, 0.649606208, 0.659607139, 0.669607708, 0.679608653, 0.689609153, 0.699610069, 0.709610611, 0.719611597, 0.729612069, 0.739613014, 0.749613542, 0.759614486, 0.769615, 0.779615931, 0.789616486, 0.799617458, 0.809617958, 0.819618889, 0.829619403, 0.839620347, 0.849620875, 0.859621819, 0.869622333, 0.879623292, 0.889623833, 0.899624736, 0.909625278, 0.919626236, 0.92962675, 0.939627681, 0.949628208, 0.959629208, 0.969629694, 0.979630625, 0.989631139, 0.999632097, 1.009632611, 1.019633556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:53.387" endtime="20201112 12:28:53.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.380" endtime="20201112 12:28:53.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.392" endtime="20201112 12:28:53.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:53.396" endtime="20201112 12:28:53.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.394" endtime="20201112 12:28:53.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.390" endtime="20201112 12:28:53.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.840" endtime="20201112 12:28:53.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.666" endtime="20201112 12:28:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.665" endtime="20201112 12:28:53.417"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:53.419" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.427" endtime="20201112 12:28:55.537"></status>
</kw>
<msg timestamp="20201112 12:28:55.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 175210945, 'wakeups': [175221015, 175231012, 175241012, 175251012, 1...</msg>
<status status="PASS" starttime="20201112 12:28:53.426" endtime="20201112 12:28:55.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.544" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 175210945, 'wakeups': [175221015, 175231012, 175241012, 175251012, 1...</msg>
<status status="PASS" starttime="20201112 12:28:55.541" endtime="20201112 12:28:55.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.547" endtime="20201112 12:28:55.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.423" endtime="20201112 12:28:55.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.421" endtime="20201112 12:28:55.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:55.558" level="INFO">${RESULT} = {'wakeups': [175221015, 175231012, 175241012, 175251012, 175261012, 175271012, 175281012, 175291012, 175301012, 175311012, 175321012, 175331012, 175341012, 175351012, 175361012, 175371012, 175381012, ...</msg>
<status status="PASS" starttime="20201112 12:28:55.554" endtime="20201112 12:28:55.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.566" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:55.564" endtime="20201112 12:28:55.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.570" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:55.568" endtime="20201112 12:28:55.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.559" endtime="20201112 12:28:55.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.581" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:55.579" endtime="20201112 12:28:55.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.585" level="INFO">VALUE: 175210945</msg>
<status status="PASS" starttime="20201112 12:28:55.583" endtime="20201112 12:28:55.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.573" endtime="20201112 12:28:55.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.597" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:55.594" endtime="20201112 12:28:55.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.602" level="INFO">VALUE: [175221015, 175231012, 175241012, 175251012, 175261012, 175271012, 175281012, 175291012, 175301012, 175311012, 175321012, 175331012, 175341012, 175351012, 175361012, 175371012, 175381012, 175391012, 175401012, 175411012, 175421012, 175431012, 175441012, 175451012, 175461012, 175471012, 175481012, 175491012, 175501012, 175511012, 175521012, 175531012, 175541012, 175551012, 175561012, 175571012, 175581012, 175591012, 175601012, 175611012, 175621012, 175631012, 175641012, 175651012, 175661012, 175671012, 175681012, 175691012, 175701012, 175711012, 175721012, 175731012, 175741012, 175751012, 175761012, 175771012, 175781012, 175791012, 175801012, 175811012, 175821012, 175831012, 175841012, 175851012, 175861012, 175871012, 175881012, 175891012, 175901012, 175911012, 175921012, 175931012, 175941012, 175951012, 175961012, 175971012, 175981012, 175991012, 176001012, 176011012, 176021012, 176031012, 176041012, 176051012, 176061012, 176071012, 176081012, 176091012, 176101012, 176111012, 176121012, 176131012, 176141012, 176151012, 176161012, 176171012, 176181012, 176191012, 176201012, 176211012]</msg>
<status status="PASS" starttime="20201112 12:28:55.599" endtime="20201112 12:28:55.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.589" endtime="20201112 12:28:55.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.619" endtime="20201112 12:28:55.917"></status>
</kw>
<msg timestamp="20201112 12:28:55.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031849083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.614" endtime="20201112 12:28:55.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031849083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:55.921" endtime="20201112 12:28:55.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.928" endtime="20201112 12:28:55.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.609" endtime="20201112 12:28:55.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.605" endtime="20201112 12:28:55.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:55.955" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:55.932" endtime="20201112 12:28:55.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.959" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:55.958" endtime="20201112 12:28:55.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.961" level="INFO">VALUE: 0.021778361</msg>
<status status="PASS" starttime="20201112 12:28:55.960" endtime="20201112 12:28:55.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.956" endtime="20201112 12:28:55.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.967" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:55.966" endtime="20201112 12:28:55.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:55.969" level="INFO">VALUE: [0.031849083, 0.041847444, 0.051847972, 0.061848917, 0.071849458, 0.081850403, 0.091850917, 0.101851861, 0.111852431, 0.121853347, 0.131853875, 0.141854819, 0.151855361, 0.161856292, 0.171856833, 0.181857764, 0.191858306, 0.20185925, 0.211859764, 0.221860722, 0.231861236, 0.241862194, 0.251862722, 0.261863667, 0.271864194, 0.281865153, 0.291865667, 0.301866625, 0.311867222, 0.321868097, 0.331868625, 0.341869583, 0.351870125, 0.361871069, 0.371871583, 0.381872542, 0.391873097, 0.401874028, 0.411874514, 0.421875472, 0.431876, 0.441876931, 0.451877444, 0.461878444, 0.471878903, 0.481879903, 0.491880375, 0.501881319, 0.511881847, 0.521882778, 0.531883319, 0.541884306, 0.551884764, 0.561885708, 0.571886236, 0.581887181, 0.591887708, 0.601888639, 0.611889153, 0.621890111, 0.631890639, 0.641891583, 0.651892083, 0.661893111, 0.671893556, 0.6818945, 0.691895083, 0.701895972, 0.7118965, 0.721897444, 0.731897958, 0.741898917, 0.751899417, 0.761900361, 0.771900889, 0.781901833, 0.791902347, 0.801903306, 0.811903889, 0.821904806, 0.831905306, 0.841906236, 0.85190675, 0.861907694, 0.871908222, 0.881909208, 0.891909681, 0.901910694, 0.911911153, 0.921912139, 0.931912639, 0.941913583, 0.951914097, 0.961915042, 0.971915556, 0.9819165, 0.991917014, 1.001917972, 1.011918486, 1.021919431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:55.968" endtime="20201112 12:28:55.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.963" endtime="20201112 12:28:55.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:55.972" endtime="20201112 12:28:55.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:55.975" endtime="20201112 12:28:55.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.974" endtime="20201112 12:28:55.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.970" endtime="20201112 12:28:55.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.420" endtime="20201112 12:28:55.996"></status>
</kw>
<msg timestamp="20201112 12:28:55.996" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.005" endtime="20201112 12:28:58.116"></status>
</kw>
<msg timestamp="20201112 12:28:58.117" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 177789044, 'wakeups': [177799114, 177809111, 177819111, 177829111, 1...</msg>
<status status="PASS" starttime="20201112 12:28:56.003" endtime="20201112 12:28:58.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.123" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 177789044, 'wakeups': [177799114, 177809111, 177819111, 177829111, 1...</msg>
<status status="PASS" starttime="20201112 12:28:58.120" endtime="20201112 12:28:58.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.126" endtime="20201112 12:28:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.000" endtime="20201112 12:28:58.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.998" endtime="20201112 12:28:58.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.137" level="INFO">${RESULT} = {'wakeups': [177799114, 177809111, 177819111, 177829111, 177839111, 177849111, 177859111, 177869111, 177879111, 177889111, 177899111, 177909111, 177919111, 177929111, 177939111, 177949111, 177959111, ...</msg>
<status status="PASS" starttime="20201112 12:28:58.132" endtime="20201112 12:28:58.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.145" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:58.143" endtime="20201112 12:28:58.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.149" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:58.147" endtime="20201112 12:28:58.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.138" endtime="20201112 12:28:58.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.159" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.157" endtime="20201112 12:28:58.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.163" level="INFO">VALUE: 177789044</msg>
<status status="PASS" starttime="20201112 12:28:58.161" endtime="20201112 12:28:58.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.152" endtime="20201112 12:28:58.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.173" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.171" endtime="20201112 12:28:58.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.178" level="INFO">VALUE: [177799114, 177809111, 177819111, 177829111, 177839111, 177849111, 177859111, 177869111, 177879111, 177889111, 177899111, 177909111, 177919111, 177929111, 177939111, 177949111, 177959111, 177969111, 177979111, 177989111, 177999111, 178009111, 178019111, 178029111, 178039111, 178049111, 178059111, 178069111, 178079111, 178089111, 178099111, 178109111, 178119111, 178129111, 178139111, 178149111, 178159111, 178169111, 178179111, 178189111, 178199111, 178209111, 178219111, 178229111, 178239111, 178249111, 178259111, 178269111, 178279111, 178289111, 178299111, 178309111, 178319111, 178329111, 178339111, 178349111, 178359111, 178369111, 178379111, 178389111, 178399111, 178409111, 178419111, 178429111, 178439111, 178449111, 178459111, 178469111, 178479111, 178489111, 178499111, 178509111, 178519111, 178529111, 178539111, 178549111, 178559111, 178569111, 178579111, 178589111, 178599111, 178609111, 178619111, 178629111, 178639111, 178649111, 178659111, 178669111, 178679111, 178689111, 178699111, 178709111, 178719111, 178729111, 178739111, 178749111, 178759111, 178769111, 178779111, 178789111]</msg>
<status status="PASS" starttime="20201112 12:28:58.175" endtime="20201112 12:28:58.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.166" endtime="20201112 12:28:58.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.194" endtime="20201112 12:28:58.490"></status>
</kw>
<msg timestamp="20201112 12:28:58.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03022575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:58.191" endtime="20201112 12:28:58.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03022575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:58.494" endtime="20201112 12:28:58.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.501" endtime="20201112 12:28:58.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.185" endtime="20201112 12:28:58.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.181" endtime="20201112 12:28:58.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.528" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:58.505" endtime="20201112 12:28:58.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.532" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.531" endtime="20201112 12:28:58.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.534" level="INFO">VALUE: 0.020155278</msg>
<status status="PASS" starttime="20201112 12:28:58.533" endtime="20201112 12:28:58.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.529" endtime="20201112 12:28:58.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.540" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.539" endtime="20201112 12:28:58.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.542" level="INFO">VALUE: [0.03022575, 0.040224028, 0.050224569, 0.060225514, 0.070226042, 0.080226986, 0.090227514, 0.100228472, 0.110229, 0.120229944, 0.130230472, 0.140231431, 0.150231972, 0.160232903, 0.170233431, 0.180234375, 0.190234958, 0.200235847, 0.210236375, 0.220237319, 0.230237847, 0.240238792, 0.250239319, 0.260240264, 0.270240792, 0.280241736, 0.290242264, 0.300243264, 0.31024375, 0.320244694, 0.330245208, 0.340246194, 0.350246708, 0.360247667, 0.370248167, 0.380249111, 0.390249653, 0.400250611, 0.410251125, 0.420252069, 0.430252597, 0.440253556, 0.450254153, 0.460255028, 0.470255556, 0.4802565, 0.490257028, 0.500258042, 0.5102585, 0.520259458, 0.530259986, 0.540260944, 0.550261458, 0.560262403, 0.570262931, 0.580263875, 0.590264417, 0.600265361, 0.610265889, 0.620266847, 0.630267361, 0.640268306, 0.650268833, 0.660269819, 0.670270347, 0.68027125, 0.690271792, 0.700272708, 0.710273222, 0.720274181, 0.73027475, 0.740275708, 0.750276153, 0.760277097, 0.770277708, 0.780278569, 0.790279083, 0.800280056, 0.810280542, 0.820281486, 0.830282014, 0.840282972, 0.850283472, 0.860284417, 0.870284931, 0.880285889, 0.890286444, 0.900287361, 0.910287875, 0.920288819, 0.930289333, 0.940290278, 0.950290792, 0.960291778, 0.970292264, 0.980293222, 0.990293722, 1.000294667, 1.010295194, 1.020296139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:58.541" endtime="20201112 12:28:58.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.536" endtime="20201112 12:28:58.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.545" endtime="20201112 12:28:58.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:58.548" endtime="20201112 12:28:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.547" endtime="20201112 12:28:58.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.543" endtime="20201112 12:28:58.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:55.997" endtime="20201112 12:28:58.569"></status>
</kw>
<msg timestamp="20201112 12:28:58.569" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.577" endtime="20201112 12:29:00.688"></status>
</kw>
<msg timestamp="20201112 12:29:00.689" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180360774, 'wakeups': [180370843, 180380841, 180390841, 180400841, 1...</msg>
<status status="PASS" starttime="20201112 12:28:58.576" endtime="20201112 12:29:00.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.696" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180360774, 'wakeups': [180370843, 180380841, 180390841, 180400841, 1...</msg>
<status status="PASS" starttime="20201112 12:29:00.692" endtime="20201112 12:29:00.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.698" endtime="20201112 12:29:00.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.573" endtime="20201112 12:29:00.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.571" endtime="20201112 12:29:00.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:00.710" level="INFO">${RESULT} = {'wakeups': [180370843, 180380841, 180390841, 180400841, 180410841, 180420841, 180430841, 180440841, 180450841, 180460841, 180470841, 180480841, 180490841, 180500841, 180510841, 180520841, 180530841, ...</msg>
<status status="PASS" starttime="20201112 12:29:00.706" endtime="20201112 12:29:00.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.719" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:00.717" endtime="20201112 12:29:00.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.723" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:00.721" endtime="20201112 12:29:00.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.712" endtime="20201112 12:29:00.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.733" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:00.731" endtime="20201112 12:29:00.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.740" level="INFO">VALUE: 180360774</msg>
<status status="PASS" starttime="20201112 12:29:00.736" endtime="20201112 12:29:00.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.726" endtime="20201112 12:29:00.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.750" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:00.748" endtime="20201112 12:29:00.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:00.754" level="INFO">VALUE: [180370843, 180380841, 180390841, 180400841, 180410841, 180420841, 180430841, 180440841, 180450841, 180460841, 180470841, 180480841, 180490841, 180500841, 180510841, 180520841, 180530841, 180540841, 180550841, 180560841, 180570841, 180580841, 180590841, 180600841, 180610841, 180620841, 180630841, 180640841, 180650841, 180660841, 180670841, 180680841, 180690841, 180700841, 180710841, 180720841, 180730841, 180740841, 180750841, 180760841, 180770841, 180780841, 180790841, 180800841, 180810841, 180820841, 180830841, 180840841, 180850841, 180860841, 180870841, 180880841, 180890841, 180900841, 180910841, 180920841, 180930841, 180940841, 180950841, 180960841, 180970841, 180980841, 180990841, 181000841, 181010841, 181020841, 181030841, 181040841, 181050841, 181060841, 181070841, 181080841, 181090841, 181100841, 181110841, 181120841, 181130841, 181140841, 181150841, 181160841, 181170841, 181180841, 181190841, 181200841, 181210841, 181220841, 181230841, 181240841, 181250841, 181260841, 181270841, 181280841, 181290841, 181300841, 181310841, 181320841, 181330841, 181340841, 181350841, 181360841]</msg>
<status status="PASS" starttime="20201112 12:29:00.752" endtime="20201112 12:29:00.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.743" endtime="20201112 12:29:00.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:00.770" endtime="20201112 12:29:01.065"></status>
</kw>
<msg timestamp="20201112 12:29:01.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029098944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:00.766" endtime="20201112 12:29:01.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029098944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.068" endtime="20201112 12:29:01.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.076" endtime="20201112 12:29:01.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.761" endtime="20201112 12:29:01.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:00.758" endtime="20201112 12:29:01.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.103" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:01.079" endtime="20201112 12:29:01.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.107" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:01.106" endtime="20201112 12:29:01.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.109" level="INFO">VALUE: 0.019028861</msg>
<status status="PASS" starttime="20201112 12:29:01.108" endtime="20201112 12:29:01.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.104" endtime="20201112 12:29:01.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.115" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:01.113" endtime="20201112 12:29:01.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.117" level="INFO">VALUE: [0.029098944, 0.039098278, 0.049098847, 0.059099764, 0.069100292, 0.07910125, 0.089101764, 0.099102708, 0.10910325, 0.119104181, 0.129104708, 0.139105653, 0.149106194, 0.159107153, 0.169107667, 0.179108611, 0.189109139, 0.199110097, 0.209110667, 0.219111583, 0.229112097, 0.239113028, 0.249113569, 0.259114528, 0.269115028, 0.279116014, 0.2891165, 0.299117458, 0.309117986, 0.319118944, 0.329119514, 0.339120403, 0.349120944, 0.359121958, 0.369122403, 0.379123347, 0.389123861, 0.399124819, 0.409125333, 0.419126278, 0.429126792, 0.439127736, 0.44912825, 0.459129194, 0.469129722, 0.479130667, 0.489131194, 0.499132167, 0.509132653, 0.519133597, 0.529134111, 0.539135056, 0.549135625, 0.559136514, 0.569137042, 0.579137986, 0.5891385, 0.599139444, 0.609139958, 0.619140903, 0.629141431, 0.639142375, 0.649142889, 0.659143847, 0.669144361, 0.679145319, 0.689145833, 0.699146792, 0.709147292, 0.71914825, 0.72914875, 0.739149708, 0.749150222, 0.759151167, 0.769151694, 0.779152708, 0.789153153, 0.799154097, 0.809154625, 0.819155569, 0.829156083, 0.839157042, 0.849157569, 0.8591585, 0.869159028, 0.879159958, 0.889160486, 0.899161444, 0.909161944, 0.919162903, 0.929163417, 0.939164403, 0.949164889, 0.959165833, 0.969166347, 0.979167347, 0.989167819, 0.999168778, 1.009169361, 1.019170236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:01.116" endtime="20201112 12:29:01.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.111" endtime="20201112 12:29:01.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.120" endtime="20201112 12:29:01.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:01.124" endtime="20201112 12:29:01.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.122" endtime="20201112 12:29:01.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.119" endtime="20201112 12:29:01.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.570" endtime="20201112 12:29:01.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.418" endtime="20201112 12:29:01.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.417" endtime="20201112 12:29:01.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.894" endtime="20201112 12:29:01.145"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:43.825" endtime="20201112 12:29:01.146" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:27:42.291" endtime="20201112 12:29:01.149"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:59.083" endtime="20201112 12:29:01.165"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
