<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:25:45.149" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:49.197" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:49.206" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:50.574" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:49.196" endtime="20201112 12:25:50.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:50.577" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:50.576" endtime="20201112 12:25:50.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.194" endtime="20201112 12:25:50.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:50.580" endtime="20201112 12:25:50.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.579" endtime="20201112 12:25:50.764"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:50.778" endtime="20201112 12:25:53.799"></status>
</kw>
<msg timestamp="20201112 12:25:53.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:50.776" endtime="20201112 12:25:53.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.806" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.802" endtime="20201112 12:25:53.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:53.813" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:53.808" endtime="20201112 12:25:53.813"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.774" endtime="20201112 12:25:53.815"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:50.771" endtime="20201112 12:25:53.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.769" endtime="20201112 12:25:53.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:53.825" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:53.824" endtime="20201112 12:25:53.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.819" endtime="20201112 12:25:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.769" endtime="20201112 12:25:53.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.768" endtime="20201112 12:25:53.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.829" endtime="20201112 12:25:53.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.766" endtime="20201112 12:25:53.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.835" endtime="20201112 12:25:53.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:50.765" endtime="20201112 12:25:53.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:49.192" endtime="20201112 12:25:53.840"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:53.853" endtime="20201112 12:25:53.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.850" endtime="20201112 12:25:53.876"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:53.907" endtime="20201112 12:25:56.930"></status>
</kw>
<msg timestamp="20201112 12:25:56.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:53.903" endtime="20201112 12:25:56.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.933" endtime="20201112 12:25:56.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.942" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:25:56.938" endtime="20201112 12:25:56.943"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.898" endtime="20201112 12:25:56.944"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:53.892" endtime="20201112 12:25:56.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.889" endtime="20201112 12:25:56.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:25:56.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:25:56.952" endtime="20201112 12:25:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.948" endtime="20201112 12:25:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.887" endtime="20201112 12:25:56.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.886" endtime="20201112 12:25:56.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.958" endtime="20201112 12:25:56.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.881" endtime="20201112 12:25:56.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.878" endtime="20201112 12:25:56.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:53.847" endtime="20201112 12:25:56.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.975" endtime="20201112 12:25:56.987"></status>
</kw>
<msg timestamp="20201112 12:25:56.987" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.973" endtime="20201112 12:25:56.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.990" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:56.988" endtime="20201112 12:25:56.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:56.991" endtime="20201112 12:25:56.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.969" endtime="20201112 12:25:56.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.965" endtime="20201112 12:25:56.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:25:56.998" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:25:56.997" endtime="20201112 12:25:56.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.000" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:25:56.999" endtime="20201112 12:25:57.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:56.994" endtime="20201112 12:25:57.001"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:25:53.841" endtime="20201112 12:25:57.002" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:45.261" endtime="20201112 12:25:57.005"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:25:57.060" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:25:57.068" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:25:58.195" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:25:57.059" endtime="20201112 12:25:58.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:25:58.199" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:25:58.197" endtime="20201112 12:25:58.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.057" endtime="20201112 12:25:58.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:25:58.202" endtime="20201112 12:25:58.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.200" endtime="20201112 12:25:58.422"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:25:58.434" endtime="20201112 12:26:01.458"></status>
</kw>
<msg timestamp="20201112 12:26:01.459" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:25:58.433" endtime="20201112 12:26:01.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.461" endtime="20201112 12:26:01.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:01.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:01.467" endtime="20201112 12:26:01.471"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:58.430" endtime="20201112 12:26:01.473"></status>
</kw>
<status status="FAIL" starttime="20201112 12:25:58.428" endtime="20201112 12:26:01.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.427" endtime="20201112 12:26:01.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:01.482" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:01.481" endtime="20201112 12:26:01.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.476" endtime="20201112 12:26:01.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.426" endtime="20201112 12:26:01.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.425" endtime="20201112 12:26:01.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.486" endtime="20201112 12:26:01.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.424" endtime="20201112 12:26:01.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.492" endtime="20201112 12:26:01.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:58.422" endtime="20201112 12:26:01.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:25:57.056" endtime="20201112 12:26:01.497"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:01.509" endtime="20201112 12:26:01.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.506" endtime="20201112 12:26:01.532"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:01.559" endtime="20201112 12:26:04.580"></status>
</kw>
<msg timestamp="20201112 12:26:04.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:01.556" endtime="20201112 12:26:04.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.584" endtime="20201112 12:26:04.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:04.590" endtime="20201112 12:26:04.594"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:01.551" endtime="20201112 12:26:04.596"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:01.546" endtime="20201112 12:26:04.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.543" endtime="20201112 12:26:04.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:04.605" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:04.604" endtime="20201112 12:26:04.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.599" endtime="20201112 12:26:04.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.541" endtime="20201112 12:26:04.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.540" endtime="20201112 12:26:04.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.609" endtime="20201112 12:26:04.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.537" endtime="20201112 12:26:04.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.533" endtime="20201112 12:26:04.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:01.503" endtime="20201112 12:26:04.614"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:04.619" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.636" endtime="20201112 12:26:04.651"></status>
</kw>
<msg timestamp="20201112 12:26:04.652" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.633" endtime="20201112 12:26:04.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:04.654" endtime="20201112 12:26:04.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.660" endtime="20201112 12:26:04.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.627" endtime="20201112 12:26:04.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.623" endtime="20201112 12:26:04.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.679" endtime="20201112 12:26:04.962"></status>
</kw>
<msg timestamp="20201112 12:26:04.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116863778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116864319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.676" endtime="20201112 12:26:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116863778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116864319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:04.965" endtime="20201112 12:26:04.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:04.971" endtime="20201112 12:26:04.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.670" endtime="20201112 12:26:04.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.666" endtime="20201112 12:26:04.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.978" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:04.977" endtime="20201112 12:26:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:04.982" level="INFO">VALUE: [{'time': 3.116863778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116864319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.116872014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000307317e-06, 'source_diff': 7.695000000307317e-06}, {'time': 3.116877556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541999999802982e-06, 'source_diff': 5.541999999802982e-06}, {'time': 3.116883167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000182997e-06, 'source_diff': 5.611000000182997e-06}, {'time': 3.116887819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.651999999882861e-06, 'source_diff': 4.651999999882861e-06}, {'time': 3.11689175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.931000000179097e-06, 'source_diff': 3.931000000179097e-06}, {'time': 3.116901111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999596942e-06, 'source_diff': 9.360999999596942e-06}, {'time': 3.116909028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000023933e-06, 'source_diff': 7.917000000023933e-06}, {'time': 3.116911556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 3.116921347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000092254e-06, 'source_diff': 9.791000000092254e-06}, {'time': 3.116928333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.98600000026417e-06, 'source_diff': 6.98600000026417e-06}, {'time': 3.116935833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.499999999716067e-06, 'source_diff': 7.499999999716067e-06}, {'time': 3.116945014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000246797e-06, 'source_diff': 9.181000000246797e-06}, {'time': 3.116948944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000096356e-06, 'source_diff': 3.930000000096356e-06}, {'time': 3.116949486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.11695425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.763999999823909e-06, 'source_diff': 4.763999999823909e-06}, {'time': 3.116963681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.431000000059697e-06, 'source_diff': 9.431000000059697e-06}, {'time': 3.116972417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999842647e-06, 'source_diff': 8.735999999842647e-06}, {'time': 3.116975292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.87499999984675e-06, 'source_diff': 2.87499999984675e-06}, {'time': 3.116979458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166000000083159e-06, 'source_diff': 4.166000000083159e-06}, {'time': 3.11698, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.116988806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000305403e-06, 'source_diff': 8.806000000305403e-06}, {'time': 3.116989347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.116994653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.30599999981618e-06, 'source_diff': 5.30599999981618e-06}, {'time': 3.116995194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.117001694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.500000000020378e-06, 'source_diff': 6.500000000020378e-06}, {'time': 3.117004222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 3.117011722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000160156e-06, 'source_diff': 7.500000000160156e-06}, {'time': 3.117018694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.971999999993983e-06, 'source_diff': 6.971999999993983e-06}, {'time': 3.117021931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2370000000447874e-06, 'source_diff': 3.2370000000447874e-06}, {'time': 3.117024417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486000000079258e-06, 'source_diff': 2.486000000079258e-06}, {'time': 3.117024958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.117030028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.069999999829378e-06, 'source_diff': 5.069999999829378e-06}, {'time': 3.117036042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000220676e-06, 'source_diff': 6.014000000220676e-06}, {'time': 3.117045931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999763115e-06, 'source_diff': 9.888999999763115e-06}, {'time': 3.117046472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000003536197e-07, 'source_diff': 5.410000003536197e-07}, {'time': 3.117053861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.388999999857759e-06, 'source_diff': 7.388999999857759e-06}, {'time': 3.117057306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4449999999353054e-06, 'source_diff': 3.4449999999353054e-06}, {'time': 3.117066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055000000035562e-06, 'source_diff': 9.055000000035562e-06}, {'time': 3.117069042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6809999997823297e-06, 'source_diff': 2.6809999997823297e-06}, {'time': 3.117078139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.097000000402033e-06, 'source_diff': 9.097000000402033e-06}, {'time': 3.117078681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.117086306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999844562e-06, 'source_diff': 7.624999999844562e-06}, {'time': 3.117095736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999976957e-06, 'source_diff': 9.429999999976957e-06}, {'time': 3.117100389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652999999965601e-06, 'source_diff': 4.652999999965601e-06}, {'time': 3.117109333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000177255e-06, 'source_diff': 8.944000000177255e-06}, {'time': 3.117113014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6809999999221077e-06, 'source_diff': 3.6809999999221077e-06}, {'time': 3.117121194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000024279e-06, 'source_diff': 8.180000000024279e-06}, {'time': 3.117126556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.362000000008749e-06, 'source_diff': 5.362000000008749e-06}, {'time': 3.117131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999676748e-06, 'source_diff': 4.568999999676748e-06}, {'time': 3.117138458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.33300000010928e-06, 'source_diff': 7.33300000010928e-06}, {'time': 3.117148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999918005e-06, 'source_diff': 9.541999999918005e-06}, {'time': 3.117156847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847000000145044e-06, 'source_diff': 8.847000000145044e-06}, {'time': 3.117157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 3.117163889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.500000000020378e-06, 'source_diff': 6.500000000020378e-06}, {'time': 3.117169125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000241603e-06, 'source_diff': 5.236000000241603e-06}, {'time': 3.11717475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000009095e-06, 'source_diff': 5.625000000009095e-06}, {'time': 3.117180819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.068999999886415e-06, 'source_diff': 6.068999999886415e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:04.979" endtime="20201112 12:26:04.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.974" endtime="20201112 12:26:04.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:04.999" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:04.984" endtime="20201112 12:26:05.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.003" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.002" endtime="20201112 12:26:05.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.007" level="INFO">VALUE: {'sourcetime': [3.116863778, 3.116864319, 3.116872014, 3.116877556, 3.116883167, 3.116887819, 3.11689175, 3.116901111, 3.116909028, 3.116911556, 3.116921347, 3.116928333, 3.116935833, 3.116945014, 3.116948944, 3.116949486, 3.11695425, 3.116963681, 3.116972417, 3.116975292, 3.116979458, 3.11698, 3.116988806, 3.116989347, 3.116994653, 3.116995194, 3.117001694, 3.117004222, 3.117011722, 3.117018694, 3.117021931, 3.117024417, 3.117024958, 3.117030028, 3.117036042, 3.117045931, 3.117046472, 3.117053861, 3.117057306, 3.117066361, 3.117069042, 3.117078139, 3.117078681, 3.117086306, 3.117095736, 3.117100389, 3.117109333, 3.117113014, 3.117121194, 3.117126556, 3.117131125, 3.117138458, 3.117148, 3.117156847, 3.117157389, 3.117163889, 3.117169125, 3.11717475, 3.117180819], 'source_diff': [0, 5.409999999095305e-07, 7.695000000307317e-06, 5.541999999802982e-06, 5.611000000182997e-06, 4.651999999882861e-06, 3.931000000179097e-06, 9.360999999596942e-06, 7.917000000023933e-06, 2.52800000000164e-06, 9.791000000092254e-06, 6.98600000026417e-06, 7.499999999716067e-06, 9.181000000246797e-06, 3.930000000096356e-06, 5.419999999922709e-07, 4.763999999823909e-06, 9.431000000059697e-06, 8.735999999842647e-06, 2.87499999984675e-06, 4.166000000083159e-06, 5.419999999922709e-07, 8.806000000305403e-06, 5.409999999095305e-07, 5.30599999981618e-06, 5.409999999095305e-07, 6.500000000020378e-06, 2.52800000000164e-06, 7.500000000160156e-06, 6.971999999993983e-06, 3.2370000000447874e-06, 2.486000000079258e-06, 5.409999999095305e-07, 5.069999999829378e-06, 6.014000000220676e-06, 9.888999999763115e-06, 5.410000003536197e-07, 7.388999999857759e-06, 3.4449999999353054e-06, 9.055000000035562e-06, 2.6809999997823297e-06, 9.097000000402033e-06, 5.419999999922709e-07, 7.624999999844562e-06, 9.429999999976957e-06, 4.652999999965601e-06, 8.944000000177255e-06, 3.6809999999221077e-06, 8.180000000024279e-06, 5.362000000008749e-06, 4.568999999676748e-06, 7.33300000010928e-06, 9.541999999918005e-06, 8.847000000145044e-06, 5.419999999922709e-07, 6.500000000020378e-06, 5.236000000241603e-06, 5.625000000009095e-06, 6.068999999886415e-06], 'eventdiff': [0, 5.409999999095305e-07, 7.695000000307317e-06, 5.541999999802982e-06, 5.611000000182997e-06, 4.651999999882861e-06, 3.931000000179097e-06, 9.360999999596942e-06, 7.917000000023933e-06, 2.52800000000164e-06, 9.791000000092254e-06, 6.98600000026417e-06, 7.499999999716067e-06, 9.181000000246797e-06, 3.930000000096356e-06, 5.419999999922709e-07, 4.763999999823909e-06, 9.431000000059697e-06, 8.735999999842647e-06, 2.87499999984675e-06, 4.166000000083159e-06, 5.419999999922709e-07, 8.806000000305403e-06, 5.409999999095305e-07, 5.30599999981618e-06, 5.409999999095305e-07, 6.500000000020378e-06, 2.52800000000164e-06, 7.500000000160156e-06, 6.971999999993983e-06, 3.2370000000447874e-06, 2.486000000079258e-06, 5.409999999095305e-07, 5.069999999829378e-06, 6.014000000220676e-06, 9.888999999763115e-06, 5.410000003536197e-07, 7.388999999857759e-06, 3.4449999999353054e-06, 9.055000000035562e-06, 2.6809999997823297e-06, 9.097000000402033e-06, 5.419999999922709e-07, 7.624999999844562e-06, 9.429999999976957e-06, 4.652999999965601e-06, 8.944000000177255e-06, 3.6809999999221077e-06, 8.180000000024279e-06, 5.362000000008749e-06, 4.568999999676748e-06, 7.33300000010928e-06, 9.541999999918005e-06, 8.847000000145044e-06, 5.419999999922709e-07, 6.500000000020378e-06, 5.236000000241603e-06, 5.625000000009095e-06, 6.068999999886415e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.004" endtime="20201112 12:26:05.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.000" endtime="20201112 12:26:05.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.011" level="INFO">${RESULT} = [{'time': 3.116864319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999095305e-07, 'source_diff': 5.409999999095305e-07}, {'time': 3.116877556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.009" endtime="20201112 12:26:05.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.020" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.012" endtime="20201112 12:26:05.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.025" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.024" endtime="20201112 12:26:05.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.027" level="INFO">VALUE: [5.409999999095305e-07, 5.541999999802982e-06, 4.651999999882861e-06, 9.360999999596942e-06, 2.52800000000164e-06, 6.98600000026417e-06, 9.181000000246797e-06, 5.419999999922709e-07, 9.431000000059697e-06, 2.87499999984675e-06, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 2.52800000000164e-06, 6.971999999993983e-06, 2.486000000079258e-06, 5.069999999829378e-06, 9.888999999763115e-06, 7.388999999857759e-06, 9.055000000035562e-06, 9.097000000402033e-06, 7.624999999844562e-06, 4.652999999965601e-06, 3.6809999999221077e-06, 5.362000000008749e-06, 7.33300000010928e-06, 8.847000000145044e-06, 6.500000000020378e-06, 5.625000000009095e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.026" endtime="20201112 12:26:05.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.021" endtime="20201112 12:26:05.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.031" endtime="20201112 12:26:05.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.034" endtime="20201112 12:26:05.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.033" endtime="20201112 12:26:05.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.029" endtime="20201112 12:26:05.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.620" endtime="20201112 12:26:05.055"></status>
</kw>
<msg timestamp="20201112 12:26:05.055" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.063" endtime="20201112 12:26:05.074"></status>
</kw>
<msg timestamp="20201112 12:26:05.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.062" endtime="20201112 12:26:05.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.075" endtime="20201112 12:26:05.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.078" endtime="20201112 12:26:05.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.059" endtime="20201112 12:26:05.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.057" endtime="20201112 12:26:05.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.087" endtime="20201112 12:26:05.357"></status>
</kw>
<msg timestamp="20201112 12:26:05.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017709819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.085" endtime="20201112 12:26:05.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017709819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.360" endtime="20201112 12:26:05.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.366" endtime="20201112 12:26:05.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.083" endtime="20201112 12:26:05.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.081" endtime="20201112 12:26:05.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.372" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.371" endtime="20201112 12:26:05.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.376" level="INFO">VALUE: [{'time': 0.017709819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017717806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986999999997496e-06, 'source_diff': 7.986999999997496e-06}, {'time': 0.017726708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902000000001603e-06, 'source_diff': 8.902000000001603e-06}, {'time': 0.017729361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.01773775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017741708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017749833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.017752806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017757694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.017767361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.017771097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017777792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.017785819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.017794875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.017795417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017803292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.017807139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017815056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.017820125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017824222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017824764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017830958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.017839181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.017842181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017851042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.017853736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.017863611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.875000000002937e-06, 'source_diff': 9.875000000002937e-06}, {'time': 0.017871597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.017872139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017874278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.017877431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017877972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017887264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.017890194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.017894847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.017903542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.017910097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.017912542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017920944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.017924319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017932014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.017941833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.017951236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.017951778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017958528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.017963903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017966875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.017981597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.017989583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.017992736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.018005389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018014736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:05.373" endtime="20201112 12:26:05.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.369" endtime="20201112 12:26:05.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.394" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.379" endtime="20201112 12:26:05.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.398" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.397" endtime="20201112 12:26:05.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.402" level="INFO">VALUE: {'sourcetime': [0.017709819, 0.017717806, 0.017726708, 0.017729361, 0.01773775, 0.017741708, 0.017744208, 0.017749833, 0.017752806, 0.017757694, 0.017767361, 0.017771097, 0.017777792, 0.017785819, 0.017794875, 0.017795417, 0.017803292, 0.017807139, 0.017815056, 0.017820125, 0.017824222, 0.017824764, 0.017830958, 0.017839181, 0.017842181, 0.017851042, 0.017853736, 0.017863611, 0.017871597, 0.017872139, 0.017874278, 0.017877431, 0.017877972, 0.017887264, 0.017890194, 0.017894847, 0.017903542, 0.017910097, 0.017912542, 0.017920944, 0.017924319, 0.017932014, 0.017941833, 0.017951236, 0.017951778, 0.017958528, 0.017963903, 0.017966875, 0.017974403, 0.017981597, 0.017989583, 0.017992736, 0.018002153, 0.018005389, 0.018014736], 'source_diff': [0, 7.986999999997496e-06, 8.902000000001603e-06, 2.6529999999982956e-06, 8.389000000001007e-06, 3.957999999998352e-06, 2.5000000000025002e-06, 5.624999999998687e-06, 2.9729999999998646e-06, 4.888000000001502e-06, 9.666999999997927e-06, 3.736000000000711e-06, 6.695000000001006e-06, 8.027000000000728e-06, 9.056000000000342e-06, 5.419999999992098e-07, 7.874999999997467e-06, 3.847000000001266e-06, 7.916999999999647e-06, 5.068999999999907e-06, 4.097000000001516e-06, 5.419999999992098e-07, 6.194000000001032e-06, 8.222999999998176e-06, 2.999999999999531e-06, 8.861000000002367e-06, 2.6939999999975317e-06, 9.875000000002937e-06, 7.985999999998022e-06, 5.419999999992098e-07, 2.139000000001695e-06, 3.1529999999987957e-06, 5.409999999997361e-07, 9.292000000001022e-06, 2.9300000000016813e-06, 4.652999999996826e-06, 8.695000000003006e-06, 6.554999999998368e-06, 2.4450000000002248e-06, 8.402000000001103e-06, 3.374999999999906e-06, 7.694999999998536e-06, 9.819000000001188e-06, 9.402999999998107e-06, 5.420000000026792e-07, 6.749999999999812e-06, 5.374999999998437e-06, 2.972000000000391e-06, 7.527999999999702e-06, 7.193999999998563e-06, 7.986000000001492e-06, 3.1529999999987957e-06, 9.417000000001147e-06, 3.236000000000211e-06, 9.346999999999828e-06], 'eventdiff': [0, 7.986999999997496e-06, 8.902000000001603e-06, 2.6529999999982956e-06, 8.389000000001007e-06, 3.957999999998352e-06, 2.5000000000025002e-06, 5.624999999998687e-06, 2.9729999999998646e-06, 4.888000000001502e-06, 9.666999999997927e-06, 3.736000000000711e-06, 6.695000000001006e-06, 8.027000000000728e-06, 9.056000000000342e-06, 5.419999999992098e-07, 7.874999999997467e-06, 3.847000000001266e-06, 7.916999999999647e-06, 5.068999999999907e-06, 4.097000000001516e-06, 5.419999999992098e-07, 6.194000000001032e-06, 8.222999999998176e-06, 2.999999999999531e-06, 8.861000000002367e-06, 2.6939999999975317e-06, 9.875000000002937e-06, 7.985999999998022e-06, 5.419999999992098e-07, 2.139000000001695e-06, 3.1529999999987957e-06, 5.409999999997361e-07, 9.292000000001022e-06, 2.9300000000016813e-06, 4.652999999996826e-06, 8.695000000003006e-06, 6.554999999998368e-06, 2.4450000000002248e-06, 8.402000000001103e-06, 3.374999999999906e-06, 7.694999999998536e-06, 9.819000000001188e-06, 9.402999999998107e-06, 5.420000000026792e-07, 6.749999999999812e-06, 5.374999999998437e-06, 2.972000000000391e-06, 7.527999999999702e-06, 7.193999999998563e-06, 7.986000000001492e-06, 3.1529999999987957e-06, 9.417000000001147e-06, 3.236000000000211e-06, 9.346999999999828e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.399" endtime="20201112 12:26:05.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.395" endtime="20201112 12:26:05.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.406" level="INFO">${RESULT} = [{'time': 0.017717806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986999999997496e-06, 'source_diff': 7.986999999997496e-06}, {'time': 0.017729361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.403" endtime="20201112 12:26:05.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.414" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.407" endtime="20201112 12:26:05.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.419" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.418" endtime="20201112 12:26:05.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.421" level="INFO">VALUE: [7.986999999997496e-06, 2.6529999999982956e-06, 3.957999999998352e-06, 5.624999999998687e-06, 4.888000000001502e-06, 3.736000000000711e-06, 8.027000000000728e-06, 5.419999999992098e-07, 3.847000000001266e-06, 5.068999999999907e-06, 5.419999999992098e-07, 8.222999999998176e-06, 8.861000000002367e-06, 9.875000000002937e-06, 5.419999999992098e-07, 3.1529999999987957e-06, 9.292000000001022e-06, 4.652999999996826e-06, 6.554999999998368e-06, 8.402000000001103e-06, 7.694999999998536e-06, 9.402999999998107e-06, 6.749999999999812e-06, 2.972000000000391e-06, 7.193999999998563e-06, 3.1529999999987957e-06, 3.236000000000211e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.420" endtime="20201112 12:26:05.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.415" endtime="20201112 12:26:05.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.424" endtime="20201112 12:26:05.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.428" endtime="20201112 12:26:05.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.426" endtime="20201112 12:26:05.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.423" endtime="20201112 12:26:05.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.056" endtime="20201112 12:26:05.449"></status>
</kw>
<msg timestamp="20201112 12:26:05.449" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.457" endtime="20201112 12:26:05.467"></status>
</kw>
<msg timestamp="20201112 12:26:05.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.455" endtime="20201112 12:26:05.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.470" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.468" endtime="20201112 12:26:05.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.471" endtime="20201112 12:26:05.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.453" endtime="20201112 12:26:05.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.451" endtime="20201112 12:26:05.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.481" endtime="20201112 12:26:05.753"></status>
</kw>
<msg timestamp="20201112 12:26:05.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017769778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.479" endtime="20201112 12:26:05.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017769778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.756" endtime="20201112 12:26:05.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.762" endtime="20201112 12:26:05.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.476" endtime="20201112 12:26:05.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.474" endtime="20201112 12:26:05.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.768" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:05.767" endtime="20201112 12:26:05.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.772" level="INFO">VALUE: [{'time': 0.017762264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017769778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.017775431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017781486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.017788444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017796833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017801417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.017809639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.017812111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017821917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.017825764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017826306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017831389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017840319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.017846181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.017850264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.017850806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.0178585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.017862444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.017869958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513999999996662e-06, 'source_diff': 7.513999999996662e-06}, {'time': 0.017873222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.017880861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.017888792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.017896056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017902319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.017910222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017918917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.017919458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017928333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.017928875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017934833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017944194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.017949306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.017956264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9579999999978825e-06, 'source_diff': 6.9579999999978825e-06}, {'time': 0.017956806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017961333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017970514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.017977236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017979986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017982514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017987083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.017993889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.018003792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000002077e-06, 'source_diff': 9.903000000002077e-06}, {'time': 0.018011875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.018017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.018024431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.018031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.018037333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018046431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.09800000000252e-06, 'source_diff': 9.09800000000252e-06}, {'time': 0.018052514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.018056444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.018056986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018061028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018061569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018064028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.018073694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666000000001923e-06, 'source_diff': 9.666000000001923e-06}, {'time': 0.018079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:05.769" endtime="20201112 12:26:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.765" endtime="20201112 12:26:05.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:05.789" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.775" endtime="20201112 12:26:05.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.793" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:05.792" endtime="20201112 12:26:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.796" level="INFO">VALUE: {'sourcetime': [0.017762264, 0.017769778, 0.017775431, 0.017781486, 0.017788444, 0.017796833, 0.017801417, 0.017809639, 0.017812111, 0.017821917, 0.017825764, 0.017826306, 0.017831389, 0.017840319, 0.017846181, 0.017850264, 0.017850806, 0.0178585, 0.017862444, 0.017869958, 0.017873222, 0.017880861, 0.017888792, 0.017896056, 0.017902319, 0.017910222, 0.017918917, 0.017919458, 0.017928333, 0.017928875, 0.017934833, 0.017944194, 0.017949306, 0.017956264, 0.017956806, 0.017961333, 0.017970514, 0.017977236, 0.017979986, 0.017982514, 0.017987083, 0.017993889, 0.018003792, 0.018011875, 0.018017639, 0.018024431, 0.018031472, 0.018037333, 0.018046431, 0.018052514, 0.018056444, 0.018056986, 0.018061028, 0.018061569, 0.018064028, 0.018073694, 0.018079292], 'source_diff': [0, 7.514000000000132e-06, 5.653000000001296e-06, 6.054999999997868e-06, 6.958000000001352e-06, 8.389000000001007e-06, 4.5839999999984504e-06, 8.221999999998703e-06, 2.471999999999891e-06, 9.806000000001092e-06, 3.847000000001266e-06, 5.419999999992098e-07, 5.082999999999477e-06, 8.930000000000743e-06, 5.86199999999884e-06, 4.083000000001946e-06, 5.419999999992098e-07, 7.693999999999063e-06, 3.944000000002251e-06, 7.513999999996662e-06, 3.26400000000282e-06, 7.639000000000257e-06, 7.930999999999216e-06, 7.263999999999882e-06, 6.262999999999408e-06, 7.903000000000077e-06, 8.694999999999536e-06, 5.409999999997361e-07, 8.875000000001937e-06, 5.419999999992098e-07, 5.958000000000352e-06, 9.360999999999398e-06, 5.11200000000156e-06, 6.9579999999978825e-06, 5.419999999992098e-07, 4.527000000000697e-06, 9.181000000000467e-06, 6.722000000000672e-06, 2.749999999999281e-06, 2.52800000000164e-06, 4.568999999999407e-06, 6.805999999998091e-06, 9.903000000002077e-06, 8.082999999999008e-06, 5.7639999999983815e-06, 6.792000000001991e-06, 7.040999999999298e-06, 5.860999999999367e-06, 9.09800000000252e-06, 6.0829999999970075e-06, 3.930000000002681e-06, 5.419999999992098e-07, 4.041999999999241e-06, 5.409999999997361e-07, 2.4589999999997947e-06, 9.666000000001923e-06, 5.5979999999990204e-06], 'eventdiff': [0, 7.514000000000132e-06, 5.653000000001296e-06, 6.054999999997868e-06, 6.958000000001352e-06, 8.389000000001007e-06, 4.5839999999984504e-06, 8.221999999998703e-06, 2.471999999999891e-06, 9.806000000001092e-06, 3.847000000001266e-06, 5.419999999992098e-07, 5.082999999999477e-06, 8.930000000000743e-06, 5.86199999999884e-06, 4.083000000001946e-06, 5.419999999992098e-07, 7.693999999999063e-06, 3.944000000002251e-06, 7.513999999996662e-06, 3.26400000000282e-06, 7.639000000000257e-06, 7.930999999999216e-06, 7.263999999999882e-06, 6.262999999999408e-06, 7.903000000000077e-06, 8.694999999999536e-06, 5.409999999997361e-07, 8.875000000001937e-06, 5.419999999992098e-07, 5.958000000000352e-06, 9.360999999999398e-06, 5.11200000000156e-06, 6.9579999999978825e-06, 5.419999999992098e-07, 4.527000000000697e-06, 9.181000000000467e-06, 6.722000000000672e-06, 2.749999999999281e-06, 2.52800000000164e-06, 4.568999999999407e-06, 6.805999999998091e-06, 9.903000000002077e-06, 8.082999999999008e-06, 5.7639999999983815e-06, 6.792000000001991e-06, 7.040999999999298e-06, 5.860999999999367e-06, 9.09800000000252e-06, 6.0829999999970075e-06, 3.930000000002681e-06, 5.419999999992098e-07, 4.041999999999241e-06, 5.409999999997361e-07, 2.4589999999997947e-06, 9.666000000001923e-06, 5.5979999999990204e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:05.794" endtime="20201112 12:26:05.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.790" endtime="20201112 12:26:05.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:05.801" level="INFO">${RESULT} = [{'time': 0.017769778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.017781486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:05.798" endtime="20201112 12:26:05.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:05.810" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:05.802" endtime="20201112 12:26:05.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.814" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:05.813" endtime="20201112 12:26:05.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.816" level="INFO">VALUE: [7.514000000000132e-06, 6.054999999997868e-06, 8.389000000001007e-06, 8.221999999998703e-06, 9.806000000001092e-06, 5.419999999992098e-07, 8.930000000000743e-06, 4.083000000001946e-06, 7.693999999999063e-06, 7.513999999996662e-06, 7.639000000000257e-06, 7.263999999999882e-06, 7.903000000000077e-06, 5.409999999997361e-07, 5.419999999992098e-07, 9.360999999999398e-06, 6.9579999999978825e-06, 4.527000000000697e-06, 6.722000000000672e-06, 2.52800000000164e-06, 6.805999999998091e-06, 8.082999999999008e-06, 6.792000000001991e-06, 5.860999999999367e-06, 6.0829999999970075e-06, 5.419999999992098e-07, 5.409999999997361e-07, 9.666000000001923e-06]</msg>
<status status="PASS" starttime="20201112 12:26:05.815" endtime="20201112 12:26:05.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.810" endtime="20201112 12:26:05.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.820" endtime="20201112 12:26:05.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:05.823" endtime="20201112 12:26:05.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.822" endtime="20201112 12:26:05.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.818" endtime="20201112 12:26:05.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.450" endtime="20201112 12:26:05.844"></status>
</kw>
<msg timestamp="20201112 12:26:05.844" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.852" endtime="20201112 12:26:05.863"></status>
</kw>
<msg timestamp="20201112 12:26:05.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.850" endtime="20201112 12:26:05.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:05.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:05.864" endtime="20201112 12:26:05.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.867" endtime="20201112 12:26:05.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.848" endtime="20201112 12:26:05.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.846" endtime="20201112 12:26:05.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:05.876" endtime="20201112 12:26:06.148"></status>
</kw>
<msg timestamp="20201112 12:26:06.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017583028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:05.874" endtime="20201112 12:26:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017583028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.152" endtime="20201112 12:26:06.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.158" endtime="20201112 12:26:06.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.872" endtime="20201112 12:26:06.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.870" endtime="20201112 12:26:06.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.164" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.163" endtime="20201112 12:26:06.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.168" level="INFO">VALUE: [{'time': 0.017583028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017593389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017603028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.017607611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.017616097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.017625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.017631514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017641333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.017645458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017651764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.017654986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017664889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.017671875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.017675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017675778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01768275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.017683292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017686236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.017694375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.017704194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.017711403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.017715097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017715639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017724444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.017724986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.017741069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.017749222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.017749764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017755069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.017758222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.017758764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017760903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.017766458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.554999999997368e-06, 'source_diff': 5.554999999997368e-06}, {'time': 0.017771333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.017775986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017776528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017785569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.017786111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017792875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.017795361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017799097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017802931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.017803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017811639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.017820819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.017826903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017830292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017838, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.707999999998633e-06, 'source_diff': 7.707999999998633e-06}, {'time': 0.017844778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.017853264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.017856875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017862653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017871278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017874778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017883139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.017889861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017892639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.165" endtime="20201112 12:26:06.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.161" endtime="20201112 12:26:06.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.186" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.171" endtime="20201112 12:26:06.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.189" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.188" endtime="20201112 12:26:06.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.193" level="INFO">VALUE: {'sourcetime': [0.017583028, 0.017589264, 0.017593389, 0.017603028, 0.017607611, 0.017616097, 0.017625431, 0.017631514, 0.017641333, 0.017645458, 0.017651764, 0.017654986, 0.017664889, 0.017671875, 0.017675236, 0.017675778, 0.01768275, 0.017683292, 0.017686236, 0.017694375, 0.017704194, 0.017711403, 0.017715097, 0.017715639, 0.017724444, 0.017724986, 0.017731889, 0.017741069, 0.017749222, 0.017749764, 0.017755069, 0.017758222, 0.017758764, 0.017760903, 0.017766458, 0.017771333, 0.017775986, 0.017776528, 0.017785569, 0.017786111, 0.017792875, 0.017795361, 0.017799097, 0.017802931, 0.017803472, 0.017811639, 0.017820819, 0.017826903, 0.017830292, 0.017838, 0.017844778, 0.017853264, 0.017856875, 0.017862653, 0.017871278, 0.017874778, 0.017883139, 0.017889861, 0.017892639], 'source_diff': [0, 6.235999999999742e-06, 4.125000000000656e-06, 9.638999999998787e-06, 4.582999999998977e-06, 8.486000000001992e-06, 9.333999999999731e-06, 6.083000000000477e-06, 9.818999999997718e-06, 4.125000000000656e-06, 6.306000000001061e-06, 3.222000000000641e-06, 9.902999999998607e-06, 6.986000000000492e-06, 3.361000000000336e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 2.944000000001251e-06, 8.138999999997287e-06, 9.819000000001188e-06, 7.209000000001076e-06, 3.693999999998532e-06, 5.419999999992098e-07, 8.805000000000618e-06, 5.420000000026792e-07, 6.9029999999990765e-06, 9.180000000000993e-06, 8.152999999996857e-06, 5.420000000026792e-07, 5.304999999997118e-06, 3.153000000002265e-06, 5.419999999992098e-07, 2.139000000001695e-06, 5.554999999997368e-06, 4.875000000001406e-06, 4.653000000000296e-06, 5.419999999992098e-07, 9.041000000001298e-06, 5.419999999992098e-07, 6.763999999999382e-06, 2.485999999999461e-06, 3.736000000000711e-06, 3.83400000000117e-06, 5.409999999997361e-07, 8.166999999999897e-06, 9.180000000000993e-06, 6.0839999999999506e-06, 3.3889999999994758e-06, 7.707999999998633e-06, 6.7779999999989515e-06, 8.486000000001992e-06, 3.611000000000586e-06, 5.7779999999979514e-06, 8.625000000001687e-06, 3.500000000000031e-06, 8.360999999998397e-06, 6.722000000000672e-06, 2.7779999999984206e-06], 'eventdiff': [0, 6.235999999999742e-06, 4.125000000000656e-06, 9.638999999998787e-06, 4.582999999998977e-06, 8.486000000001992e-06, 9.333999999999731e-06, 6.083000000000477e-06, 9.818999999997718e-06, 4.125000000000656e-06, 6.306000000001061e-06, 3.222000000000641e-06, 9.902999999998607e-06, 6.986000000000492e-06, 3.361000000000336e-06, 5.419999999992098e-07, 6.972000000000922e-06, 5.419999999992098e-07, 2.944000000001251e-06, 8.138999999997287e-06, 9.819000000001188e-06, 7.209000000001076e-06, 3.693999999998532e-06, 5.419999999992098e-07, 8.805000000000618e-06, 5.420000000026792e-07, 6.9029999999990765e-06, 9.180000000000993e-06, 8.152999999996857e-06, 5.420000000026792e-07, 5.304999999997118e-06, 3.153000000002265e-06, 5.419999999992098e-07, 2.139000000001695e-06, 5.554999999997368e-06, 4.875000000001406e-06, 4.653000000000296e-06, 5.419999999992098e-07, 9.041000000001298e-06, 5.419999999992098e-07, 6.763999999999382e-06, 2.485999999999461e-06, 3.736000000000711e-06, 3.83400000000117e-06, 5.409999999997361e-07, 8.166999999999897e-06, 9.180000000000993e-06, 6.0839999999999506e-06, 3.3889999999994758e-06, 7.707999999998633e-06, 6.7779999999989515e-06, 8.486000000001992e-06, 3.611000000000586e-06, 5.7779999999979514e-06, 8.625000000001687e-06, 3.500000000000031e-06, 8.360999999998397e-06, 6.722000000000672e-06, 2.7779999999984206e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:06.191" endtime="20201112 12:26:06.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.187" endtime="20201112 12:26:06.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.197" level="INFO">${RESULT} = [{'time': 0.017589264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017603028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.195" endtime="20201112 12:26:06.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.206" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.198" endtime="20201112 12:26:06.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.211" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.210" endtime="20201112 12:26:06.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.213" level="INFO">VALUE: [6.235999999999742e-06, 9.638999999998787e-06, 8.486000000001992e-06, 6.083000000000477e-06, 4.125000000000656e-06, 3.222000000000641e-06, 6.986000000000492e-06, 5.419999999992098e-07, 5.419999999992098e-07, 8.138999999997287e-06, 7.209000000001076e-06, 5.419999999992098e-07, 5.420000000026792e-07, 9.180000000000993e-06, 5.420000000026792e-07, 3.153000000002265e-06, 2.139000000001695e-06, 4.875000000001406e-06, 5.419999999992098e-07, 5.419999999992098e-07, 2.485999999999461e-06, 3.83400000000117e-06, 8.166999999999897e-06, 6.0839999999999506e-06, 7.707999999998633e-06, 8.486000000001992e-06, 5.7779999999979514e-06, 3.500000000000031e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.212" endtime="20201112 12:26:06.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.207" endtime="20201112 12:26:06.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.216" endtime="20201112 12:26:06.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.220" endtime="20201112 12:26:06.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.218" endtime="20201112 12:26:06.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.215" endtime="20201112 12:26:06.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:05.845" endtime="20201112 12:26:06.241"></status>
</kw>
<msg timestamp="20201112 12:26:06.242" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.249" endtime="20201112 12:26:06.261"></status>
</kw>
<msg timestamp="20201112 12:26:06.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.248" endtime="20201112 12:26:06.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.262" endtime="20201112 12:26:06.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.265" endtime="20201112 12:26:06.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.245" endtime="20201112 12:26:06.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.243" endtime="20201112 12:26:06.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.274" endtime="20201112 12:26:06.546"></status>
</kw>
<msg timestamp="20201112 12:26:06.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:06.272" endtime="20201112 12:26:06.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0177065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:06.549" endtime="20201112 12:26:06.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.556" endtime="20201112 12:26:06.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.270" endtime="20201112 12:26:06.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.268" endtime="20201112 12:26:06.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.562" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.561" endtime="20201112 12:26:06.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.566" level="INFO">VALUE: [{'time': 0.0177065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017710847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.017711389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.0177165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017723903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.017729681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017739042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.017746222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.017749931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.017752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512999999999127e-06, 'source_diff': 2.512999999999127e-06}, {'time': 0.017760847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.017764028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.01777225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.017779722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.017780264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017787903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.017793014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017798069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017798611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01780275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017809694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.017816194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.017824889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.017828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.017836264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.017836806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017840375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5689999999984068e-06, 'source_diff': 3.5689999999984068e-06}, {'time': 0.017845444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017849875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.017852847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.017867319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017873167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.017882097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017885667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.017894556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.017900861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.017905208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.01791225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.042000000002241e-06, 'source_diff': 7.042000000002241e-06}, {'time': 0.017921111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.017930931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.017931472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017935597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017942625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.017943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017945611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017946153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017949264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017953111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017953653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017959264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017967597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.017972486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017981444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.017988722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.017991694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017998014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.018004875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.563" endtime="20201112 12:26:06.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.559" endtime="20201112 12:26:06.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.584" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.569" endtime="20201112 12:26:06.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.588" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.587" endtime="20201112 12:26:06.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.592" level="INFO">VALUE: {'sourcetime': [0.0177065, 0.017707042, 0.017710847, 0.017711389, 0.0177165, 0.017723903, 0.017729681, 0.017739042, 0.017746222, 0.017749931, 0.017752444, 0.017760847, 0.017764028, 0.01777225, 0.017779722, 0.017780264, 0.017787903, 0.017793014, 0.017798069, 0.017798611, 0.01780275, 0.017809694, 0.017816194, 0.017824889, 0.017828597, 0.017836264, 0.017836806, 0.017840375, 0.017845444, 0.017849875, 0.017852847, 0.017861236, 0.017867319, 0.017873167, 0.017881556, 0.017882097, 0.017885667, 0.017894556, 0.017900861, 0.017905208, 0.01791225, 0.017921111, 0.017930931, 0.017931472, 0.017935597, 0.017942625, 0.017943167, 0.017945611, 0.017946153, 0.017949264, 0.017953111, 0.017953653, 0.017958722, 0.017959264, 0.017967597, 0.017972486, 0.017981444, 0.017988722, 0.017991694, 0.017998014, 0.018004875], 'source_diff': [0, 5.419999999992098e-07, 3.804999999999087e-06, 5.420000000026792e-07, 5.110999999998617e-06, 7.402999999999577e-06, 5.778000000001421e-06, 9.360999999999398e-06, 7.179999999998993e-06, 3.709000000001045e-06, 2.512999999999127e-06, 8.403000000000577e-06, 3.181000000001405e-06, 8.221999999998703e-06, 7.472000000001422e-06, 5.419999999992098e-07, 7.639000000000257e-06, 5.110999999998617e-06, 5.055000000000337e-06, 5.419999999992098e-07, 4.139000000000226e-06, 6.944000000001782e-06, 6.499999999999562e-06, 8.694999999999536e-06, 3.708000000001571e-06, 7.666999999999397e-06, 5.419999999992098e-07, 3.5689999999984068e-06, 5.068999999999907e-06, 4.431000000002655e-06, 2.972000000000391e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.8479999999992704e-06, 8.389000000001007e-06, 5.409999999997361e-07, 3.57000000000135e-06, 8.888999999998037e-06, 6.305000000001587e-06, 4.346999999998297e-06, 7.042000000002241e-06, 8.860999999998898e-06, 9.820000000000662e-06, 5.409999999997361e-07, 4.125000000000656e-06, 7.0279999999992016e-06, 5.419999999992098e-07, 2.444000000000751e-06, 5.419999999992098e-07, 3.111000000000086e-06, 3.847000000001266e-06, 5.419999999992098e-07, 5.068999999999907e-06, 5.419999999992098e-07, 8.332999999999258e-06, 4.889000000000976e-06, 8.957999999999883e-06, 7.2779999999994516e-06, 2.972000000000391e-06, 6.320000000000631e-06, 6.861000000000367e-06], 'eventdiff': [0, 5.419999999992098e-07, 3.804999999999087e-06, 5.420000000026792e-07, 5.110999999998617e-06, 7.402999999999577e-06, 5.778000000001421e-06, 9.360999999999398e-06, 7.179999999998993e-06, 3.709000000001045e-06, 2.512999999999127e-06, 8.403000000000577e-06, 3.181000000001405e-06, 8.221999999998703e-06, 7.472000000001422e-06, 5.419999999992098e-07, 7.639000000000257e-06, 5.110999999998617e-06, 5.055000000000337e-06, 5.419999999992098e-07, 4.139000000000226e-06, 6.944000000001782e-06, 6.499999999999562e-06, 8.694999999999536e-06, 3.708000000001571e-06, 7.666999999999397e-06, 5.419999999992098e-07, 3.5689999999984068e-06, 5.068999999999907e-06, 4.431000000002655e-06, 2.972000000000391e-06, 8.388999999997537e-06, 6.083000000000477e-06, 5.8479999999992704e-06, 8.389000000001007e-06, 5.409999999997361e-07, 3.57000000000135e-06, 8.888999999998037e-06, 6.305000000001587e-06, 4.346999999998297e-06, 7.042000000002241e-06, 8.860999999998898e-06, 9.820000000000662e-06, 5.409999999997361e-07, 4.125000000000656e-06, 7.0279999999992016e-06, 5.419999999992098e-07, 2.444000000000751e-06, 5.419999999992098e-07, 3.111000000000086e-06, 3.847000000001266e-06, 5.419999999992098e-07, 5.068999999999907e-06, 5.419999999992098e-07, 8.332999999999258e-06, 4.889000000000976e-06, 8.957999999999883e-06, 7.2779999999994516e-06, 2.972000000000391e-06, 6.320000000000631e-06, 6.861000000000367e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:06.589" endtime="20201112 12:26:06.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.585" endtime="20201112 12:26:06.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.596" level="INFO">${RESULT} = [{'time': 0.017707042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017711389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.594" endtime="20201112 12:26:06.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:06.605" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.597" endtime="20201112 12:26:06.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.610" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:06.609" endtime="20201112 12:26:06.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.612" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000026792e-07, 7.402999999999577e-06, 9.360999999999398e-06, 3.709000000001045e-06, 8.403000000000577e-06, 8.221999999998703e-06, 5.419999999992098e-07, 5.110999999998617e-06, 5.419999999992098e-07, 6.944000000001782e-06, 8.694999999999536e-06, 7.666999999999397e-06, 3.5689999999984068e-06, 4.431000000002655e-06, 8.388999999997537e-06, 5.8479999999992704e-06, 5.409999999997361e-07, 8.888999999998037e-06, 4.346999999998297e-06, 8.860999999998898e-06, 5.409999999997361e-07, 7.0279999999992016e-06, 2.444000000000751e-06, 3.111000000000086e-06, 5.419999999992098e-07, 5.419999999992098e-07, 4.889000000000976e-06, 7.2779999999994516e-06, 6.320000000000631e-06]</msg>
<status status="PASS" starttime="20201112 12:26:06.611" endtime="20201112 12:26:06.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.606" endtime="20201112 12:26:06.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.615" endtime="20201112 12:26:06.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:06.619" endtime="20201112 12:26:06.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.617" endtime="20201112 12:26:06.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.614" endtime="20201112 12:26:06.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.242" endtime="20201112 12:26:06.640"></status>
</kw>
<msg timestamp="20201112 12:26:06.640" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.649" endtime="20201112 12:26:06.660"></status>
</kw>
<msg timestamp="20201112 12:26:06.660" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.647" endtime="20201112 12:26:06.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.663" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:06.661" endtime="20201112 12:26:06.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.664" endtime="20201112 12:26:06.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.644" endtime="20201112 12:26:06.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.642" endtime="20201112 12:26:06.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.673" endtime="20201112 12:26:06.946"></status>
</kw>
<msg timestamp="20201112 12:26:06.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018597681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.671" endtime="20201112 12:26:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018597681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:06.950" endtime="20201112 12:26:06.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:06.956" endtime="20201112 12:26:06.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.669" endtime="20201112 12:26:06.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.667" endtime="20201112 12:26:06.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.962" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:06.961" endtime="20201112 12:26:06.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.966" level="INFO">VALUE: [{'time': 0.018594306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018597681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018598222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018602292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.018609069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.018612292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018619333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.018622958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.0186235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018625708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.01862625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018629181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018635278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018642542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018645458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.018651347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018659, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018666653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018667194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.018673458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.018678986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018679528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999997772e-06, 'source_diff': 7.735999999997772e-06}, {'time': 0.018696333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.018700917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.0187055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018714903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018723708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.804999999997148e-06, 'source_diff': 8.804999999997148e-06}, {'time': 0.018733056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.018742931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.0187485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.018751889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018757889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018758431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018766069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.638000000000783e-06, 'source_diff': 7.638000000000783e-06}, {'time': 0.018768736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018776722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.0187825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018790486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.018800083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.018804417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.018808514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018809056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018813903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018823236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018829806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.018834375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018834917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018843486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.018846167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.018851, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018857139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018859819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018860361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018863139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.018869542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.0188765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018879653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018880194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018883833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:06.963" endtime="20201112 12:26:06.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.959" endtime="20201112 12:26:06.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:06.984" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.969" endtime="20201112 12:26:06.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.988" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:06.987" endtime="20201112 12:26:06.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:06.992" level="INFO">VALUE: {'sourcetime': [0.018594306, 0.018597681, 0.018598222, 0.018602292, 0.018609069, 0.018612292, 0.018619333, 0.018622958, 0.0186235, 0.018625708, 0.01862625, 0.018629181, 0.018635278, 0.018642542, 0.018645458, 0.018651347, 0.018659, 0.018666653, 0.018667194, 0.018673458, 0.018678986, 0.018679528, 0.018687264, 0.018696333, 0.018700917, 0.0187055, 0.018714361, 0.018714903, 0.018723708, 0.018733056, 0.018742931, 0.0187485, 0.018751889, 0.018757889, 0.018758431, 0.018766069, 0.018768736, 0.018776722, 0.0187825, 0.018790486, 0.018800083, 0.018804417, 0.018808514, 0.018809056, 0.018813903, 0.018823236, 0.018829806, 0.018834375, 0.018834917, 0.018843486, 0.018846167, 0.018851, 0.018857139, 0.018859819, 0.018860361, 0.018863139, 0.018869542, 0.0188765, 0.018879653, 0.018880194, 0.018883833], 'source_diff': [0, 3.374999999999906e-06, 5.409999999997361e-07, 4.0699999999983805e-06, 6.776999999999478e-06, 3.2230000000001147e-06, 7.040999999999298e-06, 3.625000000000156e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07, 2.931000000001155e-06, 6.097000000000047e-06, 7.263999999999882e-06, 2.915999999998642e-06, 5.8889999999985065e-06, 7.652999999999827e-06, 7.652999999999827e-06, 5.410000000032056e-07, 6.2639999999988816e-06, 5.528000000001171e-06, 5.419999999992098e-07, 7.735999999997772e-06, 9.069000000000438e-06, 4.58400000000192e-06, 4.582999999998977e-06, 8.860999999998898e-06, 5.420000000026792e-07, 8.804999999997148e-06, 9.34800000000277e-06, 9.874999999999468e-06, 5.569000000000407e-06, 3.3889999999994758e-06, 5.999999999999062e-06, 5.419999999992098e-07, 7.638000000000783e-06, 2.667000000001335e-06, 7.985999999998022e-06, 5.778000000001421e-06, 7.985999999998022e-06, 9.597000000000078e-06, 4.33400000000167e-06, 4.096999999998047e-06, 5.420000000026792e-07, 4.846999999998797e-06, 9.333000000000258e-06, 6.570000000000881e-06, 4.568999999999407e-06, 5.419999999992098e-07, 8.568999999999938e-06, 2.681000000000905e-06, 4.832999999999227e-06, 6.1389999999987566e-06, 2.6800000000014312e-06, 5.419999999992098e-07, 2.77800000000189e-06, 6.4029999999985765e-06, 6.958000000001352e-06, 3.1529999999987957e-06, 5.409999999997361e-07, 3.6389999999997258e-06], 'eventdiff': [0, 3.374999999999906e-06, 5.409999999997361e-07, 4.0699999999983805e-06, 6.776999999999478e-06, 3.2230000000001147e-06, 7.040999999999298e-06, 3.625000000000156e-06, 5.420000000026792e-07, 2.208000000000071e-06, 5.419999999992098e-07, 2.931000000001155e-06, 6.097000000000047e-06, 7.263999999999882e-06, 2.915999999998642e-06, 5.8889999999985065e-06, 7.652999999999827e-06, 7.652999999999827e-06, 5.410000000032056e-07, 6.2639999999988816e-06, 5.528000000001171e-06, 5.419999999992098e-07, 7.735999999997772e-06, 9.069000000000438e-06, 4.58400000000192e-06, 4.582999999998977e-06, 8.860999999998898e-06, 5.420000000026792e-07, 8.804999999997148e-06, 9.34800000000277e-06, 9.874999999999468e-06, 5.569000000000407e-06, 3.3889999999994758e-06, 5.999999999999062e-06, 5.419999999992098e-07, 7.638000000000783e-06, 2.667000000001335e-06, 7.985999999998022e-06, 5.778000000001421e-06, 7.985999999998022e-06, 9.597000000000078e-06, 4.33400000000167e-06, 4.096999999998047e-06, 5.420000000026792e-07, 4.846999999998797e-06, 9.333000000000258e-06, 6.570000000000881e-06, 4.568999999999407e-06, 5.419999999992098e-07, 8.568999999999938e-06, 2.681000000000905e-06, 4.832999999999227e-06, 6.1389999999987566e-06, 2.6800000000014312e-06, 5.419999999992098e-07, 2.77800000000189e-06, 6.4029999999985765e-06, 6.958000000001352e-06, 3.1529999999987957e-06, 5.409999999997361e-07, 3.6389999999997258e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:06.989" endtime="20201112 12:26:06.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.985" endtime="20201112 12:26:06.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:06.996" level="INFO">${RESULT} = [{'time': 0.018597681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018602292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:06.993" endtime="20201112 12:26:06.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.005" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:06.997" endtime="20201112 12:26:07.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.010" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.008" endtime="20201112 12:26:07.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.012" level="INFO">VALUE: [3.374999999999906e-06, 4.0699999999983805e-06, 3.2230000000001147e-06, 3.625000000000156e-06, 2.208000000000071e-06, 2.931000000001155e-06, 7.263999999999882e-06, 5.8889999999985065e-06, 7.652999999999827e-06, 6.2639999999988816e-06, 5.419999999992098e-07, 9.069000000000438e-06, 4.582999999998977e-06, 5.420000000026792e-07, 9.34800000000277e-06, 5.569000000000407e-06, 5.999999999999062e-06, 7.638000000000783e-06, 7.985999999998022e-06, 7.985999999998022e-06, 4.33400000000167e-06, 5.420000000026792e-07, 9.333000000000258e-06, 4.568999999999407e-06, 8.568999999999938e-06, 4.832999999999227e-06, 2.6800000000014312e-06, 2.77800000000189e-06, 6.958000000001352e-06, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:26:07.011" endtime="20201112 12:26:07.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.006" endtime="20201112 12:26:07.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.015" endtime="20201112 12:26:07.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.019" endtime="20201112 12:26:07.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.017" endtime="20201112 12:26:07.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.014" endtime="20201112 12:26:07.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:06.641" endtime="20201112 12:26:07.040"></status>
</kw>
<msg timestamp="20201112 12:26:07.040" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.048" endtime="20201112 12:26:07.059"></status>
</kw>
<msg timestamp="20201112 12:26:07.059" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.046" endtime="20201112 12:26:07.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.060" endtime="20201112 12:26:07.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.063" endtime="20201112 12:26:07.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.043" endtime="20201112 12:26:07.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.042" endtime="20201112 12:26:07.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.073" endtime="20201112 12:26:07.345"></status>
</kw>
<msg timestamp="20201112 12:26:07.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017686736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.071" endtime="20201112 12:26:07.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017686736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.348" endtime="20201112 12:26:07.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.354" endtime="20201112 12:26:07.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.068" endtime="20201112 12:26:07.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.066" endtime="20201112 12:26:07.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.360" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.359" endtime="20201112 12:26:07.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.364" level="INFO">VALUE: [{'time': 0.017676847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017686736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.017692347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017697014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017704764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.017707444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.017715347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017721903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.017729583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017736306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.017736847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017740972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017743639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017744181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017747583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017752736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017758806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.017765542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.017768681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.139000000002695e-06, 'source_diff': 3.139000000002695e-06}, {'time': 0.017769222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017776667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999998286e-06, 'source_diff': 7.444999999998286e-06}, {'time': 0.017777208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017784847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.017789014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017798847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.017808028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.017814986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017823681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.017830403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017837681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.017847028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017853056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.017859611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.017863069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017869083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017875403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017883556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.017886236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.017888681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.01789525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.017900361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017900903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017911292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.017919056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.017925111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.017932792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.017938875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017945125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017951861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.017954611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017960792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017970375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583000000000508e-06, 'source_diff': 9.583000000000508e-06}, {'time': 0.017976847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.017985097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.249999999997842e-06, 'source_diff': 8.249999999997842e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:07.362" endtime="20201112 12:26:07.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.357" endtime="20201112 12:26:07.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.380" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.367" endtime="20201112 12:26:07.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.384" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.383" endtime="20201112 12:26:07.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.388" level="INFO">VALUE: {'sourcetime': [0.017676847, 0.017686736, 0.017692347, 0.017697014, 0.017704764, 0.017707444, 0.017715347, 0.017721903, 0.017729583, 0.017736306, 0.017736847, 0.017740972, 0.017743639, 0.017744181, 0.017747583, 0.017752736, 0.017758806, 0.017765542, 0.017768681, 0.017769222, 0.017776667, 0.017777208, 0.017784847, 0.017789014, 0.017798847, 0.017808028, 0.017814986, 0.017823681, 0.017830403, 0.017837681, 0.017847028, 0.017853056, 0.017859611, 0.017863069, 0.017869083, 0.017875403, 0.017883556, 0.017886236, 0.017888681, 0.01789525, 0.017900361, 0.017900903, 0.017905736, 0.017911292, 0.017919056, 0.017925111, 0.017932792, 0.017938875, 0.017945125, 0.017951861, 0.017954611, 0.017960792, 0.017970375, 0.017976847, 0.017985097], 'source_diff': [0, 9.889000000002507e-06, 5.610999999999117e-06, 4.666999999999866e-06, 7.750000000000812e-06, 2.679999999997962e-06, 7.903000000000077e-06, 6.556000000001311e-06, 7.679999999999493e-06, 6.7230000000001455e-06, 5.409999999997361e-07, 4.125000000000656e-06, 2.6669999999978655e-06, 5.420000000026792e-07, 3.401999999999572e-06, 5.153000000000796e-06, 6.069999999996911e-06, 6.736000000000242e-06, 3.139000000002695e-06, 5.409999999997361e-07, 7.444999999998286e-06, 5.409999999997361e-07, 7.639000000000257e-06, 4.166999999999366e-06, 9.833000000000758e-06, 9.181000000000467e-06, 6.958000000001352e-06, 8.694999999999536e-06, 6.722000000000672e-06, 7.2779999999994516e-06, 9.346999999999828e-06, 6.0279999999982015e-06, 6.555000000001837e-06, 3.4579999999978517e-06, 6.014000000002101e-06, 6.320000000000631e-06, 8.152999999996857e-06, 2.6800000000014312e-06, 2.4450000000002248e-06, 6.569000000001407e-06, 5.110999999998617e-06, 5.419999999992098e-07, 4.832999999999227e-06, 5.556000000000311e-06, 7.764000000000382e-06, 6.055000000001337e-06, 7.680999999998966e-06, 6.083000000000477e-06, 6.249999999999312e-06, 6.736000000000242e-06, 2.749999999999281e-06, 6.181000000000936e-06, 9.583000000000508e-06, 6.472000000000422e-06, 8.249999999997842e-06], 'eventdiff': [0, 9.889000000002507e-06, 5.610999999999117e-06, 4.666999999999866e-06, 7.750000000000812e-06, 2.679999999997962e-06, 7.903000000000077e-06, 6.556000000001311e-06, 7.679999999999493e-06, 6.7230000000001455e-06, 5.409999999997361e-07, 4.125000000000656e-06, 2.6669999999978655e-06, 5.420000000026792e-07, 3.401999999999572e-06, 5.153000000000796e-06, 6.069999999996911e-06, 6.736000000000242e-06, 3.139000000002695e-06, 5.409999999997361e-07, 7.444999999998286e-06, 5.409999999997361e-07, 7.639000000000257e-06, 4.166999999999366e-06, 9.833000000000758e-06, 9.181000000000467e-06, 6.958000000001352e-06, 8.694999999999536e-06, 6.722000000000672e-06, 7.2779999999994516e-06, 9.346999999999828e-06, 6.0279999999982015e-06, 6.555000000001837e-06, 3.4579999999978517e-06, 6.014000000002101e-06, 6.320000000000631e-06, 8.152999999996857e-06, 2.6800000000014312e-06, 2.4450000000002248e-06, 6.569000000001407e-06, 5.110999999998617e-06, 5.419999999992098e-07, 4.832999999999227e-06, 5.556000000000311e-06, 7.764000000000382e-06, 6.055000000001337e-06, 7.680999999998966e-06, 6.083000000000477e-06, 6.249999999999312e-06, 6.736000000000242e-06, 2.749999999999281e-06, 6.181000000000936e-06, 9.583000000000508e-06, 6.472000000000422e-06, 8.249999999997842e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:07.385" endtime="20201112 12:26:07.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.381" endtime="20201112 12:26:07.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.392" level="INFO">${RESULT} = [{'time': 0.017686736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.017697014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:07.389" endtime="20201112 12:26:07.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.401" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.393" endtime="20201112 12:26:07.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.405" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.404" endtime="20201112 12:26:07.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.408" level="INFO">VALUE: [9.889000000002507e-06, 4.666999999999866e-06, 2.679999999997962e-06, 6.556000000001311e-06, 6.7230000000001455e-06, 4.125000000000656e-06, 5.420000000026792e-07, 5.153000000000796e-06, 6.736000000000242e-06, 5.409999999997361e-07, 5.409999999997361e-07, 4.166999999999366e-06, 9.181000000000467e-06, 8.694999999999536e-06, 7.2779999999994516e-06, 6.0279999999982015e-06, 3.4579999999978517e-06, 6.320000000000631e-06, 2.6800000000014312e-06, 6.569000000001407e-06, 5.419999999992098e-07, 5.556000000000311e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.736000000000242e-06, 6.181000000000936e-06, 6.472000000000422e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.406" endtime="20201112 12:26:07.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.402" endtime="20201112 12:26:07.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.411" endtime="20201112 12:26:07.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.415" endtime="20201112 12:26:07.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.414" endtime="20201112 12:26:07.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.409" endtime="20201112 12:26:07.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.040" endtime="20201112 12:26:07.436"></status>
</kw>
<msg timestamp="20201112 12:26:07.436" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.444" endtime="20201112 12:26:07.456"></status>
</kw>
<msg timestamp="20201112 12:26:07.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.443" endtime="20201112 12:26:07.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.457" endtime="20201112 12:26:07.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.460" endtime="20201112 12:26:07.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.440" endtime="20201112 12:26:07.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.438" endtime="20201112 12:26:07.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.469" endtime="20201112 12:26:07.741"></status>
</kw>
<msg timestamp="20201112 12:26:07.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.467" endtime="20201112 12:26:07.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.744" endtime="20201112 12:26:07.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.750" endtime="20201112 12:26:07.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.464" endtime="20201112 12:26:07.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.463" endtime="20201112 12:26:07.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.757" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:07.756" endtime="20201112 12:26:07.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.761" level="INFO">VALUE: [{'time': 0.017560431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017565736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.01757175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017581639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017586778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017592069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.017594819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.017601847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.017602389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017611514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.017619194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.017625194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017625736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017633125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.017637944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017647764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.017651639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017654792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017658181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017661903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017666083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.017670722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017676319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017676861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017685667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.017686208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017688417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.209000000003014e-06, 'source_diff': 2.209000000003014e-06}, {'time': 0.017688958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017693958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017703069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017710764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.017718903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.017723722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017726472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017736056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.583999999999981e-06, 'source_diff': 9.583999999999981e-06}, {'time': 0.017736597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017745417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.017752208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.017756625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.01776025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017763736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.017770514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.778000000002421e-06, 'source_diff': 6.778000000002421e-06}, {'time': 0.017779625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.017783014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017783556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.01779125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.017800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017809236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.017816028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.792000000001991e-06, 'source_diff': 6.792000000001991e-06}, {'time': 0.017823778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.017827875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017828417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017834125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017834667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017843708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.01784425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017849097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017856361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017859278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017868694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416000000001673e-06, 'source_diff': 9.416000000001673e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:07.758" endtime="20201112 12:26:07.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.754" endtime="20201112 12:26:07.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:07.779" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.764" endtime="20201112 12:26:07.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.783" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:07.782" endtime="20201112 12:26:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.786" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.017560431, 0.017565736, 0.01757175, 0.017581639, 0.017586778, 0.017592069, 0.017594819, 0.017601847, 0.017602389, 0.017611514, 0.017619194, 0.017625194, 0.017625736, 0.017633125, 0.017637944, 0.017647764, 0.017651639, 0.017654792, 0.017658181, 0.017661903, 0.017666083, 0.017670722, 0.017676319, 0.017676861, 0.017685667, 0.017686208, 0.017688417, 0.017688958, 0.017693958, 0.017703069, 0.017710764, 0.017718903, 0.017723722, 0.017726472, 0.017736056, 0.017736597, 0.017745417, 0.017752208, 0.017756625, 0.01776025, 0.017763736, 0.017770514, 0.017779625, 0.017783014, 0.017783556, 0.01779125, 0.017800597, 0.017809236, 0.017816028, 0.017823778, 0.017827875, 0.017828417, 0.017834125, 0.017834667, 0.017843708, 0.01784425, 0.017849097, 0.017856361, 0.017859278, 0.017868694], 'source_diff': [0, 5.304999999997118e-06, 6.014000000002101e-06, 9.888999999999037e-06, 5.139000000001226e-06, 5.290999999997548e-06, 2.7500000000027502e-06, 7.0279999999992016e-06, 5.419999999992098e-07, 9.125000000002187e-06, 7.679999999999493e-06, 5.999999999999062e-06, 5.419999999992098e-07, 7.389000000000007e-06, 4.818999999999657e-06, 9.820000000000662e-06, 3.875000000000406e-06, 3.1529999999987957e-06, 3.3889999999994758e-06, 3.722000000001141e-06, 4.179999999999462e-06, 4.639000000000726e-06, 5.596999999999547e-06, 5.419999999992098e-07, 8.806000000000092e-06, 5.409999999997361e-07, 2.209000000003014e-06, 5.409999999997361e-07, 4.9999999999980616e-06, 9.110999999999148e-06, 7.695000000002006e-06, 8.139000000000757e-06, 4.818999999999657e-06, 2.749999999999281e-06, 9.583999999999981e-06, 5.409999999997361e-07, 8.819999999999661e-06, 6.790999999999048e-06, 4.417000000003085e-06, 3.625000000000156e-06, 3.4859999999969915e-06, 6.778000000002421e-06, 9.110999999999148e-06, 3.3889999999994758e-06, 5.419999999992098e-07, 7.694000000002532e-06, 9.346999999999828e-06, 8.638999999997787e-06, 6.792000000001991e-06, 7.749999999997342e-06, 4.097000000001516e-06, 5.419999999992098e-07, 5.708000000000102e-06, 5.419999999992098e-07, 9.041000000001298e-06, 5.419999999992098e-07, 4.847000000002266e-06, 7.263999999999882e-06, 2.9169999999981155e-06, 9.416000000001673e-06], 'eventdiff': [0, 5.304999999997118e-06, 6.014000000002101e-06, 9.888999999999037e-06, 5.139000000001226e-06, 5.290999999997548e-06, 2.7500000000027502e-06, 7.0279999999992016e-06, 5.419999999992098e-07, 9.125000000002187e-06, 7.679999999999493e-06, 5.999999999999062e-06, 5.419999999992098e-07, 7.389000000000007e-06, 4.818999999999657e-06, 9.820000000000662e-06, 3.875000000000406e-06, 3.1529999999987957e-06, 3.3889999999994758e-06, 3.722000000001141e-06, 4.179999999999462e-06, 4.639000000000726e-06, 5.596999999999547e-06, 5.419999999992098e-07, 8.806000000000092e-06, 5.409999999997361e-07, 2.209000000003014e-06, 5.409999999997361e-07, 4.9999999999980616e-06, 9.110999999999148e-06, 7.695000000002006e-06, 8.139000000000757e-06, 4.818999999999657e-06, 2.749999999999281e-06, 9.583999999999981e-06, 5.409999999997361e-07, 8.819999999999661e-06, 6.790999999999048e-06, 4.417000000003085e-06, 3.625000000000156e-06, 3.4859999999969915e-06, 6.778000000002421e-06, 9.110999999999148e-06, 3.3889999999994758e-06, 5.419999999992098e-07, 7.694000000002532e-06, 9.346999999999828e-06, 8.638999999997787e-06, 6.792000000001991e-06, 7.749999999997342e-06, 4.097000000001516e-06, 5.419999999992098e-07, 5.708000000000102e-06, 5.419999999992098e-07, 9.041000000001298e-06, 5.419999999992098e-07, 4.847000000002266e-06, 7.263999999999882e-06, 2.9169999999981155e-06, 9.416000000001673e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:07.784" endtime="20201112 12:26:07.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.780" endtime="20201112 12:26:07.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:07.791" level="INFO">${RESULT} = [{'time': 0.017565736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.017581639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:07.788" endtime="20201112 12:26:07.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:07.800" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:07.792" endtime="20201112 12:26:07.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.804" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:07.803" endtime="20201112 12:26:07.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.807" level="INFO">VALUE: [5.304999999997118e-06, 9.888999999999037e-06, 5.290999999997548e-06, 7.0279999999992016e-06, 9.125000000002187e-06, 5.999999999999062e-06, 7.389000000000007e-06, 9.820000000000662e-06, 3.1529999999987957e-06, 3.722000000001141e-06, 4.639000000000726e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 9.110999999999148e-06, 8.139000000000757e-06, 2.749999999999281e-06, 5.409999999997361e-07, 6.790999999999048e-06, 3.625000000000156e-06, 6.778000000002421e-06, 3.3889999999994758e-06, 7.694000000002532e-06, 8.638999999997787e-06, 7.749999999997342e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.263999999999882e-06, 9.416000000001673e-06]</msg>
<status status="PASS" starttime="20201112 12:26:07.805" endtime="20201112 12:26:07.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.801" endtime="20201112 12:26:07.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.810" endtime="20201112 12:26:07.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:07.813" endtime="20201112 12:26:07.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.812" endtime="20201112 12:26:07.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.808" endtime="20201112 12:26:07.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.437" endtime="20201112 12:26:07.834"></status>
</kw>
<msg timestamp="20201112 12:26:07.834" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.843" endtime="20201112 12:26:07.854"></status>
</kw>
<msg timestamp="20201112 12:26:07.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.842" endtime="20201112 12:26:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:07.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:07.856" endtime="20201112 12:26:07.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.858" endtime="20201112 12:26:07.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.838" endtime="20201112 12:26:07.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.836" endtime="20201112 12:26:07.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:07.868" endtime="20201112 12:26:08.142"></status>
</kw>
<msg timestamp="20201112 12:26:08.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018610153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:07.866" endtime="20201112 12:26:08.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018610153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018610694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.145" endtime="20201112 12:26:08.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.151" endtime="20201112 12:26:08.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.863" endtime="20201112 12:26:08.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.862" endtime="20201112 12:26:08.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.158" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.157" endtime="20201112 12:26:08.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.163" level="INFO">VALUE: [{'time': 0.018610153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018610694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018612611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018622514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.018626847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018634764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.018641319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.018646931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018655792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018656333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018665208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.01866575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018674139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018677472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018678014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018681347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018687597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018691222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018691764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018699222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.018703875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.018712028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018720181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018722708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.018729972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018737653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018741111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.018744528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018748014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018753097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018753639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018758472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.018762833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018765264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018773722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018774264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018776917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018786222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018786764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018794875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.01880475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018813472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.018823083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018826431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018829583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.018830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018836389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.018839542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018842528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018846472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.018852556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.0188615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018866792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018867333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018870194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018876194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018876736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018880861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018888125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018888667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018894458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.018899111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.159" endtime="20201112 12:26:08.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.155" endtime="20201112 12:26:08.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.181" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.165" endtime="20201112 12:26:08.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.185" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.184" endtime="20201112 12:26:08.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.189" level="INFO">VALUE: {'sourcetime': [0.018610153, 0.018610694, 0.018612611, 0.018622514, 0.018626847, 0.018634764, 0.018641319, 0.018646931, 0.018655792, 0.018656333, 0.018665208, 0.01866575, 0.018674139, 0.018677472, 0.018678014, 0.018681347, 0.018687597, 0.018691222, 0.018691764, 0.018699222, 0.018703875, 0.018712028, 0.018720181, 0.018722708, 0.018729972, 0.018737653, 0.018741111, 0.018744528, 0.018748014, 0.018753097, 0.018753639, 0.018758472, 0.018762833, 0.018765264, 0.018773722, 0.018774264, 0.018776917, 0.018786222, 0.018786764, 0.018794875, 0.01880475, 0.018813472, 0.018823083, 0.018826431, 0.018829583, 0.018830125, 0.018836389, 0.018839542, 0.018842528, 0.018846472, 0.018852556, 0.0188615, 0.018866792, 0.018867333, 0.018870194, 0.018876194, 0.018876736, 0.018880861, 0.018888125, 0.018888667, 0.018894458, 0.018899111], 'source_diff': [0, 5.409999999997361e-07, 1.917000000000585e-06, 9.902999999998607e-06, 4.332999999998727e-06, 7.917000000003116e-06, 6.554999999998368e-06, 5.61199999999859e-06, 8.861000000002367e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.389000000001007e-06, 3.333000000001196e-06, 5.419999999992098e-07, 3.333000000001196e-06, 6.249999999999312e-06, 3.625000000000156e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.652999999996826e-06, 8.153000000000327e-06, 8.153000000000327e-06, 2.5270000000021664e-06, 7.263999999999882e-06, 7.680999999998966e-06, 3.458000000001321e-06, 3.4169999999986156e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.419999999992098e-07, 4.833000000002696e-06, 4.360999999997867e-06, 2.431000000000655e-06, 8.457999999999383e-06, 5.419999999992098e-07, 2.653000000001765e-06, 9.305000000001118e-06, 5.419999999992098e-07, 8.110999999998147e-06, 9.874999999999468e-06, 8.722000000002672e-06, 9.610999999999648e-06, 3.3480000000002397e-06, 3.151999999999322e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 3.153000000002265e-06, 2.985999999999961e-06, 3.943999999998782e-06, 6.0839999999999506e-06, 8.944000000000313e-06, 5.292000000000491e-06, 5.409999999997361e-07, 2.860999999999836e-06, 5.999999999999062e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.263999999999882e-06, 5.420000000026792e-07, 5.790999999998048e-06, 4.653000000000296e-06], 'eventdiff': [0, 5.409999999997361e-07, 1.917000000000585e-06, 9.902999999998607e-06, 4.332999999998727e-06, 7.917000000003116e-06, 6.554999999998368e-06, 5.61199999999859e-06, 8.861000000002367e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.389000000001007e-06, 3.333000000001196e-06, 5.419999999992098e-07, 3.333000000001196e-06, 6.249999999999312e-06, 3.625000000000156e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.652999999996826e-06, 8.153000000000327e-06, 8.153000000000327e-06, 2.5270000000021664e-06, 7.263999999999882e-06, 7.680999999998966e-06, 3.458000000001321e-06, 3.4169999999986156e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.419999999992098e-07, 4.833000000002696e-06, 4.360999999997867e-06, 2.431000000000655e-06, 8.457999999999383e-06, 5.419999999992098e-07, 2.653000000001765e-06, 9.305000000001118e-06, 5.419999999992098e-07, 8.110999999998147e-06, 9.874999999999468e-06, 8.722000000002672e-06, 9.610999999999648e-06, 3.3480000000002397e-06, 3.151999999999322e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 3.153000000002265e-06, 2.985999999999961e-06, 3.943999999998782e-06, 6.0839999999999506e-06, 8.944000000000313e-06, 5.292000000000491e-06, 5.409999999997361e-07, 2.860999999999836e-06, 5.999999999999062e-06, 5.420000000026792e-07, 4.1249999999971865e-06, 7.263999999999882e-06, 5.420000000026792e-07, 5.790999999998048e-06, 4.653000000000296e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.186" endtime="20201112 12:26:08.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.182" endtime="20201112 12:26:08.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.193" level="INFO">${RESULT} = [{'time': 0.018610694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018622514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:08.190" endtime="20201112 12:26:08.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.202" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.194" endtime="20201112 12:26:08.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.207" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.206" endtime="20201112 12:26:08.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.209" level="INFO">VALUE: [5.409999999997361e-07, 9.902999999998607e-06, 7.917000000003116e-06, 5.61199999999859e-06, 5.409999999997361e-07, 5.419999999992098e-07, 3.333000000001196e-06, 3.333000000001196e-06, 3.625000000000156e-06, 7.458000000001852e-06, 8.153000000000327e-06, 2.5270000000021664e-06, 7.680999999998966e-06, 3.4169999999986156e-06, 5.082999999999477e-06, 4.833000000002696e-06, 2.431000000000655e-06, 5.419999999992098e-07, 9.305000000001118e-06, 8.110999999998147e-06, 8.722000000002672e-06, 3.3480000000002397e-06, 5.419999999992098e-07, 3.153000000002265e-06, 3.943999999998782e-06, 8.944000000000313e-06, 5.409999999997361e-07, 5.999999999999062e-06, 4.1249999999971865e-06, 5.420000000026792e-07, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.208" endtime="20201112 12:26:08.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.203" endtime="20201112 12:26:08.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.213" endtime="20201112 12:26:08.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.216" endtime="20201112 12:26:08.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.214" endtime="20201112 12:26:08.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.211" endtime="20201112 12:26:08.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:07.835" endtime="20201112 12:26:08.237"></status>
</kw>
<msg timestamp="20201112 12:26:08.237" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.245" endtime="20201112 12:26:08.257"></status>
</kw>
<msg timestamp="20201112 12:26:08.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.243" endtime="20201112 12:26:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.258" endtime="20201112 12:26:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.261" endtime="20201112 12:26:08.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.241" endtime="20201112 12:26:08.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.239" endtime="20201112 12:26:08.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.270" endtime="20201112 12:26:08.540"></status>
</kw>
<msg timestamp="20201112 12:26:08.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.268" endtime="20201112 12:26:08.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:08.543" endtime="20201112 12:26:08.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.549" endtime="20201112 12:26:08.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.266" endtime="20201112 12:26:08.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.264" endtime="20201112 12:26:08.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.556" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.555" endtime="20201112 12:26:08.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.560" level="INFO">VALUE: [{'time': 0.018491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018500278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018505347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.018511111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018514347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018522014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.018526667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018532986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.018533528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018549444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.018552611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.018559333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.018562597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018568889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018571319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.018575972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018580097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018585444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018585986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018591528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018592069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018599528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.018608625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018609167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018611556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.018620181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.018627222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.018635611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.389000000001007e-06, 'source_diff': 8.389000000001007e-06}, {'time': 0.018639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.01864325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018643792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018647125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018649875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018655417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018664833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.415999999998204e-06, 'source_diff': 9.415999999998204e-06}, {'time': 0.01866925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018673194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.018680875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018689111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.018693681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018698736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.018703403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018713042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.018713583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018721722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018729125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018731556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018732097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018734014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018741514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.018750458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018759167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.018766361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018770306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.018776861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.557" endtime="20201112 12:26:08.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.552" endtime="20201112 12:26:08.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.577" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.562" endtime="20201112 12:26:08.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.581" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.580" endtime="20201112 12:26:08.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.584" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018491278, 0.018494792, 0.018500278, 0.018505347, 0.018511111, 0.018514347, 0.018522014, 0.018526667, 0.018532986, 0.018533528, 0.018539556, 0.018549444, 0.018552611, 0.018559333, 0.018562597, 0.018568889, 0.018571319, 0.018575972, 0.018580097, 0.018585444, 0.018585986, 0.018591528, 0.018592069, 0.018599528, 0.018608625, 0.018609167, 0.018611556, 0.018620181, 0.018627222, 0.018635611, 0.018639083, 0.01864325, 0.018643792, 0.018647125, 0.018649875, 0.018655417, 0.018664833, 0.01866925, 0.018673194, 0.018680875, 0.018689111, 0.018693681, 0.018698736, 0.018703403, 0.018713042, 0.018713583, 0.018721722, 0.018729125, 0.018731556, 0.018732097, 0.018734014, 0.018741514, 0.018750458, 0.018759167, 0.018766361, 0.018770306, 0.018776861], 'source_diff': [0, 3.5139999999996008e-06, 5.485999999998992e-06, 5.068999999999907e-06, 5.764000000001851e-06, 3.236000000000211e-06, 7.666999999999397e-06, 4.653000000000296e-06, 6.319000000001157e-06, 5.419999999992098e-07, 6.0279999999982015e-06, 9.887999999999564e-06, 3.167000000001835e-06, 6.722000000000672e-06, 3.2639999999993508e-06, 6.292000000001491e-06, 2.4299999999977118e-06, 4.653000000000296e-06, 4.125000000000656e-06, 5.346999999999297e-06, 5.419999999992098e-07, 5.542000000000741e-06, 5.409999999997361e-07, 7.459000000001326e-06, 9.096999999999578e-06, 5.419999999992098e-07, 2.389000000001945e-06, 8.624999999998217e-06, 7.040999999999298e-06, 8.389000000001007e-06, 3.472000000000891e-06, 4.166999999999366e-06, 5.419999999992098e-07, 3.333000000001196e-06, 2.749999999999281e-06, 5.542000000000741e-06, 9.415999999998204e-06, 4.416999999999616e-06, 3.944000000002251e-06, 7.680999999998966e-06, 8.236000000001742e-06, 4.5699999999988805e-06, 5.055000000000337e-06, 4.666999999999866e-06, 9.638999999998787e-06, 5.409999999997361e-07, 8.139000000000757e-06, 7.402999999999577e-06, 2.431000000000655e-06, 5.409999999997361e-07, 1.917000000000585e-06, 7.500000000000562e-06, 8.944000000000313e-06, 8.708999999999106e-06, 7.193999999998563e-06, 3.945000000001725e-06, 6.554999999998368e-06], 'eventdiff': [0, 3.5139999999996008e-06, 5.485999999998992e-06, 5.068999999999907e-06, 5.764000000001851e-06, 3.236000000000211e-06, 7.666999999999397e-06, 4.653000000000296e-06, 6.319000000001157e-06, 5.419999999992098e-07, 6.0279999999982015e-06, 9.887999999999564e-06, 3.167000000001835e-06, 6.722000000000672e-06, 3.2639999999993508e-06, 6.292000000001491e-06, 2.4299999999977118e-06, 4.653000000000296e-06, 4.125000000000656e-06, 5.346999999999297e-06, 5.419999999992098e-07, 5.542000000000741e-06, 5.409999999997361e-07, 7.459000000001326e-06, 9.096999999999578e-06, 5.419999999992098e-07, 2.389000000001945e-06, 8.624999999998217e-06, 7.040999999999298e-06, 8.389000000001007e-06, 3.472000000000891e-06, 4.166999999999366e-06, 5.419999999992098e-07, 3.333000000001196e-06, 2.749999999999281e-06, 5.542000000000741e-06, 9.415999999998204e-06, 4.416999999999616e-06, 3.944000000002251e-06, 7.680999999998966e-06, 8.236000000001742e-06, 4.5699999999988805e-06, 5.055000000000337e-06, 4.666999999999866e-06, 9.638999999998787e-06, 5.409999999997361e-07, 8.139000000000757e-06, 7.402999999999577e-06, 2.431000000000655e-06, 5.409999999997361e-07, 1.917000000000585e-06, 7.500000000000562e-06, 8.944000000000313e-06, 8.708999999999106e-06, 7.193999999998563e-06, 3.945000000001725e-06, 6.554999999998368e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.582" endtime="20201112 12:26:08.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.578" endtime="20201112 12:26:08.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.589" level="INFO">${RESULT} = [{'time': 0.018494792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018505347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:08.586" endtime="20201112 12:26:08.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.598" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.590" endtime="20201112 12:26:08.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.602" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.601" endtime="20201112 12:26:08.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.604" level="INFO">VALUE: [3.5139999999996008e-06, 5.068999999999907e-06, 3.236000000000211e-06, 4.653000000000296e-06, 5.419999999992098e-07, 9.887999999999564e-06, 6.722000000000672e-06, 6.292000000001491e-06, 4.653000000000296e-06, 5.346999999999297e-06, 5.542000000000741e-06, 7.459000000001326e-06, 5.419999999992098e-07, 8.624999999998217e-06, 8.389000000001007e-06, 4.166999999999366e-06, 3.333000000001196e-06, 5.542000000000741e-06, 4.416999999999616e-06, 7.680999999998966e-06, 4.5699999999988805e-06, 4.666999999999866e-06, 5.409999999997361e-07, 7.402999999999577e-06, 5.409999999997361e-07, 7.500000000000562e-06, 8.708999999999106e-06, 3.945000000001725e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.603" endtime="20201112 12:26:08.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.599" endtime="20201112 12:26:08.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.608" endtime="20201112 12:26:08.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:08.611" endtime="20201112 12:26:08.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.610" endtime="20201112 12:26:08.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.606" endtime="20201112 12:26:08.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.238" endtime="20201112 12:26:08.632"></status>
</kw>
<msg timestamp="20201112 12:26:08.632" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.640" endtime="20201112 12:26:08.652"></status>
</kw>
<msg timestamp="20201112 12:26:08.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.638" endtime="20201112 12:26:08.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:08.654" endtime="20201112 12:26:08.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.656" endtime="20201112 12:26:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.636" endtime="20201112 12:26:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.634" endtime="20201112 12:26:08.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.665" endtime="20201112 12:26:08.936"></status>
</kw>
<msg timestamp="20201112 12:26:08.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017651875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01766075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:08.664" endtime="20201112 12:26:08.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017651875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01766075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:26:08.939" endtime="20201112 12:26:08.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:08.945" endtime="20201112 12:26:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.661" endtime="20201112 12:26:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.659" endtime="20201112 12:26:08.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.952" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:08.951" endtime="20201112 12:26:08.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.957" level="INFO">VALUE: [{'time': 0.017651875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01766075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017667958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.017671819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.017675458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6390000000031952e-06, 'source_diff': 3.6390000000031952e-06}, {'time': 0.017680569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017685472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017694403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000000217e-06, 'source_diff': 8.931000000000217e-06}, {'time': 0.017694944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017703514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.017706917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017711736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017718292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.017724069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.017728889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.017731639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017735028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017739694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017747681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.017756167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.017764611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.017768472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017769014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017773139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017776889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017781653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.017788694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.017794, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017802944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.017806236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.017825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000001077e-06, 'source_diff': 8.903000000001077e-06}, {'time': 0.017830139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.017835431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017843833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.017846347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017851153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.80600000000303e-06, 'source_diff': 4.80600000000303e-06}, {'time': 0.017856458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.017858889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.017867292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.017874958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.665999999999923e-06, 'source_diff': 7.665999999999923e-06}, {'time': 0.0178755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017878361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017886514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.017895139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017895681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017902361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.017905097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017912306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.01791975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.017929333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.582999999997038e-06, 'source_diff': 9.582999999997038e-06}, {'time': 0.017935097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017935639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017940236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017946083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:08.953" endtime="20201112 12:26:08.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.948" endtime="20201112 12:26:08.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:08.973" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.959" endtime="20201112 12:26:08.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.977" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:08.976" endtime="20201112 12:26:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.980" level="INFO">VALUE: {'sourcetime': [0.017651875, 0.01766075, 0.017667958, 0.017671819, 0.017675458, 0.017680569, 0.017681111, 0.017685472, 0.017694403, 0.017694944, 0.017703514, 0.017706917, 0.017711736, 0.017718292, 0.017724069, 0.017728889, 0.017731639, 0.017735028, 0.017735569, 0.017739694, 0.017747681, 0.017756167, 0.017764611, 0.017768472, 0.017769014, 0.017773139, 0.017776889, 0.017781653, 0.017788694, 0.017794, 0.017802944, 0.017806236, 0.017816097, 0.017825, 0.017830139, 0.017835431, 0.017843833, 0.017846347, 0.017851153, 0.017856458, 0.017858889, 0.017867292, 0.017874958, 0.0178755, 0.017878361, 0.017886514, 0.017895139, 0.017895681, 0.017902361, 0.017905097, 0.017912306, 0.01791975, 0.017929333, 0.017935097, 0.017935639, 0.017940236, 0.017946083], 'source_diff': [0, 8.874999999998467e-06, 7.208000000001602e-06, 3.8609999999973665e-06, 3.6390000000031952e-06, 5.110999999998617e-06, 5.419999999992098e-07, 4.361000000001336e-06, 8.931000000000217e-06, 5.409999999997361e-07, 8.569999999999411e-06, 3.4029999999990457e-06, 4.818999999999657e-06, 6.556000000001311e-06, 5.776999999998478e-06, 4.8200000000026e-06, 2.749999999999281e-06, 3.3889999999994758e-06, 5.409999999997361e-07, 4.125000000000656e-06, 7.987000000000966e-06, 8.485999999998523e-06, 8.443999999999813e-06, 3.861000000000836e-06, 5.419999999992098e-07, 4.125000000000656e-06, 3.750000000000281e-06, 4.764000000000851e-06, 7.040999999999298e-06, 5.306000000000061e-06, 8.944000000000313e-06, 3.2919999999984906e-06, 9.860999999999898e-06, 8.903000000001077e-06, 5.1389999999977565e-06, 5.292000000000491e-06, 8.402000000001103e-06, 2.5139999999986007e-06, 4.80600000000303e-06, 5.304999999997118e-06, 2.431000000000655e-06, 8.403000000000577e-06, 7.665999999999923e-06, 5.419999999992098e-07, 2.860999999999836e-06, 8.153000000000327e-06, 8.625000000001687e-06, 5.419999999992098e-07, 6.679999999998493e-06, 2.735999999999711e-06, 7.209000000001076e-06, 7.444000000002282e-06, 9.582999999997038e-06, 5.764000000001851e-06, 5.419999999992098e-07, 4.596999999998547e-06, 5.847000000003266e-06], 'eventdiff': [0, 8.874999999998467e-06, 7.208000000001602e-06, 3.8609999999973665e-06, 3.6390000000031952e-06, 5.110999999998617e-06, 5.419999999992098e-07, 4.361000000001336e-06, 8.931000000000217e-06, 5.409999999997361e-07, 8.569999999999411e-06, 3.4029999999990457e-06, 4.818999999999657e-06, 6.556000000001311e-06, 5.776999999998478e-06, 4.8200000000026e-06, 2.749999999999281e-06, 3.3889999999994758e-06, 5.409999999997361e-07, 4.125000000000656e-06, 7.987000000000966e-06, 8.485999999998523e-06, 8.443999999999813e-06, 3.861000000000836e-06, 5.419999999992098e-07, 4.125000000000656e-06, 3.750000000000281e-06, 4.764000000000851e-06, 7.040999999999298e-06, 5.306000000000061e-06, 8.944000000000313e-06, 3.2919999999984906e-06, 9.860999999999898e-06, 8.903000000001077e-06, 5.1389999999977565e-06, 5.292000000000491e-06, 8.402000000001103e-06, 2.5139999999986007e-06, 4.80600000000303e-06, 5.304999999997118e-06, 2.431000000000655e-06, 8.403000000000577e-06, 7.665999999999923e-06, 5.419999999992098e-07, 2.860999999999836e-06, 8.153000000000327e-06, 8.625000000001687e-06, 5.419999999992098e-07, 6.679999999998493e-06, 2.735999999999711e-06, 7.209000000001076e-06, 7.444000000002282e-06, 9.582999999997038e-06, 5.764000000001851e-06, 5.419999999992098e-07, 4.596999999998547e-06, 5.847000000003266e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:08.978" endtime="20201112 12:26:08.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.974" endtime="20201112 12:26:08.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:08.985" level="INFO">${RESULT} = [{'time': 0.01766075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.017671819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:08.982" endtime="20201112 12:26:08.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:08.993" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:08.986" endtime="20201112 12:26:08.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:08.998" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:08.997" endtime="20201112 12:26:08.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.000" level="INFO">VALUE: [8.874999999998467e-06, 3.8609999999973665e-06, 5.110999999998617e-06, 4.361000000001336e-06, 5.409999999997361e-07, 3.4029999999990457e-06, 6.556000000001311e-06, 4.8200000000026e-06, 3.3889999999994758e-06, 4.125000000000656e-06, 8.485999999998523e-06, 3.861000000000836e-06, 4.125000000000656e-06, 4.764000000000851e-06, 5.306000000000061e-06, 3.2919999999984906e-06, 8.903000000001077e-06, 5.292000000000491e-06, 2.5139999999986007e-06, 5.304999999997118e-06, 8.403000000000577e-06, 5.419999999992098e-07, 8.153000000000327e-06, 5.419999999992098e-07, 2.735999999999711e-06, 7.444000000002282e-06, 5.764000000001851e-06, 4.596999999998547e-06]</msg>
<status status="PASS" starttime="20201112 12:26:08.999" endtime="20201112 12:26:09.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.994" endtime="20201112 12:26:09.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.004" endtime="20201112 12:26:09.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.007" endtime="20201112 12:26:09.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.005" endtime="20201112 12:26:09.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.002" endtime="20201112 12:26:09.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:08.633" endtime="20201112 12:26:09.029"></status>
</kw>
<msg timestamp="20201112 12:26:09.029" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.037" endtime="20201112 12:26:09.047"></status>
</kw>
<msg timestamp="20201112 12:26:09.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.035" endtime="20201112 12:26:09.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.048" endtime="20201112 12:26:09.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.051" endtime="20201112 12:26:09.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.033" endtime="20201112 12:26:09.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.031" endtime="20201112 12:26:09.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.060" endtime="20201112 12:26:09.333"></status>
</kw>
<msg timestamp="20201112 12:26:09.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017758958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.059" endtime="20201112 12:26:09.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017758958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.336" endtime="20201112 12:26:09.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.342" endtime="20201112 12:26:09.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.056" endtime="20201112 12:26:09.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.054" endtime="20201112 12:26:09.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.349" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.348" endtime="20201112 12:26:09.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.353" level="INFO">VALUE: [{'time': 0.017751528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017758958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.017766472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.017774472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.017782292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.017786861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.01779675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017797292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017802764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017803306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017807347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017807889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017815542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.017821611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.017828153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.017832583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017842236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.017851639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.017852181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017860278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.017864931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.01787075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.017873861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017877083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.017882458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017891875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.0178955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017896042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017902792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.017907431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017907972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017911847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017912389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017918653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017925931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.017930028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017935875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017936417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017941889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017947194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017951611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017959597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017967264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.017974792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.017981264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.017986333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.0179955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.017996042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018001528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018006819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.018012903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018017319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018027139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018036861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722000000000203e-06, 'source_diff': 9.722000000000203e-06}, {'time': 0.018041694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018049222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018051722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018055181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:09.350" endtime="20201112 12:26:09.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.346" endtime="20201112 12:26:09.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.371" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.356" endtime="20201112 12:26:09.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.375" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.374" endtime="20201112 12:26:09.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.378" level="INFO">VALUE: {'sourcetime': [0.017751528, 0.017758958, 0.017766472, 0.017774472, 0.017782292, 0.017786861, 0.01779675, 0.017797292, 0.017802764, 0.017803306, 0.017807347, 0.017807889, 0.017815542, 0.017821611, 0.017828153, 0.017832583, 0.017842236, 0.017851639, 0.017852181, 0.017860278, 0.017864931, 0.01787075, 0.017873861, 0.017877083, 0.017882458, 0.017891875, 0.0178955, 0.017896042, 0.017902792, 0.017907431, 0.017907972, 0.017911847, 0.017912389, 0.017918653, 0.017925931, 0.017930028, 0.017930569, 0.017935875, 0.017936417, 0.017941889, 0.017947194, 0.017951611, 0.017955, 0.017959597, 0.017967264, 0.017974792, 0.017981264, 0.017986333, 0.0179955, 0.017996042, 0.018001528, 0.018006819, 0.018012903, 0.018017319, 0.018027139, 0.018036861, 0.018041694, 0.018049222, 0.018051722, 0.018055181], 'source_diff': [0, 7.429999999999243e-06, 7.514000000000132e-06, 8.000000000001062e-06, 7.82000000000213e-06, 4.568999999999407e-06, 9.888999999999037e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.420000000026792e-07, 4.040999999999767e-06, 5.419999999992098e-07, 7.652999999999827e-06, 6.069000000000907e-06, 6.541999999998271e-06, 4.429999999999712e-06, 9.653000000001827e-06, 9.402999999998107e-06, 5.420000000026792e-07, 8.096999999998578e-06, 4.653000000000296e-06, 5.819000000000657e-06, 3.111000000000086e-06, 3.2219999999971716e-06, 5.375000000001906e-06, 9.417000000001147e-06, 3.625000000000156e-06, 5.419999999992098e-07, 6.749999999999812e-06, 4.639000000000726e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 7.2779999999994516e-06, 4.097000000001516e-06, 5.409999999997361e-07, 5.306000000000061e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.305000000000587e-06, 4.416999999999616e-06, 3.3889999999994758e-06, 4.597000000002016e-06, 7.666999999999397e-06, 7.527999999999702e-06, 6.472000000000422e-06, 5.068999999999907e-06, 9.167000000000897e-06, 5.419999999992098e-07, 5.485999999998992e-06, 5.291000000001017e-06, 6.0839999999999506e-06, 4.416000000000142e-06, 9.820000000000662e-06, 9.722000000000203e-06, 4.832999999999227e-06, 7.527999999999702e-06, 2.4999999999990308e-06, 3.4590000000007948e-06], 'eventdiff': [0, 7.429999999999243e-06, 7.514000000000132e-06, 8.000000000001062e-06, 7.82000000000213e-06, 4.568999999999407e-06, 9.888999999999037e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.420000000026792e-07, 4.040999999999767e-06, 5.419999999992098e-07, 7.652999999999827e-06, 6.069000000000907e-06, 6.541999999998271e-06, 4.429999999999712e-06, 9.653000000001827e-06, 9.402999999998107e-06, 5.420000000026792e-07, 8.096999999998578e-06, 4.653000000000296e-06, 5.819000000000657e-06, 3.111000000000086e-06, 3.2219999999971716e-06, 5.375000000001906e-06, 9.417000000001147e-06, 3.625000000000156e-06, 5.419999999992098e-07, 6.749999999999812e-06, 4.639000000000726e-06, 5.409999999997361e-07, 3.875000000000406e-06, 5.419999999992098e-07, 6.2639999999988816e-06, 7.2779999999994516e-06, 4.097000000001516e-06, 5.409999999997361e-07, 5.306000000000061e-06, 5.419999999992098e-07, 5.471999999999422e-06, 5.305000000000587e-06, 4.416999999999616e-06, 3.3889999999994758e-06, 4.597000000002016e-06, 7.666999999999397e-06, 7.527999999999702e-06, 6.472000000000422e-06, 5.068999999999907e-06, 9.167000000000897e-06, 5.419999999992098e-07, 5.485999999998992e-06, 5.291000000001017e-06, 6.0839999999999506e-06, 4.416000000000142e-06, 9.820000000000662e-06, 9.722000000000203e-06, 4.832999999999227e-06, 7.527999999999702e-06, 2.4999999999990308e-06, 3.4590000000007948e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:09.376" endtime="20201112 12:26:09.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.372" endtime="20201112 12:26:09.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.383" level="INFO">${RESULT} = [{'time': 0.017758958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.017774472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.380" endtime="20201112 12:26:09.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.392" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.384" endtime="20201112 12:26:09.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.397" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.396" endtime="20201112 12:26:09.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.399" level="INFO">VALUE: [7.429999999999243e-06, 8.000000000001062e-06, 4.568999999999407e-06, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 6.069000000000907e-06, 4.429999999999712e-06, 9.402999999998107e-06, 8.096999999998578e-06, 5.819000000000657e-06, 3.2219999999971716e-06, 9.417000000001147e-06, 5.419999999992098e-07, 4.639000000000726e-06, 3.875000000000406e-06, 6.2639999999988816e-06, 4.097000000001516e-06, 5.306000000000061e-06, 5.471999999999422e-06, 4.416999999999616e-06, 4.597000000002016e-06, 7.527999999999702e-06, 5.068999999999907e-06, 5.419999999992098e-07, 5.291000000001017e-06, 4.416000000000142e-06, 9.722000000000203e-06, 7.527999999999702e-06, 3.4590000000007948e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.398" endtime="20201112 12:26:09.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.393" endtime="20201112 12:26:09.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.403" endtime="20201112 12:26:09.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.406" endtime="20201112 12:26:09.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.405" endtime="20201112 12:26:09.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.401" endtime="20201112 12:26:09.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.029" endtime="20201112 12:26:09.427"></status>
</kw>
<msg timestamp="20201112 12:26:09.427" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.436" endtime="20201112 12:26:09.447"></status>
</kw>
<msg timestamp="20201112 12:26:09.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.434" endtime="20201112 12:26:09.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.449" endtime="20201112 12:26:09.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.452" endtime="20201112 12:26:09.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.431" endtime="20201112 12:26:09.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.429" endtime="20201112 12:26:09.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.461" endtime="20201112 12:26:09.731"></status>
</kw>
<msg timestamp="20201112 12:26:09.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018505083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.459" endtime="20201112 12:26:09.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018505083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.734" endtime="20201112 12:26:09.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.740" endtime="20201112 12:26:09.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.457" endtime="20201112 12:26:09.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.455" endtime="20201112 12:26:09.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.747" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:09.746" endtime="20201112 12:26:09.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.751" level="INFO">VALUE: [{'time': 0.018505083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018508278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.018508819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018514639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018518069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.018524389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.018524931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018533819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.887999999998564e-06, 'source_diff': 8.887999999998564e-06}, {'time': 0.018538889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.018542028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018545514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018550861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018557597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.018567431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.018573903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018577111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.0185845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.018592694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018598667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018608014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018615722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.018622653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.018627236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018633319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018644944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.018650792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018653472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018660194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.018663833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018667542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7089999999975753e-06, 'source_diff': 3.7089999999975753e-06}, {'time': 0.018673306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018677, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.018677542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.01869, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.018694333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.01870375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.018712139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.018717986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018727181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018733722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541000000002267e-06, 'source_diff': 6.541000000002267e-06}, {'time': 0.018734264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018741722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.018751056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018751597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018756208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018765375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.018768833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018769375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018776556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.01878475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018788139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018795889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.018805083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018810361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018810903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 12:26:09.748" endtime="20201112 12:26:09.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.744" endtime="20201112 12:26:09.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:09.768" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.753" endtime="20201112 12:26:09.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.771" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:09.770" endtime="20201112 12:26:09.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.775" level="INFO">VALUE: {'sourcetime': [0.018505083, 0.018508278, 0.018508819, 0.018514639, 0.018518069, 0.018524389, 0.018524931, 0.018533819, 0.018538889, 0.018542028, 0.018545514, 0.018550861, 0.018557597, 0.018567431, 0.018573903, 0.018577111, 0.0185845, 0.018592694, 0.018598667, 0.018608014, 0.018615722, 0.018622653, 0.018627236, 0.018633319, 0.018638222, 0.018644944, 0.018650792, 0.018653472, 0.018660194, 0.018663833, 0.018667542, 0.018673306, 0.018677, 0.018677542, 0.018684222, 0.01869, 0.018694333, 0.01870375, 0.018712139, 0.018717986, 0.018727181, 0.018733722, 0.018734264, 0.018741722, 0.018751056, 0.018751597, 0.018756208, 0.018765375, 0.018768833, 0.018769375, 0.018776556, 0.01878475, 0.018788139, 0.018795889, 0.018805083, 0.018810361, 0.018810903], 'source_diff': [0, 3.195000000000975e-06, 5.409999999997361e-07, 5.820000000000131e-06, 3.4300000000021813e-06, 6.319999999997161e-06, 5.420000000026792e-07, 8.887999999998564e-06, 5.0699999999993806e-06, 3.1389999999992257e-06, 3.486000000000461e-06, 5.346999999999297e-06, 6.736000000000242e-06, 9.834000000000231e-06, 6.472000000000422e-06, 3.208000000001071e-06, 7.389000000000007e-06, 8.193999999999563e-06, 5.9729999999993955e-06, 9.346999999999828e-06, 7.708000000002102e-06, 6.930999999998216e-06, 4.582999999998977e-06, 6.083000000000477e-06, 4.903000000000546e-06, 6.722000000000672e-06, 5.8479999999992704e-06, 2.6800000000014312e-06, 6.722000000000672e-06, 3.6389999999997258e-06, 3.7089999999975753e-06, 5.764000000001851e-06, 3.693999999998532e-06, 5.419999999992098e-07, 6.680000000001962e-06, 5.7779999999979514e-06, 4.333000000002196e-06, 9.417000000001147e-06, 8.388999999997537e-06, 5.846999999999797e-06, 9.195000000000036e-06, 6.541000000002267e-06, 5.419999999992098e-07, 7.457999999998383e-06, 9.333999999999731e-06, 5.409999999997361e-07, 4.611000000001586e-06, 9.167000000000897e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 7.180999999998466e-06, 8.193999999999563e-06, 3.3889999999994758e-06, 7.750000000000812e-06, 9.194000000000563e-06, 5.278000000000921e-06, 5.419999999992098e-07], 'eventdiff': [0, 3.195000000000975e-06, 5.409999999997361e-07, 5.820000000000131e-06, 3.4300000000021813e-06, 6.319999999997161e-06, 5.420000000026792e-07, 8.887999999998564e-06, 5.0699999999993806e-06, 3.1389999999992257e-06, 3.486000000000461e-06, 5.346999999999297e-06, 6.736000000000242e-06, 9.834000000000231e-06, 6.472000000000422e-06, 3.208000000001071e-06, 7.389000000000007e-06, 8.193999999999563e-06, 5.9729999999993955e-06, 9.346999999999828e-06, 7.708000000002102e-06, 6.930999999998216e-06, 4.582999999998977e-06, 6.083000000000477e-06, 4.903000000000546e-06, 6.722000000000672e-06, 5.8479999999992704e-06, 2.6800000000014312e-06, 6.722000000000672e-06, 3.6389999999997258e-06, 3.7089999999975753e-06, 5.764000000001851e-06, 3.693999999998532e-06, 5.419999999992098e-07, 6.680000000001962e-06, 5.7779999999979514e-06, 4.333000000002196e-06, 9.417000000001147e-06, 8.388999999997537e-06, 5.846999999999797e-06, 9.195000000000036e-06, 6.541000000002267e-06, 5.419999999992098e-07, 7.457999999998383e-06, 9.333999999999731e-06, 5.409999999997361e-07, 4.611000000001586e-06, 9.167000000000897e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 7.180999999998466e-06, 8.193999999999563e-06, 3.3889999999994758e-06, 7.750000000000812e-06, 9.194000000000563e-06, 5.278000000000921e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 12:26:09.772" endtime="20201112 12:26:09.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.768" endtime="20201112 12:26:09.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:09.780" level="INFO">${RESULT} = [{'time': 0.018508278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.018514639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:09.777" endtime="20201112 12:26:09.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:09.789" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:09.780" endtime="20201112 12:26:09.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.793" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:09.792" endtime="20201112 12:26:09.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.795" level="INFO">VALUE: [3.195000000000975e-06, 5.820000000000131e-06, 6.319999999997161e-06, 8.887999999998564e-06, 3.1389999999992257e-06, 5.346999999999297e-06, 9.834000000000231e-06, 3.208000000001071e-06, 8.193999999999563e-06, 9.346999999999828e-06, 6.930999999998216e-06, 6.083000000000477e-06, 6.722000000000672e-06, 2.6800000000014312e-06, 3.6389999999997258e-06, 5.764000000001851e-06, 5.419999999992098e-07, 5.7779999999979514e-06, 9.417000000001147e-06, 5.846999999999797e-06, 6.541000000002267e-06, 7.457999999998383e-06, 5.409999999997361e-07, 9.167000000000897e-06, 5.420000000026792e-07, 8.193999999999563e-06, 7.750000000000812e-06, 5.278000000000921e-06]</msg>
<status status="PASS" starttime="20201112 12:26:09.794" endtime="20201112 12:26:09.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.790" endtime="20201112 12:26:09.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.799" endtime="20201112 12:26:09.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:09.802" endtime="20201112 12:26:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.801" endtime="20201112 12:26:09.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.797" endtime="20201112 12:26:09.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.428" endtime="20201112 12:26:09.823"></status>
</kw>
<msg timestamp="20201112 12:26:09.823" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.831" endtime="20201112 12:26:09.841"></status>
</kw>
<msg timestamp="20201112 12:26:09.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.829" endtime="20201112 12:26:09.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:09.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:09.843" endtime="20201112 12:26:09.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.845" endtime="20201112 12:26:09.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.827" endtime="20201112 12:26:09.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.825" endtime="20201112 12:26:09.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:09.854" endtime="20201112 12:26:10.125"></status>
</kw>
<msg timestamp="20201112 12:26:10.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:09.853" endtime="20201112 12:26:10.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017580931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.129" endtime="20201112 12:26:10.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.135" endtime="20201112 12:26:10.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.850" endtime="20201112 12:26:10.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.849" endtime="20201112 12:26:10.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.142" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.140" endtime="20201112 12:26:10.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.146" level="INFO">VALUE: [{'time': 0.017580931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.017594458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.01760125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.017605653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.01761525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.017615792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017622694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.017630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.944999999998786e-06, 'source_diff': 7.944999999998786e-06}, {'time': 0.01763425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017638681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.017646889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.017651306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017653986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.017663417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.017667514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017677403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.889000000002507e-06, 'source_diff': 9.889000000002507e-06}, {'time': 0.017687306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.017694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.01770075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.017710569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.818999999997718e-06, 'source_diff': 9.818999999997718e-06}, {'time': 0.017711111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017719514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.017724667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017728278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017732694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017735139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017740431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017740972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017742944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.017743486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017750153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.017756958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.017764403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.017773583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.017779833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017784472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017785014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017791444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.017800556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.111999999998621e-06, 'source_diff': 9.111999999998621e-06}, {'time': 0.017805625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.017820486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017821028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017828889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.017834417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017834958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017841639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.017850264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.017860097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.017865444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017865986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017870778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017880569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.017889042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.017893375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017893917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017899264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017908167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:10.143" endtime="20201112 12:26:10.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.138" endtime="20201112 12:26:10.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.163" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.149" endtime="20201112 12:26:10.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.167" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.166" endtime="20201112 12:26:10.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.170" level="INFO">VALUE: {'sourcetime': [0.017580931, 0.017589083, 0.017594458, 0.01760125, 0.017605653, 0.01761525, 0.017615792, 0.017622694, 0.017630639, 0.01763425, 0.017638681, 0.017646889, 0.017651306, 0.017653986, 0.017663417, 0.017667514, 0.017677403, 0.017687306, 0.017694986, 0.01770075, 0.017710569, 0.017711111, 0.017719514, 0.017724667, 0.017728278, 0.017732694, 0.017735139, 0.017740431, 0.017740972, 0.017742944, 0.017743486, 0.017750153, 0.017756958, 0.017764403, 0.017773583, 0.017779833, 0.017784472, 0.017785014, 0.017791444, 0.017800556, 0.017805625, 0.017813528, 0.017820486, 0.017821028, 0.017828889, 0.017834417, 0.017834958, 0.017841639, 0.017850264, 0.017860097, 0.017865444, 0.017865986, 0.017870778, 0.017880569, 0.017889042, 0.017893375, 0.017893917, 0.017899264, 0.017908167], 'source_diff': [0, 8.151999999997384e-06, 5.375000000001906e-06, 6.7919999999985214e-06, 4.403000000000046e-06, 9.597000000000078e-06, 5.420000000026792e-07, 6.901999999999603e-06, 7.944999999998786e-06, 3.611000000000586e-06, 4.430999999999186e-06, 8.207999999999133e-06, 4.416999999999616e-06, 2.6800000000014312e-06, 9.431000000000717e-06, 4.096999999998047e-06, 9.889000000002507e-06, 9.902999999998607e-06, 7.679999999999493e-06, 5.764000000001851e-06, 9.818999999997718e-06, 5.420000000026792e-07, 8.402999999997107e-06, 5.153000000000796e-06, 3.611000000000586e-06, 4.416000000000142e-06, 2.4450000000002248e-06, 5.292000000000491e-06, 5.409999999997361e-07, 1.971999999999391e-06, 5.419999999992098e-07, 6.667000000001866e-06, 6.804999999998618e-06, 7.445000000001756e-06, 9.179999999997523e-06, 6.249999999999312e-06, 4.639000000000726e-06, 5.419999999992098e-07, 6.430000000001712e-06, 9.111999999998621e-06, 5.068999999999907e-06, 7.903000000000077e-06, 6.958000000001352e-06, 5.419999999992098e-07, 7.861000000001367e-06, 5.528000000001171e-06, 5.409999999997361e-07, 6.680999999997966e-06, 8.625000000001687e-06, 9.832999999997288e-06, 5.347000000002766e-06, 5.419999999992098e-07, 4.791999999999991e-06, 9.790999999998579e-06, 8.473000000001896e-06, 4.332999999998727e-06, 5.419999999992098e-07, 5.347000000002766e-06, 8.902999999997607e-06], 'eventdiff': [0, 8.151999999997384e-06, 5.375000000001906e-06, 6.7919999999985214e-06, 4.403000000000046e-06, 9.597000000000078e-06, 5.420000000026792e-07, 6.901999999999603e-06, 7.944999999998786e-06, 3.611000000000586e-06, 4.430999999999186e-06, 8.207999999999133e-06, 4.416999999999616e-06, 2.6800000000014312e-06, 9.431000000000717e-06, 4.096999999998047e-06, 9.889000000002507e-06, 9.902999999998607e-06, 7.679999999999493e-06, 5.764000000001851e-06, 9.818999999997718e-06, 5.420000000026792e-07, 8.402999999997107e-06, 5.153000000000796e-06, 3.611000000000586e-06, 4.416000000000142e-06, 2.4450000000002248e-06, 5.292000000000491e-06, 5.409999999997361e-07, 1.971999999999391e-06, 5.419999999992098e-07, 6.667000000001866e-06, 6.804999999998618e-06, 7.445000000001756e-06, 9.179999999997523e-06, 6.249999999999312e-06, 4.639000000000726e-06, 5.419999999992098e-07, 6.430000000001712e-06, 9.111999999998621e-06, 5.068999999999907e-06, 7.903000000000077e-06, 6.958000000001352e-06, 5.419999999992098e-07, 7.861000000001367e-06, 5.528000000001171e-06, 5.409999999997361e-07, 6.680999999997966e-06, 8.625000000001687e-06, 9.832999999997288e-06, 5.347000000002766e-06, 5.419999999992098e-07, 4.791999999999991e-06, 9.790999999998579e-06, 8.473000000001896e-06, 4.332999999998727e-06, 5.419999999992098e-07, 5.347000000002766e-06, 8.902999999997607e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:10.168" endtime="20201112 12:26:10.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.164" endtime="20201112 12:26:10.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.175" level="INFO">${RESULT} = [{'time': 0.017589083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.01760125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:26:10.172" endtime="20201112 12:26:10.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.184" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.176" endtime="20201112 12:26:10.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.189" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.187" endtime="20201112 12:26:10.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.192" level="INFO">VALUE: [8.151999999997384e-06, 6.7919999999985214e-06, 9.597000000000078e-06, 6.901999999999603e-06, 3.611000000000586e-06, 8.207999999999133e-06, 2.6800000000014312e-06, 4.096999999998047e-06, 9.902999999998607e-06, 5.764000000001851e-06, 5.420000000026792e-07, 5.153000000000796e-06, 4.416000000000142e-06, 5.292000000000491e-06, 1.971999999999391e-06, 6.667000000001866e-06, 7.445000000001756e-06, 6.249999999999312e-06, 5.419999999992098e-07, 9.111999999998621e-06, 7.903000000000077e-06, 5.419999999992098e-07, 5.528000000001171e-06, 6.680999999997966e-06, 9.832999999997288e-06, 5.419999999992098e-07, 9.790999999998579e-06, 4.332999999998727e-06, 5.347000000002766e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.190" endtime="20201112 12:26:10.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.185" endtime="20201112 12:26:10.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.195" endtime="20201112 12:26:10.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.199" endtime="20201112 12:26:10.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.197" endtime="20201112 12:26:10.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.193" endtime="20201112 12:26:10.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:09.824" endtime="20201112 12:26:10.220"></status>
</kw>
<msg timestamp="20201112 12:26:10.220" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.228" endtime="20201112 12:26:10.238"></status>
</kw>
<msg timestamp="20201112 12:26:10.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.227" endtime="20201112 12:26:10.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.241" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.240" endtime="20201112 12:26:10.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.242" endtime="20201112 12:26:10.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.224" endtime="20201112 12:26:10.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.222" endtime="20201112 12:26:10.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.251" endtime="20201112 12:26:10.522"></status>
</kw>
<msg timestamp="20201112 12:26:10.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.250" endtime="20201112 12:26:10.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.525" endtime="20201112 12:26:10.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.530" endtime="20201112 12:26:10.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.247" endtime="20201112 12:26:10.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.245" endtime="20201112 12:26:10.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.537" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.536" endtime="20201112 12:26:10.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.541" level="INFO">VALUE: [{'time': 0.017864125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017868639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017875597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017880958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017884194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017887833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017892889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017899208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.017909069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.017912889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}, {'time': 0.017922542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.017929514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.017936319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.017942792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.017943333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017949764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.017955417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017961694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.017970639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944999999999786e-06, 'source_diff': 8.944999999999786e-06}, {'time': 0.017978403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.017985347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.017994708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.018000292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018003403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018013278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018016431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018025375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.018031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018034611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018035153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018037847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.018046486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018051389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.018059417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018067986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.018077583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.018086708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.01808925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018094083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018101125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.018106278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018112986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.018130639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.018140264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018144389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.0181485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018155472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018162667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018165361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018171597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.01817975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:10.538" endtime="20201112 12:26:10.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.534" endtime="20201112 12:26:10.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.558" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.543" endtime="20201112 12:26:10.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.562" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.561" endtime="20201112 12:26:10.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.565" level="INFO">VALUE: {'sourcetime': [0.017864125, 0.017864667, 0.017868639, 0.017875597, 0.017880958, 0.017884194, 0.017887833, 0.017892889, 0.017899208, 0.017909069, 0.017912889, 0.017922542, 0.017929514, 0.017936319, 0.017942792, 0.017943333, 0.017949764, 0.017955417, 0.017961694, 0.017970639, 0.017978403, 0.017985347, 0.017994708, 0.018000292, 0.018003403, 0.018013278, 0.018016431, 0.018025375, 0.018031472, 0.018034611, 0.018035153, 0.018037847, 0.018046486, 0.018051389, 0.018058875, 0.018059417, 0.018067986, 0.018077583, 0.018086708, 0.01808925, 0.018094083, 0.018101125, 0.018106278, 0.018112986, 0.018121486, 0.018130639, 0.018140264, 0.018144389, 0.0181485, 0.018155472, 0.018162667, 0.018165361, 0.018171597, 0.01817975], 'source_diff': [0, 5.419999999992098e-07, 3.971999999997922e-06, 6.958000000001352e-06, 5.360999999998867e-06, 3.236000000000211e-06, 3.6389999999997258e-06, 5.055999999999811e-06, 6.319000000001157e-06, 9.860999999999898e-06, 3.8200000000016e-06, 9.652999999998357e-06, 6.972000000000922e-06, 6.804999999998618e-06, 6.4729999999998955e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.653000000001296e-06, 6.276999999998978e-06, 8.944999999999786e-06, 7.764000000000382e-06, 6.943999999998313e-06, 9.361000000002867e-06, 5.5839999999994505e-06, 3.111000000000086e-06, 9.874999999999468e-06, 3.1529999999987957e-06, 8.944000000000313e-06, 6.097000000000047e-06, 3.1389999999992257e-06, 5.420000000026792e-07, 2.6939999999975317e-06, 8.639000000001257e-06, 4.903000000000546e-06, 7.485999999997522e-06, 5.420000000026792e-07, 8.568999999999938e-06, 9.597000000000078e-06, 9.124999999998717e-06, 2.54200000000121e-06, 4.832999999999227e-06, 7.0419999999987715e-06, 5.153000000000796e-06, 6.708000000001102e-06, 8.499999999998092e-06, 9.153000000001327e-06, 9.624999999999218e-06, 4.125000000000656e-06, 4.111000000001086e-06, 6.9719999999974525e-06, 7.195000000001506e-06, 2.694000000001001e-06, 6.235999999999742e-06, 8.153000000000327e-06], 'eventdiff': [0, 5.419999999992098e-07, 3.971999999997922e-06, 6.958000000001352e-06, 5.360999999998867e-06, 3.236000000000211e-06, 3.6389999999997258e-06, 5.055999999999811e-06, 6.319000000001157e-06, 9.860999999999898e-06, 3.8200000000016e-06, 9.652999999998357e-06, 6.972000000000922e-06, 6.804999999998618e-06, 6.4729999999998955e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.653000000001296e-06, 6.276999999998978e-06, 8.944999999999786e-06, 7.764000000000382e-06, 6.943999999998313e-06, 9.361000000002867e-06, 5.5839999999994505e-06, 3.111000000000086e-06, 9.874999999999468e-06, 3.1529999999987957e-06, 8.944000000000313e-06, 6.097000000000047e-06, 3.1389999999992257e-06, 5.420000000026792e-07, 2.6939999999975317e-06, 8.639000000001257e-06, 4.903000000000546e-06, 7.485999999997522e-06, 5.420000000026792e-07, 8.568999999999938e-06, 9.597000000000078e-06, 9.124999999998717e-06, 2.54200000000121e-06, 4.832999999999227e-06, 7.0419999999987715e-06, 5.153000000000796e-06, 6.708000000001102e-06, 8.499999999998092e-06, 9.153000000001327e-06, 9.624999999999218e-06, 4.125000000000656e-06, 4.111000000001086e-06, 6.9719999999974525e-06, 7.195000000001506e-06, 2.694000000001001e-06, 6.235999999999742e-06, 8.153000000000327e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:10.563" endtime="20201112 12:26:10.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.559" endtime="20201112 12:26:10.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.570" level="INFO">${RESULT} = [{'time': 0.017864667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017875597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.567" endtime="20201112 12:26:10.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.578" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.571" endtime="20201112 12:26:10.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.581" endtime="20201112 12:26:10.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.585" level="INFO">VALUE: [5.419999999992098e-07, 6.958000000001352e-06, 3.236000000000211e-06, 5.055999999999811e-06, 9.860999999999898e-06, 9.652999999998357e-06, 6.804999999998618e-06, 5.409999999997361e-07, 5.653000000001296e-06, 8.944999999999786e-06, 6.943999999998313e-06, 5.5839999999994505e-06, 9.874999999999468e-06, 8.944000000000313e-06, 3.1389999999992257e-06, 2.6939999999975317e-06, 4.903000000000546e-06, 5.420000000026792e-07, 9.597000000000078e-06, 2.54200000000121e-06, 7.0419999999987715e-06, 6.708000000001102e-06, 9.153000000001327e-06, 4.125000000000656e-06, 6.9719999999974525e-06, 2.694000000001001e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.583" endtime="20201112 12:26:10.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.579" endtime="20201112 12:26:10.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.588" endtime="20201112 12:26:10.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.592" endtime="20201112 12:26:10.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.590" endtime="20201112 12:26:10.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.587" endtime="20201112 12:26:10.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.221" endtime="20201112 12:26:10.612"></status>
</kw>
<msg timestamp="20201112 12:26:10.613" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.620" endtime="20201112 12:26:10.632"></status>
</kw>
<msg timestamp="20201112 12:26:10.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.619" endtime="20201112 12:26:10.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:10.633" endtime="20201112 12:26:10.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.636" endtime="20201112 12:26:10.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.616" endtime="20201112 12:26:10.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.614" endtime="20201112 12:26:10.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.646" endtime="20201112 12:26:10.919"></status>
</kw>
<msg timestamp="20201112 12:26:10.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017775556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.644" endtime="20201112 12:26:10.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017775556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:10.922" endtime="20201112 12:26:10.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.928" endtime="20201112 12:26:10.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.641" endtime="20201112 12:26:10.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.639" endtime="20201112 12:26:10.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.935" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:10.934" endtime="20201112 12:26:10.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.939" level="INFO">VALUE: [{'time': 0.017775556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017784806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017793417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.017793958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017801653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.017807264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017814708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443999999998813e-06, 'source_diff': 7.443999999998813e-06}, {'time': 0.017821028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017828222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.017837819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.017842181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36199999999734e-06, 'source_diff': 4.36199999999734e-06}, {'time': 0.017848639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.017849181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017852042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017856431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.017862403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017865861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017868375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017872722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017877556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017882597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.017887903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017893681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017898083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.401999999997103e-06, 'source_diff': 4.401999999997103e-06}, {'time': 0.017898625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.017910347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.017910889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017916944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}, {'time': 0.017926278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.017933486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.01794175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.017947361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017951972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017955125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017964458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.017969042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.017976236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.017976778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017982806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017988889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017994417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.017994958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018002167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.018002708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018009681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018014819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.018019875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018025486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018029347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018029889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018038778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.018046208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430000000002712e-06, 'source_diff': 7.430000000002712e-06}, {'time': 0.01804675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018055194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018060694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018065611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018073264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:10.936" endtime="20201112 12:26:10.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.931" endtime="20201112 12:26:10.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:10.956" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.941" endtime="20201112 12:26:10.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.960" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:10.959" endtime="20201112 12:26:10.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.963" level="INFO">VALUE: {'sourcetime': [0.017775556, 0.017778486, 0.017784806, 0.017793417, 0.017793958, 0.017801653, 0.017807264, 0.017814708, 0.017821028, 0.017828222, 0.017837819, 0.017842181, 0.017848639, 0.017849181, 0.017852042, 0.017856431, 0.017862403, 0.017865861, 0.017868375, 0.017872722, 0.017877556, 0.017882597, 0.017887903, 0.017893681, 0.017898083, 0.017898625, 0.017907931, 0.017910347, 0.017910889, 0.017916944, 0.017926278, 0.017933486, 0.01794175, 0.017947361, 0.017951972, 0.017955125, 0.017964458, 0.017969042, 0.017976236, 0.017976778, 0.017982806, 0.017988889, 0.017994417, 0.017994958, 0.018002167, 0.018002708, 0.018009681, 0.018014819, 0.018019875, 0.018025486, 0.018029347, 0.018029889, 0.018038778, 0.018046208, 0.01804675, 0.018055194, 0.018060694, 0.018065611, 0.018073264], 'source_diff': [0, 2.929999999998212e-06, 6.320000000000631e-06, 8.610999999998648e-06, 5.409999999997361e-07, 7.695000000002006e-06, 5.610999999999117e-06, 7.443999999998813e-06, 6.320000000000631e-06, 7.194000000002032e-06, 9.597000000000078e-06, 4.36199999999734e-06, 6.458000000000852e-06, 5.419999999992098e-07, 2.860999999999836e-06, 4.389000000000476e-06, 5.971999999999922e-06, 3.458000000001321e-06, 2.5139999999986007e-06, 4.347000000001766e-06, 4.8339999999987004e-06, 5.041000000000767e-06, 5.306000000000061e-06, 5.778000000001421e-06, 4.401999999997103e-06, 5.420000000026792e-07, 9.305999999997122e-06, 2.4160000000016113e-06, 5.419999999992098e-07, 6.055000000001337e-06, 9.333999999999731e-06, 7.2079999999981326e-06, 8.264000000000882e-06, 5.610999999999117e-06, 4.611000000001586e-06, 3.1529999999987957e-06, 9.333000000000258e-06, 4.58400000000192e-06, 7.193999999998563e-06, 5.419999999992098e-07, 6.028000000001671e-06, 6.083000000000477e-06, 5.527999999997701e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.138000000001752e-06, 5.055999999999811e-06, 5.610999999999117e-06, 3.861000000000836e-06, 5.419999999992098e-07, 8.888999999998037e-06, 7.430000000002712e-06, 5.419999999992098e-07, 8.443999999999813e-06, 5.499999999998562e-06, 4.917000000000116e-06, 7.652999999999827e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING'], 'diff': [0, 2.929999999998212e-06, 6.320000000000631e-06, 8.610999999998648e-06, 5.409999999997361e-07, 7.695000000002006e-06, 5.610999999999117e-06, 7.443999999998813e-06, 6.320000000000631e-06, 7.194000000002032e-06, 9.597000000000078e-06, 4.36199999999734e-06, 6.458000000000852e-06, 5.419999999992098e-07, 2.860999999999836e-06, 4.389000000000476e-06, 5.971999999999922e-06, 3.458000000001321e-06, 2.5139999999986007e-06, 4.347000000001766e-06, 4.8339999999987004e-06, 5.041000000000767e-06, 5.306000000000061e-06, 5.778000000001421e-06, 4.401999999997103e-06, 5.420000000026792e-07, 9.305999999997122e-06, 2.4160000000016113e-06, 5.419999999992098e-07, 6.055000000001337e-06, 9.333999999999731e-06, 7.2079999999981326e-06, 8.264000000000882e-06, 5.610999999999117e-06, 4.611000000001586e-06, 3.1529999999987957e-06, 9.333000000000258e-06, 4.58400000000192e-06, 7.193999999998563e-06, 5.419999999992098e-07, 6.028000000001671e-06, 6.083000000000477e-06, 5.527999999997701e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.138000000001752e-06, 5.055999999999811e-06, 5.610999999999117e-06, 3.861000000000836e-06, 5.419999999992098e-07, 8.888999999998037e-06, 7.430000000002712e-06, 5.419999999992098e-07, 8.443999999999813e-06, 5.499999999998562e-06, 4.917000000000116e-06, 7.652999999999827e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:10.961" endtime="20201112 12:26:10.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.957" endtime="20201112 12:26:10.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:10.968" level="INFO">${RESULT} = [{'time': 0.017778486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017793417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:10.965" endtime="20201112 12:26:10.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:10.977" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:10.969" endtime="20201112 12:26:10.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:10.980" endtime="20201112 12:26:10.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:10.984" level="INFO">VALUE: [2.929999999998212e-06, 8.610999999998648e-06, 7.695000000002006e-06, 7.443999999998813e-06, 7.194000000002032e-06, 4.36199999999734e-06, 5.419999999992098e-07, 4.389000000000476e-06, 3.458000000001321e-06, 4.347000000001766e-06, 5.041000000000767e-06, 5.778000000001421e-06, 5.420000000026792e-07, 2.4160000000016113e-06, 6.055000000001337e-06, 7.2079999999981326e-06, 5.610999999999117e-06, 3.1529999999987957e-06, 4.58400000000192e-06, 5.419999999992098e-07, 6.083000000000477e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.138000000001752e-06, 5.610999999999117e-06, 5.419999999992098e-07, 7.430000000002712e-06, 8.443999999999813e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201112 12:26:10.982" endtime="20201112 12:26:10.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.978" endtime="20201112 12:26:10.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:10.987" endtime="20201112 12:26:10.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:10.990" endtime="20201112 12:26:11.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.989" endtime="20201112 12:26:11.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.985" endtime="20201112 12:26:11.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:10.613" endtime="20201112 12:26:11.011"></status>
</kw>
<msg timestamp="20201112 12:26:11.012" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.019" endtime="20201112 12:26:11.029"></status>
</kw>
<msg timestamp="20201112 12:26:11.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.018" endtime="20201112 12:26:11.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.031" endtime="20201112 12:26:11.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.033" endtime="20201112 12:26:11.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.015" endtime="20201112 12:26:11.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.013" endtime="20201112 12:26:11.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.043" endtime="20201112 12:26:11.314"></status>
</kw>
<msg timestamp="20201112 12:26:11.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.041" endtime="20201112 12:26:11.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.317" endtime="20201112 12:26:11.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.322" endtime="20201112 12:26:11.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.038" endtime="20201112 12:26:11.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.037" endtime="20201112 12:26:11.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.329" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:11.328" endtime="20201112 12:26:11.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.333" level="INFO">VALUE: [{'time': 0.017717806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.763000000002377e-06, 'source_diff': 5.763000000002377e-06}, {'time': 0.017733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.017739306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017745167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017753319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.017757028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.017764528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.017769597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.01777275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017778278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017787, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.017794181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.017799736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017805056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.017810389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.017819806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.417000000001147e-06, 'source_diff': 9.417000000001147e-06}, {'time': 0.017825514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017835181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.017841722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541000000002267e-06, 'source_diff': 6.541000000002267e-06}, {'time': 0.017849167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444999999998286e-06, 'source_diff': 7.444999999998286e-06}, {'time': 0.017858111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.017861569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017866472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.017880056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017880597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.017882764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1669999999973655e-06, 'source_diff': 2.1669999999973655e-06}, {'time': 0.017890014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.017897292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.017903375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017910333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.017910875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017915208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017923083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.01792775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017930556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.017937931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.017945861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.017953292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.017960014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017965375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017965917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017969083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017971847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017980056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.017980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017986875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017991208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.017996028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.017999486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018000028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.018009083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.054999999997398e-06, 'source_diff': 9.054999999997398e-06}, {'time': 0.018016833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.018020458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:11.330" endtime="20201112 12:26:11.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.326" endtime="20201112 12:26:11.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:11.350" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.335" endtime="20201112 12:26:11.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.354" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:11.353" endtime="20201112 12:26:11.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.357" level="INFO">VALUE: {'sourcetime': [0.017717806, 0.017723569, 0.017733222, 0.017739306, 0.017745167, 0.017753319, 0.017757028, 0.017764528, 0.017769597, 0.01777275, 0.017778278, 0.017787, 0.017794181, 0.017799736, 0.017805056, 0.017810389, 0.017819806, 0.017825514, 0.017835181, 0.017841722, 0.017849167, 0.017858111, 0.017861569, 0.017866472, 0.017875653, 0.017880056, 0.017880597, 0.017882764, 0.017890014, 0.017897292, 0.017903375, 0.017910333, 0.017910875, 0.017915208, 0.017923083, 0.01792775, 0.017930556, 0.017937931, 0.017945861, 0.017953292, 0.017960014, 0.017965375, 0.017965917, 0.017969083, 0.017971847, 0.017980056, 0.017980597, 0.017986875, 0.017991208, 0.017996028, 0.017999486, 0.018000028, 0.018009083, 0.018016833, 0.018020458], 'source_diff': [0, 5.763000000002377e-06, 9.652999999998357e-06, 6.0839999999999506e-06, 5.860999999999367e-06, 8.152000000000853e-06, 3.709000000001045e-06, 7.500000000000562e-06, 5.068999999999907e-06, 3.1529999999987957e-06, 5.528000000001171e-06, 8.721999999999203e-06, 7.180999999998466e-06, 5.555000000000837e-06, 5.319999999999631e-06, 5.332999999999727e-06, 9.417000000001147e-06, 5.708000000000102e-06, 9.666999999997927e-06, 6.541000000002267e-06, 7.444999999998286e-06, 8.944000000000313e-06, 3.458000000001321e-06, 4.903000000000546e-06, 9.180999999996997e-06, 4.403000000000046e-06, 5.410000000032056e-07, 2.1669999999973655e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 6.083000000000477e-06, 6.958000000001352e-06, 5.419999999992098e-07, 4.332999999998727e-06, 7.875000000000937e-06, 4.666999999999866e-06, 2.80600000000103e-06, 7.375000000000437e-06, 7.929999999999743e-06, 7.430999999998716e-06, 6.722000000000672e-06, 5.360999999998867e-06, 5.420000000026792e-07, 3.165999999998892e-06, 2.7639999999988507e-06, 8.209000000002076e-06, 5.409999999997361e-07, 6.2779999999984515e-06, 4.333000000002196e-06, 4.8199999999991305e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 9.054999999997398e-06, 7.750000000000812e-06, 3.625000000000156e-06], 'eventdiff': [0, 5.763000000002377e-06, 9.652999999998357e-06, 6.0839999999999506e-06, 5.860999999999367e-06, 8.152000000000853e-06, 3.709000000001045e-06, 7.500000000000562e-06, 5.068999999999907e-06, 3.1529999999987957e-06, 5.528000000001171e-06, 8.721999999999203e-06, 7.180999999998466e-06, 5.555000000000837e-06, 5.319999999999631e-06, 5.332999999999727e-06, 9.417000000001147e-06, 5.708000000000102e-06, 9.666999999997927e-06, 6.541000000002267e-06, 7.444999999998286e-06, 8.944000000000313e-06, 3.458000000001321e-06, 4.903000000000546e-06, 9.180999999996997e-06, 4.403000000000046e-06, 5.410000000032056e-07, 2.1669999999973655e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 6.083000000000477e-06, 6.958000000001352e-06, 5.419999999992098e-07, 4.332999999998727e-06, 7.875000000000937e-06, 4.666999999999866e-06, 2.80600000000103e-06, 7.375000000000437e-06, 7.929999999999743e-06, 7.430999999998716e-06, 6.722000000000672e-06, 5.360999999998867e-06, 5.420000000026792e-07, 3.165999999998892e-06, 2.7639999999988507e-06, 8.209000000002076e-06, 5.409999999997361e-07, 6.2779999999984515e-06, 4.333000000002196e-06, 4.8199999999991305e-06, 3.4579999999978517e-06, 5.420000000026792e-07, 9.054999999997398e-06, 7.750000000000812e-06, 3.625000000000156e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:11.355" endtime="20201112 12:26:11.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.351" endtime="20201112 12:26:11.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.362" level="INFO">${RESULT} = [{'time': 0.017723569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.763000000002377e-06, 'source_diff': 5.763000000002377e-06}, {'time': 0.017739306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:11.359" endtime="20201112 12:26:11.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.370" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.363" endtime="20201112 12:26:11.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.374" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:11.373" endtime="20201112 12:26:11.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.377" level="INFO">VALUE: [5.763000000002377e-06, 6.0839999999999506e-06, 8.152000000000853e-06, 7.500000000000562e-06, 3.1529999999987957e-06, 8.721999999999203e-06, 5.555000000000837e-06, 5.332999999999727e-06, 5.708000000000102e-06, 6.541000000002267e-06, 8.944000000000313e-06, 4.903000000000546e-06, 4.403000000000046e-06, 2.1669999999973655e-06, 7.2779999999994516e-06, 6.958000000001352e-06, 4.332999999998727e-06, 4.666999999999866e-06, 7.375000000000437e-06, 7.430999999998716e-06, 5.360999999998867e-06, 3.165999999998892e-06, 8.209000000002076e-06, 6.2779999999984515e-06, 4.8199999999991305e-06, 5.420000000026792e-07, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.376" endtime="20201112 12:26:11.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.371" endtime="20201112 12:26:11.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.380" endtime="20201112 12:26:11.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.384" endtime="20201112 12:26:11.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.382" endtime="20201112 12:26:11.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.379" endtime="20201112 12:26:11.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.012" endtime="20201112 12:26:11.404"></status>
</kw>
<msg timestamp="20201112 12:26:11.405" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.414" endtime="20201112 12:26:11.425"></status>
</kw>
<msg timestamp="20201112 12:26:11.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.411" endtime="20201112 12:26:11.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.427" endtime="20201112 12:26:11.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.429" endtime="20201112 12:26:11.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.408" endtime="20201112 12:26:11.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.407" endtime="20201112 12:26:11.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.438" endtime="20201112 12:26:11.709"></status>
</kw>
<msg timestamp="20201112 12:26:11.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019369514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.437" endtime="20201112 12:26:11.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019369514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.712" endtime="20201112 12:26:11.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.718" endtime="20201112 12:26:11.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.434" endtime="20201112 12:26:11.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.432" endtime="20201112 12:26:11.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.724" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:11.723" endtime="20201112 12:26:11.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.728" level="INFO">VALUE: [{'time': 0.019364389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019369514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.019370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019376014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019384708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.01938525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019390486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.019399833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019405917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.08400000000342e-06, 'source_diff': 6.08400000000342e-06}, {'time': 0.019412167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.019415903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.019421653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019428847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.019432972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019439042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.019445361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.019449542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.0194565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.019457042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019459431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.019465431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019465972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.019474069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.019482292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222999999998176e-06, 'source_diff': 8.222999999998176e-06}, {'time': 0.019482833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.410000000032056e-07, 'source_diff': 5.410000000032056e-07}, {'time': 0.019489972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.019496056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.019504986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.019510944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.019515292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.019520361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.019524458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.019532208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.0195375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.019538042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.019541208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1660000000023614e-06, 'source_diff': 3.1660000000023614e-06}, {'time': 0.019543722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.019551653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.019557903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.019566528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.019574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.019574972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019580528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.019583278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.019588806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019598708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.019603042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.019603583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019605792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.019606333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.019608236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019613778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.019621528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.019628083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.019630611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.019633347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.019641986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.019645444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.019653681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236999999997746e-06, 'source_diff': 8.236999999997746e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:11.725" endtime="20201112 12:26:11.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.721" endtime="20201112 12:26:11.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:11.745" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.731" endtime="20201112 12:26:11.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.749" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:11.748" endtime="20201112 12:26:11.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.753" level="INFO">VALUE: {'sourcetime': [0.019364389, 0.019369514, 0.019370056, 0.019376014, 0.019384708, 0.01938525, 0.019390486, 0.019399833, 0.019405917, 0.019412167, 0.019415903, 0.019421653, 0.019428847, 0.019432972, 0.019439042, 0.019445361, 0.019449542, 0.0194565, 0.019457042, 0.019459431, 0.019465431, 0.019465972, 0.019474069, 0.019482292, 0.019482833, 0.019489972, 0.019496056, 0.019504986, 0.019510944, 0.019515292, 0.019520361, 0.019524458, 0.019532208, 0.0195375, 0.019538042, 0.019541208, 0.019543722, 0.019551653, 0.019557903, 0.019566528, 0.019574431, 0.019574972, 0.019580528, 0.019583278, 0.019588806, 0.019598708, 0.019603042, 0.019603583, 0.019605792, 0.019606333, 0.019608236, 0.019613778, 0.019621528, 0.019628083, 0.019630611, 0.019633347, 0.019641986, 0.019645444, 0.019653681], 'source_diff': [0, 5.125000000001656e-06, 5.419999999992098e-07, 5.958000000000352e-06, 8.694000000000063e-06, 5.419999999992098e-07, 5.235999999998742e-06, 9.346999999999828e-06, 6.08400000000342e-06, 6.249999999999312e-06, 3.736000000000711e-06, 5.749999999998812e-06, 7.193999999998563e-06, 4.125000000000656e-06, 6.070000000000381e-06, 6.319000000001157e-06, 4.1809999999989356e-06, 6.958000000001352e-06, 5.419999999992098e-07, 2.3889999999984757e-06, 5.999999999999062e-06, 5.410000000032056e-07, 8.096999999998578e-06, 8.222999999998176e-06, 5.410000000032056e-07, 7.138999999999757e-06, 6.0839999999999506e-06, 8.929999999997273e-06, 5.958000000000352e-06, 4.34800000000124e-06, 5.068999999999907e-06, 4.097000000001516e-06, 7.749999999997342e-06, 5.292000000000491e-06, 5.419999999992098e-07, 3.1660000000023614e-06, 2.5139999999986007e-06, 7.930999999999216e-06, 6.250000000002781e-06, 8.624999999998217e-06, 7.903000000000077e-06, 5.409999999997361e-07, 5.556000000000311e-06, 2.749999999999281e-06, 5.528000000001171e-06, 9.901999999999134e-06, 4.33400000000167e-06, 5.409999999997361e-07, 2.2089999999995447e-06, 5.409999999997361e-07, 1.903000000001015e-06, 5.541999999997271e-06, 7.750000000000812e-06, 6.555000000001837e-06, 2.5279999999981706e-06, 2.735999999999711e-06, 8.639000000001257e-06, 3.458000000001321e-06, 8.236999999997746e-06], 'eventdiff': [0, 5.125000000001656e-06, 5.419999999992098e-07, 5.958000000000352e-06, 8.694000000000063e-06, 5.419999999992098e-07, 5.235999999998742e-06, 9.346999999999828e-06, 6.08400000000342e-06, 6.249999999999312e-06, 3.736000000000711e-06, 5.749999999998812e-06, 7.193999999998563e-06, 4.125000000000656e-06, 6.070000000000381e-06, 6.319000000001157e-06, 4.1809999999989356e-06, 6.958000000001352e-06, 5.419999999992098e-07, 2.3889999999984757e-06, 5.999999999999062e-06, 5.410000000032056e-07, 8.096999999998578e-06, 8.222999999998176e-06, 5.410000000032056e-07, 7.138999999999757e-06, 6.0839999999999506e-06, 8.929999999997273e-06, 5.958000000000352e-06, 4.34800000000124e-06, 5.068999999999907e-06, 4.097000000001516e-06, 7.749999999997342e-06, 5.292000000000491e-06, 5.419999999992098e-07, 3.1660000000023614e-06, 2.5139999999986007e-06, 7.930999999999216e-06, 6.250000000002781e-06, 8.624999999998217e-06, 7.903000000000077e-06, 5.409999999997361e-07, 5.556000000000311e-06, 2.749999999999281e-06, 5.528000000001171e-06, 9.901999999999134e-06, 4.33400000000167e-06, 5.409999999997361e-07, 2.2089999999995447e-06, 5.409999999997361e-07, 1.903000000001015e-06, 5.541999999997271e-06, 7.750000000000812e-06, 6.555000000001837e-06, 2.5279999999981706e-06, 2.735999999999711e-06, 8.639000000001257e-06, 3.458000000001321e-06, 8.236999999997746e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:11.750" endtime="20201112 12:26:11.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.746" endtime="20201112 12:26:11.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:11.758" level="INFO">${RESULT} = [{'time': 0.019369514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.019376014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:11.755" endtime="20201112 12:26:11.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:11.767" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:11.759" endtime="20201112 12:26:11.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.771" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:11.770" endtime="20201112 12:26:11.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.774" level="INFO">VALUE: [5.125000000001656e-06, 5.958000000000352e-06, 5.419999999992098e-07, 9.346999999999828e-06, 6.249999999999312e-06, 5.749999999998812e-06, 4.125000000000656e-06, 6.319000000001157e-06, 6.958000000001352e-06, 2.3889999999984757e-06, 5.410000000032056e-07, 8.222999999998176e-06, 7.138999999999757e-06, 8.929999999997273e-06, 4.34800000000124e-06, 4.097000000001516e-06, 5.292000000000491e-06, 3.1660000000023614e-06, 7.930999999999216e-06, 8.624999999998217e-06, 5.409999999997361e-07, 2.749999999999281e-06, 9.901999999999134e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.541999999997271e-06, 6.555000000001837e-06, 2.735999999999711e-06, 3.458000000001321e-06]</msg>
<status status="PASS" starttime="20201112 12:26:11.772" endtime="20201112 12:26:11.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.768" endtime="20201112 12:26:11.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.777" endtime="20201112 12:26:11.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:11.780" endtime="20201112 12:26:11.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.779" endtime="20201112 12:26:11.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.775" endtime="20201112 12:26:11.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.405" endtime="20201112 12:26:11.801"></status>
</kw>
<msg timestamp="20201112 12:26:11.801" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.809" endtime="20201112 12:26:11.820"></status>
</kw>
<msg timestamp="20201112 12:26:11.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.808" endtime="20201112 12:26:11.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:11.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:11.822" endtime="20201112 12:26:11.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.824" endtime="20201112 12:26:11.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.805" endtime="20201112 12:26:11.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.803" endtime="20201112 12:26:11.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:11.833" endtime="20201112 12:26:12.107"></status>
</kw>
<msg timestamp="20201112 12:26:12.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017631417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:11.832" endtime="20201112 12:26:12.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017631417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.111" endtime="20201112 12:26:12.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.117" endtime="20201112 12:26:12.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.829" endtime="20201112 12:26:12.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.828" endtime="20201112 12:26:12.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.123" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:12.122" endtime="20201112 12:26:12.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.127" level="INFO">VALUE: [{'time': 0.017631417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017641083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.01764875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.017658639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.017665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.017671139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017680958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.0176815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017687528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017691708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.017694431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.017700389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017700931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017706708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.017710361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017717625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.01772625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.017726792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000026792e-07, 'source_diff': 5.420000000026792e-07}, {'time': 0.017729417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017736681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.017737222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017742056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017751167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.017761, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.832999999997288e-06, 'source_diff': 9.832999999997288e-06}, {'time': 0.017770917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.917000000001647e-06, 'source_diff': 9.917000000001647e-06}, {'time': 0.017780708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.017789347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.017795125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017800875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.017801417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017809764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.017817972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.017818514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017825653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999999757e-06, 'source_diff': 7.138999999999757e-06}, {'time': 0.017826194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.017834542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.017840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.017845972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017850583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017858097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.017864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017870486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.017872931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017875611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.017878528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.017882236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017891583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.017896639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017899139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.017899681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017908014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.017914736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.017915278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017917264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.017919708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017928875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.017937569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.017938111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.017943667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.017948958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:12.124" endtime="20201112 12:26:12.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.120" endtime="20201112 12:26:12.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:12.144" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.130" endtime="20201112 12:26:12.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.148" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:12.147" endtime="20201112 12:26:12.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.151" level="INFO">VALUE: {'sourcetime': [0.017631417, 0.017641083, 0.01764875, 0.017658639, 0.017665139, 0.017671139, 0.017680958, 0.0176815, 0.017687528, 0.017691708, 0.017694431, 0.017700389, 0.017700931, 0.017706708, 0.017710361, 0.017717625, 0.01772625, 0.017726792, 0.017729417, 0.017736681, 0.017737222, 0.017742056, 0.017751167, 0.017761, 0.017770917, 0.017780708, 0.017789347, 0.017795125, 0.017800875, 0.017801417, 0.017809764, 0.017817972, 0.017818514, 0.017825653, 0.017826194, 0.017834542, 0.017840861, 0.017845972, 0.017850583, 0.017858097, 0.017864181, 0.017870486, 0.017872931, 0.017875611, 0.017878528, 0.017882236, 0.017891583, 0.017896639, 0.017899139, 0.017899681, 0.017908014, 0.017914736, 0.017915278, 0.017917264, 0.017919708, 0.017928875, 0.017937569, 0.017938111, 0.017943667, 0.017948958], 'source_diff': [0, 9.665999999998454e-06, 7.667000000002866e-06, 9.888999999999037e-06, 6.499999999999562e-06, 5.999999999999062e-06, 9.819000000001188e-06, 5.419999999992098e-07, 6.028000000001671e-06, 4.179999999999462e-06, 2.7229999999996146e-06, 5.958000000000352e-06, 5.419999999992098e-07, 5.777000000001947e-06, 3.6529999999992957e-06, 7.263999999999882e-06, 8.624999999998217e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 7.263999999999882e-06, 5.409999999997361e-07, 4.8339999999987004e-06, 9.111000000002617e-06, 9.832999999997288e-06, 9.917000000001647e-06, 9.790999999998579e-06, 8.639000000001257e-06, 5.7779999999979514e-06, 5.750000000002281e-06, 5.419999999992098e-07, 8.346999999998828e-06, 8.208000000002602e-06, 5.419999999992098e-07, 7.138999999999757e-06, 5.409999999997361e-07, 8.347999999998301e-06, 6.319000000001157e-06, 5.111000000002086e-06, 4.610999999998117e-06, 7.514000000000132e-06, 6.0839999999999506e-06, 6.305000000001587e-06, 2.4450000000002248e-06, 2.679999999997962e-06, 2.917000000001585e-06, 3.7079999999981017e-06, 9.346999999999828e-06, 5.055999999999811e-06, 2.5000000000025002e-06, 5.419999999992098e-07, 8.332999999999258e-06, 6.722000000000672e-06, 5.419999999992098e-07, 1.985999999998961e-06, 2.444000000000751e-06, 9.167000000000897e-06, 8.694000000000063e-06, 5.419999999992098e-07, 5.556000000000311e-06, 5.291000000001017e-06], 'eventdiff': [0, 9.665999999998454e-06, 7.667000000002866e-06, 9.888999999999037e-06, 6.499999999999562e-06, 5.999999999999062e-06, 9.819000000001188e-06, 5.419999999992098e-07, 6.028000000001671e-06, 4.179999999999462e-06, 2.7229999999996146e-06, 5.958000000000352e-06, 5.419999999992098e-07, 5.777000000001947e-06, 3.6529999999992957e-06, 7.263999999999882e-06, 8.624999999998217e-06, 5.420000000026792e-07, 2.6249999999991558e-06, 7.263999999999882e-06, 5.409999999997361e-07, 4.8339999999987004e-06, 9.111000000002617e-06, 9.832999999997288e-06, 9.917000000001647e-06, 9.790999999998579e-06, 8.639000000001257e-06, 5.7779999999979514e-06, 5.750000000002281e-06, 5.419999999992098e-07, 8.346999999998828e-06, 8.208000000002602e-06, 5.419999999992098e-07, 7.138999999999757e-06, 5.409999999997361e-07, 8.347999999998301e-06, 6.319000000001157e-06, 5.111000000002086e-06, 4.610999999998117e-06, 7.514000000000132e-06, 6.0839999999999506e-06, 6.305000000001587e-06, 2.4450000000002248e-06, 2.679999999997962e-06, 2.917000000001585e-06, 3.7079999999981017e-06, 9.346999999999828e-06, 5.055999999999811e-06, 2.5000000000025002e-06, 5.419999999992098e-07, 8.332999999999258e-06, 6.722000000000672e-06, 5.419999999992098e-07, 1.985999999998961e-06, 2.444000000000751e-06, 9.167000000000897e-06, 8.694000000000063e-06, 5.419999999992098e-07, 5.556000000000311e-06, 5.291000000001017e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:12.149" endtime="20201112 12:26:12.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.145" endtime="20201112 12:26:12.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.156" level="INFO">${RESULT} = [{'time': 0.017641083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.017658639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:12.153" endtime="20201112 12:26:12.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.166" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.157" endtime="20201112 12:26:12.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.170" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:12.169" endtime="20201112 12:26:12.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.173" level="INFO">VALUE: [9.665999999998454e-06, 9.888999999999037e-06, 5.999999999999062e-06, 5.419999999992098e-07, 4.179999999999462e-06, 5.958000000000352e-06, 5.777000000001947e-06, 7.263999999999882e-06, 5.420000000026792e-07, 7.263999999999882e-06, 4.8339999999987004e-06, 9.832999999997288e-06, 9.790999999998579e-06, 5.7779999999979514e-06, 5.419999999992098e-07, 8.208000000002602e-06, 7.138999999999757e-06, 8.347999999998301e-06, 5.111000000002086e-06, 7.514000000000132e-06, 6.305000000001587e-06, 2.679999999997962e-06, 3.7079999999981017e-06, 5.055999999999811e-06, 5.419999999992098e-07, 6.722000000000672e-06, 1.985999999998961e-06, 9.167000000000897e-06, 5.419999999992098e-07, 5.291000000001017e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.171" endtime="20201112 12:26:12.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.167" endtime="20201112 12:26:12.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.176" endtime="20201112 12:26:12.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.179" endtime="20201112 12:26:12.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.178" endtime="20201112 12:26:12.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.174" endtime="20201112 12:26:12.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:11.802" endtime="20201112 12:26:12.200"></status>
</kw>
<msg timestamp="20201112 12:26:12.200" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.208" endtime="20201112 12:26:12.220"></status>
</kw>
<msg timestamp="20201112 12:26:12.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.207" endtime="20201112 12:26:12.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.222" endtime="20201112 12:26:12.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.225" endtime="20201112 12:26:12.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.204" endtime="20201112 12:26:12.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.202" endtime="20201112 12:26:12.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.235" endtime="20201112 12:26:12.503"></status>
</kw>
<msg timestamp="20201112 12:26:12.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018410292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018417486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.233" endtime="20201112 12:26:12.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018410292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018417486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:12.506" endtime="20201112 12:26:12.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.512" endtime="20201112 12:26:12.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.230" endtime="20201112 12:26:12.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.228" endtime="20201112 12:26:12.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.518" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:26:12.517" endtime="20201112 12:26:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.523" level="INFO">VALUE: [{'time': 0.018410292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018417486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018426597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018434278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018440375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018444722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018454056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018463708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.018467667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.959000000001295e-06, 'source_diff': 3.959000000001295e-06}, {'time': 0.018470347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018474028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.018483375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018487958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018496431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.018502042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018506208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.01850675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018509917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.018512431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018517792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018518333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018523806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.018524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.018528639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018538458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018540889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018541431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.018548097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.018550611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018559722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.018562722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018570639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018574736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018577486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018586833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018589833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.018595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018603139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.018606111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018609097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018617736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.018620639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.018627597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9579999999978825e-06, 'source_diff': 6.9579999999978825e-06}, {'time': 0.018636819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.018641194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018647681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.018653528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018658431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018663486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.018669347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018674625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018682903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.018688181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018692569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.387999999997533e-06, 'source_diff': 4.387999999997533e-06}]</msg>
<status status="PASS" starttime="20201112 12:26:12.519" endtime="20201112 12:26:12.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.515" endtime="20201112 12:26:12.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:26:12.539" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.525" endtime="20201112 12:26:12.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.543" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:26:12.542" endtime="20201112 12:26:12.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.547" level="INFO">VALUE: {'sourcetime': [0.018410292, 0.018417486, 0.018426597, 0.018434278, 0.018440375, 0.018444722, 0.018454056, 0.018463708, 0.018467667, 0.018470347, 0.018474028, 0.018483375, 0.018487958, 0.018496431, 0.018502042, 0.018506208, 0.01850675, 0.018509917, 0.018512431, 0.018517792, 0.018518333, 0.018523806, 0.018524347, 0.018528639, 0.018538458, 0.018540889, 0.018541431, 0.018548097, 0.018550611, 0.018559722, 0.018562722, 0.018570639, 0.018574736, 0.018577486, 0.018586833, 0.018589833, 0.018595833, 0.018603139, 0.018606111, 0.018609097, 0.018617736, 0.018620639, 0.018627597, 0.018636819, 0.018641194, 0.018647681, 0.018653528, 0.018658431, 0.018663486, 0.018669347, 0.018674625, 0.018682903, 0.018688181, 0.018692569], 'source_diff': [0, 7.193999999998563e-06, 9.110999999999148e-06, 7.680999999998966e-06, 6.097000000000047e-06, 4.347000000001766e-06, 9.333999999999731e-06, 9.651999999998884e-06, 3.959000000001295e-06, 2.6800000000014312e-06, 3.6809999999984355e-06, 9.346999999999828e-06, 4.582999999998977e-06, 8.473000000001896e-06, 5.610999999999117e-06, 4.165999999999892e-06, 5.419999999992098e-07, 3.167000000001835e-06, 2.5139999999986007e-06, 5.361000000002336e-06, 5.409999999997361e-07, 5.472999999998895e-06, 5.409999999997361e-07, 4.291999999999491e-06, 9.819000000001188e-06, 2.431000000000655e-06, 5.419999999992098e-07, 6.665999999998923e-06, 2.51400000000207e-06, 9.110999999999148e-06, 2.999999999999531e-06, 7.916999999999647e-06, 4.097000000001516e-06, 2.749999999999281e-06, 9.346999999999828e-06, 2.999999999999531e-06, 5.999999999999062e-06, 7.306000000002061e-06, 2.972000000000391e-06, 2.985999999999961e-06, 8.638999999997787e-06, 2.903000000002015e-06, 6.9579999999978825e-06, 9.221999999999703e-06, 4.375000000000906e-06, 6.486999999999465e-06, 5.846999999999797e-06, 4.903000000000546e-06, 5.055000000000337e-06, 5.860999999999367e-06, 5.278000000000921e-06, 8.278000000000452e-06, 5.278000000000921e-06, 4.387999999997533e-06], 'eventdiff': [0, 7.193999999998563e-06, 9.110999999999148e-06, 7.680999999998966e-06, 6.097000000000047e-06, 4.347000000001766e-06, 9.333999999999731e-06, 9.651999999998884e-06, 3.959000000001295e-06, 2.6800000000014312e-06, 3.6809999999984355e-06, 9.346999999999828e-06, 4.582999999998977e-06, 8.473000000001896e-06, 5.610999999999117e-06, 4.165999999999892e-06, 5.419999999992098e-07, 3.167000000001835e-06, 2.5139999999986007e-06, 5.361000000002336e-06, 5.409999999997361e-07, 5.472999999998895e-06, 5.409999999997361e-07, 4.291999999999491e-06, 9.819000000001188e-06, 2.431000000000655e-06, 5.419999999992098e-07, 6.665999999998923e-06, 2.51400000000207e-06, 9.110999999999148e-06, 2.999999999999531e-06, 7.916999999999647e-06, 4.097000000001516e-06, 2.749999999999281e-06, 9.346999999999828e-06, 2.999999999999531e-06, 5.999999999999062e-06, 7.306000000002061e-06, 2.972000000000391e-06, 2.985999999999961e-06, 8.638999999997787e-06, 2.903000000002015e-06, 6.9579999999978825e-06, 9.221999999999703e-06, 4.375000000000906e-06, 6.486999999999465e-06, 5.846999999999797e-06, 4.903000000000546e-06, 5.055000000000337e-06, 5.860999999999367e-06, 5.278000000000921e-06, 8.278000000000452e-06, 5.278000000000921e-06, 4.387999999997533e-06]}</msg>
<status status="PASS" starttime="20201112 12:26:12.544" endtime="20201112 12:26:12.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.540" endtime="20201112 12:26:12.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:12.551" level="INFO">${RESULT} = [{'time': 0.018417486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018434278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:12.548" endtime="20201112 12:26:12.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:12.559" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:12.552" endtime="20201112 12:26:12.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.564" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:26:12.563" endtime="20201112 12:26:12.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:12.566" level="INFO">VALUE: [7.193999999998563e-06, 7.680999999998966e-06, 4.347000000001766e-06, 9.651999999998884e-06, 2.6800000000014312e-06, 9.346999999999828e-06, 8.473000000001896e-06, 4.165999999999892e-06, 3.167000000001835e-06, 5.361000000002336e-06, 5.472999999998895e-06, 4.291999999999491e-06, 2.431000000000655e-06, 6.665999999998923e-06, 9.110999999999148e-06, 7.916999999999647e-06, 2.749999999999281e-06, 2.999999999999531e-06, 7.306000000002061e-06, 2.985999999999961e-06, 2.903000000002015e-06, 9.221999999999703e-06, 6.486999999999465e-06, 4.903000000000546e-06, 5.860999999999367e-06, 8.278000000000452e-06, 4.387999999997533e-06]</msg>
<status status="PASS" starttime="20201112 12:26:12.565" endtime="20201112 12:26:12.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.560" endtime="20201112 12:26:12.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.570" endtime="20201112 12:26:12.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.573" endtime="20201112 12:26:12.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.572" endtime="20201112 12:26:12.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.568" endtime="20201112 12:26:12.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.201" endtime="20201112 12:26:12.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:04.617" endtime="20201112 12:26:12.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.599" endtime="20201112 12:26:12.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.597" endtime="20201112 12:26:12.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.596" endtime="20201112 12:26:12.619"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:01.498" endtime="20201112 12:26:12.620" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:12.627" endtime="20201112 12:26:12.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.625" endtime="20201112 12:26:12.647"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:12.661" endtime="20201112 12:26:15.683"></status>
</kw>
<msg timestamp="20201112 12:26:15.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:12.660" endtime="20201112 12:26:15.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.686" endtime="20201112 12:26:15.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.695" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:15.691" endtime="20201112 12:26:15.696"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.657" endtime="20201112 12:26:15.698"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:12.654" endtime="20201112 12:26:15.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.653" endtime="20201112 12:26:15.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:15.707" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:15.705" endtime="20201112 12:26:15.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.701" endtime="20201112 12:26:15.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.652" endtime="20201112 12:26:15.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.652" endtime="20201112 12:26:15.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.711" endtime="20201112 12:26:15.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.650" endtime="20201112 12:26:15.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.648" endtime="20201112 12:26:15.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:12.624" endtime="20201112 12:26:15.716"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:26:15.721" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.738" endtime="20201112 12:26:15.753"></status>
</kw>
<msg timestamp="20201112 12:26:15.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.734" endtime="20201112 12:26:15.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:15.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:15.757" endtime="20201112 12:26:15.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.762" endtime="20201112 12:26:15.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.728" endtime="20201112 12:26:15.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.724" endtime="20201112 12:26:15.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:15.783" endtime="20201112 12:26:16.080"></status>
</kw>
<msg timestamp="20201112 12:26:16.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102155958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102157667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:15.780" endtime="20201112 12:26:16.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102155958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102157667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.085" endtime="20201112 12:26:16.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.093" endtime="20201112 12:26:16.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.772" endtime="20201112 12:26:16.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.769" endtime="20201112 12:26:16.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.100" level="INFO">${RESULT} = [{'time': 3.102157667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7090000001829253e-06, 'source_diff': 1.7090000001829253e-06}, {'time': 3.102161986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.097" endtime="20201112 12:26:16.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.113" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.101" endtime="20201112 12:26:16.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.117" endtime="20201112 12:26:16.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.120" level="INFO">VALUE: [1.7090000001829253e-06, 1.6939999998299982e-06, 1.6940000002740874e-06, 1.777999999674762e-06, 1.6949999999127385e-06, 1.6800000000039006e-06, 1.708999999738836e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6940000002740874e-06, 1.7079999996560957e-06, 1.681000000086641e-06, 1.7639999998486644e-06, 1.708000000100185e-06, 1.681000000086641e-06, 1.6939999998299982e-06, 1.7090000001829253e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.708000000100185e-06, 1.7219999999262825e-06, 1.708000000100185e-06, 1.6939999998299982e-06, 1.708000000100185e-06, 1.6389999997201699e-06, 1.6940000002740874e-06, 1.708000000100185e-06, 1.7079999996560957e-06, 1.7090000001829253e-06, 1.6800000000039006e-06, 1.6529999999903566e-06, 1.7500000000225668e-06, 1.6939999998299982e-06, 1.6939999998299982e-06, 1.639000000164259e-06, 1.6800000000039006e-06, 1.6950000003568277e-06, 1.6949999999127385e-06, 1.7079999996560957e-06, 1.6940000002740874e-06, 1.6939999998299982e-06, 1.6669999998164542e-06, 1.6949999999127385e-06, 1.7079999996560957e-06, 1.708000000100185e-06, 1.6669999998164542e-06, 1.6800000000039006e-06, 1.6939999998299982e-06, 1.7919999999449487e-06, 1.6389999997201699e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.119" endtime="20201112 12:26:16.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.114" endtime="20201112 12:26:16.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.123" endtime="20201112 12:26:16.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.127" endtime="20201112 12:26:16.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.125" endtime="20201112 12:26:16.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.122" endtime="20201112 12:26:16.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.722" endtime="20201112 12:26:16.148"></status>
</kw>
<msg timestamp="20201112 12:26:16.148" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.156" endtime="20201112 12:26:16.169"></status>
</kw>
<msg timestamp="20201112 12:26:16.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.154" endtime="20201112 12:26:16.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.170" endtime="20201112 12:26:16.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.173" endtime="20201112 12:26:16.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.152" endtime="20201112 12:26:16.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.150" endtime="20201112 12:26:16.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.183" endtime="20201112 12:26:16.473"></status>
</kw>
<msg timestamp="20201112 12:26:16.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018572444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.181" endtime="20201112 12:26:16.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018572444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.477" endtime="20201112 12:26:16.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.485" endtime="20201112 12:26:16.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.178" endtime="20201112 12:26:16.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.176" endtime="20201112 12:26:16.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.492" level="INFO">${RESULT} = [{'time': 0.018572444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018582014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:16.489" endtime="20201112 12:26:16.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.506" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.493" endtime="20201112 12:26:16.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.510" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.509" endtime="20201112 12:26:16.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.513" level="INFO">VALUE: [1.707999999999571e-06, 1.707999999999571e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7220000000026103e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.639000000001195e-06, 1.7089999999990446e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7080000000030404e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.6949999999994747e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.511" endtime="20201112 12:26:16.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.507" endtime="20201112 12:26:16.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.516" endtime="20201112 12:26:16.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.524" endtime="20201112 12:26:16.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.522" endtime="20201112 12:26:16.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.514" endtime="20201112 12:26:16.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.149" endtime="20201112 12:26:16.545"></status>
</kw>
<msg timestamp="20201112 12:26:16.545" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.553" endtime="20201112 12:26:16.566"></status>
</kw>
<msg timestamp="20201112 12:26:16.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.551" endtime="20201112 12:26:16.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.567" endtime="20201112 12:26:16.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.570" endtime="20201112 12:26:16.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.549" endtime="20201112 12:26:16.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.547" endtime="20201112 12:26:16.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.579" endtime="20201112 12:26:16.866"></status>
</kw>
<msg timestamp="20201112 12:26:16.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017950125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.577" endtime="20201112 12:26:16.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017950125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017951764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.870" endtime="20201112 12:26:16.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.878" endtime="20201112 12:26:16.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.575" endtime="20201112 12:26:16.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.573" endtime="20201112 12:26:16.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:16.885" level="INFO">${RESULT} = [{'time': 0.017951764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.017962819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:16.882" endtime="20201112 12:26:16.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:16.898" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:16.886" endtime="20201112 12:26:16.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:16.902" endtime="20201112 12:26:16.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.905" level="INFO">VALUE: [1.6389999999977256e-06, 1.7080000000030404e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7779999999974205e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7080000000030404e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.77800000000089e-06, 1.7089999999990446e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.7220000000026103e-06, 1.6799999999969617e-06, 1.7089999999990446e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.77800000000089e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7080000000030404e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7089999999990446e-06]</msg>
<status status="PASS" starttime="20201112 12:26:16.904" endtime="20201112 12:26:16.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.899" endtime="20201112 12:26:16.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.909" endtime="20201112 12:26:16.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:16.912" endtime="20201112 12:26:16.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.911" endtime="20201112 12:26:16.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.907" endtime="20201112 12:26:16.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.546" endtime="20201112 12:26:16.933"></status>
</kw>
<msg timestamp="20201112 12:26:16.933" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.941" endtime="20201112 12:26:16.953"></status>
</kw>
<msg timestamp="20201112 12:26:16.953" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.940" endtime="20201112 12:26:16.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:16.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:16.954" endtime="20201112 12:26:16.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.957" endtime="20201112 12:26:16.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.937" endtime="20201112 12:26:16.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.935" endtime="20201112 12:26:16.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:16.966" endtime="20201112 12:26:17.250"></status>
</kw>
<msg timestamp="20201112 12:26:17.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:16.964" endtime="20201112 12:26:17.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.254" endtime="20201112 12:26:17.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.263" endtime="20201112 12:26:17.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.962" endtime="20201112 12:26:17.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.960" endtime="20201112 12:26:17.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.270" level="INFO">${RESULT} = [{'time': 0.018111236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018115153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:17.266" endtime="20201112 12:26:17.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.283" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.271" endtime="20201112 12:26:17.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.287" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.286" endtime="20201112 12:26:17.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.290" level="INFO">VALUE: [1.707999999999571e-06, 1.7089999999990446e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.6659999999973918e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7500000000017502e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.7080000000030404e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.77800000000089e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7219999999991409e-06, 1.7080000000030404e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.76400000000132e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.7089999999990446e-06, 1.6950000000029442e-06, 1.707999999999571e-06, 1.7369999999981844e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.7089999999990446e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.288" endtime="20201112 12:26:17.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.284" endtime="20201112 12:26:17.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.293" endtime="20201112 12:26:17.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.297" endtime="20201112 12:26:17.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.295" endtime="20201112 12:26:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.292" endtime="20201112 12:26:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:16.934" endtime="20201112 12:26:17.317"></status>
</kw>
<msg timestamp="20201112 12:26:17.318" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.325" endtime="20201112 12:26:17.338"></status>
</kw>
<msg timestamp="20201112 12:26:17.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.324" endtime="20201112 12:26:17.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.339" endtime="20201112 12:26:17.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.342" endtime="20201112 12:26:17.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.321" endtime="20201112 12:26:17.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.319" endtime="20201112 12:26:17.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.351" endtime="20201112 12:26:17.638"></status>
</kw>
<msg timestamp="20201112 12:26:17.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.350" endtime="20201112 12:26:17.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.642" endtime="20201112 12:26:17.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.650" endtime="20201112 12:26:17.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.347" endtime="20201112 12:26:17.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.345" endtime="20201112 12:26:17.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:17.657" level="INFO">${RESULT} = [{'time': 0.017998458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018004861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:17.654" endtime="20201112 12:26:17.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:17.670" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:17.658" endtime="20201112 12:26:17.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.675" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:17.674" endtime="20201112 12:26:17.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.677" level="INFO">VALUE: [1.7219999999991409e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.77800000000089e-06, 1.7089999999990446e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.723000000002084e-06, 1.707999999999571e-06, 1.723000000002084e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.7080000000030404e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6660000000008612e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.6120000000015289e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 12:26:17.676" endtime="20201112 12:26:17.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.671" endtime="20201112 12:26:17.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.681" endtime="20201112 12:26:17.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:17.684" endtime="20201112 12:26:17.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.683" endtime="20201112 12:26:17.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.679" endtime="20201112 12:26:17.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.318" endtime="20201112 12:26:17.705"></status>
</kw>
<msg timestamp="20201112 12:26:17.705" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.713" endtime="20201112 12:26:17.725"></status>
</kw>
<msg timestamp="20201112 12:26:17.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.711" endtime="20201112 12:26:17.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:17.728" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:17.727" endtime="20201112 12:26:17.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.729" endtime="20201112 12:26:17.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.709" endtime="20201112 12:26:17.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.707" endtime="20201112 12:26:17.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:17.738" endtime="20201112 12:26:18.027"></status>
</kw>
<msg timestamp="20201112 12:26:18.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018450903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018452625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:17.737" endtime="20201112 12:26:18.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018450903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018452625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.031" endtime="20201112 12:26:18.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.040" endtime="20201112 12:26:18.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.734" endtime="20201112 12:26:18.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.733" endtime="20201112 12:26:18.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.046" level="INFO">${RESULT} = [{'time': 0.018452625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018462431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.043" endtime="20201112 12:26:18.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.060" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.047" endtime="20201112 12:26:18.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.064" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.063" endtime="20201112 12:26:18.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.067" level="INFO">VALUE: [1.7219999999991409e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6660000000008612e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.723000000002084e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7779999999974205e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.6950000000029442e-06, 1.6249999999981557e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.7920000000004599e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.6250000000016251e-06, 1.6519999999978219e-06, 1.7360000000021802e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.065" endtime="20201112 12:26:18.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.061" endtime="20201112 12:26:18.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.070" endtime="20201112 12:26:18.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.074" endtime="20201112 12:26:18.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.072" endtime="20201112 12:26:18.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.068" endtime="20201112 12:26:18.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:17.706" endtime="20201112 12:26:18.094"></status>
</kw>
<msg timestamp="20201112 12:26:18.095" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.102" endtime="20201112 12:26:18.115"></status>
</kw>
<msg timestamp="20201112 12:26:18.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.101" endtime="20201112 12:26:18.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.118" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.117" endtime="20201112 12:26:18.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.119" endtime="20201112 12:26:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.098" endtime="20201112 12:26:18.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.097" endtime="20201112 12:26:18.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.128" endtime="20201112 12:26:18.415"></status>
</kw>
<msg timestamp="20201112 12:26:18.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018923125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018924792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.127" endtime="20201112 12:26:18.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018923125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018924792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.419" endtime="20201112 12:26:18.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.428" endtime="20201112 12:26:18.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.124" endtime="20201112 12:26:18.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.122" endtime="20201112 12:26:18.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.434" level="INFO">${RESULT} = [{'time': 0.018924792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018928944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:18.431" endtime="20201112 12:26:18.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.448" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.435" endtime="20201112 12:26:18.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.452" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.451" endtime="20201112 12:26:18.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.455" level="INFO">VALUE: [1.6670000000003349e-06, 1.7769999999979469e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.7219999999991409e-06, 1.7370000000016539e-06, 1.723000000002084e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7080000000030404e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7770000000014163e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6669999999968654e-06, 1.6950000000029442e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.7359999999987108e-06, 1.6800000000004311e-06, 1.7089999999990446e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.7219999999991409e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.453" endtime="20201112 12:26:18.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.449" endtime="20201112 12:26:18.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.458" endtime="20201112 12:26:18.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.462" endtime="20201112 12:26:18.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.460" endtime="20201112 12:26:18.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.457" endtime="20201112 12:26:18.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.095" endtime="20201112 12:26:18.482"></status>
</kw>
<msg timestamp="20201112 12:26:18.483" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.490" endtime="20201112 12:26:18.502"></status>
</kw>
<msg timestamp="20201112 12:26:18.503" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.489" endtime="20201112 12:26:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.504" endtime="20201112 12:26:18.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.507" endtime="20201112 12:26:18.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.486" endtime="20201112 12:26:18.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.484" endtime="20201112 12:26:18.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.516" endtime="20201112 12:26:18.800"></status>
</kw>
<msg timestamp="20201112 12:26:18.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018069806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:18.514" endtime="20201112 12:26:18.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018069806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:26:18.805" endtime="20201112 12:26:18.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.813" endtime="20201112 12:26:18.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.511" endtime="20201112 12:26:18.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.510" endtime="20201112 12:26:18.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:18.820" level="INFO">${RESULT} = [{'time': 0.0180715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018075903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:26:18.817" endtime="20201112 12:26:18.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:18.833" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:18.821" endtime="20201112 12:26:18.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.838" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:18.836" endtime="20201112 12:26:18.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.840" level="INFO">VALUE: [1.694000000000001e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6250000000016251e-06, 1.694000000000001e-06, 1.7369999999981844e-06, 1.707999999999571e-06, 1.7220000000026103e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.7089999999990446e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.7360000000021802e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.7229999999986145e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.709000000002514e-06]</msg>
<status status="PASS" starttime="20201112 12:26:18.839" endtime="20201112 12:26:18.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.834" endtime="20201112 12:26:18.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.844" endtime="20201112 12:26:18.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:18.847" endtime="20201112 12:26:18.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.846" endtime="20201112 12:26:18.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.842" endtime="20201112 12:26:18.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.483" endtime="20201112 12:26:18.868"></status>
</kw>
<msg timestamp="20201112 12:26:18.868" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.876" endtime="20201112 12:26:18.888"></status>
</kw>
<msg timestamp="20201112 12:26:18.889" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.874" endtime="20201112 12:26:18.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:18.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:18.890" endtime="20201112 12:26:18.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.892" endtime="20201112 12:26:18.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.872" endtime="20201112 12:26:18.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.870" endtime="20201112 12:26:18.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:18.901" endtime="20201112 12:26:19.186"></status>
</kw>
<msg timestamp="20201112 12:26:19.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018025569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:18.900" endtime="20201112 12:26:19.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018025569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.191" endtime="20201112 12:26:19.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.199" endtime="20201112 12:26:19.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.897" endtime="20201112 12:26:19.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.896" endtime="20201112 12:26:19.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.206" level="INFO">${RESULT} = [{'time': 0.018027264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.01803325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:19.203" endtime="20201112 12:26:19.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.219" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.207" endtime="20201112 12:26:19.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.224" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:19.223" endtime="20201112 12:26:19.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.226" level="INFO">VALUE: [1.6949999999994747e-06, 1.6809999999999048e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.76400000000132e-06, 1.694000000000001e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7770000000014163e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6529999999972955e-06, 1.653000000000765e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6950000000029442e-06, 1.7219999999991409e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.225" endtime="20201112 12:26:19.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.220" endtime="20201112 12:26:19.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.230" endtime="20201112 12:26:19.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.233" endtime="20201112 12:26:19.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.232" endtime="20201112 12:26:19.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.228" endtime="20201112 12:26:19.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:18.869" endtime="20201112 12:26:19.254"></status>
</kw>
<msg timestamp="20201112 12:26:19.254" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.262" endtime="20201112 12:26:19.273"></status>
</kw>
<msg timestamp="20201112 12:26:19.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.260" endtime="20201112 12:26:19.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.275" endtime="20201112 12:26:19.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.277" endtime="20201112 12:26:19.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.258" endtime="20201112 12:26:19.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.256" endtime="20201112 12:26:19.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.287" endtime="20201112 12:26:19.570"></status>
</kw>
<msg timestamp="20201112 12:26:19.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018070431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.285" endtime="20201112 12:26:19.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018070431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.575" endtime="20201112 12:26:19.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.583" endtime="20201112 12:26:19.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.282" endtime="20201112 12:26:19.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.281" endtime="20201112 12:26:19.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.590" level="INFO">${RESULT} = [{'time': 0.018072111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018076931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.586" endtime="20201112 12:26:19.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.603" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.591" endtime="20201112 12:26:19.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.607" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:19.606" endtime="20201112 12:26:19.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.610" level="INFO">VALUE: [1.6799999999969617e-06, 1.723000000002084e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6950000000029442e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6799999999969617e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.7920000000004599e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7229999999986145e-06, 1.6670000000003349e-06, 1.7089999999990446e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7910000000009862e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.6949999999994747e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.609" endtime="20201112 12:26:19.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.604" endtime="20201112 12:26:19.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.614" endtime="20201112 12:26:19.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:19.617" endtime="20201112 12:26:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.615" endtime="20201112 12:26:19.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.612" endtime="20201112 12:26:19.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.255" endtime="20201112 12:26:19.638"></status>
</kw>
<msg timestamp="20201112 12:26:19.638" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.646" endtime="20201112 12:26:19.659"></status>
</kw>
<msg timestamp="20201112 12:26:19.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.644" endtime="20201112 12:26:19.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.662" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:19.660" endtime="20201112 12:26:19.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.663" endtime="20201112 12:26:19.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.642" endtime="20201112 12:26:19.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.640" endtime="20201112 12:26:19.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.672" endtime="20201112 12:26:19.956"></status>
</kw>
<msg timestamp="20201112 12:26:19.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.670" endtime="20201112 12:26:19.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:19.960" endtime="20201112 12:26:19.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.969" endtime="20201112 12:26:19.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.668" endtime="20201112 12:26:19.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.666" endtime="20201112 12:26:19.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:19.976" level="INFO">${RESULT} = [{'time': 0.018050556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018057014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:19.972" endtime="20201112 12:26:19.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:19.989" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:19.977" endtime="20201112 12:26:19.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:19.992" endtime="20201112 12:26:19.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:19.996" level="INFO">VALUE: [1.7089999999990446e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7229999999986145e-06, 1.6660000000008612e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.723000000002084e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7770000000014163e-06, 1.7360000000021802e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7220000000026103e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6950000000029442e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.723000000002084e-06, 1.6250000000016251e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 12:26:19.994" endtime="20201112 12:26:19.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.990" endtime="20201112 12:26:19.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:19.999" endtime="20201112 12:26:20.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.003" endtime="20201112 12:26:20.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.001" endtime="20201112 12:26:20.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.998" endtime="20201112 12:26:20.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:19.639" endtime="20201112 12:26:20.024"></status>
</kw>
<msg timestamp="20201112 12:26:20.024" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.032" endtime="20201112 12:26:20.044"></status>
</kw>
<msg timestamp="20201112 12:26:20.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.030" endtime="20201112 12:26:20.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.045" endtime="20201112 12:26:20.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.048" endtime="20201112 12:26:20.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.027" endtime="20201112 12:26:20.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.026" endtime="20201112 12:26:20.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.057" endtime="20201112 12:26:20.347"></status>
</kw>
<msg timestamp="20201112 12:26:20.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.055" endtime="20201112 12:26:20.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.352" endtime="20201112 12:26:20.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.360" endtime="20201112 12:26:20.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.053" endtime="20201112 12:26:20.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.051" endtime="20201112 12:26:20.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.367" level="INFO">${RESULT} = [{'time': 0.018499792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018509097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.364" endtime="20201112 12:26:20.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:20.380" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:20.368" endtime="20201112 12:26:20.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.384" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:20.383" endtime="20201112 12:26:20.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.387" level="INFO">VALUE: [1.6949999999994747e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.77800000000089e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.6799999999969617e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.709000000002514e-06, 1.7089999999990446e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.6660000000008612e-06]</msg>
<status status="PASS" starttime="20201112 12:26:20.386" endtime="20201112 12:26:20.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.381" endtime="20201112 12:26:20.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.391" endtime="20201112 12:26:20.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.395" endtime="20201112 12:26:20.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.393" endtime="20201112 12:26:20.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.389" endtime="20201112 12:26:20.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.024" endtime="20201112 12:26:20.416"></status>
</kw>
<msg timestamp="20201112 12:26:20.416" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.424" endtime="20201112 12:26:20.436"></status>
</kw>
<msg timestamp="20201112 12:26:20.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.422" endtime="20201112 12:26:20.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.438" endtime="20201112 12:26:20.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.440" endtime="20201112 12:26:20.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.419" endtime="20201112 12:26:20.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.418" endtime="20201112 12:26:20.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.449" endtime="20201112 12:26:20.732"></status>
</kw>
<msg timestamp="20201112 12:26:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.448" endtime="20201112 12:26:20.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.736" endtime="20201112 12:26:20.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.744" endtime="20201112 12:26:20.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.445" endtime="20201112 12:26:20.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.443" endtime="20201112 12:26:20.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:20.751" level="INFO">${RESULT} = [{'time': 0.018172361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018177375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:20.748" endtime="20201112 12:26:20.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:20.764" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:20.752" endtime="20201112 12:26:20.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.769" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:20.768" endtime="20201112 12:26:20.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.771" level="INFO">VALUE: [1.6670000000003349e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.7089999999990446e-06, 1.7220000000026103e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7080000000030404e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7639999999978506e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6950000000029442e-06, 1.7229999999986145e-06, 1.6389999999977256e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.694000000000001e-06, 1.7639999999978506e-06, 1.707999999999571e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.7360000000021802e-06, 1.6809999999999048e-06, 1.723000000002084e-06, 1.7369999999981844e-06, 1.7499999999982807e-06, 1.7089999999990446e-06]</msg>
<status status="PASS" starttime="20201112 12:26:20.770" endtime="20201112 12:26:20.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.765" endtime="20201112 12:26:20.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.775" endtime="20201112 12:26:20.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:20.779" endtime="20201112 12:26:20.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.777" endtime="20201112 12:26:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.773" endtime="20201112 12:26:20.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.416" endtime="20201112 12:26:20.799"></status>
</kw>
<msg timestamp="20201112 12:26:20.799" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.807" endtime="20201112 12:26:20.819"></status>
</kw>
<msg timestamp="20201112 12:26:20.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.806" endtime="20201112 12:26:20.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:20.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:20.821" endtime="20201112 12:26:20.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.823" endtime="20201112 12:26:20.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.803" endtime="20201112 12:26:20.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.801" endtime="20201112 12:26:20.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:20.832" endtime="20201112 12:26:21.117"></status>
</kw>
<msg timestamp="20201112 12:26:21.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018054639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:20.831" endtime="20201112 12:26:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018054639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.122" endtime="20201112 12:26:21.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.130" endtime="20201112 12:26:21.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.828" endtime="20201112 12:26:21.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.826" endtime="20201112 12:26:21.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.137" level="INFO">${RESULT} = [{'time': 0.018056319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.01806025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:26:21.133" endtime="20201112 12:26:21.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.150" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.138" endtime="20201112 12:26:21.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.155" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:21.154" endtime="20201112 12:26:21.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.157" level="INFO">VALUE: [1.6800000000004311e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.76400000000132e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.6950000000029442e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.6250000000016251e-06, 1.7089999999990446e-06, 1.6950000000029442e-06, 1.6109999999985858e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6660000000008612e-06, 1.653000000000765e-06, 1.7219999999991409e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.156" endtime="20201112 12:26:21.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.151" endtime="20201112 12:26:21.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.161" endtime="20201112 12:26:21.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.164" endtime="20201112 12:26:21.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.163" endtime="20201112 12:26:21.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.159" endtime="20201112 12:26:21.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:20.800" endtime="20201112 12:26:21.185"></status>
</kw>
<msg timestamp="20201112 12:26:21.185" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.193" endtime="20201112 12:26:21.204"></status>
</kw>
<msg timestamp="20201112 12:26:21.204" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.191" endtime="20201112 12:26:21.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.207" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.205" endtime="20201112 12:26:21.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.208" endtime="20201112 12:26:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.189" endtime="20201112 12:26:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.187" endtime="20201112 12:26:21.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.217" endtime="20201112 12:26:21.502"></status>
</kw>
<msg timestamp="20201112 12:26:21.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018034708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.215" endtime="20201112 12:26:21.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018034708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018036403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.507" endtime="20201112 12:26:21.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.515" endtime="20201112 12:26:21.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.213" endtime="20201112 12:26:21.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.211" endtime="20201112 12:26:21.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.522" level="INFO">${RESULT} = [{'time': 0.018036403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018045806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:21.519" endtime="20201112 12:26:21.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.535" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.523" endtime="20201112 12:26:21.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.540" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:21.539" endtime="20201112 12:26:21.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.542" level="INFO">VALUE: [1.6949999999994747e-06, 1.709000000002514e-06, 1.7639999999978506e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.6670000000003349e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.723000000002084e-06, 1.694000000000001e-06, 1.7220000000026103e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.77800000000089e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7639999999978506e-06, 1.7500000000017502e-06, 1.6670000000003349e-06, 1.6529999999972955e-06, 1.7219999999991409e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.7220000000026103e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.7229999999986145e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.541" endtime="20201112 12:26:21.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.536" endtime="20201112 12:26:21.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.550" endtime="20201112 12:26:21.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.554" endtime="20201112 12:26:21.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.552" endtime="20201112 12:26:21.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.549" endtime="20201112 12:26:21.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.186" endtime="20201112 12:26:21.575"></status>
</kw>
<msg timestamp="20201112 12:26:21.575" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.582" endtime="20201112 12:26:21.593"></status>
</kw>
<msg timestamp="20201112 12:26:21.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.581" endtime="20201112 12:26:21.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.595" endtime="20201112 12:26:21.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.597" endtime="20201112 12:26:21.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.578" endtime="20201112 12:26:21.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.577" endtime="20201112 12:26:21.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.607" endtime="20201112 12:26:21.891"></status>
</kw>
<msg timestamp="20201112 12:26:21.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018079222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018080931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.605" endtime="20201112 12:26:21.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018079222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018080931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.895" endtime="20201112 12:26:21.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.904" endtime="20201112 12:26:21.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.602" endtime="20201112 12:26:21.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.601" endtime="20201112 12:26:21.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:21.910" level="INFO">${RESULT} = [{'time': 0.018080931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018087889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:21.907" endtime="20201112 12:26:21.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:21.924" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:21.911" endtime="20201112 12:26:21.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.928" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:21.927" endtime="20201112 12:26:21.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.930" level="INFO">VALUE: [1.709000000002514e-06, 1.7219999999991409e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.7229999999986145e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7229999999986145e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 12:26:21.929" endtime="20201112 12:26:21.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.925" endtime="20201112 12:26:21.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.934" endtime="20201112 12:26:21.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:21.937" endtime="20201112 12:26:21.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.936" endtime="20201112 12:26:21.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.932" endtime="20201112 12:26:21.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.575" endtime="20201112 12:26:21.958"></status>
</kw>
<msg timestamp="20201112 12:26:21.959" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.966" endtime="20201112 12:26:21.978"></status>
</kw>
<msg timestamp="20201112 12:26:21.979" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.965" endtime="20201112 12:26:21.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:21.981" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:21.980" endtime="20201112 12:26:21.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.982" endtime="20201112 12:26:21.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.962" endtime="20201112 12:26:21.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.960" endtime="20201112 12:26:21.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:21.992" endtime="20201112 12:26:22.275"></status>
</kw>
<msg timestamp="20201112 12:26:22.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:21.990" endtime="20201112 12:26:22.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.279" endtime="20201112 12:26:22.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.287" endtime="20201112 12:26:22.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.987" endtime="20201112 12:26:22.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.986" endtime="20201112 12:26:22.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.294" level="INFO">${RESULT} = [{'time': 0.018127292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018132347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.291" endtime="20201112 12:26:22.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:22.307" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:22.295" endtime="20201112 12:26:22.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.312" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:22.311" endtime="20201112 12:26:22.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.314" level="INFO">VALUE: [1.6809999999999048e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.6800000000004311e-06, 1.6529999999972955e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7920000000004599e-06, 1.6800000000004311e-06, 1.7089999999990446e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.707999999999571e-06, 1.7499999999982807e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.7080000000030404e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.7089999999990446e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201112 12:26:22.313" endtime="20201112 12:26:22.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.308" endtime="20201112 12:26:22.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.318" endtime="20201112 12:26:22.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.321" endtime="20201112 12:26:22.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.320" endtime="20201112 12:26:22.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.316" endtime="20201112 12:26:22.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:21.959" endtime="20201112 12:26:22.342"></status>
</kw>
<msg timestamp="20201112 12:26:22.342" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.350" endtime="20201112 12:26:22.363"></status>
</kw>
<msg timestamp="20201112 12:26:22.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.348" endtime="20201112 12:26:22.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.364" endtime="20201112 12:26:22.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.367" endtime="20201112 12:26:22.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.346" endtime="20201112 12:26:22.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.344" endtime="20201112 12:26:22.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.376" endtime="20201112 12:26:22.666"></status>
</kw>
<msg timestamp="20201112 12:26:22.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.374" endtime="20201112 12:26:22.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.670" endtime="20201112 12:26:22.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.678" endtime="20201112 12:26:22.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.372" endtime="20201112 12:26:22.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.370" endtime="20201112 12:26:22.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:22.685" level="INFO">${RESULT} = [{'time': 0.018596639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018603486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:22.682" endtime="20201112 12:26:22.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:22.699" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:22.686" endtime="20201112 12:26:22.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.703" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:22.702" endtime="20201112 12:26:22.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.705" level="INFO">VALUE: [1.6809999999999048e-06, 1.7779999999974205e-06, 1.694000000000001e-06, 1.6249999999981557e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.6949999999994747e-06, 1.7370000000016539e-06, 1.6800000000004311e-06, 1.707999999999571e-06, 1.6809999999999048e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.6799999999969617e-06, 1.7220000000026103e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.7220000000026103e-06, 1.7089999999990446e-06, 1.6809999999999048e-06, 1.6800000000004311e-06, 1.709000000002514e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.7359999999987108e-06, 1.694000000000001e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 12:26:22.704" endtime="20201112 12:26:22.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.700" endtime="20201112 12:26:22.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.709" endtime="20201112 12:26:22.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:22.713" endtime="20201112 12:26:22.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.711" endtime="20201112 12:26:22.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.707" endtime="20201112 12:26:22.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.343" endtime="20201112 12:26:22.733"></status>
</kw>
<msg timestamp="20201112 12:26:22.734" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.742" endtime="20201112 12:26:22.753"></status>
</kw>
<msg timestamp="20201112 12:26:22.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.740" endtime="20201112 12:26:22.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:22.756" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:22.754" endtime="20201112 12:26:22.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.757" endtime="20201112 12:26:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.737" endtime="20201112 12:26:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.736" endtime="20201112 12:26:22.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:22.766" endtime="20201112 12:26:23.051"></status>
</kw>
<msg timestamp="20201112 12:26:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018319944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:22.765" endtime="20201112 12:26:23.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018319944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.056" endtime="20201112 12:26:23.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.064" endtime="20201112 12:26:23.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.762" endtime="20201112 12:26:23.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.760" endtime="20201112 12:26:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.071" level="INFO">${RESULT} = [{'time': 0.018319944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018327181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.067" endtime="20201112 12:26:23.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:23.084" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:23.072" endtime="20201112 12:26:23.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.088" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:23.087" endtime="20201112 12:26:23.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.091" level="INFO">VALUE: [1.707999999999571e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.77800000000089e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.7500000000017502e-06, 1.694000000000001e-06, 1.7639999999978506e-06, 1.6800000000004311e-06, 1.653000000000765e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.6949999999994747e-06, 1.653000000000765e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.7220000000026103e-06, 1.653000000000765e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.7080000000030404e-06, 1.694000000000001e-06, 1.6950000000029442e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.6800000000004311e-06, 1.6950000000029442e-06, 1.7229999999986145e-06, 1.707999999999571e-06, 1.7089999999990446e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.7229999999986145e-06, 1.7219999999991409e-06, 1.7770000000014163e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.090" endtime="20201112 12:26:23.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.085" endtime="20201112 12:26:23.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.095" endtime="20201112 12:26:23.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.098" endtime="20201112 12:26:23.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.097" endtime="20201112 12:26:23.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.093" endtime="20201112 12:26:23.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:22.734" endtime="20201112 12:26:23.119"></status>
</kw>
<msg timestamp="20201112 12:26:23.119" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.127" endtime="20201112 12:26:23.140"></status>
</kw>
<msg timestamp="20201112 12:26:23.141" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.125" endtime="20201112 12:26:23.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.142" endtime="20201112 12:26:23.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.144" endtime="20201112 12:26:23.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.123" endtime="20201112 12:26:23.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.121" endtime="20201112 12:26:23.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.154" endtime="20201112 12:26:23.438"></status>
</kw>
<msg timestamp="20201112 12:26:23.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018113583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.152" endtime="20201112 12:26:23.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018113583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:23.442" endtime="20201112 12:26:23.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.451" endtime="20201112 12:26:23.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.149" endtime="20201112 12:26:23.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.148" endtime="20201112 12:26:23.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:23.458" level="INFO">${RESULT} = [{'time': 0.018113583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018121778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:23.454" endtime="20201112 12:26:23.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:23.471" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:23.459" endtime="20201112 12:26:23.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:26:23.474" endtime="20201112 12:26:23.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:23.478" level="INFO">VALUE: [1.707999999999571e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6810000000033742e-06, 1.707999999999571e-06, 1.7080000000030404e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.709000000002514e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6950000000029442e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.7080000000030404e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7089999999990446e-06, 1.707999999999571e-06, 1.7359999999987108e-06, 1.709000000002514e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.707999999999571e-06, 1.707999999999571e-06, 1.6389999999977256e-06, 1.7360000000021802e-06, 1.694000000000001e-06, 1.7219999999991409e-06, 1.7769999999979469e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 12:26:23.477" endtime="20201112 12:26:23.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.472" endtime="20201112 12:26:23.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.482" endtime="20201112 12:26:23.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.485" endtime="20201112 12:26:23.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.484" endtime="20201112 12:26:23.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.480" endtime="20201112 12:26:23.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.120" endtime="20201112 12:26:23.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:15.719" endtime="20201112 12:26:23.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.511" endtime="20201112 12:26:23.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.509" endtime="20201112 12:26:23.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.508" endtime="20201112 12:26:23.531"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:12.621" endtime="20201112 12:26:23.532" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:23.539" endtime="20201112 12:26:23.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.538" endtime="20201112 12:26:23.559"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:23.572" endtime="20201112 12:26:26.595"></status>
</kw>
<msg timestamp="20201112 12:26:26.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:23.571" endtime="20201112 12:26:26.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.598" endtime="20201112 12:26:26.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.607" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:26.603" endtime="20201112 12:26:26.608"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:23.568" endtime="20201112 12:26:26.609"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:23.566" endtime="20201112 12:26:26.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.564" endtime="20201112 12:26:26.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:26.619" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:26.618" endtime="20201112 12:26:26.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.613" endtime="20201112 12:26:26.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.564" endtime="20201112 12:26:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.563" endtime="20201112 12:26:26.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.623" endtime="20201112 12:26:26.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.562" endtime="20201112 12:26:26.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.560" endtime="20201112 12:26:26.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:23.536" endtime="20201112 12:26:26.628"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.647" endtime="20201112 12:26:26.708"></status>
</kw>
<msg timestamp="20201112 12:26:26.709" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.644" endtime="20201112 12:26:26.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.714" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:26.711" endtime="20201112 12:26:26.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.716" endtime="20201112 12:26:26.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.638" endtime="20201112 12:26:26.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.634" endtime="20201112 12:26:26.722"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.726" endtime="20201112 12:26:26.730"></status>
</kw>
<msg timestamp="20201112 12:26:26.730" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:26.723" endtime="20201112 12:26:26.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.735" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:26.734" endtime="20201112 12:26:26.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.737" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:26.736" endtime="20201112 12:26:26.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.731" endtime="20201112 12:26:26.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.742" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:26.741" endtime="20201112 12:26:26.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:26.744" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:26.743" endtime="20201112 12:26:26.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.738" endtime="20201112 12:26:26.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:26.751" endtime="20201112 12:26:27.057"></status>
</kw>
<msg timestamp="20201112 12:26:27.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.137082361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.137087403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:26.749" endtime="20201112 12:26:27.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.137082361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.137087403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:27.062" endtime="20201112 12:26:27.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.070" endtime="20201112 12:26:27.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.747" endtime="20201112 12:26:27.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.745" endtime="20201112 12:26:27.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:27.077" level="INFO">${RESULT} = [{'time': 3.137087403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0420000001771825e-06, 'source_diff': 5.0420000001771825e-06}, {'time': 3.137101278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:27.073" endtime="20201112 12:26:27.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:27.090" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:27.078" endtime="20201112 12:26:27.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.095" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:27.094" endtime="20201112 12:26:27.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:27.098" level="INFO">VALUE: [5.0420000001771825e-06, 5.1389999997653035e-06, 5.124999999939206e-06, 5.1389999997653035e-06, 5.1389999997653035e-06, 5.166999999861588e-06, 5.139000000209393e-06, 5.124999999939206e-06, 5.125000000383295e-06, 5.111000000113108e-06, 5.166999999861588e-06, 5.139000000209393e-06, 5.124999999939206e-06, 5.111000000113108e-06, 5.139000000209393e-06, 5.139000000209393e-06, 5.124999999939206e-06, 5.15300000003549e-06, 5.124999999939206e-06, 5.1389999997653035e-06, 5.139000000209393e-06, 5.1389999997653035e-06, 5.124999999939206e-06, 5.124999999939206e-06, 5.15300000003549e-06, 5.111000000113108e-06, 5.111000000113108e-06, 5.096999999842922e-06, 5.15300000003549e-06, 5.195000000401961e-06, 5.124999999939206e-06, 5.124999999939206e-06, 5.111000000113108e-06, 5.139000000209393e-06, 5.139000000209393e-06, 5.1389999997653035e-06, 5.05499999992054e-06, 5.139000000209393e-06, 5.138000000126652e-06, 5.096999999842922e-06, 5.124999999939206e-06, 5.139000000209393e-06, 5.124999999939206e-06, 5.125000000383295e-06, 5.1119999997517596e-06, 5.124999999939206e-06, 5.124999999939206e-06, 5.139000000209393e-06, 5.124999999939206e-06, 5.152000000396839e-06]</msg>
<status status="PASS" starttime="20201112 12:26:27.096" endtime="20201112 12:26:27.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.091" endtime="20201112 12:26:27.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.101" endtime="20201112 12:26:27.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.104" endtime="20201112 12:26:27.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.103" endtime="20201112 12:26:27.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.099" endtime="20201112 12:26:27.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:26.630" endtime="20201112 12:26:27.125"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:23.533" endtime="20201112 12:26:27.126" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:27.133" endtime="20201112 12:26:27.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.132" endtime="20201112 12:26:27.153"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:27.168" endtime="20201112 12:26:30.190"></status>
</kw>
<msg timestamp="20201112 12:26:30.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:27.165" endtime="20201112 12:26:30.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.193" endtime="20201112 12:26:30.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.202" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:30.198" endtime="20201112 12:26:30.203"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:27.163" endtime="20201112 12:26:30.204"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:27.160" endtime="20201112 12:26:30.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.159" endtime="20201112 12:26:30.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:30.214" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:30.212" endtime="20201112 12:26:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.208" endtime="20201112 12:26:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.158" endtime="20201112 12:26:30.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.158" endtime="20201112 12:26:30.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.217" endtime="20201112 12:26:30.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.156" endtime="20201112 12:26:30.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.154" endtime="20201112 12:26:30.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:27.130" endtime="20201112 12:26:30.223"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.243" endtime="20201112 12:26:30.321"></status>
</kw>
<msg timestamp="20201112 12:26:30.322" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.240" endtime="20201112 12:26:30.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.324" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.323" endtime="20201112 12:26:30.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.326" endtime="20201112 12:26:30.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.234" endtime="20201112 12:26:30.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.228" endtime="20201112 12:26:30.328"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.330" endtime="20201112 12:26:30.332"></status>
</kw>
<msg timestamp="20201112 12:26:30.332" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:30.329" endtime="20201112 12:26:30.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.337" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:30.336" endtime="20201112 12:26:30.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.339" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:30.338" endtime="20201112 12:26:30.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.333" endtime="20201112 12:26:30.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.343" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:30.342" endtime="20201112 12:26:30.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.345" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:30.344" endtime="20201112 12:26:30.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.340" endtime="20201112 12:26:30.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.354" endtime="20201112 12:26:30.655"></status>
</kw>
<msg timestamp="20201112 12:26:30.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102418778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102460014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.351" endtime="20201112 12:26:30.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102418778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102460014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:30.659" endtime="20201112 12:26:30.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.668" endtime="20201112 12:26:30.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.349" endtime="20201112 12:26:30.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.347" endtime="20201112 12:26:30.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:30.674" level="INFO">${RESULT} = [{'time': 3.102460014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.123599999994454e-05, 'source_diff': 4.123599999994454e-05}, {'time': 3.103628056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:30.671" endtime="20201112 12:26:30.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:30.688" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:30.675" endtime="20201112 12:26:30.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.693" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:30.692" endtime="20201112 12:26:30.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:30.695" level="INFO">VALUE: [4.123599999994454e-05, 4.10839999998025e-05, 4.112500000008623e-05, 4.112500000008623e-05, 4.109699999998995e-05, 4.112500000008623e-05, 4.112499999964214e-05, 4.1110999999816045e-05, 4.113899999991233e-05, 4.112500000008623e-05, 4.112500000008623e-05, 4.112500000008623e-05, 4.112500000008623e-05, 4.113900000035642e-05, 4.1110999999816045e-05, 4.1110999999816045e-05, 4.112500000008623e-05, 4.113899999991233e-05, 4.109699999998995e-05, 4.113899999991233e-05, 4.1110999999816045e-05, 4.113899999991233e-05, 4.112499999964214e-05, 4.112499999964214e-05, 4.119400000002216e-05, 4.113899999991233e-05, 4.1111000000260134e-05, 4.112500000008623e-05, 4.109699999998995e-05, 4.104199999988012e-05, 4.1153000000182516e-05, 4.113900000035642e-05, 4.113899999991233e-05, 4.109699999998995e-05, 4.112499999964214e-05, 4.108400000024659e-05, 4.112499999964214e-05, 4.113899999991233e-05, 4.106900000033775e-05, 4.112500000008623e-05, 4.112500000008623e-05, 4.1110999999816045e-05, 4.112500000008623e-05, 4.1111999999898785e-05, 4.1153000000182516e-05, 4.112500000008623e-05, 4.109699999998995e-05, 4.112500000008623e-05, 4.1110999999816045e-05, 4.112500000008623e-05]</msg>
<status status="PASS" starttime="20201112 12:26:30.694" endtime="20201112 12:26:30.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.689" endtime="20201112 12:26:30.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.698" endtime="20201112 12:26:30.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.702" endtime="20201112 12:26:30.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.700" endtime="20201112 12:26:30.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.697" endtime="20201112 12:26:30.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.225" endtime="20201112 12:26:30.722"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:27.128" endtime="20201112 12:26:30.723" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:30.731" endtime="20201112 12:26:30.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.729" endtime="20201112 12:26:30.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:30.765" endtime="20201112 12:26:33.786"></status>
</kw>
<msg timestamp="20201112 12:26:33.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:30.763" endtime="20201112 12:26:33.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.789" endtime="20201112 12:26:33.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:33.800" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:33.795" endtime="20201112 12:26:33.800"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:30.760" endtime="20201112 12:26:33.802"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:30.757" endtime="20201112 12:26:33.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.756" endtime="20201112 12:26:33.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:33.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:33.810" endtime="20201112 12:26:33.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.806" endtime="20201112 12:26:33.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.755" endtime="20201112 12:26:33.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.754" endtime="20201112 12:26:33.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.816" endtime="20201112 12:26:33.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.753" endtime="20201112 12:26:33.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.751" endtime="20201112 12:26:33.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:30.728" endtime="20201112 12:26:33.822"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:33.841" endtime="20201112 12:26:34.077"></status>
</kw>
<msg timestamp="20201112 12:26:34.078" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:33.838" endtime="20201112 12:26:34.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.080" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.079" endtime="20201112 12:26:34.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.081" endtime="20201112 12:26:34.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.832" endtime="20201112 12:26:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.828" endtime="20201112 12:26:34.084"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.086" endtime="20201112 12:26:34.088"></status>
</kw>
<msg timestamp="20201112 12:26:34.088" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:34.085" endtime="20201112 12:26:34.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.092" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:34.091" endtime="20201112 12:26:34.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.094" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:34.093" endtime="20201112 12:26:34.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.089" endtime="20201112 12:26:34.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.099" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:34.098" endtime="20201112 12:26:34.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.101" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:34.100" endtime="20201112 12:26:34.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.096" endtime="20201112 12:26:34.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.112" endtime="20201112 12:26:34.412"></status>
</kw>
<msg timestamp="20201112 12:26:34.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106477806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106557153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.110" endtime="20201112 12:26:34.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106477806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106557153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:34.416" endtime="20201112 12:26:34.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.424" endtime="20201112 12:26:34.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.104" endtime="20201112 12:26:34.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.103" endtime="20201112 12:26:34.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:34.431" level="INFO">${RESULT} = [{'time': 3.106557153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.934699999978534e-05, 'source_diff': 7.934699999978534e-05}, {'time': 3.110880944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:34.428" endtime="20201112 12:26:34.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:34.444" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:34.432" endtime="20201112 12:26:34.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.449" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:34.448" endtime="20201112 12:26:34.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:34.452" level="INFO">VALUE: [7.934699999978534e-05, 7.858299999963236e-05, 7.855499999998017e-05, 7.856899999980627e-05, 7.855600000006291e-05, 7.858300000007645e-05, 7.855600000006291e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.858299999963236e-05, 7.859699999990255e-05, 7.855600000006291e-05, 7.8569999999889e-05, 7.861099999972865e-05, 7.8569999999889e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.859699999990255e-05, 7.859699999990255e-05, 7.858400000015919e-05, 7.854100000015407e-05, 7.858300000007645e-05, 7.861100000017274e-05, 7.856899999980627e-05, 7.854100000015407e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.856899999980627e-05, 7.856899999980627e-05, 7.858299999963236e-05, 7.859699999990255e-05, 7.858400000015919e-05, 7.855600000006291e-05, 7.862499999999883e-05, 7.863899999982493e-05, 7.8569999999889e-05, 7.856900000025036e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.855499999998017e-05, 7.855599999961882e-05, 7.858300000007645e-05, 7.858300000007645e-05, 7.85839999997151e-05, 7.85700000003331e-05, 7.859799999998529e-05, 7.859700000034664e-05, 7.855499999998017e-05]</msg>
<status status="PASS" starttime="20201112 12:26:34.450" endtime="20201112 12:26:34.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.445" endtime="20201112 12:26:34.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.455" endtime="20201112 12:26:34.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.458" endtime="20201112 12:26:34.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.457" endtime="20201112 12:26:34.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.453" endtime="20201112 12:26:34.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:33.824" endtime="20201112 12:26:34.479"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:30.725" endtime="20201112 12:26:34.480" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:34.488" endtime="20201112 12:26:34.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.487" endtime="20201112 12:26:34.509"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:34.522" endtime="20201112 12:26:37.545"></status>
</kw>
<msg timestamp="20201112 12:26:37.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:34.521" endtime="20201112 12:26:37.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.548" endtime="20201112 12:26:37.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.558" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:37.553" endtime="20201112 12:26:37.558"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:34.517" endtime="20201112 12:26:37.560"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:34.515" endtime="20201112 12:26:37.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.514" endtime="20201112 12:26:37.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:37.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:37.568" endtime="20201112 12:26:37.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.563" endtime="20201112 12:26:37.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.513" endtime="20201112 12:26:37.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.512" endtime="20201112 12:26:37.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.574" endtime="20201112 12:26:37.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.511" endtime="20201112 12:26:37.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.509" endtime="20201112 12:26:37.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:34.486" endtime="20201112 12:26:37.579"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.598" endtime="20201112 12:26:37.623"></status>
</kw>
<msg timestamp="20201112 12:26:37.624" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.595" endtime="20201112 12:26:37.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.629" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:37.626" endtime="20201112 12:26:37.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.632" endtime="20201112 12:26:37.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.589" endtime="20201112 12:26:37.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.584" endtime="20201112 12:26:37.637"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.642" endtime="20201112 12:26:37.645"></status>
</kw>
<msg timestamp="20201112 12:26:37.646" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:37.639" endtime="20201112 12:26:37.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.653" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:37.652" endtime="20201112 12:26:37.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.655" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:37.654" endtime="20201112 12:26:37.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.647" endtime="20201112 12:26:37.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.660" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:37.659" endtime="20201112 12:26:37.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.662" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:37.661" endtime="20201112 12:26:37.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.657" endtime="20201112 12:26:37.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.671" endtime="20201112 12:26:37.967"></status>
</kw>
<msg timestamp="20201112 12:26:37.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102428875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102430236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.668" endtime="20201112 12:26:37.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:37.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102428875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102430236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:37.971" endtime="20201112 12:26:37.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:37.980" endtime="20201112 12:26:37.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.665" endtime="20201112 12:26:37.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.663" endtime="20201112 12:26:37.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:37.987" level="INFO">${RESULT} = [{'time': 3.102430236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999998109856e-06, 'source_diff': 1.3609999998109856e-06}, {'time': 3.102440556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:37.984" endtime="20201112 12:26:37.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:38.000" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:37.988" endtime="20201112 12:26:38.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.005" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:26:38.004" endtime="20201112 12:26:38.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:38.008" level="INFO">VALUE: [1.3609999998109856e-06, 1.3750000000811724e-06, 1.3340000002415309e-06, 1.38899999990727e-06, 1.3749999996370832e-06, 1.3609999998109856e-06, 1.3609999998109856e-06, 1.3610000002550748e-06, 1.38899999990727e-06, 1.4300000001910007e-06, 1.3610000002550748e-06, 1.346999999984888e-06, 1.3609999998109856e-06, 1.4300000001910007e-06, 1.3340000002415309e-06, 1.3750000000811724e-06, 1.38899999990727e-06, 1.4029999997333675e-06, 1.3339999997974417e-06, 1.3609999998109856e-06, 1.4030000001774567e-06, 1.3750000000811724e-06, 1.3750000000811724e-06, 1.3750000000811724e-06, 1.3609999998109856e-06, 1.3610000002550748e-06, 1.3750000000811724e-06, 1.3890000003513592e-06, 1.3609999998109856e-06, 1.3609999998109856e-06, 1.3749999996370832e-06, 1.3609999998109856e-06, 1.3609999998109856e-06, 1.3749999996370832e-06, 1.3609999998109856e-06, 1.3750000000811724e-06, 1.3750000000811724e-06, 1.3609999998109856e-06, 1.3470000004289773e-06, 1.3610000002550748e-06, 1.3610000002550748e-06, 1.3750000000811724e-06, 1.3610000002550748e-06, 1.3750000000811724e-06, 1.4170000000035543e-06, 1.3750000000811724e-06, 1.3750000000811724e-06, 1.38899999990727e-06, 1.38899999990727e-06, 1.3750000000811724e-06]</msg>
<status status="PASS" starttime="20201112 12:26:38.006" endtime="20201112 12:26:38.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.001" endtime="20201112 12:26:38.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.011" endtime="20201112 12:26:38.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.014" endtime="20201112 12:26:38.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.013" endtime="20201112 12:26:38.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.009" endtime="20201112 12:26:38.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:37.581" endtime="20201112 12:26:38.035"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:34.482" endtime="20201112 12:26:38.036" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:38.043" endtime="20201112 12:26:38.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.042" endtime="20201112 12:26:38.063"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:38.077" endtime="20201112 12:26:41.099"></status>
</kw>
<msg timestamp="20201112 12:26:41.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:38.076" endtime="20201112 12:26:41.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.102" endtime="20201112 12:26:41.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.112" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:41.108" endtime="20201112 12:26:41.112"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:38.072" endtime="20201112 12:26:41.114"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:38.070" endtime="20201112 12:26:41.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.069" endtime="20201112 12:26:41.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:41.124" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:41.122" endtime="20201112 12:26:41.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.118" endtime="20201112 12:26:41.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.068" endtime="20201112 12:26:41.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.067" endtime="20201112 12:26:41.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.128" endtime="20201112 12:26:41.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.066" endtime="20201112 12:26:41.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.064" endtime="20201112 12:26:41.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:38.040" endtime="20201112 12:26:41.133"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.152" endtime="20201112 12:26:41.230"></status>
</kw>
<msg timestamp="20201112 12:26:41.231" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.149" endtime="20201112 12:26:41.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.233" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.232" endtime="20201112 12:26:41.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.234" endtime="20201112 12:26:41.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.143" endtime="20201112 12:26:41.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.139" endtime="20201112 12:26:41.237"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.239" endtime="20201112 12:26:41.240"></status>
</kw>
<msg timestamp="20201112 12:26:41.241" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:41.238" endtime="20201112 12:26:41.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.245" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:41.244" endtime="20201112 12:26:41.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.247" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:41.246" endtime="20201112 12:26:41.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.242" endtime="20201112 12:26:41.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.252" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:41.251" endtime="20201112 12:26:41.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.254" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:41.253" endtime="20201112 12:26:41.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.248" endtime="20201112 12:26:41.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.261" endtime="20201112 12:26:41.562"></status>
</kw>
<msg timestamp="20201112 12:26:41.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101966764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101978639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.260" endtime="20201112 12:26:41.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101966764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101978639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:41.566" endtime="20201112 12:26:41.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.574" endtime="20201112 12:26:41.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.257" endtime="20201112 12:26:41.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.255" endtime="20201112 12:26:41.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:41.581" level="INFO">${RESULT} = [{'time': 3.101978639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1874999999772484e-05, 'source_diff': 1.1874999999772484e-05}, {'time': 3.103152361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:41.578" endtime="20201112 12:26:41.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:41.595" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:41.582" endtime="20201112 12:26:41.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.599" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:26:41.598" endtime="20201112 12:26:41.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:41.602" level="INFO">VALUE: [1.1874999999772484e-05, 1.1860999999946387e-05, 1.1875000000216573e-05, 1.1860999999946387e-05, 1.18469999996762e-05, 1.1862000000029127e-05, 1.1875000000216573e-05, 1.184799999975894e-05, 1.1875000000216573e-05, 1.1860999999946387e-05, 1.1874999999772484e-05, 1.1860999999946387e-05, 1.1862000000029127e-05, 1.188799999995993e-05, 1.1889000000042671e-05, 1.1902999999868769e-05, 1.1874999999772484e-05, 1.1889000000042671e-05, 1.1874999999772484e-05, 1.1860999999946387e-05, 1.1874999999772484e-05, 1.188799999995993e-05, 1.1874999999772484e-05, 1.1874999999772484e-05, 1.1874999999772484e-05, 1.184800000020303e-05, 1.1875000000216573e-05, 1.1860999999946387e-05, 1.1875000000216573e-05, 1.1874999999772484e-05, 1.1860999999946387e-05, 1.1860999999946387e-05, 1.1861000000390476e-05, 1.1860999999946387e-05, 1.1889000000042671e-05, 1.1847000000120289e-05, 1.1862000000029127e-05, 1.1875000000216573e-05, 1.1889000000042671e-05, 1.188799999995993e-05, 1.1874999999772484e-05, 1.1860999999946387e-05, 1.1861000000390476e-05, 1.1874999999772484e-05, 1.1861000000390476e-05, 1.1820000000106745e-05, 1.1916999999694866e-05, 1.1861000000390476e-05, 1.1874999999772484e-05, 1.1806000000280648e-05]</msg>
<status status="PASS" starttime="20201112 12:26:41.600" endtime="20201112 12:26:41.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.596" endtime="20201112 12:26:41.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.605" endtime="20201112 12:26:41.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.609" endtime="20201112 12:26:41.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.607" endtime="20201112 12:26:41.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.603" endtime="20201112 12:26:41.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.135" endtime="20201112 12:26:41.629"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:38.038" endtime="20201112 12:26:41.630" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:41.637" endtime="20201112 12:26:41.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.636" endtime="20201112 12:26:41.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:41.671" endtime="20201112 12:26:44.693"></status>
</kw>
<msg timestamp="20201112 12:26:44.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:41.669" endtime="20201112 12:26:44.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.697" endtime="20201112 12:26:44.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:44.703" endtime="20201112 12:26:44.708"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:41.666" endtime="20201112 12:26:44.710"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:41.664" endtime="20201112 12:26:44.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.663" endtime="20201112 12:26:44.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:44.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:44.718" endtime="20201112 12:26:44.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.713" endtime="20201112 12:26:44.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.662" endtime="20201112 12:26:44.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.661" endtime="20201112 12:26:44.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.723" endtime="20201112 12:26:44.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.660" endtime="20201112 12:26:44.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.658" endtime="20201112 12:26:44.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:41.634" endtime="20201112 12:26:44.729"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.748" endtime="20201112 12:26:44.988"></status>
</kw>
<msg timestamp="20201112 12:26:44.989" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.744" endtime="20201112 12:26:44.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:44.994" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:44.991" endtime="20201112 12:26:44.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:44.997" endtime="20201112 12:26:45.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.739" endtime="20201112 12:26:45.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.734" endtime="20201112 12:26:45.002"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.007" endtime="20201112 12:26:45.010"></status>
</kw>
<msg timestamp="20201112 12:26:45.011" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:26:45.004" endtime="20201112 12:26:45.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.020" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:26:45.018" endtime="20201112 12:26:45.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.024" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:26:45.022" endtime="20201112 12:26:45.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.013" endtime="20201112 12:26:45.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.034" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:26:45.032" endtime="20201112 12:26:45.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.038" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:26:45.036" endtime="20201112 12:26:45.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.027" endtime="20201112 12:26:45.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.054" endtime="20201112 12:26:45.367"></status>
</kw>
<msg timestamp="20201112 12:26:45.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106280292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106302889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.050" endtime="20201112 12:26:45.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106280292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106302889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:45.371" endtime="20201112 12:26:45.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.380" endtime="20201112 12:26:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.045" endtime="20201112 12:26:45.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.041" endtime="20201112 12:26:45.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:45.387" level="INFO">${RESULT} = [{'time': 3.106302889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.259700000006859e-05, 'source_diff': 2.259700000006859e-05}, {'time': 3.110648653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:45.383" endtime="20201112 12:26:45.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:26:45.400" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:45.388" endtime="20201112 12:26:45.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.404" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:26:45.403" endtime="20201112 12:26:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.407" level="INFO">VALUE: [2.259700000006859e-05, 2.2584000000325233e-05, 2.2583000000242492e-05, 2.2583000000242492e-05, 2.2583000000242492e-05, 2.255599999978486e-05, 2.2583000000242492e-05, 2.2611000000338777e-05, 2.265300000026116e-05, 2.2568999999972306e-05, 2.2610999999894688e-05, 2.25969999996245e-05, 2.2570000000055046e-05, 2.2583000000242492e-05, 2.2582999999798403e-05, 2.2568999999972306e-05, 2.2583999999881144e-05, 2.2583999999881144e-05, 2.2583999999881144e-05, 2.255600000022895e-05, 2.2582999999798403e-05, 2.250000000003638e-05, 2.25969999996245e-05, 2.259700000006859e-05, 2.2611000000338777e-05, 2.2610999999894688e-05, 2.2582999999798403e-05, 2.2583999999881144e-05, 2.2568999999972306e-05, 2.2625000000164874e-05, 2.2582999999798403e-05, 2.259800000015133e-05, 2.2583000000242492e-05, 2.2625000000164874e-05, 2.2582999999798403e-05, 2.2583999999881144e-05, 2.2584000000325233e-05, 2.2568999999972306e-05, 2.2582999999798403e-05, 2.2514000000306567e-05, 2.2625000000164874e-05, 2.2568999999972306e-05, 2.2582999999798403e-05, 2.259700000006859e-05, 2.2583000000242492e-05, 2.2583000000242492e-05, 2.259800000015133e-05, 2.2583999999881144e-05, 2.2611000000338777e-05, 2.2638999999990972e-05]</msg>
<status status="PASS" starttime="20201112 12:26:45.405" endtime="20201112 12:26:45.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.401" endtime="20201112 12:26:45.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:45.410" endtime="20201112 12:26:45.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:45.414" endtime="20201112 12:26:45.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.412" endtime="20201112 12:26:45.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.408" endtime="20201112 12:26:45.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:44.730" endtime="20201112 12:26:45.434"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:41.632" endtime="20201112 12:26:45.435" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:25:57.012" endtime="20201112 12:26:45.444"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:26:45.516" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:26:45.524" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:26:46.646" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:26:45.514" endtime="20201112 12:26:46.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:26:46.653" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:26:46.650" endtime="20201112 12:26:46.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.513" endtime="20201112 12:26:46.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:46.659" endtime="20201112 12:26:46.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.657" endtime="20201112 12:26:46.918"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:46.931" endtime="20201112 12:26:49.952"></status>
</kw>
<msg timestamp="20201112 12:26:49.953" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:46.929" endtime="20201112 12:26:49.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:49.955" endtime="20201112 12:26:49.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:49.965" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:49.961" endtime="20201112 12:26:49.966"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:46.927" endtime="20201112 12:26:49.967"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:46.925" endtime="20201112 12:26:49.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.923" endtime="20201112 12:26:49.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:49.977" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:49.975" endtime="20201112 12:26:49.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.971" endtime="20201112 12:26:49.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.922" endtime="20201112 12:26:49.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.921" endtime="20201112 12:26:49.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.980" endtime="20201112 12:26:49.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.920" endtime="20201112 12:26:49.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:49.986" endtime="20201112 12:26:49.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:46.919" endtime="20201112 12:26:49.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:45.511" endtime="20201112 12:26:49.991"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:50.006" endtime="20201112 12:26:50.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.003" endtime="20201112 12:26:50.029"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:50.057" endtime="20201112 12:26:53.080"></status>
</kw>
<msg timestamp="20201112 12:26:53.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:50.054" endtime="20201112 12:26:53.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.084" endtime="20201112 12:26:53.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.093" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:26:53.089" endtime="20201112 12:26:53.094"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.048" endtime="20201112 12:26:53.095"></status>
</kw>
<status status="FAIL" starttime="20201112 12:26:50.043" endtime="20201112 12:26:53.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.040" endtime="20201112 12:26:53.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:26:53.106" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:26:53.104" endtime="20201112 12:26:53.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.099" endtime="20201112 12:26:53.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.038" endtime="20201112 12:26:53.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.037" endtime="20201112 12:26:53.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.109" endtime="20201112 12:26:53.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.034" endtime="20201112 12:26:53.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:50.031" endtime="20201112 12:26:53.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:49.998" endtime="20201112 12:26:53.115"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.136" endtime="20201112 12:26:53.156"></status>
</kw>
<msg timestamp="20201112 12:26:53.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.133" endtime="20201112 12:26:53.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.159" endtime="20201112 12:26:53.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.165" endtime="20201112 12:26:53.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.127" endtime="20201112 12:26:53.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.123" endtime="20201112 12:26:53.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.184" endtime="20201112 12:26:53.494"></status>
</kw>
<msg timestamp="20201112 12:26:53.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.122887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.181" endtime="20201112 12:26:53.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.122887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.499" endtime="20201112 12:26:53.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.507" endtime="20201112 12:26:53.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.175" endtime="20201112 12:26:53.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.171" endtime="20201112 12:26:53.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.514" level="INFO">${RESULT} = [{'time': 3.122887903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.181000000296308e-06, 'source_diff': 3.181000000296308e-06}, {'time': 3.122898944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.511" endtime="20201112 12:26:53.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.528" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.515" endtime="20201112 12:26:53.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.532" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.531" endtime="20201112 12:26:53.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.535" level="INFO">VALUE: [3.181000000296308e-06, 2.762999999905702e-06, 3.1659999999433808e-06, 3.582999999807157e-06, 3.152000000117283e-06, 3.1809999998522187e-06, 3.5689999999810595e-06, 2.7639999999884424e-06, 3.597000000077344e-06, 3.166999999582032e-06, 2.7910000000019863e-06, 3.5689999999810595e-06, 2.735999999892158e-06, 3.1529999997559344e-06, 3.582999999807157e-06, 3.582999999807157e-06, 3.181000000296308e-06, 2.7639999999884424e-06, 2.7639999999884424e-06, 2.7769999997317996e-06, 3.1809999998522187e-06, 2.7639999999884424e-06, 3.597000000077344e-06, 3.1950000001224055e-06, 3.1800000002135675e-06, 2.778000000258629e-06, 3.5700000000638e-06, 3.1799999997694783e-06, 2.7769999997317996e-06, 3.1659999999433808e-06, 3.235999999962047e-06, 3.5689999999810595e-06, 2.7220000000660605e-06, 3.16600000038747e-06, 2.778000000258629e-06, 2.7920000000847267e-06, 2.7639999999884424e-06, 3.1250000001037392e-06, 3.1949999996783163e-06, 3.208000000309852e-06, 2.77799999981454e-06, 3.5840000003339867e-06, 3.1529999997559344e-06, 2.7770000001758888e-06, 3.5419999999675156e-06, 2.778000000258629e-06, 3.1800000002135675e-06, 3.582999999807157e-06, 3.2220000001359494e-06, 3.1809999998522187e-06]</msg>
<status status="PASS" starttime="20201112 12:26:53.533" endtime="20201112 12:26:53.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.529" endtime="20201112 12:26:53.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.539" endtime="20201112 12:26:53.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.542" endtime="20201112 12:26:53.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.540" endtime="20201112 12:26:53.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.537" endtime="20201112 12:26:53.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.119" endtime="20201112 12:26:53.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.118" endtime="20201112 12:26:53.563"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.572" endtime="20201112 12:26:53.586"></status>
</kw>
<msg timestamp="20201112 12:26:53.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.570" endtime="20201112 12:26:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.588" endtime="20201112 12:26:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.590" endtime="20201112 12:26:53.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.568" endtime="20201112 12:26:53.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.565" endtime="20201112 12:26:53.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.600" endtime="20201112 12:26:53.886"></status>
</kw>
<msg timestamp="20201112 12:26:53.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.599" endtime="20201112 12:26:53.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020129778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020134181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:53.890" endtime="20201112 12:26:53.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.899" endtime="20201112 12:26:53.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.596" endtime="20201112 12:26:53.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.594" endtime="20201112 12:26:53.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:53.905" level="INFO">${RESULT} = [{'time': 0.020134181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.020146125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:53.902" endtime="20201112 12:26:53.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:53.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:53.906" endtime="20201112 12:26:53.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.923" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:26:53.922" endtime="20201112 12:26:53.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.926" level="INFO">VALUE: [4.403000000000046e-06, 3.986000000000961e-06, 3.986000000000961e-06, 4.458999999998325e-06, 4.403000000000046e-06, 3.971999999997922e-06, 4.416999999999616e-06, 4.389000000000476e-06, 3.987000000000435e-06, 3.9999999999970615e-06, 4.389000000000476e-06, 4.375000000000906e-06, 3.986000000000961e-06, 3.986000000000961e-06, 3.972000000001391e-06, 4.403000000000046e-06, 4.402000000000572e-06, 4.000000000000531e-06, 4.027999999999671e-06, 3.583000000001446e-06, 4.431000000002655e-06, 4.764000000000851e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.443999999999282e-06, 3.986000000000961e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.972000000001391e-06, 4.041999999999241e-06, 4.347000000001766e-06, 4.375000000000906e-06, 4.457999999998852e-06, 4.389000000000476e-06, 4.389000000000476e-06, 3.5840000000009198e-06, 4.375000000000906e-06, 4.000000000000531e-06, 3.583000000001446e-06, 3.9859999999974915e-06, 4.402000000000572e-06, 3.986000000000961e-06, 4.3749999999974365e-06, 3.583000000001446e-06, 3.986000000000961e-06, 4.07000000000185e-06, 4.416000000000142e-06, 3.943999999998782e-06, 4.389000000000476e-06]</msg>
<status status="PASS" starttime="20201112 12:26:53.924" endtime="20201112 12:26:53.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.920" endtime="20201112 12:26:53.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.930" endtime="20201112 12:26:53.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:53.933" endtime="20201112 12:26:53.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.931" endtime="20201112 12:26:53.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.928" endtime="20201112 12:26:53.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.564" endtime="20201112 12:26:53.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.563" endtime="20201112 12:26:53.954"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.963" endtime="20201112 12:26:53.977"></status>
</kw>
<msg timestamp="20201112 12:26:53.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.961" endtime="20201112 12:26:53.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:53.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:53.979" endtime="20201112 12:26:53.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.981" endtime="20201112 12:26:53.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.959" endtime="20201112 12:26:53.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.957" endtime="20201112 12:26:53.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:53.992" endtime="20201112 12:26:54.277"></status>
</kw>
<msg timestamp="20201112 12:26:54.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:53.990" endtime="20201112 12:26:54.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020576208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:54.282" endtime="20201112 12:26:54.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.290" endtime="20201112 12:26:54.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.988" endtime="20201112 12:26:54.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.986" endtime="20201112 12:26:54.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.297" level="INFO">${RESULT} = [{'time': 0.020576208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.020589361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.293" endtime="20201112 12:26:54.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.298" endtime="20201112 12:26:54.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.315" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.314" endtime="20201112 12:26:54.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.318" level="INFO">VALUE: [5.207999999999602e-06, 5.610999999999117e-06, 5.207999999999602e-06, 5.221999999999172e-06, 4.778000000000421e-06, 5.59800000000249e-06, 5.277000000001447e-06, 4.875000000001406e-06, 5.556000000000311e-06, 5.194000000000032e-06, 4.805000000000087e-06, 5.624999999998687e-06, 4.791999999999991e-06, 5.207999999999602e-06, 4.805999999999561e-06, 4.791999999999991e-06, 5.207999999999602e-06, 5.207999999999602e-06, 4.791999999999991e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.61199999999859e-06, 4.791999999999991e-06, 4.778000000000421e-06, 5.221999999999172e-06, 4.805999999999561e-06, 5.207999999999602e-06, 4.805000000000087e-06, 4.805999999999561e-06, 4.791000000000517e-06, 5.1949999999995056e-06, 4.764000000000851e-06, 5.222999999998645e-06, 5.236000000002211e-06, 5.2089999999990755e-06, 5.5979999999990204e-06, 5.221999999999172e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 5.180999999999936e-06, 5.208000000003071e-06, 4.805000000000087e-06, 5.207999999999602e-06, 4.791999999999991e-06, 5.207999999999602e-06, 4.791999999999991e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.207999999999602e-06]</msg>
<status status="PASS" starttime="20201112 12:26:54.317" endtime="20201112 12:26:54.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.312" endtime="20201112 12:26:54.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.322" endtime="20201112 12:26:54.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.325" endtime="20201112 12:26:54.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.324" endtime="20201112 12:26:54.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.320" endtime="20201112 12:26:54.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.955" endtime="20201112 12:26:54.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.954" endtime="20201112 12:26:54.346"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.355" endtime="20201112 12:26:54.369"></status>
</kw>
<msg timestamp="20201112 12:26:54.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.353" endtime="20201112 12:26:54.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.371" endtime="20201112 12:26:54.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.374" endtime="20201112 12:26:54.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.351" endtime="20201112 12:26:54.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.349" endtime="20201112 12:26:54.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.384" endtime="20201112 12:26:54.668"></status>
</kw>
<msg timestamp="20201112 12:26:54.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019955639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.382" endtime="20201112 12:26:54.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019955639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.672" endtime="20201112 12:26:54.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.681" endtime="20201112 12:26:54.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.380" endtime="20201112 12:26:54.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.378" endtime="20201112 12:26:54.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:54.687" level="INFO">${RESULT} = [{'time': 0.019955639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.019967542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:54.684" endtime="20201112 12:26:54.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:54.701" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:54.688" endtime="20201112 12:26:54.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.706" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:26:54.705" endtime="20201112 12:26:54.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.709" level="INFO">VALUE: [6.431000000001186e-06, 5.625000000002156e-06, 5.985999999999492e-06, 6.415999999998673e-06, 6.4029999999985765e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.0279999999982015e-06, 5.9589999999998255e-06, 6.0139999999986316e-06, 6.402000000002572e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 6.000000000002531e-06, 6.402000000002572e-06, 6.416000000002142e-06, 6.4029999999985765e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 5.596999999999547e-06, 6.417000000001616e-06, 6.403000000002046e-06, 5.5839999999994505e-06, 5.999999999999062e-06, 5.625000000002156e-06, 6.014000000002101e-06, 6.000000000002531e-06, 6.097000000000047e-06, 6.430000000001712e-06, 6.3479999999997705e-06, 5.999999999999062e-06, 6.402000000002572e-06, 5.624999999998687e-06, 6.430000000001712e-06, 6.431000000001186e-06, 5.999999999999062e-06, 6.416999999998146e-06, 5.624999999998687e-06, 6.000000000002531e-06, 6.415999999998673e-06, 6.416000000002142e-06, 6.014000000002101e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.012999999999158e-06, 6.417000000001616e-06, 6.415999999998673e-06, 5.625000000002156e-06, 6.429999999998243e-06, 6.0139999999986316e-06]</msg>
<status status="PASS" starttime="20201112 12:26:54.707" endtime="20201112 12:26:54.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.702" endtime="20201112 12:26:54.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.712" endtime="20201112 12:26:54.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:54.716" endtime="20201112 12:26:54.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.714" endtime="20201112 12:26:54.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.711" endtime="20201112 12:26:54.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.347" endtime="20201112 12:26:54.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.347" endtime="20201112 12:26:54.737"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.745" endtime="20201112 12:26:54.760"></status>
</kw>
<msg timestamp="20201112 12:26:54.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.744" endtime="20201112 12:26:54.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:54.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:54.761" endtime="20201112 12:26:54.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.764" endtime="20201112 12:26:54.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.741" endtime="20201112 12:26:54.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.739" endtime="20201112 12:26:54.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:54.774" endtime="20201112 12:26:55.059"></status>
</kw>
<msg timestamp="20201112 12:26:55.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:54.772" endtime="20201112 12:26:55.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.063" endtime="20201112 12:26:55.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.071" endtime="20201112 12:26:55.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.770" endtime="20201112 12:26:55.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.768" endtime="20201112 12:26:55.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.078" level="INFO">${RESULT} = [{'time': 0.019741125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.019752333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.075" endtime="20201112 12:26:55.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.079" endtime="20201112 12:26:55.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.096" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.095" endtime="20201112 12:26:55.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.099" level="INFO">VALUE: [7.236000000000742e-06, 6.819000000001657e-06, 7.235999999997272e-06, 7.582999999998508e-06, 7.222000000001172e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.2219999999977025e-06, 7.639000000000257e-06, 7.222000000001172e-06, 6.834000000000701e-06, 6.833000000001227e-06, 7.624999999997217e-06, 7.652999999999827e-06, 6.819999999997661e-06, 6.8469999999973274e-06, 7.235999999997272e-06, 7.222000000001172e-06, 7.2370000000002155e-06, 7.2219999999977025e-06, 7.236000000000742e-06, 7.624999999997217e-06, 6.818999999998188e-06, 6.818999999998188e-06, 7.652999999999827e-06, 6.847000000000797e-06, 7.639000000000257e-06, 6.818999999998188e-06, 7.2079999999981326e-06, 7.2219999999977025e-06, 6.833000000001227e-06, 7.208000000001602e-06, 6.8469999999973274e-06, 7.639000000000257e-06, 6.805999999998091e-06, 6.819000000001657e-06, 7.222000000001172e-06, 7.2219999999977025e-06, 7.208000000001602e-06, 6.819000000001657e-06, 7.236000000000742e-06, 7.195000000001506e-06, 7.2219999999977025e-06, 7.263000000000408e-06, 6.834000000000701e-06, 7.236000000000742e-06, 7.625000000000687e-06, 6.833000000001227e-06, 6.8480000000002705e-06, 7.222000000001172e-06]</msg>
<status status="PASS" starttime="20201112 12:26:55.097" endtime="20201112 12:26:55.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.092" endtime="20201112 12:26:55.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.102" endtime="20201112 12:26:55.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.106" endtime="20201112 12:26:55.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.104" endtime="20201112 12:26:55.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.100" endtime="20201112 12:26:55.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.738" endtime="20201112 12:26:55.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:54.737" endtime="20201112 12:26:55.127"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.135" endtime="20201112 12:26:55.148"></status>
</kw>
<msg timestamp="20201112 12:26:55.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.134" endtime="20201112 12:26:55.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.150" endtime="20201112 12:26:55.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.152" endtime="20201112 12:26:55.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.131" endtime="20201112 12:26:55.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.129" endtime="20201112 12:26:55.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.163" endtime="20201112 12:26:55.447"></status>
</kw>
<msg timestamp="20201112 12:26:55.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:55.161" endtime="20201112 12:26:55.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:26:55.451" endtime="20201112 12:26:55.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.460" endtime="20201112 12:26:55.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.159" endtime="20201112 12:26:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.157" endtime="20201112 12:26:55.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.467" level="INFO">${RESULT} = [{'time': 0.020014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.020025875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:26:55.463" endtime="20201112 12:26:55.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.468" endtime="20201112 12:26:55.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.485" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.484" endtime="20201112 12:26:55.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.487" level="INFO">VALUE: [8.443999999999813e-06, 8.430999999999716e-06, 8.443999999999813e-06, 8.027000000000728e-06, 7.5969999999980775e-06, 8.028000000000202e-06, 8.457999999999383e-06, 8.027000000000728e-06, 8.430999999999716e-06, 8.041000000000298e-06, 8.457999999999383e-06, 8.054999999999868e-06, 8.444999999999286e-06, 8.028000000000202e-06, 8.402999999997107e-06, 8.041999999999772e-06, 8.430999999999716e-06, 7.611000000001117e-06, 8.055999999999341e-06, 8.445000000002756e-06, 8.028000000000202e-06, 8.430000000000243e-06, 8.430999999999716e-06, 8.443999999999813e-06, 8.443999999999813e-06, 8.069999999998911e-06, 7.639000000000257e-06, 8.028000000000202e-06, 7.639000000000257e-06, 8.444999999999286e-06, 8.069999999998911e-06, 8.041999999999772e-06, 8.000000000001062e-06, 8.444999999999286e-06, 8.430000000000243e-06, 8.013999999997162e-06, 8.430999999999716e-06, 7.6120000000005905e-06, 8.444999999999286e-06, 8.430000000000243e-06, 7.639000000000257e-06, 8.443999999999813e-06, 8.055999999999341e-06, 8.054999999999868e-06, 8.041999999999772e-06, 7.625000000000687e-06, 8.430999999999716e-06, 8.014000000000632e-06, 8.027000000000728e-06, 7.6120000000005905e-06]</msg>
<status status="PASS" starttime="20201112 12:26:55.486" endtime="20201112 12:26:55.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.481" endtime="20201112 12:26:55.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.491" endtime="20201112 12:26:55.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.494" endtime="20201112 12:26:55.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.493" endtime="20201112 12:26:55.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.489" endtime="20201112 12:26:55.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.128" endtime="20201112 12:26:55.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.127" endtime="20201112 12:26:55.515"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.524" endtime="20201112 12:26:55.538"></status>
</kw>
<msg timestamp="20201112 12:26:55.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.523" endtime="20201112 12:26:55.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.539" endtime="20201112 12:26:55.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.542" endtime="20201112 12:26:55.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.520" endtime="20201112 12:26:55.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.518" endtime="20201112 12:26:55.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.553" endtime="20201112 12:26:55.838"></status>
</kw>
<msg timestamp="20201112 12:26:55.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.551" endtime="20201112 12:26:55.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.842" endtime="20201112 12:26:55.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.851" endtime="20201112 12:26:55.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.549" endtime="20201112 12:26:55.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.547" endtime="20201112 12:26:55.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:55.857" level="INFO">${RESULT} = [{'time': 0.020491986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020511181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:55.854" endtime="20201112 12:26:55.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:55.871" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:55.858" endtime="20201112 12:26:55.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.875" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:26:55.874" endtime="20201112 12:26:55.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.878" level="INFO">VALUE: [8.860999999998898e-06, 9.249999999998842e-06, 9.291999999997552e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.249999999998842e-06, 9.263999999998412e-06, 9.179999999997523e-06, 9.249999999998842e-06, 9.235999999999273e-06, 9.208000000000133e-06, 8.887999999998564e-06, 8.874999999998467e-06, 8.861000000002367e-06, 9.249999999998842e-06, 8.846999999999328e-06, 9.235999999999273e-06, 8.499999999998092e-06, 8.889000000001507e-06, 9.235999999999273e-06, 8.860999999998898e-06, 8.84800000000227e-06, 9.291000000001548e-06, 9.194000000000563e-06, 8.832999999999758e-06, 9.708000000000633e-06, 8.861000000002367e-06, 9.262999999998939e-06, 9.667000000001397e-06, 8.861000000002367e-06, 8.430000000000243e-06, 8.846999999999328e-06, 9.292000000001022e-06, 8.860999999998898e-06, 9.249999999998842e-06, 8.846999999999328e-06, 9.667000000001397e-06, 9.208000000000133e-06, 9.264000000001882e-06, 8.819000000000188e-06, 9.221999999999703e-06, 8.846999999999328e-06, 8.860999999998898e-06, 9.263999999998412e-06, 9.249999999998842e-06, 8.457999999999383e-06, 9.639000000002257e-06, 9.249999999998842e-06, 8.846999999999328e-06]</msg>
<status status="PASS" starttime="20201112 12:26:55.876" endtime="20201112 12:26:55.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.872" endtime="20201112 12:26:55.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.881" endtime="20201112 12:26:55.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:55.885" endtime="20201112 12:26:55.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.883" endtime="20201112 12:26:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.880" endtime="20201112 12:26:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.516" endtime="20201112 12:26:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.516" endtime="20201112 12:26:55.906"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.915" endtime="20201112 12:26:55.929"></status>
</kw>
<msg timestamp="20201112 12:26:55.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.913" endtime="20201112 12:26:55.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:55.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:55.931" endtime="20201112 12:26:55.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.933" endtime="20201112 12:26:55.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.910" endtime="20201112 12:26:55.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.908" endtime="20201112 12:26:55.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:55.944" endtime="20201112 12:26:56.229"></status>
</kw>
<msg timestamp="20201112 12:26:56.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:55.942" endtime="20201112 12:26:56.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.233" endtime="20201112 12:26:56.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.241" endtime="20201112 12:26:56.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.940" endtime="20201112 12:26:56.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.938" endtime="20201112 12:26:56.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.248" level="INFO">${RESULT} = [{'time': 0.019741028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.019756028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:56.245" endtime="20201112 12:26:56.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.249" endtime="20201112 12:26:56.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.266" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.265" endtime="20201112 12:26:56.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.269" level="INFO">VALUE: [9.653000000001827e-06, 9.652999999998357e-06, 1.0056000000001342e-05, 1.0070000000000912e-05, 9.722999999999676e-06, 9.652999999998357e-06, 1.0013999999999162e-05, 1.0054999999998399e-05, 1.0445000000001287e-05, 9.999999999999593e-06, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0084000000000481e-05, 1.0068999999997968e-05, 1.0055999999997872e-05, 1.0026999999999259e-05, 1.0472000000000953e-05, 1.0041999999998302e-05, 1.0054999999998399e-05, 1.0027999999998732e-05, 1.0443999999998343e-05, 1.0486000000000523e-05, 1.0444000000001813e-05, 1.0069000000001438e-05, 1.0055000000001868e-05, 1.0069000000001438e-05, 1.0027999999998732e-05, 1.0111000000000148e-05, 1.0070000000000912e-05, 1.0472000000000953e-05, 9.652999999998357e-06, 1.0054999999998399e-05, 9.679999999998024e-06, 1.0457999999997913e-05, 1.0472000000000953e-05, 1.0111999999999621e-05, 9.667000000001397e-06, 9.681000000000967e-06, 9.597000000000078e-06, 9.639000000002257e-06, 1.0472000000000953e-05, 1.0042000000001772e-05, 1.0084000000000481e-05, 1.0069999999997442e-05, 9.665999999998454e-06, 1.0458999999997387e-05, 1.0458000000001383e-05, 9.653000000001827e-06, 1.0111000000000148e-05, 1.0458000000001383e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.267" endtime="20201112 12:26:56.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.263" endtime="20201112 12:26:56.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.272" endtime="20201112 12:26:56.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.276" endtime="20201112 12:26:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.274" endtime="20201112 12:26:56.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.271" endtime="20201112 12:26:56.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.907" endtime="20201112 12:26:56.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:55.906" endtime="20201112 12:26:56.297"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.306" endtime="20201112 12:26:56.321"></status>
</kw>
<msg timestamp="20201112 12:26:56.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.304" endtime="20201112 12:26:56.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.322" endtime="20201112 12:26:56.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.325" endtime="20201112 12:26:56.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.301" endtime="20201112 12:26:56.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.299" endtime="20201112 12:26:56.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.336" endtime="20201112 12:26:56.622"></status>
</kw>
<msg timestamp="20201112 12:26:56.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020878153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.334" endtime="20201112 12:26:56.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020878153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020889833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.627" endtime="20201112 12:26:56.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.635" endtime="20201112 12:26:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.331" endtime="20201112 12:26:56.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.329" endtime="20201112 12:26:56.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:56.642" level="INFO">${RESULT} = [{'time': 0.020889833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.020903583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:56.639" endtime="20201112 12:26:56.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:56.655" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:56.643" endtime="20201112 12:26:56.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.660" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:26:56.659" endtime="20201112 12:26:56.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.662" level="INFO">VALUE: [1.1680000000000024e-05, 1.1277000000000509e-05, 1.1209000000001607e-05, 1.1263999999996943e-05, 1.1332999999998788e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1666999999999927e-05, 1.0847000000001328e-05, 1.1680999999999497e-05, 1.0874999999996998e-05, 1.0889000000000038e-05, 1.1277999999999982e-05, 1.0875000000000468e-05, 1.1264000000000413e-05, 1.0832999999998288e-05, 1.0875000000000468e-05, 1.1291999999999552e-05, 1.0875000000000468e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.0889000000000038e-05, 1.1277999999999982e-05, 1.0861000000000898e-05, 1.1680999999999497e-05, 1.1639000000000788e-05, 1.1277999999999982e-05, 1.1693999999999594e-05, 1.0846999999997858e-05, 1.1277999999999982e-05, 1.1694999999999067e-05, 1.0861000000000898e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.0459000000000857e-05, 1.0806000000002092e-05, 1.1277999999999982e-05, 1.0875000000000468e-05, 1.0847000000001328e-05, 1.0875000000000468e-05, 1.0861000000000898e-05, 1.1291999999999552e-05, 1.1666999999999927e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.1680999999999497e-05, 1.1277999999999982e-05, 1.1693999999999594e-05]</msg>
<status status="PASS" starttime="20201112 12:26:56.661" endtime="20201112 12:26:56.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.656" endtime="20201112 12:26:56.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.666" endtime="20201112 12:26:56.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:56.670" endtime="20201112 12:26:56.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.668" endtime="20201112 12:26:56.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.664" endtime="20201112 12:26:56.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.298" endtime="20201112 12:26:56.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.297" endtime="20201112 12:26:56.691"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.699" endtime="20201112 12:26:56.716"></status>
</kw>
<msg timestamp="20201112 12:26:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.698" endtime="20201112 12:26:56.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:56.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:56.717" endtime="20201112 12:26:56.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.720" endtime="20201112 12:26:56.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.695" endtime="20201112 12:26:56.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.693" endtime="20201112 12:26:56.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:56.730" endtime="20201112 12:26:57.015"></status>
</kw>
<msg timestamp="20201112 12:26:57.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:56.729" endtime="20201112 12:26:57.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020799333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.020" endtime="20201112 12:26:57.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.028" endtime="20201112 12:26:57.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.726" endtime="20201112 12:26:57.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.724" endtime="20201112 12:26:57.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.035" level="INFO">${RESULT} = [{'time': 0.020811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999999012e-05, 'source_diff': 1.2083999999999012e-05}, {'time': 0.020826625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.031" endtime="20201112 12:26:57.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.048" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.036" endtime="20201112 12:26:57.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.053" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.052" endtime="20201112 12:26:57.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.055" level="INFO">VALUE: [1.2083999999999012e-05, 1.1694000000003063e-05, 1.2487000000001997e-05, 1.1680000000000024e-05, 1.2500000000002093e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2084000000002482e-05, 1.1653000000000358e-05, 1.2485999999999053e-05, 1.2082999999999539e-05, 1.1693999999999594e-05, 1.2082999999999539e-05, 1.2082999999999539e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2055000000000399e-05, 1.2153000000000858e-05, 1.2499999999998623e-05, 1.2082999999999539e-05, 1.1666999999999927e-05, 1.2055999999999872e-05, 1.2083000000003008e-05, 1.2096999999999108e-05, 1.2069999999999442e-05, 1.2485999999999053e-05, 1.2513999999998193e-05, 1.1666000000000454e-05, 1.205499999999693e-05, 1.2096999999999108e-05, 1.2487000000001997e-05, 1.1721999999998733e-05, 1.2500000000002093e-05, 1.2013999999997693e-05, 1.1999999999998123e-05, 1.1666999999999927e-05, 1.2430000000000774e-05, 1.2084000000002482e-05, 1.2068999999999969e-05, 1.2485999999999053e-05, 1.2083999999999012e-05, 1.1680000000000024e-05, 1.2486000000002523e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2139000000001288e-05, 1.2082999999999539e-05, 1.1666000000000454e-05, 1.2083999999999012e-05, 1.2485999999999053e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.054" endtime="20201112 12:26:57.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.049" endtime="20201112 12:26:57.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.059" endtime="20201112 12:26:57.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.062" endtime="20201112 12:26:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.061" endtime="20201112 12:26:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.057" endtime="20201112 12:26:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.691" endtime="20201112 12:26:57.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:56.691" endtime="20201112 12:26:57.084"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.092" endtime="20201112 12:26:57.107"></status>
</kw>
<msg timestamp="20201112 12:26:57.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.091" endtime="20201112 12:26:57.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.109" endtime="20201112 12:26:57.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.111" endtime="20201112 12:26:57.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.088" endtime="20201112 12:26:57.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.086" endtime="20201112 12:26:57.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.122" endtime="20201112 12:26:57.409"></status>
</kw>
<msg timestamp="20201112 12:26:57.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.121" endtime="20201112 12:26:57.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020000347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.413" endtime="20201112 12:26:57.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.422" endtime="20201112 12:26:57.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.118" endtime="20201112 12:26:57.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.116" endtime="20201112 12:26:57.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.429" level="INFO">${RESULT} = [{'time': 0.020000347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.020022181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.425" endtime="20201112 12:26:57.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.429" endtime="20201112 12:26:57.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.446" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.445" endtime="20201112 12:26:57.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.449" level="INFO">VALUE: [1.2889000000002038e-05, 1.2903000000001608e-05, 1.2847999999999332e-05, 1.3374999999999498e-05, 1.3263999999998943e-05, 1.2485999999999053e-05, 1.3320000000000692e-05, 1.2903000000001608e-05, 1.2903000000001608e-05, 1.3694000000001594e-05, 1.2875000000002468e-05, 1.3722000000000734e-05, 1.2903000000001608e-05, 1.3305000000001649e-05, 1.3306000000001122e-05, 1.3319999999997223e-05, 1.3306000000001122e-05, 1.2903000000001608e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.326299999999947e-05, 1.3235999999999803e-05, 1.3320000000000692e-05, 1.2902999999998138e-05, 1.2888999999998568e-05, 1.2902999999998138e-05, 1.2903000000001608e-05, 1.2875000000002468e-05, 1.2903000000001608e-05, 1.2888999999998568e-05, 1.2875000000002468e-05, 1.2887999999999095e-05, 1.330499999999818e-05, 1.3763999999999443e-05, 1.2888999999998568e-05, 1.2887999999999095e-05, 1.3305000000001649e-05, 1.2485999999999053e-05, 1.330499999999818e-05, 1.2416999999997208e-05, 1.2903000000001608e-05, 1.3305000000001649e-05, 1.2917000000001178e-05, 1.3319000000001219e-05, 1.2486999999998527e-05, 1.2471999999999483e-05, 1.3652999999998888e-05, 1.2889000000002038e-05, 1.2916999999997708e-05, 1.329099999999861e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.448" endtime="20201112 12:26:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.443" endtime="20201112 12:26:57.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.453" endtime="20201112 12:26:57.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.456" endtime="20201112 12:26:57.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.454" endtime="20201112 12:26:57.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.451" endtime="20201112 12:26:57.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.084" endtime="20201112 12:26:57.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.084" endtime="20201112 12:26:57.477"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.486" endtime="20201112 12:26:57.500"></status>
</kw>
<msg timestamp="20201112 12:26:57.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.484" endtime="20201112 12:26:57.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.502" endtime="20201112 12:26:57.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.504" endtime="20201112 12:26:57.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.482" endtime="20201112 12:26:57.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.480" endtime="20201112 12:26:57.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.515" endtime="20201112 12:26:57.800"></status>
</kw>
<msg timestamp="20201112 12:26:57.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.513" endtime="20201112 12:26:57.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.804" endtime="20201112 12:26:57.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.812" endtime="20201112 12:26:57.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.511" endtime="20201112 12:26:57.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.509" endtime="20201112 12:26:57.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:57.819" level="INFO">${RESULT} = [{'time': 0.019986125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4111000000000679e-05, 'source_diff': 1.4111000000000679e-05}, {'time': 0.020008167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:57.816" endtime="20201112 12:26:57.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:57.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:57.820" endtime="20201112 12:26:57.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.837" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:26:57.836" endtime="20201112 12:26:57.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.840" level="INFO">VALUE: [1.4111000000000679e-05, 1.4473000000000957e-05, 1.4458000000001914e-05, 1.4166999999998958e-05, 1.4111000000000679e-05, 1.4097000000001109e-05, 1.4027999999999263e-05, 1.4179999999999054e-05, 1.4111000000000679e-05, 1.4111000000000679e-05, 1.3693999999998124e-05, 1.4486000000001054e-05, 1.4527999999999763e-05, 1.4097000000001109e-05, 1.3708000000001164e-05, 1.4097999999997113e-05, 1.4458000000001914e-05, 1.4125000000000248e-05, 1.3694000000001594e-05, 1.3694000000001594e-05, 1.3721999999997264e-05, 1.4487000000000527e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.452700000000029e-05, 1.4569000000002469e-05, 1.4125000000000248e-05, 1.4485999999997584e-05, 1.4111000000000679e-05, 1.4110999999997209e-05, 1.3694000000001594e-05, 1.3709000000000637e-05, 1.4527999999999763e-05, 1.4513999999996724e-05, 1.4514000000000193e-05, 1.4098000000000582e-05, 1.4527999999999763e-05, 1.4500000000000624e-05, 1.3680999999998028e-05, 1.408299999999807e-05, 1.3639000000002788e-05, 1.3681000000001498e-05, 1.3749999999999873e-05, 1.3736999999999777e-05, 1.408299999999807e-05, 1.4514000000000193e-05, 1.3694000000001594e-05, 1.3708000000001164e-05, 1.4514000000000193e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201112 12:26:57.838" endtime="20201112 12:26:57.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.834" endtime="20201112 12:26:57.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.844" endtime="20201112 12:26:57.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:57.847" endtime="20201112 12:26:57.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.845" endtime="20201112 12:26:57.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.842" endtime="20201112 12:26:57.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.478" endtime="20201112 12:26:57.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.478" endtime="20201112 12:26:57.868"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.877" endtime="20201112 12:26:57.891"></status>
</kw>
<msg timestamp="20201112 12:26:57.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.875" endtime="20201112 12:26:57.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:57.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:57.893" endtime="20201112 12:26:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.895" endtime="20201112 12:26:57.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.872" endtime="20201112 12:26:57.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.870" endtime="20201112 12:26:57.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:57.905" endtime="20201112 12:26:58.191"></status>
</kw>
<msg timestamp="20201112 12:26:58.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:57.904" endtime="20201112 12:26:58.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019872708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.195" endtime="20201112 12:26:58.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.204" endtime="20201112 12:26:58.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.901" endtime="20201112 12:26:58.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.899" endtime="20201112 12:26:58.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.211" level="INFO">${RESULT} = [{'time': 0.019872708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.019890917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:26:58.207" endtime="20201112 12:26:58.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.224" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.212" endtime="20201112 12:26:58.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.229" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.228" endtime="20201112 12:26:58.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.231" level="INFO">VALUE: [1.531899999999975e-05, 1.4931000000002748e-05, 1.5721999999999264e-05, 1.531899999999975e-05, 1.4527999999999763e-05, 1.4500000000000624e-05, 1.4916000000000235e-05, 1.4903000000000138e-05, 1.533300000000279e-05, 1.4916999999999708e-05, 1.4902000000000665e-05, 1.5347999999998363e-05, 1.5362000000001402e-05, 1.4972000000001984e-05, 1.533299999999932e-05, 1.4902000000000665e-05, 1.4916999999999708e-05, 1.4500000000000624e-05, 1.5306000000003123e-05, 1.4985999999998084e-05, 1.5737000000001777e-05, 1.4500000000000624e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.4903000000000138e-05, 1.531899999999975e-05, 1.5278000000000513e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.4916000000000235e-05, 1.5319999999999223e-05, 1.4916000000000235e-05, 1.4929999999999805e-05, 1.4514000000000193e-05, 1.4916999999999708e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5722999999998738e-05, 1.530499999999671e-05, 1.4889000000000568e-05, 1.5736999999998308e-05, 1.4500000000000624e-05, 1.4903000000000138e-05, 1.566700000000046e-05, 1.4931000000002748e-05, 1.4916000000000235e-05, 1.5721999999999264e-05, 1.4931000000002748e-05, 1.4931000000002748e-05, 1.5721999999999264e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.230" endtime="20201112 12:26:58.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.225" endtime="20201112 12:26:58.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.239" endtime="20201112 12:26:58.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.242" endtime="20201112 12:26:58.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.241" endtime="20201112 12:26:58.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.237" endtime="20201112 12:26:58.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.869" endtime="20201112 12:26:58.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:57.868" endtime="20201112 12:26:58.263"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.272" endtime="20201112 12:26:58.287"></status>
</kw>
<msg timestamp="20201112 12:26:58.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.271" endtime="20201112 12:26:58.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.289" endtime="20201112 12:26:58.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.291" endtime="20201112 12:26:58.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.268" endtime="20201112 12:26:58.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.266" endtime="20201112 12:26:58.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.301" endtime="20201112 12:26:58.587"></status>
</kw>
<msg timestamp="20201112 12:26:58.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.300" endtime="20201112 12:26:58.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019990653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.591" endtime="20201112 12:26:58.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.600" endtime="20201112 12:26:58.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.297" endtime="20201112 12:26:58.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.295" endtime="20201112 12:26:58.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.606" level="INFO">${RESULT} = [{'time': 0.019990653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5721999999999264e-05, 'source_diff': 1.5721999999999264e-05}, {'time': 0.020014569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.603" endtime="20201112 12:26:58.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:58.620" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:58.607" endtime="20201112 12:26:58.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.624" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:26:58.623" endtime="20201112 12:26:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.627" level="INFO">VALUE: [1.5721999999999264e-05, 1.5721999999999264e-05, 1.5735999999998834e-05, 1.6180000000001055e-05, 1.6556000000000903e-05, 1.6527999999998294e-05, 1.6528000000001764e-05, 1.5735999999998834e-05, 1.652699999999882e-05, 1.656899999999753e-05, 1.5764000000001444e-05, 1.652699999999882e-05, 1.612500000000225e-05, 1.6527999999998294e-05, 1.5709000000002638e-05, 1.611100000000268e-05, 1.612500000000225e-05, 1.6152000000001915e-05, 1.654099999999839e-05, 1.612500000000225e-05, 1.5707999999999694e-05, 1.5750000000001874e-05, 1.6513999999998724e-05, 1.6499999999999154e-05, 1.6513999999998724e-05, 1.6542000000001333e-05, 1.6555999999997434e-05, 1.5750000000001874e-05, 1.615300000000139e-05, 1.6528000000001764e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.613900000000182e-05, 1.606899999999703e-05, 1.5721999999999264e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.5708999999999168e-05, 1.5778000000001013e-05, 1.6527999999998294e-05, 1.6542000000001333e-05, 1.6499999999999154e-05, 1.615300000000139e-05, 1.654100000000186e-05, 1.652700000000229e-05, 1.615299999999792e-05, 1.6556000000000903e-05, 1.659700000000014e-05, 1.613900000000182e-05, 1.613899999999835e-05]</msg>
<status status="PASS" starttime="20201112 12:26:58.625" endtime="20201112 12:26:58.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.620" endtime="20201112 12:26:58.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.630" endtime="20201112 12:26:58.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:58.634" endtime="20201112 12:26:58.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.632" endtime="20201112 12:26:58.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.629" endtime="20201112 12:26:58.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.264" endtime="20201112 12:26:58.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.264" endtime="20201112 12:26:58.655"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.663" endtime="20201112 12:26:58.678"></status>
</kw>
<msg timestamp="20201112 12:26:58.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.662" endtime="20201112 12:26:58.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:58.679" endtime="20201112 12:26:58.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.682" endtime="20201112 12:26:58.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.659" endtime="20201112 12:26:58.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.657" endtime="20201112 12:26:58.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.693" endtime="20201112 12:26:58.979"></status>
</kw>
<msg timestamp="20201112 12:26:58.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.691" endtime="20201112 12:26:58.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:58.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:58.983" endtime="20201112 12:26:58.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:58.992" endtime="20201112 12:26:58.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.689" endtime="20201112 12:26:58.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.687" endtime="20201112 12:26:58.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:58.999" level="INFO">${RESULT} = [{'time': 0.019786375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6943999999997905e-05, 'source_diff': 1.6943999999997905e-05}, {'time': 0.019808236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:58.995" endtime="20201112 12:26:58.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.012" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.000" endtime="20201112 12:26:59.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.017" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.016" endtime="20201112 12:26:59.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.019" level="INFO">VALUE: [1.6943999999997905e-05, 1.737500000000003e-05, 1.686099999999996e-05, 1.6929999999998335e-05, 1.734699999999742e-05, 1.734700000000089e-05, 1.6945000000000848e-05, 1.6929999999998335e-05, 1.693099999999781e-05, 1.693100000000128e-05, 1.7348000000000363e-05, 1.6986999999999558e-05, 1.730499999999871e-05, 1.736100000000046e-05, 1.6945000000000848e-05, 1.7348000000000363e-05, 1.6958000000000945e-05, 1.693100000000128e-05, 1.6986000000000084e-05, 1.6944000000001375e-05, 1.6944000000001375e-05, 1.733299999999785e-05, 1.6556000000000903e-05, 1.734700000000089e-05, 1.6556000000000903e-05, 1.736100000000046e-05, 1.659700000000014e-05, 1.6945000000000848e-05, 1.6945000000000848e-05, 1.6959000000000418e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.6957999999997475e-05, 1.7348000000000363e-05, 1.6945000000000848e-05, 1.7348000000000363e-05, 1.6944000000001375e-05, 1.6929999999998335e-05, 1.6901999999999195e-05, 1.6945000000000848e-05, 1.6542000000001333e-05, 1.693100000000128e-05, 1.734700000000089e-05, 1.691699999999824e-05, 1.6528000000001764e-05, 1.694499999999738e-05, 1.6945000000000848e-05, 1.737500000000003e-05, 1.6528000000001764e-05, 1.6945000000000848e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.018" endtime="20201112 12:26:59.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.013" endtime="20201112 12:26:59.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.023" endtime="20201112 12:26:59.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.026" endtime="20201112 12:26:59.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.025" endtime="20201112 12:26:59.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.021" endtime="20201112 12:26:59.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.656" endtime="20201112 12:26:59.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:58.655" endtime="20201112 12:26:59.047"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.056" endtime="20201112 12:26:59.071"></status>
</kw>
<msg timestamp="20201112 12:26:59.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.055" endtime="20201112 12:26:59.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.072" endtime="20201112 12:26:59.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.075" endtime="20201112 12:26:59.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.052" endtime="20201112 12:26:59.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.050" endtime="20201112 12:26:59.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.085" endtime="20201112 12:26:59.371"></status>
</kw>
<msg timestamp="20201112 12:26:59.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.084" endtime="20201112 12:26:59.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.376" endtime="20201112 12:26:59.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.385" endtime="20201112 12:26:59.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.081" endtime="20201112 12:26:59.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.079" endtime="20201112 12:26:59.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.391" level="INFO">${RESULT} = [{'time': 0.019915139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8569999999999004e-05, 'source_diff': 1.8569999999999004e-05}, {'time': 0.019935847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:59.388" endtime="20201112 12:26:59.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.405" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.392" endtime="20201112 12:26:59.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.409" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.408" endtime="20201112 12:26:59.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.412" level="INFO">VALUE: [1.8569999999999004e-05, 1.7707999999998225e-05, 1.7721999999997795e-05, 1.8166000000000015e-05, 1.7750000000000404e-05, 1.858300000000257e-05, 1.8500000000001154e-05, 1.8472000000002015e-05, 1.7763999999999974e-05, 1.8138000000000876e-05, 1.7750000000000404e-05, 1.856899999999953e-05, 1.855499999999996e-05, 1.861099999999824e-05, 1.7749999999996935e-05, 1.7763999999999974e-05, 1.8179999999999585e-05, 1.7805999999998684e-05, 1.816699999999949e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.815299999999992e-05, 1.859700000000214e-05, 1.815299999999992e-05, 1.8555999999999434e-05, 1.855499999999996e-05, 1.8555999999999434e-05, 1.865300000000042e-05, 1.7750000000000404e-05, 1.8569000000003e-05, 1.8151999999996976e-05, 1.7736000000000834e-05, 1.855499999999996e-05, 1.856899999999953e-05, 1.856899999999953e-05, 1.8541999999999864e-05, 1.7750000000000404e-05, 1.85829999999991e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.8207999999998725e-05, 1.7709000000001168e-05, 1.815299999999992e-05, 1.812500000000078e-05, 1.7736000000000834e-05, 1.8569000000003e-05, 1.7750000000000404e-05, 1.855499999999996e-05, 1.8166000000000015e-05, 1.8152000000000446e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.411" endtime="20201112 12:26:59.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.406" endtime="20201112 12:26:59.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.416" endtime="20201112 12:26:59.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.419" endtime="20201112 12:26:59.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.417" endtime="20201112 12:26:59.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.414" endtime="20201112 12:26:59.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.048" endtime="20201112 12:26:59.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.048" endtime="20201112 12:26:59.440"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.449" endtime="20201112 12:26:59.464"></status>
</kw>
<msg timestamp="20201112 12:26:59.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.447" endtime="20201112 12:26:59.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.466" endtime="20201112 12:26:59.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.468" endtime="20201112 12:26:59.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.445" endtime="20201112 12:26:59.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.442" endtime="20201112 12:26:59.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.479" endtime="20201112 12:26:59.765"></status>
</kw>
<msg timestamp="20201112 12:26:59.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.477" endtime="20201112 12:26:59.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.769" endtime="20201112 12:26:59.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.778" endtime="20201112 12:26:59.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.474" endtime="20201112 12:26:59.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.473" endtime="20201112 12:26:59.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:26:59.784" level="INFO">${RESULT} = [{'time': 0.020392833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8957999999999475e-05, 'source_diff': 1.8957999999999475e-05}, {'time': 0.020418056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:26:59.781" endtime="20201112 12:26:59.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:26:59.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:26:59.786" endtime="20201112 12:26:59.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.803" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:26:59.801" endtime="20201112 12:26:59.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.805" level="INFO">VALUE: [1.8957999999999475e-05, 1.937500000000203e-05, 1.936100000000246e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.854099999999692e-05, 1.944499999999988e-05, 1.937500000000203e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.941700000000074e-05, 1.937499999999856e-05, 1.9750000000002405e-05, 1.937499999999856e-05, 1.938899999999813e-05, 1.8555999999999434e-05, 1.8958000000002945e-05, 1.895899999999895e-05, 1.934699999999942e-05, 1.933299999999985e-05, 1.936099999999899e-05, 1.8971999999999045e-05, 1.85829999999991e-05, 1.8943999999999905e-05, 1.8957999999999475e-05, 1.9292000000000614e-05, 1.9333999999999324e-05, 1.8555999999999434e-05, 1.894500000000285e-05, 1.895899999999895e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.8971999999999045e-05, 1.936100000000246e-05, 1.934700000000289e-05, 1.936100000000246e-05, 1.895899999999895e-05, 1.9348000000002363e-05, 1.937499999999856e-05, 1.9806000000000684e-05, 1.8958000000002945e-05, 1.936100000000246e-05, 1.85829999999991e-05, 1.936100000000246e-05, 1.936099999999899e-05, 1.937499999999856e-05, 1.934699999999942e-05, 1.94029999999977e-05, 1.936100000000246e-05, 1.931900000000028e-05]</msg>
<status status="PASS" starttime="20201112 12:26:59.804" endtime="20201112 12:26:59.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.799" endtime="20201112 12:26:59.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.809" endtime="20201112 12:26:59.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:26:59.812" endtime="20201112 12:26:59.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.811" endtime="20201112 12:26:59.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.807" endtime="20201112 12:26:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.441" endtime="20201112 12:26:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.440" endtime="20201112 12:26:59.833"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.842" endtime="20201112 12:26:59.858"></status>
</kw>
<msg timestamp="20201112 12:26:59.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.840" endtime="20201112 12:26:59.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:26:59.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:26:59.860" endtime="20201112 12:26:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.862" endtime="20201112 12:26:59.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.838" endtime="20201112 12:26:59.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.836" endtime="20201112 12:26:59.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:26:59.872" endtime="20201112 12:27:00.158"></status>
</kw>
<msg timestamp="20201112 12:27:00.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:26:59.871" endtime="20201112 12:27:00.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.162" endtime="20201112 12:27:00.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.171" endtime="20201112 12:27:00.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.868" endtime="20201112 12:27:00.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.866" endtime="20201112 12:27:00.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.178" level="INFO">${RESULT} = [{'time': 0.020712889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.018100000000106e-05, 'source_diff': 2.018100000000106e-05}, {'time': 0.020737819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:00.174" endtime="20201112 12:27:00.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.179" endtime="20201112 12:27:00.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.196" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.195" endtime="20201112 12:27:00.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.198" level="INFO">VALUE: [2.018100000000106e-05, 1.97630000000025e-05, 2.05830000000011e-05, 2.018100000000106e-05, 2.0151999999998976e-05, 2.05830000000011e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 2.016699999999802e-05, 2.018100000000106e-05, 1.9777999999998075e-05, 1.9750000000002405e-05, 1.9792000000001114e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 2.0180000000001586e-05, 1.9763999999998505e-05, 2.0194000000001155e-05, 2.0207999999997256e-05, 1.9736000000002835e-05, 2.018100000000106e-05, 1.977700000000207e-05, 2.019500000000063e-05, 2.019499999999716e-05, 2.0584000000000574e-05, 1.9778000000001544e-05, 1.9763999999998505e-05, 2.016699999999802e-05, 1.9778000000001544e-05, 2.016699999999802e-05, 2.059700000000067e-05, 1.9806000000000684e-05, 1.97769999999986e-05, 2.018100000000106e-05, 2.0194000000001155e-05, 1.9806000000000684e-05, 2.0180000000001586e-05, 2.0569999999997535e-05, 2.019500000000063e-05, 2.058299999999763e-05, 2.02090000000002e-05, 2.0584000000000574e-05, 2.0179999999998116e-05, 2.015299999999845e-05, 2.0528000000002294e-05, 2.0179999999998116e-05, 2.058299999999763e-05, 2.015299999999845e-05, 2.0584000000000574e-05, 2.0527999999998825e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.197" endtime="20201112 12:27:00.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.192" endtime="20201112 12:27:00.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.202" endtime="20201112 12:27:00.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.205" endtime="20201112 12:27:00.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.204" endtime="20201112 12:27:00.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.200" endtime="20201112 12:27:00.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.834" endtime="20201112 12:27:00.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:59.833" endtime="20201112 12:27:00.226"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.235" endtime="20201112 12:27:00.251"></status>
</kw>
<msg timestamp="20201112 12:27:00.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.233" endtime="20201112 12:27:00.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.253" endtime="20201112 12:27:00.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.255" endtime="20201112 12:27:00.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.231" endtime="20201112 12:27:00.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.229" endtime="20201112 12:27:00.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.266" endtime="20201112 12:27:00.552"></status>
</kw>
<msg timestamp="20201112 12:27:00.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.264" endtime="20201112 12:27:00.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019882875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.556" endtime="20201112 12:27:00.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.565" endtime="20201112 12:27:00.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.262" endtime="20201112 12:27:00.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.260" endtime="20201112 12:27:00.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.571" level="INFO">${RESULT} = [{'time': 0.019903847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0971999999997576e-05, 'source_diff': 2.0971999999997576e-05}, {'time': 0.019934944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:00.568" endtime="20201112 12:27:00.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.572" endtime="20201112 12:27:00.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.590" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.589" endtime="20201112 12:27:00.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.592" level="INFO">VALUE: [2.0971999999997576e-05, 2.1388000000000656e-05, 2.1388000000000656e-05, 2.0986000000000615e-05, 2.1402000000000226e-05, 2.0985999999997146e-05, 2.1000000000000185e-05, 2.138900000000013e-05, 2.1000000000000185e-05, 2.1402000000000226e-05, 2.058299999999763e-05, 2.09029999999992e-05, 2.0971999999997576e-05, 2.097300000000052e-05, 2.0986000000000615e-05, 2.0986000000000615e-05, 2.058299999999763e-05, 2.059700000000067e-05, 2.0986000000000615e-05, 2.0985999999997146e-05, 2.0986000000000615e-05, 2.138900000000013e-05, 2.141699999999927e-05, 2.0986000000000615e-05, 2.1013999999999755e-05, 2.138900000000013e-05, 2.1834000000001824e-05, 2.0986000000000615e-05, 2.1000000000000185e-05, 2.0971999999997576e-05, 2.061100000000024e-05, 2.141699999999927e-05, 2.138900000000013e-05, 2.0986000000000615e-05, 2.1778000000000075e-05, 2.136100000000099e-05, 2.141699999999927e-05, 2.1000000000000185e-05, 2.0986000000000615e-05, 2.056899999999806e-05, 2.098700000000009e-05, 2.138900000000013e-05, 2.104099999999942e-05, 2.137500000000056e-05, 2.14029999999997e-05, 2.138900000000013e-05, 2.0986000000000615e-05, 2.14029999999997e-05, 2.059700000000067e-05, 2.059700000000067e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.591" endtime="20201112 12:27:00.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.586" endtime="20201112 12:27:00.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.596" endtime="20201112 12:27:00.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.599" endtime="20201112 12:27:00.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.598" endtime="20201112 12:27:00.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.594" endtime="20201112 12:27:00.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.227" endtime="20201112 12:27:00.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.227" endtime="20201112 12:27:00.620"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.629" endtime="20201112 12:27:00.645"></status>
</kw>
<msg timestamp="20201112 12:27:00.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.627" endtime="20201112 12:27:00.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:00.646" endtime="20201112 12:27:00.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.649" endtime="20201112 12:27:00.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.625" endtime="20201112 12:27:00.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.623" endtime="20201112 12:27:00.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.659" endtime="20201112 12:27:00.944"></status>
</kw>
<msg timestamp="20201112 12:27:00.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.657" endtime="20201112 12:27:00.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020015319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:00.948" endtime="20201112 12:27:00.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.956" endtime="20201112 12:27:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.655" endtime="20201112 12:27:00.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.653" endtime="20201112 12:27:00.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:00.963" level="INFO">${RESULT} = [{'time': 0.020015319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2193999999999686e-05, 'source_diff': 2.2193999999999686e-05}, {'time': 0.020044375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:00.960" endtime="20201112 12:27:00.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:00.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:00.964" endtime="20201112 12:27:00.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.981" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:00.980" endtime="20201112 12:27:00.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:00.984" level="INFO">VALUE: [2.2193999999999686e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.2222000000002295e-05, 2.179100000000017e-05, 2.1819999999998785e-05, 2.2542000000000395e-05, 2.220899999999873e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.218099999999959e-05, 2.261099999999877e-05, 2.2221999999998826e-05, 2.261099999999877e-05, 2.2152000000000976e-05, 2.180499999999974e-05, 2.219499999999916e-05, 2.261099999999877e-05, 2.262499999999834e-05, 2.1833999999998355e-05, 2.2236000000001865e-05, 2.218099999999959e-05, 2.259700000000267e-05, 2.261100000000224e-05, 2.2680000000000616e-05, 2.179100000000017e-05, 2.180499999999974e-05, 2.2207999999999256e-05, 2.17770000000006e-05, 2.2180000000000116e-05, 2.262500000000181e-05, 2.1778000000000075e-05, 2.216700000000002e-05, 2.25969999999992e-05, 2.179100000000017e-05, 2.220899999999873e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.1805999999999215e-05, 2.179100000000017e-05, 2.2680000000000616e-05, 2.219499999999916e-05, 2.2193999999999686e-05, 2.219499999999916e-05, 2.1791999999999645e-05, 2.2222000000002295e-05, 2.262499999999834e-05, 2.1805999999999215e-05, 2.261100000000224e-05, 2.262500000000181e-05]</msg>
<status status="PASS" starttime="20201112 12:27:00.982" endtime="20201112 12:27:00.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.978" endtime="20201112 12:27:00.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:00.988" endtime="20201112 12:27:00.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:00.991" endtime="20201112 12:27:01.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.989" endtime="20201112 12:27:01.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.986" endtime="20201112 12:27:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.621" endtime="20201112 12:27:01.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:00.620" endtime="20201112 12:27:01.012"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.021" endtime="20201112 12:27:01.036"></status>
</kw>
<msg timestamp="20201112 12:27:01.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.019" endtime="20201112 12:27:01.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.037" endtime="20201112 12:27:01.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.040" endtime="20201112 12:27:01.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.017" endtime="20201112 12:27:01.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.014" endtime="20201112 12:27:01.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.050" endtime="20201112 12:27:01.335"></status>
</kw>
<msg timestamp="20201112 12:27:01.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.048" endtime="20201112 12:27:01.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.340" endtime="20201112 12:27:01.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.348" endtime="20201112 12:27:01.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.046" endtime="20201112 12:27:01.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.044" endtime="20201112 12:27:01.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.356" level="INFO">${RESULT} = [{'time': 0.019895708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.306900000000056e-05, 'source_diff': 2.306900000000056e-05}, {'time': 0.019921639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.352" endtime="20201112 12:27:01.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.357" endtime="20201112 12:27:01.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.375" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.374" endtime="20201112 12:27:01.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.377" level="INFO">VALUE: [2.306900000000056e-05, 2.3000000000002185e-05, 2.3415999999998327e-05, 2.25969999999992e-05, 2.261099999999877e-05, 2.3415999999998327e-05, 2.3014000000001755e-05, 2.3012999999998812e-05, 2.3012999999998812e-05, 2.341700000000127e-05, 2.3027999999997856e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.341700000000127e-05, 2.3416000000001796e-05, 2.3458000000000506e-05, 2.337500000000256e-05, 2.3415999999998327e-05, 2.3056000000000465e-05, 2.2999999999998716e-05, 2.262499999999834e-05, 2.2542000000000395e-05, 2.3014000000001755e-05, 2.338899999999866e-05, 2.3014000000001755e-05, 2.302700000000185e-05, 2.3401999999998757e-05, 2.295899999999948e-05, 2.3013999999998286e-05, 2.34030000000017e-05, 2.3416000000001796e-05, 2.3014000000001755e-05, 2.261100000000224e-05, 2.3000000000002185e-05, 2.262499999999834e-05, 2.341700000000127e-05, 2.3028000000001325e-05, 2.263900000000138e-05, 2.3444000000000936e-05, 2.294499999999991e-05, 2.338900000000213e-05, 2.3000000000002185e-05, 2.265300000000095e-05, 2.3000000000002185e-05, 2.2598000000002144e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.341700000000127e-05, 2.3028000000001325e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.376" endtime="20201112 12:27:01.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.371" endtime="20201112 12:27:01.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.381" endtime="20201112 12:27:01.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.385" endtime="20201112 12:27:01.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.383" endtime="20201112 12:27:01.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.380" endtime="20201112 12:27:01.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.013" endtime="20201112 12:27:01.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.012" endtime="20201112 12:27:01.406"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.416" endtime="20201112 12:27:01.432"></status>
</kw>
<msg timestamp="20201112 12:27:01.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.414" endtime="20201112 12:27:01.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.433" endtime="20201112 12:27:01.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.436" endtime="20201112 12:27:01.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.412" endtime="20201112 12:27:01.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.409" endtime="20201112 12:27:01.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.446" endtime="20201112 12:27:01.750"></status>
</kw>
<msg timestamp="20201112 12:27:01.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021385319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:01.445" endtime="20201112 12:27:01.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021385319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:01.763" endtime="20201112 12:27:01.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.786" endtime="20201112 12:27:01.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.442" endtime="20201112 12:27:01.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.440" endtime="20201112 12:27:01.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:01.801" level="INFO">${RESULT} = [{'time': 0.021385319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.381900000000131e-05, 'source_diff': 2.381900000000131e-05}, {'time': 0.021418167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:01.796" endtime="20201112 12:27:01.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:01.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:01.802" endtime="20201112 12:27:01.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.824" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:01.822" endtime="20201112 12:27:01.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.827" level="INFO">VALUE: [2.381900000000131e-05, 2.462499999999687e-05, 2.384700000000045e-05, 2.4277999999999106e-05, 2.4222000000000826e-05, 2.4221999999997357e-05, 2.3819999999997316e-05, 2.4222000000000826e-05, 2.4236000000000396e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.4222000000000826e-05, 2.3820000000000785e-05, 2.4236000000000396e-05, 2.3790999999998702e-05, 2.4236000000000396e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.383300000000088e-05, 2.420899999999726e-05, 2.4236000000000396e-05, 2.3805999999997746e-05, 2.462500000000034e-05, 2.4236000000000396e-05, 2.383300000000088e-05, 2.3832999999997412e-05, 2.3861999999999495e-05, 2.3846999999996982e-05, 2.4249999999999966e-05, 2.3834000000000355e-05, 2.4222000000000826e-05, 2.423699999999987e-05, 2.388899999999916e-05, 2.3847999999999925e-05, 2.463899999999991e-05, 2.3901999999999257e-05, 2.3834000000000355e-05, 2.3805999999997746e-05, 2.3819999999997316e-05, 2.4222000000000826e-05, 2.3790999999998702e-05, 2.4611999999996775e-05, 2.4222000000000826e-05, 2.4249999999999966e-05, 2.4236000000000396e-05, 2.383300000000088e-05, 2.4235999999996927e-05, 2.383300000000088e-05, 2.3804999999998272e-05, 2.4222000000000826e-05]</msg>
<status status="PASS" starttime="20201112 12:27:01.825" endtime="20201112 12:27:01.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.819" endtime="20201112 12:27:01.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.833" endtime="20201112 12:27:01.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:01.836" endtime="20201112 12:27:01.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.835" endtime="20201112 12:27:01.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.830" endtime="20201112 12:27:01.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.407" endtime="20201112 12:27:01.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.407" endtime="20201112 12:27:01.858"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.866" endtime="20201112 12:27:01.882"></status>
</kw>
<msg timestamp="20201112 12:27:01.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.865" endtime="20201112 12:27:01.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:01.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:01.884" endtime="20201112 12:27:01.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.886" endtime="20201112 12:27:01.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.862" endtime="20201112 12:27:01.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.860" endtime="20201112 12:27:01.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:01.897" endtime="20201112 12:27:02.182"></status>
</kw>
<msg timestamp="20201112 12:27:02.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:01.896" endtime="20201112 12:27:02.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.186" endtime="20201112 12:27:02.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.195" endtime="20201112 12:27:02.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.893" endtime="20201112 12:27:02.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.891" endtime="20201112 12:27:02.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.201" level="INFO">${RESULT} = [{'time': 0.019799167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.019834319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.198" endtime="20201112 12:27:02.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.215" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.202" endtime="20201112 12:27:02.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.219" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.218" endtime="20201112 12:27:02.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.222" level="INFO">VALUE: [2.462500000000034e-05, 2.5429999999999897e-05, 2.543099999999937e-05, 2.5458000000002506e-05, 2.5040999999999952e-05, 2.5042000000002895e-05, 2.5055999999998996e-05, 2.5054999999999522e-05, 2.5027000000000382e-05, 2.543099999999937e-05, 2.5457999999999037e-05, 2.5402000000000757e-05, 2.462500000000034e-05, 2.461100000000077e-05, 2.5027999999999856e-05, 2.5457999999999037e-05, 2.537500000000109e-05, 2.5443999999999467e-05, 2.4679999999999147e-05, 2.544500000000241e-05, 2.5457999999999037e-05, 2.538900000000066e-05, 2.54169999999998e-05, 2.505500000000299e-05, 2.5444000000002936e-05, 2.5027000000000382e-05, 2.4985999999997677e-05, 2.5443999999999467e-05, 2.5041999999999426e-05, 2.5457999999999037e-05, 2.463899999999991e-05, 2.462500000000034e-05, 2.5457999999999037e-05, 2.5457999999999037e-05, 2.4971999999998107e-05, 2.5429999999999897e-05, 2.5027999999999856e-05, 2.5443999999999467e-05, 2.463899999999991e-05, 2.468100000000209e-05, 2.5429999999999897e-05, 2.463899999999991e-05, 2.545899999999851e-05, 2.5054999999999522e-05, 2.5458000000002506e-05, 2.5054999999999522e-05, 2.544500000000241e-05, 2.545900000000198e-05, 2.462500000000034e-05, 2.5027999999999856e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.220" endtime="20201112 12:27:02.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.216" endtime="20201112 12:27:02.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.225" endtime="20201112 12:27:02.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.229" endtime="20201112 12:27:02.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.227" endtime="20201112 12:27:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.223" endtime="20201112 12:27:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.858" endtime="20201112 12:27:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:01.858" endtime="20201112 12:27:02.249"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.258" endtime="20201112 12:27:02.274"></status>
</kw>
<msg timestamp="20201112 12:27:02.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.257" endtime="20201112 12:27:02.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.275" endtime="20201112 12:27:02.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.278" endtime="20201112 12:27:02.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.254" endtime="20201112 12:27:02.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.252" endtime="20201112 12:27:02.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.288" endtime="20201112 12:27:02.573"></status>
</kw>
<msg timestamp="20201112 12:27:02.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.286" endtime="20201112 12:27:02.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.577" endtime="20201112 12:27:02.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.586" endtime="20201112 12:27:02.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.284" endtime="20201112 12:27:02.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.282" endtime="20201112 12:27:02.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.592" level="INFO">${RESULT} = [{'time': 0.019979042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.545899999999851e-05, 'source_diff': 2.545899999999851e-05}, {'time': 0.020007028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:02.589" endtime="20201112 12:27:02.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.593" endtime="20201112 12:27:02.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.610" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:02.609" endtime="20201112 12:27:02.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.613" level="INFO">VALUE: [2.545899999999851e-05, 2.540300000000023e-05, 2.544499999999894e-05, 2.5805000000000272e-05, 2.6278000000001106e-05, 2.663900000000191e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6263999999998067e-05, 2.5805999999999746e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5832999999999412e-05, 2.6249999999998497e-05, 2.5847999999998456e-05, 2.665300000000148e-05, 2.6249999999998497e-05, 2.5819999999999316e-05, 2.590300000000073e-05, 2.5429999999999897e-05, 2.5874999999998122e-05, 2.6263999999998067e-05, 2.6250000000001966e-05, 2.5847999999998456e-05, 2.584700000000245e-05, 2.6721999999999857e-05, 2.6292000000000676e-05, 2.6221999999999357e-05, 2.6332999999999912e-05, 2.6263000000002062e-05, 2.6292000000000676e-05, 2.5847999999998456e-05, 2.6278000000001106e-05, 2.5848000000001925e-05, 2.6319000000000342e-05, 2.584700000000245e-05, 2.665300000000148e-05, 2.6276999999998163e-05, 2.5846999999998982e-05, 2.6250000000001966e-05, 2.6250000000001966e-05, 2.6264000000001536e-05, 2.5846999999998982e-05, 2.6194000000000217e-05, 2.666700000000105e-05, 2.6236000000002396e-05, 2.5818999999999842e-05, 2.6249999999998497e-05, 2.6264000000001536e-05]</msg>
<status status="PASS" starttime="20201112 12:27:02.611" endtime="20201112 12:27:02.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.607" endtime="20201112 12:27:02.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.616" endtime="20201112 12:27:02.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:02.620" endtime="20201112 12:27:02.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.618" endtime="20201112 12:27:02.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.615" endtime="20201112 12:27:02.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.250" endtime="20201112 12:27:02.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.250" endtime="20201112 12:27:02.641"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.649" endtime="20201112 12:27:02.664"></status>
</kw>
<msg timestamp="20201112 12:27:02.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.648" endtime="20201112 12:27:02.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:02.666" endtime="20201112 12:27:02.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.668" endtime="20201112 12:27:02.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.645" endtime="20201112 12:27:02.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.643" endtime="20201112 12:27:02.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.678" endtime="20201112 12:27:02.964"></status>
</kw>
<msg timestamp="20201112 12:27:02.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.677" endtime="20201112 12:27:02.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:02.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:02.968" endtime="20201112 12:27:02.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:02.977" endtime="20201112 12:27:02.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.674" endtime="20201112 12:27:02.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.672" endtime="20201112 12:27:02.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:02.983" level="INFO">${RESULT} = [{'time': 0.019671042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7056000000000996e-05, 'source_diff': 2.7056000000000996e-05}, {'time': 0.019702861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:02.980" endtime="20201112 12:27:02.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:02.997" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:02.984" endtime="20201112 12:27:02.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.001" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.000" endtime="20201112 12:27:03.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.004" level="INFO">VALUE: [2.7056000000000996e-05, 2.6708000000000287e-05, 2.747300000000008e-05, 2.665300000000148e-05, 2.7458000000001037e-05, 2.748699999999965e-05, 2.7070000000000566e-05, 2.7415999999998858e-05, 2.7070000000000566e-05, 2.7457999999997568e-05, 2.745900000000051e-05, 2.7054999999998053e-05, 2.7458000000001037e-05, 2.7040999999998483e-05, 2.7056000000000996e-05, 2.744500000000094e-05, 2.7486000000000177e-05, 2.6721999999999857e-05, 2.7444000000001467e-05, 2.7458000000001037e-05, 2.7055999999997526e-05, 2.7084000000000136e-05, 2.7458000000001037e-05, 2.7485999999996708e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.7486000000000177e-05, 2.7471999999997138e-05, 2.7069000000001092e-05, 2.7068999999997623e-05, 2.712500000000284e-05, 2.7110999999999802e-05, 2.7069999999997096e-05, 2.7056000000000996e-05, 2.7069000000001092e-05, 2.7070000000000566e-05, 2.7083000000000662e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7070000000000566e-05, 2.7458000000001037e-05, 2.7083000000000662e-05, 2.7541999999998457e-05, 2.7069000000001092e-05, 2.744500000000094e-05, 2.7471999999997138e-05, 2.666699999999758e-05, 2.6680000000001147e-05, 2.7541999999998457e-05, 2.7042000000001426e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.002" endtime="20201112 12:27:03.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.998" endtime="20201112 12:27:03.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.007" endtime="20201112 12:27:03.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.011" endtime="20201112 12:27:03.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.009" endtime="20201112 12:27:03.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.006" endtime="20201112 12:27:03.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.642" endtime="20201112 12:27:03.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:02.641" endtime="20201112 12:27:03.032"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.040" endtime="20201112 12:27:03.057"></status>
</kw>
<msg timestamp="20201112 12:27:03.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.039" endtime="20201112 12:27:03.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.059" endtime="20201112 12:27:03.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.061" endtime="20201112 12:27:03.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.036" endtime="20201112 12:27:03.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.034" endtime="20201112 12:27:03.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.071" endtime="20201112 12:27:03.356"></status>
</kw>
<msg timestamp="20201112 12:27:03.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.069" endtime="20201112 12:27:03.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02063275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020660639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:03.360" endtime="20201112 12:27:03.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.369" endtime="20201112 12:27:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.067" endtime="20201112 12:27:03.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.065" endtime="20201112 12:27:03.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.375" level="INFO">${RESULT} = [{'time': 0.020660639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.788900000000316e-05, 'source_diff': 2.788900000000316e-05}, {'time': 0.020697431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:03.372" endtime="20201112 12:27:03.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.389" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.376" endtime="20201112 12:27:03.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.393" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.392" endtime="20201112 12:27:03.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.396" level="INFO">VALUE: [2.788900000000316e-05, 2.822299999999736e-05, 2.7902999999999262e-05, 2.7875000000000122e-05, 2.7915999999999358e-05, 2.7862000000000026e-05, 2.8291999999999207e-05, 2.8277999999999637e-05, 2.8707999999998818e-05, 2.868100000000262e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.791699999999883e-05, 2.8277999999999637e-05, 2.869499999999872e-05, 2.8319999999998346e-05, 2.8693999999999248e-05, 2.7528000000002356e-05, 2.745899999999704e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.8750000000000997e-05, 2.7902999999999262e-05, 2.8250000000000497e-05, 2.7833000000001412e-05, 2.7472000000000607e-05, 2.7860999999997083e-05, 2.868099999999915e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.8264000000000067e-05, 2.8721999999998388e-05, 2.8277999999999637e-05, 2.8666999999999582e-05, 2.8679999999999678e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8332999999998443e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.7875000000000122e-05, 2.8679999999999678e-05, 2.7888999999999692e-05, 2.8319000000002342e-05, 2.7847999999996986e-05, 2.8679999999999678e-05, 2.86379999999975e-05, 2.7861000000000552e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.394" endtime="20201112 12:27:03.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.390" endtime="20201112 12:27:03.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.407" endtime="20201112 12:27:03.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.411" endtime="20201112 12:27:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.409" endtime="20201112 12:27:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.405" endtime="20201112 12:27:03.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.032" endtime="20201112 12:27:03.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.032" endtime="20201112 12:27:03.433"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.443" endtime="20201112 12:27:03.458"></status>
</kw>
<msg timestamp="20201112 12:27:03.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.441" endtime="20201112 12:27:03.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.459" endtime="20201112 12:27:03.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.462" endtime="20201112 12:27:03.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.438" endtime="20201112 12:27:03.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.436" endtime="20201112 12:27:03.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.473" endtime="20201112 12:27:03.758"></status>
</kw>
<msg timestamp="20201112 12:27:03.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.471" endtime="20201112 12:27:03.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:03.762" endtime="20201112 12:27:03.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.771" endtime="20201112 12:27:03.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.469" endtime="20201112 12:27:03.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.467" endtime="20201112 12:27:03.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:03.778" level="INFO">${RESULT} = [{'time': 0.022311139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8736000000001427e-05, 'source_diff': 2.8736000000001427e-05}, {'time': 0.022343306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:03.774" endtime="20201112 12:27:03.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:03.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:03.779" endtime="20201112 12:27:03.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.796" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:03.795" endtime="20201112 12:27:03.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.798" level="INFO">VALUE: [2.8736000000001427e-05, 2.945899999999904e-05, 2.9082999999999193e-05, 2.868099999999915e-05, 2.9082999999999193e-05, 2.8679999999999678e-05, 2.9083000000002662e-05, 2.9083000000002662e-05, 2.8666000000000108e-05, 2.868100000000262e-05, 2.9485999999998708e-05, 2.9069000000003092e-05, 2.9082999999999193e-05, 2.9083999999998666e-05, 2.9485999999998708e-05, 2.8666999999999582e-05, 2.870899999999829e-05, 2.9082999999999193e-05, 2.9514000000001317e-05, 2.8666000000000108e-05, 2.8679999999999678e-05, 2.9082999999999193e-05, 2.9500000000001747e-05, 2.869499999999872e-05, 2.9485999999998708e-05, 2.9068999999999623e-05, 2.9096999999998763e-05, 2.9083999999998666e-05, 2.869500000000219e-05, 2.869499999999872e-05, 2.8679999999999678e-05, 2.868100000000262e-05, 2.9514000000001317e-05, 2.8679999999999678e-05, 2.869500000000219e-05, 2.9124999999997903e-05, 2.868100000000262e-05, 2.9096999999998763e-05, 2.868099999999915e-05, 2.945900000000251e-05, 2.8639000000000442e-05, 2.9500000000001747e-05, 2.9555000000000553e-05, 2.9457999999999568e-05, 2.9513999999997848e-05, 2.8694000000002717e-05, 2.9083999999998666e-05, 2.9499999999998278e-05, 2.948700000000165e-05, 2.9513000000001843e-05]</msg>
<status status="PASS" starttime="20201112 12:27:03.797" endtime="20201112 12:27:03.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.792" endtime="20201112 12:27:03.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.802" endtime="20201112 12:27:03.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:03.805" endtime="20201112 12:27:03.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.803" endtime="20201112 12:27:03.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.800" endtime="20201112 12:27:03.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.434" endtime="20201112 12:27:03.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.434" endtime="20201112 12:27:03.826"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.834" endtime="20201112 12:27:03.851"></status>
</kw>
<msg timestamp="20201112 12:27:03.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.833" endtime="20201112 12:27:03.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:03.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:03.852" endtime="20201112 12:27:03.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.855" endtime="20201112 12:27:03.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.830" endtime="20201112 12:27:03.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.828" endtime="20201112 12:27:03.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:03.865" endtime="20201112 12:27:04.150"></status>
</kw>
<msg timestamp="20201112 12:27:04.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:03.863" endtime="20201112 12:27:04.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:04.154" endtime="20201112 12:27:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.163" endtime="20201112 12:27:04.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.861" endtime="20201112 12:27:04.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.859" endtime="20201112 12:27:04.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.169" level="INFO">${RESULT} = [{'time': 0.020268, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0306000000000777e-05, 'source_diff': 3.0306000000000777e-05}, {'time': 0.020300931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:04.166" endtime="20201112 12:27:04.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.170" endtime="20201112 12:27:04.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.187" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.186" endtime="20201112 12:27:04.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.190" level="INFO">VALUE: [3.0306000000000777e-05, 2.9903000000001262e-05, 2.9485999999998708e-05, 3.0318999999997404e-05, 2.9875000000002122e-05, 3.0360999999999583e-05, 3.0305999999997307e-05, 3.0305000000001303e-05, 2.9917000000000832e-05, 2.9889000000001692e-05, 2.9486000000002177e-05, 3.070900000000029e-05, 3.0292000000001207e-05, 2.9513999999997848e-05, 3.0304999999997834e-05, 2.9902999999997792e-05, 2.9889000000001692e-05, 2.990199999999832e-05, 2.9874999999998653e-05, 2.9903000000001262e-05, 2.9902000000001788e-05, 2.9903000000001262e-05, 2.9485999999998708e-05, 3.0292000000001207e-05, 2.9486000000002177e-05, 2.9917000000000832e-05, 3.0305000000001303e-05, 2.9860999999999083e-05, 3.068000000000168e-05, 2.9917000000000832e-05, 2.9917000000000832e-05, 3.0332999999996973e-05, 3.069399999999778e-05, 3.0304999999997834e-05, 2.9902000000001788e-05, 3.0290999999998264e-05, 2.9874999999998653e-05, 3.0305000000001303e-05, 2.9917000000000832e-05, 2.988799999999875e-05, 2.9902000000001788e-05, 3.0305000000001303e-05, 3.069399999999778e-05, 3.065299999999854e-05, 2.9875000000002122e-05, 3.070800000000082e-05, 2.9903000000001262e-05, 2.9916999999997362e-05, 2.9903000000001262e-05, 3.070799999999735e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.188" endtime="20201112 12:27:04.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.183" endtime="20201112 12:27:04.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.193" endtime="20201112 12:27:04.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.197" endtime="20201112 12:27:04.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.195" endtime="20201112 12:27:04.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.192" endtime="20201112 12:27:04.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.827" endtime="20201112 12:27:04.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:03.826" endtime="20201112 12:27:04.218"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.226" endtime="20201112 12:27:04.242"></status>
</kw>
<msg timestamp="20201112 12:27:04.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.225" endtime="20201112 12:27:04.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.243" endtime="20201112 12:27:04.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.246" endtime="20201112 12:27:04.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.222" endtime="20201112 12:27:04.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.220" endtime="20201112 12:27:04.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.256" endtime="20201112 12:27:04.541"></status>
</kw>
<msg timestamp="20201112 12:27:04.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.254" endtime="20201112 12:27:04.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.545" endtime="20201112 12:27:04.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.553" endtime="20201112 12:27:04.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.251" endtime="20201112 12:27:04.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.250" endtime="20201112 12:27:04.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.560" level="INFO">${RESULT} = [{'time': 0.019662486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.151399999999985e-05, 'source_diff': 3.151399999999985e-05}, {'time': 0.019698236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.557" endtime="20201112 12:27:04.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.573" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.561" endtime="20201112 12:27:04.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.578" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.577" endtime="20201112 12:27:04.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.580" level="INFO">VALUE: [3.151399999999985e-05, 3.11249999999999e-05, 3.072299999999986e-05, 3.069400000000125e-05, 3.11249999999999e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.070900000000029e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.148600000000071e-05, 3.1096999999997293e-05, 3.151399999999985e-05, 3.11249999999999e-05, 3.151399999999985e-05, 3.070900000000029e-05, 3.111100000000033e-05, 3.111100000000033e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.1040999999999014e-05, 3.1111999999999806e-05, 3.11249999999999e-05, 3.111100000000033e-05, 3.070800000000082e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.154100000000298e-05, 3.152799999999942e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.070800000000082e-05, 3.070800000000082e-05, 3.115299999999904e-05, 3.11249999999999e-05, 3.111100000000033e-05, 3.1096999999997293e-05, 3.151399999999985e-05, 3.147300000000061e-05, 3.152799999999942e-05, 3.113899999999947e-05, 3.119500000000122e-05, 3.115199999999957e-05, 3.11249999999999e-05, 3.150000000000028e-05, 3.116700000000208e-05, 3.065199999999907e-05, 3.069500000000072e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.579" endtime="20201112 12:27:04.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.574" endtime="20201112 12:27:04.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.584" endtime="20201112 12:27:04.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.587" endtime="20201112 12:27:04.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.586" endtime="20201112 12:27:04.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.582" endtime="20201112 12:27:04.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.219" endtime="20201112 12:27:04.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.218" endtime="20201112 12:27:04.608"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.617" endtime="20201112 12:27:04.634"></status>
</kw>
<msg timestamp="20201112 12:27:04.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.615" endtime="20201112 12:27:04.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:04.635" endtime="20201112 12:27:04.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.638" endtime="20201112 12:27:04.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.613" endtime="20201112 12:27:04.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.611" endtime="20201112 12:27:04.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.648" endtime="20201112 12:27:04.934"></status>
</kw>
<msg timestamp="20201112 12:27:04.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.647" endtime="20201112 12:27:04.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:04.939" endtime="20201112 12:27:04.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.947" endtime="20201112 12:27:04.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.644" endtime="20201112 12:27:04.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.642" endtime="20201112 12:27:04.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:04.953" level="INFO">${RESULT} = [{'time': 0.019769486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.525000000000056e-05, 'source_diff': 3.525000000000056e-05}, {'time': 0.019812556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:04.950" endtime="20201112 12:27:04.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:04.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:04.954" endtime="20201112 12:27:04.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.971" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:04.970" endtime="20201112 12:27:04.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:04.974" level="INFO">VALUE: [3.525000000000056e-05, 3.491699999999889e-05, 3.522199999999795e-05, 3.524999999999709e-05, 3.452800000000242e-05, 3.5402999999999823e-05, 3.498600000000074e-05, 3.525000000000056e-05, 3.504199999999902e-05, 3.5374999999997214e-05, 3.524999999999709e-05, 3.498700000000021e-05, 3.52779999999997e-05, 3.533399999999798e-05, 3.4540999999999045e-05, 3.5375000000000684e-05, 3.491599999999942e-05, 3.5069000000002154e-05, 3.4624999999999934e-05, 3.540200000000035e-05, 3.5319000000002404e-05, 3.452799999999895e-05, 3.5111000000000864e-05, 3.4832999999998004e-05, 3.5402999999999823e-05, 3.5332999999998504e-05, 3.5416999999999393e-05, 3.4861000000000614e-05, 3.5139000000000004e-05, 3.476399999999963e-05, 3.52779999999997e-05, 3.473599999999702e-05, 3.456999999999766e-05, 3.479200000000224e-05, 3.497300000000064e-05, 3.5096999999997824e-05, 3.5013000000000405e-05, 3.475000000000006e-05, 3.469499999999778e-05, 3.4582999999997754e-05, 3.51520000000001e-05, 3.5097000000001294e-05, 3.542999999999949e-05, 3.5139000000000004e-05, 3.5068999999998685e-05, 3.523600000000099e-05, 3.500000000000031e-05, 3.5361000000001114e-05, 3.490300000000279e-05, 3.495799999999813e-05]</msg>
<status status="PASS" starttime="20201112 12:27:04.972" endtime="20201112 12:27:04.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.968" endtime="20201112 12:27:04.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:04.977" endtime="20201112 12:27:04.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:04.981" endtime="20201112 12:27:05.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.979" endtime="20201112 12:27:05.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.976" endtime="20201112 12:27:05.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.609" endtime="20201112 12:27:05.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:04.609" endtime="20201112 12:27:05.002"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.010" endtime="20201112 12:27:05.026"></status>
</kw>
<msg timestamp="20201112 12:27:05.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.009" endtime="20201112 12:27:05.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.028" endtime="20201112 12:27:05.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.030" endtime="20201112 12:27:05.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.006" endtime="20201112 12:27:05.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.004" endtime="20201112 12:27:05.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.041" endtime="20201112 12:27:05.327"></status>
</kw>
<msg timestamp="20201112 12:27:05.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019818556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.040" endtime="20201112 12:27:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019782278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019818556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.331" endtime="20201112 12:27:05.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.339" endtime="20201112 12:27:05.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.037" endtime="20201112 12:27:05.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.035" endtime="20201112 12:27:05.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.346" level="INFO">${RESULT} = [{'time': 0.019818556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.62780000000007e-05, 'source_diff': 3.62780000000007e-05}, {'time': 0.019864556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:05.343" endtime="20201112 12:27:05.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.347" endtime="20201112 12:27:05.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.364" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.363" endtime="20201112 12:27:05.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.366" level="INFO">VALUE: [3.62780000000007e-05, 3.6138999999997534e-05, 3.6027000000000975e-05, 3.638800000000178e-05, 3.5875000000001184e-05, 3.572200000000192e-05, 3.640199999999788e-05, 3.5804999999999865e-05, 3.649999999999834e-05, 3.57780000000002e-05, 3.601400000000088e-05, 3.618000000000024e-05, 3.6318999999999935e-05, 3.5610999999997894e-05, 3.6082999999999255e-05, 3.5818999999999435e-05, 3.6083000000002724e-05, 3.600000000000131e-05, 3.5597000000001794e-05, 3.606999999999916e-05, 3.59450000000025e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.6139000000001004e-05, 3.6346999999999074e-05, 3.570899999999835e-05, 3.629200000000027e-05, 3.622199999999895e-05, 3.648599999999877e-05, 3.6290999999997325e-05, 3.566600000000017e-05, 3.6318999999999935e-05, 3.6346999999999074e-05, 3.579199999999977e-05, 3.5861000000001614e-05, 3.59719999999987e-05, 3.5847000000002044e-05, 3.580599999999934e-05, 3.594399999999956e-05, 3.6333000000002974e-05, 3.593099999999946e-05, 3.608399999999873e-05, 3.62780000000007e-05, 3.5625000000000934e-05, 3.62780000000007e-05, 3.6375000000001684e-05, 3.6110999999998394e-05, 3.592999999999999e-05, 3.581999999999891e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.365" endtime="20201112 12:27:05.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.360" endtime="20201112 12:27:05.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.370" endtime="20201112 12:27:05.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.373" endtime="20201112 12:27:05.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.372" endtime="20201112 12:27:05.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.368" endtime="20201112 12:27:05.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.003" endtime="20201112 12:27:05.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.002" endtime="20201112 12:27:05.394"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.403" endtime="20201112 12:27:05.417"></status>
</kw>
<msg timestamp="20201112 12:27:05.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.401" endtime="20201112 12:27:05.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.419" endtime="20201112 12:27:05.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.421" endtime="20201112 12:27:05.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.399" endtime="20201112 12:27:05.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.397" endtime="20201112 12:27:05.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.431" endtime="20201112 12:27:05.717"></status>
</kw>
<msg timestamp="20201112 12:27:05.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.430" endtime="20201112 12:27:05.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.721" endtime="20201112 12:27:05.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.730" endtime="20201112 12:27:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.427" endtime="20201112 12:27:05.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.426" endtime="20201112 12:27:05.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:05.736" level="INFO">${RESULT} = [{'time': 0.019681625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7431000000000964e-05, 'source_diff': 3.7431000000000964e-05}, {'time': 0.019731639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:05.733" endtime="20201112 12:27:05.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:05.750" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:05.737" endtime="20201112 12:27:05.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.754" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:05.753" endtime="20201112 12:27:05.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.757" level="INFO">VALUE: [3.7431000000000964e-05, 3.7347000000000075e-05, 3.680600000000034e-05, 3.672199999999945e-05, 3.6875000000002184e-05, 3.677799999999773e-05, 3.730600000000084e-05, 3.7402999999998354e-05, 3.702800000000145e-05, 3.729200000000127e-05, 3.720899999999985e-05, 3.7318999999997465e-05, 3.695800000000013e-05, 3.7069000000000685e-05, 3.7055000000001115e-05, 3.700000000000231e-05, 3.67780000000012e-05, 3.698599999999927e-05, 3.6569000000000185e-05, 3.7403000000001824e-05, 3.7167000000001144e-05, 3.6569000000000185e-05, 3.7180999999997244e-05, 3.695800000000013e-05, 3.732000000000041e-05, 3.675000000000206e-05, 3.722199999999995e-05, 3.6610999999998894e-05, 3.708399999999973e-05, 3.7416999999997924e-05, 3.672300000000239e-05, 3.698699999999874e-05, 3.71659999999982e-05, 3.736199999999912e-05, 3.741599999999845e-05, 3.6611000000002364e-05, 3.7430999999997494e-05, 3.6833000000000005e-05, 3.7124999999998964e-05, 3.6638999999998034e-05, 3.6846999999999575e-05, 3.701399999999841e-05, 3.742999999999802e-05, 3.6819000000000435e-05, 3.6819000000000435e-05, 3.697200000000317e-05, 3.7389000000002254e-05, 3.717999999999777e-05, 3.699999999999884e-05, 3.665199999999813e-05]</msg>
<status status="PASS" starttime="20201112 12:27:05.755" endtime="20201112 12:27:05.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.750" endtime="20201112 12:27:05.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.760" endtime="20201112 12:27:05.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:05.764" endtime="20201112 12:27:05.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.762" endtime="20201112 12:27:05.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.759" endtime="20201112 12:27:05.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.395" endtime="20201112 12:27:05.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.394" endtime="20201112 12:27:05.785"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.793" endtime="20201112 12:27:05.810"></status>
</kw>
<msg timestamp="20201112 12:27:05.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.792" endtime="20201112 12:27:05.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:05.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:05.812" endtime="20201112 12:27:05.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.814" endtime="20201112 12:27:05.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.789" endtime="20201112 12:27:05.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.787" endtime="20201112 12:27:05.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:05.824" endtime="20201112 12:27:06.108"></status>
</kw>
<msg timestamp="20201112 12:27:06.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020608306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:05.823" endtime="20201112 12:27:06.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020569917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020608306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.112" endtime="20201112 12:27:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.121" endtime="20201112 12:27:06.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.820" endtime="20201112 12:27:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.818" endtime="20201112 12:27:06.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.127" level="INFO">${RESULT} = [{'time': 0.020608306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8388999999999784e-05, 'source_diff': 3.8388999999999784e-05}, {'time': 0.020654306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.124" endtime="20201112 12:27:06.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.141" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.128" endtime="20201112 12:27:06.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.145" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.144" endtime="20201112 12:27:06.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.148" level="INFO">VALUE: [3.8388999999999784e-05, 3.7638999999999034e-05, 3.7695000000000783e-05, 3.79720000000007e-05, 3.808400000000073e-05, 3.850000000000034e-05, 3.7512999999999436e-05, 3.7624999999999464e-05, 3.790199999999938e-05, 3.7861000000000145e-05, 3.826399999999966e-05, 3.8054999999998645e-05, 3.8304999999998895e-05, 3.8347000000001075e-05, 3.798600000000027e-05, 3.850000000000034e-05, 3.850000000000034e-05, 3.802799999999898e-05, 3.818000000000224e-05, 3.77780000000022e-05, 3.7652999999998604e-05, 3.776399999999916e-05, 3.768000000000174e-05, 3.779200000000177e-05, 3.805599999999812e-05, 3.7916999999998424e-05, 3.848700000000024e-05, 3.766600000000217e-05, 3.7527000000002475e-05, 3.74720000000002e-05, 3.822200000000095e-05, 3.8319000000001935e-05, 3.8304999999998895e-05, 3.76659999999987e-05, 3.774999999999959e-05, 3.7888999999999284e-05, 3.8360999999997175e-05, 3.7833000000001005e-05, 3.7695000000000783e-05, 3.850000000000034e-05, 3.752799999999848e-05, 3.825000000000009e-05, 3.801399999999941e-05, 3.798600000000027e-05, 3.770900000000035e-05, 3.82919999999988e-05, 3.7666999999998174e-05, 3.770900000000035e-05, 3.8111000000000395e-05, 3.7847000000000575e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.146" endtime="20201112 12:27:06.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.142" endtime="20201112 12:27:06.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.151" endtime="20201112 12:27:06.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.155" endtime="20201112 12:27:06.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.153" endtime="20201112 12:27:06.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.150" endtime="20201112 12:27:06.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.785" endtime="20201112 12:27:06.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:05.785" endtime="20201112 12:27:06.176"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.184" endtime="20201112 12:27:06.200"></status>
</kw>
<msg timestamp="20201112 12:27:06.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.183" endtime="20201112 12:27:06.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.202" endtime="20201112 12:27:06.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.204" endtime="20201112 12:27:06.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.180" endtime="20201112 12:27:06.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.178" endtime="20201112 12:27:06.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.214" endtime="20201112 12:27:06.500"></status>
</kw>
<msg timestamp="20201112 12:27:06.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.212" endtime="20201112 12:27:06.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.504" endtime="20201112 12:27:06.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.512" endtime="20201112 12:27:06.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.210" endtime="20201112 12:27:06.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.208" endtime="20201112 12:27:06.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.519" level="INFO">${RESULT} = [{'time': 0.019725125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.855599999999862e-05, 'source_diff': 3.855599999999862e-05}, {'time': 0.019771153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:06.515" endtime="20201112 12:27:06.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.520" endtime="20201112 12:27:06.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.537" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.535" endtime="20201112 12:27:06.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.539" level="INFO">VALUE: [3.855599999999862e-05, 3.872199999999798e-05, 3.901400000000041e-05, 3.9375000000001215e-05, 3.908400000000173e-05, 3.923599999999805e-05, 3.934800000000155e-05, 3.950000000000134e-05, 3.8874999999997245e-05, 3.948700000000124e-05, 3.8625000000000465e-05, 3.876399999999669e-05, 3.8790999999999826e-05, 3.8874999999997245e-05, 3.950000000000134e-05, 3.9041000000000076e-05, 3.9403000000000354e-05, 3.876400000000016e-05, 3.9111000000001395e-05, 3.9375000000001215e-05, 3.8804999999999396e-05, 3.9347000000002075e-05, 3.931999999999894e-05, 3.923599999999805e-05, 3.8639000000000034e-05, 3.930599999999937e-05, 3.875000000000059e-05, 3.8959000000001603e-05, 3.9027000000000506e-05, 3.854199999999905e-05, 3.884800000000105e-05, 3.934799999999808e-05, 3.936200000000112e-05, 3.891600000000342e-05, 3.869399999999884e-05, 3.9291000000000326e-05, 3.919399999999934e-05, 3.922200000000195e-05, 3.872200000000145e-05, 3.894400000000256e-05, 3.9346999999998605e-05, 3.87919999999993e-05, 3.9402999999996885e-05, 3.879200000000277e-05, 3.9332999999999035e-05, 3.879200000000277e-05, 3.8694999999998314e-05, 3.925000000000109e-05, 3.856999999999819e-05, 3.9430999999999494e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.538" endtime="20201112 12:27:06.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.533" endtime="20201112 12:27:06.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.543" endtime="20201112 12:27:06.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.546" endtime="20201112 12:27:06.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.545" endtime="20201112 12:27:06.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.541" endtime="20201112 12:27:06.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.176" endtime="20201112 12:27:06.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.176" endtime="20201112 12:27:06.567"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.576" endtime="20201112 12:27:06.592"></status>
</kw>
<msg timestamp="20201112 12:27:06.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.574" endtime="20201112 12:27:06.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.593" endtime="20201112 12:27:06.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.596" endtime="20201112 12:27:06.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.572" endtime="20201112 12:27:06.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.570" endtime="20201112 12:27:06.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.607" endtime="20201112 12:27:06.893"></status>
</kw>
<msg timestamp="20201112 12:27:06.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.605" endtime="20201112 12:27:06.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.897" endtime="20201112 12:27:06.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.905" endtime="20201112 12:27:06.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.602" endtime="20201112 12:27:06.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.601" endtime="20201112 12:27:06.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:06.912" level="INFO">${RESULT} = [{'time': 0.019949792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0403000000001354e-05, 'source_diff': 4.0403000000001354e-05}, {'time': 0.020002792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:06.909" endtime="20201112 12:27:06.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:06.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:06.913" endtime="20201112 12:27:06.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.930" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:06.929" endtime="20201112 12:27:06.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.932" level="INFO">VALUE: [4.0403000000001354e-05, 4.026399999999819e-05, 4.0096999999999355e-05, 3.9930999999999994e-05, 3.949999999999787e-05, 3.972200000000245e-05, 4.0262999999998716e-05, 3.965200000000113e-05, 3.9596999999998855e-05, 4.04859999999993e-05, 4.0347000000003075e-05, 4.0110999999998925e-05, 4.0110999999998925e-05, 3.994400000000009e-05, 3.973600000000202e-05, 4.0360999999999175e-05, 4.0110999999998925e-05, 4.0403000000001354e-05, 3.952800000000048e-05, 4.0194999999999814e-05, 3.9667000000000174e-05, 4.0319000000000466e-05, 4.051399999999844e-05, 3.994400000000009e-05, 3.9805000000000396e-05, 3.983399999999901e-05, 4.0082999999999785e-05, 4.0041000000001076e-05, 3.96660000000007e-05, 3.968000000000027e-05, 4.0333000000000035e-05, 4.0138999999998065e-05, 4.0346999999999605e-05, 4.004200000000055e-05, 4.001400000000141e-05, 3.977799999999726e-05, 3.9832999999999535e-05, 4.0360999999999175e-05, 3.973600000000202e-05, 3.9888999999997815e-05, 3.97920000000003e-05, 4.004199999999708e-05, 4.050000000000234e-05, 4.0139000000001535e-05, 4.0139000000001535e-05, 4.0153000000001104e-05, 4.002800000000098e-05, 3.9776999999997786e-05, 3.9653000000000604e-05, 3.96660000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:27:06.931" endtime="20201112 12:27:06.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.926" endtime="20201112 12:27:06.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.936" endtime="20201112 12:27:06.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:06.939" endtime="20201112 12:27:06.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.938" endtime="20201112 12:27:06.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.934" endtime="20201112 12:27:06.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.568" endtime="20201112 12:27:06.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.568" endtime="20201112 12:27:06.960"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.969" endtime="20201112 12:27:06.985"></status>
</kw>
<msg timestamp="20201112 12:27:06.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.967" endtime="20201112 12:27:06.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:06.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:06.987" endtime="20201112 12:27:06.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.989" endtime="20201112 12:27:06.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.965" endtime="20201112 12:27:06.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.963" endtime="20201112 12:27:06.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:06.999" endtime="20201112 12:27:07.285"></status>
</kw>
<msg timestamp="20201112 12:27:07.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:06.998" endtime="20201112 12:27:07.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020207194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.289" endtime="20201112 12:27:07.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.298" endtime="20201112 12:27:07.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.995" endtime="20201112 12:27:07.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.993" endtime="20201112 12:27:07.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.304" level="INFO">${RESULT} = [{'time': 0.020248569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1374999999999745e-05, 'source_diff': 4.1374999999999745e-05}, {'time': 0.020299583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.301" endtime="20201112 12:27:07.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.305" endtime="20201112 12:27:07.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.322" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.321" endtime="20201112 12:27:07.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.324" level="INFO">VALUE: [4.1374999999999745e-05, 4.073599999999955e-05, 4.113799999999959e-05, 4.1124999999999495e-05, 4.14860000000003e-05, 4.140200000000288e-05, 4.1083000000000786e-05, 4.052799999999801e-05, 4.0916999999997955e-05, 4.0569000000000716e-05, 4.1082999999997316e-05, 4.1152999999998635e-05, 4.106999999999722e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.130600000000137e-05, 4.057000000000019e-05, 4.1416999999998455e-05, 4.0695000000000314e-05, 4.0681000000000744e-05, 4.0526999999998536e-05, 4.1110999999999925e-05, 4.1027000000002506e-05, 4.0653000000001605e-05, 4.149999999999987e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.1152999999998635e-05, 4.0555000000001146e-05, 4.1083000000000786e-05, 4.077799999999826e-05, 4.1402999999998885e-05, 4.054200000000105e-05, 4.1374999999999745e-05, 4.09859999999998e-05, 4.126399999999919e-05, 4.123600000000005e-05, 4.134800000000008e-05, 4.0652999999998135e-05, 4.1445000000001064e-05, 4.0972999999999704e-05, 4.1459000000000634e-05, 4.1347000000000605e-05, 4.138799999999984e-05, 4.0624999999998995e-05, 4.1138999999999065e-05, 4.0610999999999425e-05, 4.127799999999876e-05, 4.124999999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.323" endtime="20201112 12:27:07.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.318" endtime="20201112 12:27:07.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.328" endtime="20201112 12:27:07.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.331" endtime="20201112 12:27:07.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.330" endtime="20201112 12:27:07.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.326" endtime="20201112 12:27:07.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.961" endtime="20201112 12:27:07.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:06.961" endtime="20201112 12:27:07.352"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.361" endtime="20201112 12:27:07.378"></status>
</kw>
<msg timestamp="20201112 12:27:07.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.360" endtime="20201112 12:27:07.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.380" endtime="20201112 12:27:07.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.382" endtime="20201112 12:27:07.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.357" endtime="20201112 12:27:07.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.355" endtime="20201112 12:27:07.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.392" endtime="20201112 12:27:07.678"></status>
</kw>
<msg timestamp="20201112 12:27:07.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.391" endtime="20201112 12:27:07.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.683" endtime="20201112 12:27:07.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.691" endtime="20201112 12:27:07.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.388" endtime="20201112 12:27:07.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.387" endtime="20201112 12:27:07.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:07.698" level="INFO">${RESULT} = [{'time': 0.020486944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2554999999999676e-05, 'source_diff': 4.2554999999999676e-05}, {'time': 0.020536889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:07.694" endtime="20201112 12:27:07.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:07.711" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:07.699" endtime="20201112 12:27:07.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.715" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:07.714" endtime="20201112 12:27:07.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.718" level="INFO">VALUE: [4.2554999999999676e-05, 4.1624999999999995e-05, 4.2402999999999885e-05, 4.201399999999994e-05, 4.204199999999908e-05, 4.180600000000187e-05, 4.202799999999951e-05, 4.1681000000001744e-05, 4.1638999999999565e-05, 4.17920000000023e-05, 4.2082999999998316e-05, 4.195799999999819e-05, 4.2040999999999606e-05, 4.1569000000001716e-05, 4.2167000000002675e-05, 4.1917000000002425e-05, 4.1875000000000245e-05, 4.200000000000037e-05, 4.21799999999993e-05, 4.204199999999908e-05, 4.24860000000013e-05, 4.202799999999951e-05, 4.1667000000002175e-05, 4.22920000000028e-05, 4.22920000000028e-05, 4.251400000000044e-05, 4.2152999999999635e-05, 4.2180999999998775e-05, 4.225000000000062e-05, 4.226400000000019e-05, 4.2209000000001384e-05, 4.158400000000076e-05, 4.226300000000072e-05, 4.238800000000084e-05, 4.1776999999999787e-05, 4.1624999999999995e-05, 4.151400000000291e-05, 4.1902999999999385e-05, 4.173599999999708e-05, 4.1597000000000856e-05, 4.1611000000000425e-05, 4.229199999999933e-05, 4.2389000000000315e-05, 4.177799999999926e-05, 4.1624999999999995e-05, 4.2375000000000745e-05, 4.251400000000044e-05, 4.2097000000001356e-05, 4.154200000000205e-05, 4.2361000000001175e-05]</msg>
<status status="PASS" starttime="20201112 12:27:07.717" endtime="20201112 12:27:07.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.712" endtime="20201112 12:27:07.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.721" endtime="20201112 12:27:07.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:07.725" endtime="20201112 12:27:07.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.723" endtime="20201112 12:27:07.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.720" endtime="20201112 12:27:07.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.353" endtime="20201112 12:27:07.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.353" endtime="20201112 12:27:07.746"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.754" endtime="20201112 12:27:07.772"></status>
</kw>
<msg timestamp="20201112 12:27:07.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.753" endtime="20201112 12:27:07.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:07.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:07.774" endtime="20201112 12:27:07.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.776" endtime="20201112 12:27:07.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.750" endtime="20201112 12:27:07.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.748" endtime="20201112 12:27:07.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:07.786" endtime="20201112 12:27:08.072"></status>
</kw>
<msg timestamp="20201112 12:27:08.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020732889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:07.785" endtime="20201112 12:27:08.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020690306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020732889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.076" endtime="20201112 12:27:08.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.085" endtime="20201112 12:27:08.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.782" endtime="20201112 12:27:08.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.780" endtime="20201112 12:27:08.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.091" level="INFO">${RESULT} = [{'time': 0.020732889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2583000000002286e-05, 'source_diff': 4.2583000000002286e-05}, {'time': 0.020785875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.088" endtime="20201112 12:27:08.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.105" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.092" endtime="20201112 12:27:08.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.109" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.108" endtime="20201112 12:27:08.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.112" level="INFO">VALUE: [4.2583000000002286e-05, 4.2874999999997776e-05, 4.3153000000000635e-05, 4.3388999999997846e-05, 4.252800000000001e-05, 4.276400000000069e-05, 4.302800000000051e-05, 4.2625000000000995e-05, 4.279199999999983e-05, 4.3375000000001745e-05, 4.2723000000001454e-05, 4.3041000000000607e-05, 4.304200000000008e-05, 4.2846999999998636e-05, 4.3097000000002356e-05, 4.294399999999962e-05, 4.3360999999998706e-05, 4.2903000000000385e-05, 4.3083000000002786e-05, 4.2708999999998415e-05, 4.323599999999858e-05, 4.345800000000316e-05, 4.3346999999999136e-05, 4.2860999999998206e-05, 4.28059999999994e-05, 4.3346999999999136e-05, 4.258399999999829e-05, 4.2736999999997555e-05, 4.306999999999922e-05, 4.286199999999768e-05, 4.277700000000079e-05, 4.308399999999879e-05, 4.2846999999998636e-05, 4.3097000000002356e-05, 4.2832999999999066e-05, 4.3332999999999566e-05, 4.3096999999998886e-05, 4.250000000000087e-05, 4.2625000000000995e-05, 4.3360999999998706e-05, 4.276400000000069e-05, 4.3332999999999566e-05, 4.277799999999679e-05, 4.2930999999999525e-05, 4.277799999999679e-05, 4.3472999999998735e-05, 4.2666999999999705e-05, 4.286199999999768e-05, 4.283399999999854e-05, 4.334800000000208e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.110" endtime="20201112 12:27:08.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.106" endtime="20201112 12:27:08.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.115" endtime="20201112 12:27:08.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.119" endtime="20201112 12:27:08.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.117" endtime="20201112 12:27:08.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.114" endtime="20201112 12:27:08.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.747" endtime="20201112 12:27:08.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:07.746" endtime="20201112 12:27:08.140"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.149" endtime="20201112 12:27:08.166"></status>
</kw>
<msg timestamp="20201112 12:27:08.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.147" endtime="20201112 12:27:08.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.167" endtime="20201112 12:27:08.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.170" endtime="20201112 12:27:08.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.144" endtime="20201112 12:27:08.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.142" endtime="20201112 12:27:08.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.181" endtime="20201112 12:27:08.466"></status>
</kw>
<msg timestamp="20201112 12:27:08.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.179" endtime="20201112 12:27:08.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.471" endtime="20201112 12:27:08.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.479" endtime="20201112 12:27:08.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.176" endtime="20201112 12:27:08.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.175" endtime="20201112 12:27:08.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.486" level="INFO">${RESULT} = [{'time': 0.019873556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4459000000000165e-05, 'source_diff': 4.4459000000000165e-05}, {'time': 0.019928569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.482" endtime="20201112 12:27:08.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.499" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.487" endtime="20201112 12:27:08.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.504" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.503" endtime="20201112 12:27:08.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.507" level="INFO">VALUE: [4.4459000000000165e-05, 4.441599999999851e-05, 4.3624999999998526e-05, 4.457000000000072e-05, 4.393000000000105e-05, 4.395800000000019e-05, 4.434799999999961e-05, 4.3958999999999665e-05, 4.4417000000001455e-05, 4.433400000000004e-05, 4.3902999999997916e-05, 4.447200000000026e-05, 4.4305000000001427e-05, 4.3681000000000275e-05, 4.424999999999915e-05, 4.352800000000101e-05, 4.3694999999999845e-05, 4.4360999999999706e-05, 4.4208999999999915e-05, 4.4445000000000595e-05, 4.3653000000001135e-05, 4.397199999999976e-05, 4.3541000000001107e-05, 4.4069000000000746e-05, 4.3610999999998956e-05, 4.379200000000083e-05, 4.367999999999733e-05, 4.429200000000133e-05, 4.3874999999998776e-05, 4.4374999999999276e-05, 4.373599999999908e-05, 4.4195000000000345e-05, 4.3708999999999415e-05, 4.354200000000058e-05, 4.4445000000000595e-05, 4.377799999999779e-05, 4.383399999999954e-05, 4.38060000000004e-05, 4.3737000000002024e-05, 4.383399999999954e-05, 4.422200000000001e-05, 4.352700000000154e-05, 4.379099999999789e-05, 4.4389000000002315e-05, 4.423599999999958e-05, 4.448599999999983e-05, 4.4069000000000746e-05, 4.448599999999983e-05, 4.44999999999994e-05, 4.3917000000000955e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.505" endtime="20201112 12:27:08.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.500" endtime="20201112 12:27:08.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.515" endtime="20201112 12:27:08.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.518" endtime="20201112 12:27:08.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.517" endtime="20201112 12:27:08.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.513" endtime="20201112 12:27:08.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.141" endtime="20201112 12:27:08.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.140" endtime="20201112 12:27:08.539"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.548" endtime="20201112 12:27:08.564"></status>
</kw>
<msg timestamp="20201112 12:27:08.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.546" endtime="20201112 12:27:08.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.565" endtime="20201112 12:27:08.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.568" endtime="20201112 12:27:08.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.544" endtime="20201112 12:27:08.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.541" endtime="20201112 12:27:08.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.578" endtime="20201112 12:27:08.864"></status>
</kw>
<msg timestamp="20201112 12:27:08.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019826625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.576" endtime="20201112 12:27:08.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019826625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.868" endtime="20201112 12:27:08.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.876" endtime="20201112 12:27:08.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.573" endtime="20201112 12:27:08.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.572" endtime="20201112 12:27:08.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:08.883" level="INFO">${RESULT} = [{'time': 0.019871458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4833000000001066e-05, 'source_diff': 4.4833000000001066e-05}, {'time': 0.019928472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:08.880" endtime="20201112 12:27:08.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:08.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:08.884" endtime="20201112 12:27:08.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.901" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:08.900" endtime="20201112 12:27:08.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.903" level="INFO">VALUE: [4.4833000000001066e-05, 4.545799999999822e-05, 4.476400000000269e-05, 4.506899999999828e-05, 4.502799999999904e-05, 4.509699999999742e-05, 4.49999999999999e-05, 4.455599999999768e-05, 4.4624999999999526e-05, 4.5180999999998306e-05, 4.491599999999901e-05, 4.509699999999742e-05, 4.5361000000000706e-05, 4.526399999999972e-05, 4.49999999999999e-05, 4.4945000000001095e-05, 4.494400000000162e-05, 4.483400000000054e-05, 4.491599999999901e-05, 4.463799999999962e-05, 4.541599999999951e-05, 4.516600000000273e-05, 4.498600000000033e-05, 4.548600000000083e-05, 4.492999999999858e-05, 4.4652999999998666e-05, 4.4569000000001247e-05, 4.504200000000208e-05, 4.504200000000208e-05, 4.4861000000000206e-05, 4.504199999999861e-05, 4.5459000000001165e-05, 4.527799999999929e-05, 4.5111000000000456e-05, 4.55000000000004e-05, 4.46939999999979e-05, 4.545800000000169e-05, 4.530500000000243e-05, 4.494400000000162e-05, 4.466600000000223e-05, 4.5319000000001997e-05, 4.506899999999828e-05, 4.4583000000000816e-05, 4.526399999999972e-05, 4.5361000000000706e-05, 4.5138999999999596e-05, 4.527799999999929e-05, 4.547200000000126e-05, 4.502799999999904e-05, 4.4709000000000415e-05]</msg>
<status status="PASS" starttime="20201112 12:27:08.902" endtime="20201112 12:27:08.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.897" endtime="20201112 12:27:08.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.907" endtime="20201112 12:27:08.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:08.910" endtime="20201112 12:27:08.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.909" endtime="20201112 12:27:08.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.905" endtime="20201112 12:27:08.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.540" endtime="20201112 12:27:08.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.539" endtime="20201112 12:27:08.931"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.940" endtime="20201112 12:27:08.956"></status>
</kw>
<msg timestamp="20201112 12:27:08.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.938" endtime="20201112 12:27:08.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:08.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:08.958" endtime="20201112 12:27:08.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.960" endtime="20201112 12:27:08.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.936" endtime="20201112 12:27:08.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.934" endtime="20201112 12:27:08.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:08.970" endtime="20201112 12:27:09.255"></status>
</kw>
<msg timestamp="20201112 12:27:09.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:08.969" endtime="20201112 12:27:09.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.260" endtime="20201112 12:27:09.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.268" endtime="20201112 12:27:09.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.966" endtime="20201112 12:27:09.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.964" endtime="20201112 12:27:09.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.274" level="INFO">${RESULT} = [{'time': 0.019669736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5875000000000776e-05, 'source_diff': 4.5875000000000776e-05}, {'time': 0.019729736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:09.271" endtime="20201112 12:27:09.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.275" endtime="20201112 12:27:09.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.292" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.291" endtime="20201112 12:27:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.295" level="INFO">VALUE: [4.5875000000000776e-05, 4.6361000000001706e-05, 4.623600000000158e-05, 4.6180999999999306e-05, 4.629199999999986e-05, 4.5916999999999486e-05, 4.5666999999999236e-05, 4.5944999999998626e-05, 4.5611000000000956e-05, 4.634800000000161e-05, 4.5652999999999666e-05, 4.575000000000065e-05, 4.581899999999903e-05, 4.640200000000094e-05, 4.595800000000219e-05, 4.6403000000000416e-05, 4.647199999999879e-05, 4.5902999999999916e-05, 4.634699999999867e-05, 4.604199999999961e-05, 4.626400000000072e-05, 4.5930999999999056e-05, 4.5902999999999916e-05, 4.5611000000000956e-05, 4.6319999999999e-05, 4.6139000000000596e-05, 4.608400000000179e-05, 4.605599999999918e-05, 4.559800000000086e-05, 4.6473000000001735e-05, 4.5916999999999486e-05, 4.652700000000107e-05, 4.602700000000057e-05, 4.61939999999994e-05, 4.565200000000019e-05, 4.575000000000065e-05, 4.631899999999953e-05, 4.572199999999804e-05, 4.5569000000002247e-05, 4.576400000000022e-05, 4.573600000000108e-05, 4.63329999999991e-05, 4.570800000000194e-05, 4.63329999999991e-05, 4.552799999999954e-05, 4.6125000000001026e-05, 4.6375000000001276e-05, 4.6195000000002345e-05, 4.558399999999782e-05, 4.648600000000183e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.293" endtime="20201112 12:27:09.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.289" endtime="20201112 12:27:09.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.298" endtime="20201112 12:27:09.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.302" endtime="20201112 12:27:09.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.300" endtime="20201112 12:27:09.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.297" endtime="20201112 12:27:09.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.932" endtime="20201112 12:27:09.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:08.931" endtime="20201112 12:27:09.323"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.331" endtime="20201112 12:27:09.349"></status>
</kw>
<msg timestamp="20201112 12:27:09.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.330" endtime="20201112 12:27:09.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.350" endtime="20201112 12:27:09.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.353" endtime="20201112 12:27:09.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.327" endtime="20201112 12:27:09.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.325" endtime="20201112 12:27:09.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.363" endtime="20201112 12:27:09.649"></status>
</kw>
<msg timestamp="20201112 12:27:09.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:09.361" endtime="20201112 12:27:09.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:09.653" endtime="20201112 12:27:09.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.662" endtime="20201112 12:27:09.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.359" endtime="20201112 12:27:09.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.357" endtime="20201112 12:27:09.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:09.668" level="INFO">${RESULT} = [{'time': 0.019657736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.723599999999911e-05, 'source_diff': 4.723599999999911e-05}, {'time': 0.01971875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:09.665" endtime="20201112 12:27:09.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:09.681" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:09.669" endtime="20201112 12:27:09.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.686" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:09.685" endtime="20201112 12:27:09.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.688" level="INFO">VALUE: [4.723599999999911e-05, 4.747199999999979e-05, 4.673599999999861e-05, 4.75139999999985e-05, 4.699999999999843e-05, 4.655599999999968e-05, 4.674999999999818e-05, 4.688899999999788e-05, 4.741699999999752e-05, 4.7167000000000736e-05, 4.691600000000101e-05, 4.68879999999984e-05, 4.691599999999754e-05, 4.726299999999878e-05, 4.7361000000002706e-05, 4.66939999999999e-05, 4.6917000000000486e-05, 4.720799999999997e-05, 4.661099999999849e-05, 4.726399999999825e-05, 4.6861000000002206e-05, 4.6680999999999806e-05, 4.7431000000000556e-05, 4.686099999999874e-05, 4.679199999999689e-05, 4.6903000000000916e-05, 4.737499999999881e-05, 4.729100000000139e-05, 4.7389000000001846e-05, 4.673599999999861e-05, 4.708299999999985e-05, 4.740200000000194e-05, 4.745799999999675e-05, 4.665200000000119e-05, 4.679100000000089e-05, 4.6639000000001096e-05, 4.702800000000104e-05, 4.688899999999788e-05, 4.730500000000096e-05, 4.6680999999999806e-05, 4.679200000000036e-05, 4.695800000000319e-05, 4.7375000000002276e-05, 4.734799999999914e-05, 4.7139000000001596e-05, 4.6472999999998266e-05, 4.674999999999818e-05, 4.712499999999856e-05, 4.690299999999745e-05, 4.66939999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:27:09.687" endtime="20201112 12:27:09.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.682" endtime="20201112 12:27:09.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.692" endtime="20201112 12:27:09.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:09.695" endtime="20201112 12:27:09.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.694" endtime="20201112 12:27:09.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.690" endtime="20201112 12:27:09.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.324" endtime="20201112 12:27:09.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.323" endtime="20201112 12:27:09.716"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.725" endtime="20201112 12:27:09.742"></status>
</kw>
<msg timestamp="20201112 12:27:09.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.724" endtime="20201112 12:27:09.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:09.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:09.743" endtime="20201112 12:27:09.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.745" endtime="20201112 12:27:09.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.721" endtime="20201112 12:27:09.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.719" endtime="20201112 12:27:09.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:09.757" endtime="20201112 12:27:10.043"></status>
</kw>
<msg timestamp="20201112 12:27:10.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:09.755" endtime="20201112 12:27:10.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019916403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.047" endtime="20201112 12:27:10.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.055" endtime="20201112 12:27:10.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.753" endtime="20201112 12:27:10.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.751" endtime="20201112 12:27:10.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.062" level="INFO">${RESULT} = [{'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.780500000000146e-05, 'source_diff': 4.780500000000146e-05}, {'time': 0.020020194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.059" endtime="20201112 12:27:10.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.063" endtime="20201112 12:27:10.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.080" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.079" endtime="20201112 12:27:10.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.082" level="INFO">VALUE: [4.780500000000146e-05, 4.808300000000085e-05, 4.781900000000103e-05, 4.815199999999922e-05, 4.845800000000122e-05, 4.762499999999906e-05, 4.845800000000122e-05, 4.751400000000197e-05, 4.794400000000115e-05, 4.831900000000153e-05, 4.823600000000011e-05, 4.812499999999956e-05, 4.759699999999992e-05, 4.755600000000068e-05, 4.831999999999753e-05, 4.811099999999999e-05, 4.791699999999802e-05, 4.837499999999981e-05, 4.805599999999771e-05, 4.8417000000001986e-05, 4.78879999999994e-05, 4.8013999999999e-05, 4.791600000000201e-05, 4.766600000000176e-05, 4.766599999999829e-05, 4.820800000000097e-05, 4.784700000000017e-05, 4.754200000000111e-05, 4.777799999999832e-05, 4.759699999999992e-05, 4.8320000000001e-05, 4.8209000000000446e-05, 4.830599999999796e-05, 4.838899999999938e-05, 4.7959000000000196e-05, 4.802799999999857e-05, 4.765200000000219e-05, 4.762499999999906e-05, 4.761099999999949e-05, 4.811099999999999e-05, 4.813899999999913e-05, 4.849999999999993e-05, 4.762499999999906e-05, 4.809700000000042e-05, 4.813899999999913e-05, 4.802799999999857e-05, 4.844399999999818e-05, 4.783299999999713e-05, 4.752800000000154e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.081" endtime="20201112 12:27:10.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.076" endtime="20201112 12:27:10.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.086" endtime="20201112 12:27:10.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.089" endtime="20201112 12:27:10.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.088" endtime="20201112 12:27:10.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.084" endtime="20201112 12:27:10.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.717" endtime="20201112 12:27:10.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:09.717" endtime="20201112 12:27:10.110"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.119" endtime="20201112 12:27:10.136"></status>
</kw>
<msg timestamp="20201112 12:27:10.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.117" endtime="20201112 12:27:10.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.137" endtime="20201112 12:27:10.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.139" endtime="20201112 12:27:10.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.115" endtime="20201112 12:27:10.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.113" endtime="20201112 12:27:10.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.150" endtime="20201112 12:27:10.435"></status>
</kw>
<msg timestamp="20201112 12:27:10.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.148" endtime="20201112 12:27:10.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.439" endtime="20201112 12:27:10.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.447" endtime="20201112 12:27:10.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.145" endtime="20201112 12:27:10.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.144" endtime="20201112 12:27:10.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.454" level="INFO">${RESULT} = [{'time': 0.020239625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.890299999999945e-05, 'source_diff': 4.890299999999945e-05}, {'time': 0.020297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.451" endtime="20201112 12:27:10.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.455" endtime="20201112 12:27:10.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.472" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.471" endtime="20201112 12:27:10.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.474" level="INFO">VALUE: [4.890299999999945e-05, 4.884700000000117e-05, 4.918099999999884e-05, 4.876399999999975e-05, 4.9486999999997366e-05, 4.933400000000157e-05, 4.909800000000089e-05, 4.8931000000002056e-05, 4.895799999999825e-05, 4.8737000000000086e-05, 4.892999999999911e-05, 4.884700000000117e-05, 4.876399999999975e-05, 4.897200000000129e-05, 4.933299999999863e-05, 4.897199999999782e-05, 4.86529999999992e-05, 4.906899999999881e-05, 4.8931000000002056e-05, 4.863899999999963e-05, 4.886100000000074e-05, 4.897200000000129e-05, 4.883400000000107e-05, 4.937499999999734e-05, 4.891699999999902e-05, 4.880600000000193e-05, 4.942999999999961e-05, 4.923600000000111e-05, 4.951300000000103e-05, 4.851300000000003e-05, 4.90270000000001e-05, 4.95140000000005e-05, 4.872200000000104e-05, 4.898599999999739e-05, 4.933299999999863e-05, 4.888899999999988e-05, 4.884700000000117e-05, 4.930599999999896e-05, 4.869499999999791e-05, 4.873600000000061e-05, 4.937500000000081e-05, 4.8973000000000766e-05, 4.859700000000092e-05, 4.8459000000000696e-05, 4.890299999999945e-05, 4.867999999999886e-05, 4.922200000000154e-05, 4.862500000000006e-05, 4.9014e-05, 4.88469999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.473" endtime="20201112 12:27:10.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.468" endtime="20201112 12:27:10.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.478" endtime="20201112 12:27:10.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.481" endtime="20201112 12:27:10.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.480" endtime="20201112 12:27:10.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.476" endtime="20201112 12:27:10.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.111" endtime="20201112 12:27:10.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.111" endtime="20201112 12:27:10.502"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.511" endtime="20201112 12:27:10.528"></status>
</kw>
<msg timestamp="20201112 12:27:10.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.509" endtime="20201112 12:27:10.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.530" endtime="20201112 12:27:10.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.532" endtime="20201112 12:27:10.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.507" endtime="20201112 12:27:10.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.505" endtime="20201112 12:27:10.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.543" endtime="20201112 12:27:10.829"></status>
</kw>
<msg timestamp="20201112 12:27:10.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.542" endtime="20201112 12:27:10.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.833" endtime="20201112 12:27:10.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.841" endtime="20201112 12:27:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.539" endtime="20201112 12:27:10.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.537" endtime="20201112 12:27:10.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:10.848" level="INFO">${RESULT} = [{'time': 0.019718167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.990300000000045e-05, 'source_diff': 4.990300000000045e-05}, {'time': 0.019776181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:10.844" endtime="20201112 12:27:10.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:10.861" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:10.849" endtime="20201112 12:27:10.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.866" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:10.865" endtime="20201112 12:27:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.868" level="INFO">VALUE: [4.990300000000045e-05, 4.961200000000096e-05, 5.036199999999824e-05, 4.998600000000186e-05, 4.965200000000072e-05, 4.979100000000042e-05, 5.033299999999963e-05, 5.01669999999968e-05, 4.997199999999882e-05, 5.036099999999877e-05, 4.961100000000149e-05, 5.037499999999834e-05, 5.045799999999975e-05, 5.011100000000199e-05, 5.034700000000267e-05, 5.008399999999885e-05, 4.955600000000268e-05, 5.036200000000171e-05, 5.03339999999991e-05, 4.96940000000029e-05, 5.026400000000125e-05, 5.036100000000224e-05, 4.995799999999925e-05, 5.024999999999821e-05, 5.005500000000024e-05, 5.018000000000036e-05, 5.023599999999864e-05, 4.969399999999943e-05, 5.004200000000014e-05, 5.011100000000199e-05, 4.975000000000118e-05, 4.972200000000204e-05, 5.03339999999991e-05, 5.005600000000318e-05, 5.043100000000009e-05, 4.987500000000131e-05, 4.976400000000075e-05, 5.041700000000052e-05, 5.012499999999809e-05, 4.973600000000161e-05, 5.048599999999889e-05, 5.008299999999938e-05, 4.955499999999974e-05, 5.018000000000036e-05, 5.002800000000057e-05, 4.955499999999974e-05, 4.98330000000026e-05, 4.98469999999987e-05, 4.966699999999977e-05, 4.95279999999966e-05]</msg>
<status status="PASS" starttime="20201112 12:27:10.867" endtime="20201112 12:27:10.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.862" endtime="20201112 12:27:10.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.872" endtime="20201112 12:27:10.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:10.875" endtime="20201112 12:27:10.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.874" endtime="20201112 12:27:10.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.870" endtime="20201112 12:27:10.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.503" endtime="20201112 12:27:10.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.502" endtime="20201112 12:27:10.896"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.905" endtime="20201112 12:27:10.922"></status>
</kw>
<msg timestamp="20201112 12:27:10.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.904" endtime="20201112 12:27:10.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:10.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:10.924" endtime="20201112 12:27:10.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.926" endtime="20201112 12:27:10.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.901" endtime="20201112 12:27:10.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.899" endtime="20201112 12:27:10.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:10.936" endtime="20201112 12:27:11.222"></status>
</kw>
<msg timestamp="20201112 12:27:11.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:10.934" endtime="20201112 12:27:11.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020147458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.226" endtime="20201112 12:27:11.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.234" endtime="20201112 12:27:11.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.932" endtime="20201112 12:27:11.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.930" endtime="20201112 12:27:11.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.241" level="INFO">${RESULT} = [{'time': 0.020147458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.093000000000111e-05, 'source_diff': 5.093000000000111e-05}, {'time': 0.020207458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.237" endtime="20201112 12:27:11.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.254" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.242" endtime="20201112 12:27:11.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.259" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.258" endtime="20201112 12:27:11.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.261" level="INFO">VALUE: [5.093000000000111e-05, 5.059699999999945e-05, 5.109699999999995e-05, 5.140299999999848e-05, 5.141699999999805e-05, 5.08469999999997e-05, 5.062499999999859e-05, 5.0708e-05, 5.115299999999823e-05, 5.098599999999939e-05, 5.093099999999712e-05, 5.130600000000096e-05, 5.106899999999734e-05, 5.125000000000268e-05, 5.058399999999935e-05, 5.095800000000025e-05, 5.131900000000106e-05, 5.05270000000016e-05, 5.086099999999927e-05, 5.05270000000016e-05, 5.099999999999896e-05, 5.133300000000063e-05, 5.123599999999964e-05, 5.141699999999805e-05, 5.099999999999896e-05, 5.072199999999957e-05, 5.11669999999978e-05, 5.061100000000249e-05, 5.076399999999828e-05, 5.058399999999935e-05, 5.130600000000096e-05, 5.086099999999927e-05, 5.104200000000114e-05, 5.106900000000081e-05, 5.118000000000136e-05, 5.095800000000025e-05, 5.130500000000149e-05, 5.072199999999957e-05, 5.075000000000218e-05, 5.054200000000064e-05, 5.06669999999973e-05, 5.083300000000013e-05, 5.112499999999909e-05, 5.144500000000066e-05, 5.140300000000195e-05, 5.059700000000292e-05, 5.086099999999927e-05, 5.154100000000217e-05, 5.059699999999945e-05, 5.1137999999999184e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.260" endtime="20201112 12:27:11.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.255" endtime="20201112 12:27:11.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.264" endtime="20201112 12:27:11.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.268" endtime="20201112 12:27:11.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.266" endtime="20201112 12:27:11.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.263" endtime="20201112 12:27:11.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.897" endtime="20201112 12:27:11.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:10.897" endtime="20201112 12:27:11.289"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.297" endtime="20201112 12:27:11.315"></status>
</kw>
<msg timestamp="20201112 12:27:11.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.296" endtime="20201112 12:27:11.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.317" endtime="20201112 12:27:11.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.319" endtime="20201112 12:27:11.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.293" endtime="20201112 12:27:11.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.291" endtime="20201112 12:27:11.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.330" endtime="20201112 12:27:11.616"></status>
</kw>
<msg timestamp="20201112 12:27:11.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.329" endtime="20201112 12:27:11.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:11.620" endtime="20201112 12:27:11.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.628" endtime="20201112 12:27:11.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.326" endtime="20201112 12:27:11.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.324" endtime="20201112 12:27:11.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:11.635" level="INFO">${RESULT} = [{'time': 0.019760819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.179099999999895e-05, 'source_diff': 5.179099999999895e-05}, {'time': 0.019823806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:11.631" endtime="20201112 12:27:11.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:11.648" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:11.636" endtime="20201112 12:27:11.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.653" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:11.652" endtime="20201112 12:27:11.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.655" level="INFO">VALUE: [5.179099999999895e-05, 5.198699999999987e-05, 5.180499999999852e-05, 5.175000000000318e-05, 5.206899999999834e-05, 5.161100000000002e-05, 5.223600000000064e-05, 5.15409999999987e-05, 5.155500000000174e-05, 5.204200000000214e-05, 5.157000000000078e-05, 5.237500000000034e-05, 5.2207999999998034e-05, 5.219499999999794e-05, 5.1693999999997964e-05, 5.186100000000027e-05, 5.237500000000034e-05, 5.169500000000091e-05, 5.159799999999992e-05, 5.238899999999991e-05, 5.174999999999971e-05, 5.2485999999997424e-05, 5.20409999999992e-05, 5.187499999999984e-05, 5.206999999999781e-05, 5.163899999999916e-05, 5.183299999999766e-05, 5.162499999999959e-05, 5.254199999999917e-05, 5.18470000000007e-05, 5.244499999999819e-05, 5.161199999999949e-05, 5.16530000000022e-05, 5.2151999999999754e-05, 5.208300000000138e-05, 5.211100000000052e-05, 5.2415999999999574e-05, 5.209700000000095e-05, 5.172200000000057e-05, 5.248600000000089e-05, 5.187499999999984e-05, 5.215299999999923e-05, 5.204200000000214e-05, 5.230499999999902e-05, 5.231900000000206e-05, 5.190299999999898e-05, 5.211099999999705e-05, 5.163899999999916e-05, 5.244499999999819e-05, 5.209800000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:27:11.654" endtime="20201112 12:27:11.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.649" endtime="20201112 12:27:11.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.659" endtime="20201112 12:27:11.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:11.662" endtime="20201112 12:27:11.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.661" endtime="20201112 12:27:11.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.657" endtime="20201112 12:27:11.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.290" endtime="20201112 12:27:11.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.289" endtime="20201112 12:27:11.683"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.692" endtime="20201112 12:27:11.708"></status>
</kw>
<msg timestamp="20201112 12:27:11.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.690" endtime="20201112 12:27:11.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:11.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:11.710" endtime="20201112 12:27:11.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.712" endtime="20201112 12:27:11.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.688" endtime="20201112 12:27:11.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.686" endtime="20201112 12:27:11.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:11.722" endtime="20201112 12:27:12.006"></status>
</kw>
<msg timestamp="20201112 12:27:12.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:11.720" endtime="20201112 12:27:12.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:12.011" endtime="20201112 12:27:12.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.019" endtime="20201112 12:27:12.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.718" endtime="20201112 12:27:12.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.716" endtime="20201112 12:27:12.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.025" level="INFO">${RESULT} = [{'time': 0.019960097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.259699999999798e-05, 'source_diff': 5.259699999999798e-05}, {'time': 0.020026097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.022" endtime="20201112 12:27:12.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.039" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.026" endtime="20201112 12:27:12.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.043" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.042" endtime="20201112 12:27:12.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.046" level="INFO">VALUE: [5.259699999999798e-05, 5.2707999999998534e-05, 5.280599999999899e-05, 5.291699999999955e-05, 5.269499999999844e-05, 5.2721999999998104e-05, 5.333299999999916e-05, 5.279200000000289e-05, 5.3471999999998854e-05, 5.290299999999998e-05, 5.334699999999873e-05, 5.252700000000013e-05, 5.28609999999978e-05, 5.301400000000053e-05, 5.3485999999998424e-05, 5.312500000000109e-05, 5.331900000000306e-05, 5.3430000000000144e-05, 5.25409999999997e-05, 5.322200000000207e-05, 5.290299999999998e-05, 5.262500000000059e-05, 5.329199999999992e-05, 5.25279999999996e-05, 5.319500000000241e-05, 5.306999999999881e-05, 5.281999999999856e-05, 5.297299999999783e-05, 5.254199999999917e-05, 5.33609999999983e-05, 5.338900000000091e-05, 5.331899999999959e-05, 5.262500000000059e-05, 5.315300000000023e-05, 5.2665999999999824e-05, 5.288900000000041e-05, 5.326400000000078e-05, 5.263900000000016e-05, 5.256900000000231e-05, 5.268100000000234e-05, 5.313900000000066e-05, 5.315300000000023e-05, 5.312500000000109e-05, 5.288900000000041e-05, 5.325000000000121e-05, 5.266700000000277e-05, 5.2749999999997244e-05, 5.2916000000000074e-05, 5.325000000000121e-05, 5.259700000000145e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.044" endtime="20201112 12:27:12.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.040" endtime="20201112 12:27:12.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.049" endtime="20201112 12:27:12.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.053" endtime="20201112 12:27:12.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.051" endtime="20201112 12:27:12.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.048" endtime="20201112 12:27:12.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.684" endtime="20201112 12:27:12.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:11.683" endtime="20201112 12:27:12.074"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.082" endtime="20201112 12:27:12.098"></status>
</kw>
<msg timestamp="20201112 12:27:12.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.081" endtime="20201112 12:27:12.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.100" endtime="20201112 12:27:12.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.102" endtime="20201112 12:27:12.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.078" endtime="20201112 12:27:12.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.076" endtime="20201112 12:27:12.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.112" endtime="20201112 12:27:12.398"></status>
</kw>
<msg timestamp="20201112 12:27:12.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.111" endtime="20201112 12:27:12.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.403" endtime="20201112 12:27:12.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.411" endtime="20201112 12:27:12.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.108" endtime="20201112 12:27:12.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.107" endtime="20201112 12:27:12.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.418" level="INFO">${RESULT} = [{'time': 0.019693653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.380599999999999e-05, 'source_diff': 5.380599999999999e-05}, {'time': 0.019759625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.414" endtime="20201112 12:27:12.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.419" endtime="20201112 12:27:12.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.436" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.434" endtime="20201112 12:27:12.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.438" level="INFO">VALUE: [5.380599999999999e-05, 5.404200000000067e-05, 5.437499999999887e-05, 5.426400000000178e-05, 5.373600000000214e-05, 5.393100000000012e-05, 5.444500000000019e-05, 5.4221999999999604e-05, 5.427699999999841e-05, 5.444500000000019e-05, 5.420899999999951e-05, 5.406999999999981e-05, 5.362500000000159e-05, 5.412499999999862e-05, 5.40410000000012e-05, 5.4249999999998744e-05, 5.423600000000264e-05, 5.373600000000214e-05, 5.387500000000184e-05, 5.35419999999967e-05, 5.434699999999973e-05, 5.434699999999973e-05, 5.386100000000227e-05, 5.384699999999923e-05, 5.390299999999751e-05, 5.359800000000192e-05, 5.362499999999812e-05, 5.356899999999984e-05, 5.379100000000095e-05, 5.4235999999999174e-05, 5.3693999999999964e-05, 5.4194000000000464e-05, 5.383299999999966e-05, 5.384699999999923e-05, 5.386100000000227e-05, 5.400000000000196e-05, 5.437499999999887e-05, 5.394499999999969e-05, 5.394499999999969e-05, 5.386100000000227e-05, 5.433399999999963e-05, 5.408399999999938e-05, 5.444500000000019e-05, 5.356999999999931e-05, 5.441700000000105e-05, 5.3901999999998035e-05, 5.4138000000002184e-05, 5.4208000000000034e-05, 5.355500000000027e-05, 5.377700000000138e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.437" endtime="20201112 12:27:12.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.432" endtime="20201112 12:27:12.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.442" endtime="20201112 12:27:12.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.445" endtime="20201112 12:27:12.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.443" endtime="20201112 12:27:12.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.440" endtime="20201112 12:27:12.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.075" endtime="20201112 12:27:12.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.074" endtime="20201112 12:27:12.466"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.475" endtime="20201112 12:27:12.492"></status>
</kw>
<msg timestamp="20201112 12:27:12.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.473" endtime="20201112 12:27:12.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.493" endtime="20201112 12:27:12.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.496" endtime="20201112 12:27:12.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.470" endtime="20201112 12:27:12.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.468" endtime="20201112 12:27:12.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.506" endtime="20201112 12:27:12.791"></status>
</kw>
<msg timestamp="20201112 12:27:12.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.504" endtime="20201112 12:27:12.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:12.796" endtime="20201112 12:27:12.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.804" endtime="20201112 12:27:12.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.502" endtime="20201112 12:27:12.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.500" endtime="20201112 12:27:12.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:12.811" level="INFO">${RESULT} = [{'time': 0.020663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.483400000000013e-05, 'source_diff': 5.483400000000013e-05}, {'time': 0.020732028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:12.807" endtime="20201112 12:27:12.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:12.824" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:12.812" endtime="20201112 12:27:12.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.828" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:12.827" endtime="20201112 12:27:12.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.831" level="INFO">VALUE: [5.483400000000013e-05, 5.4985999999999924e-05, 5.469500000000044e-05, 5.487499999999937e-05, 5.540299999999901e-05, 5.465299999999826e-05, 5.519500000000094e-05, 5.479100000000195e-05, 5.508300000000091e-05, 5.504099999999873e-05, 5.5236000000000174e-05, 5.476400000000228e-05, 5.480499999999805e-05, 5.530500000000202e-05, 5.487500000000284e-05, 5.5263999999999314e-05, 5.4999999999999494e-05, 5.5458000000001284e-05, 5.455600000000074e-05, 5.46670000000013e-05, 5.469500000000044e-05, 5.48479999999997e-05, 5.522300000000008e-05, 5.5179999999998425e-05, 5.533299999999769e-05, 5.5208000000001034e-05, 5.5194000000001464e-05, 5.554200000000217e-05, 5.5458000000001284e-05, 5.5222000000000604e-05, 5.465299999999826e-05, 5.541699999999858e-05, 5.461099999999955e-05, 5.505600000000124e-05, 5.454200000000117e-05, 5.5513999999999564e-05, 5.461099999999955e-05, 5.5277999999998884e-05, 5.507000000000081e-05, 5.476299999999934e-05, 5.511100000000005e-05, 5.534700000000073e-05, 5.455600000000074e-05, 5.5457999999997815e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.483300000000066e-05, 5.458300000000041e-05, 5.512499999999962e-05, 5.544499999999772e-05]</msg>
<status status="PASS" starttime="20201112 12:27:12.829" endtime="20201112 12:27:12.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.825" endtime="20201112 12:27:12.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.834" endtime="20201112 12:27:12.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:12.838" endtime="20201112 12:27:12.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.836" endtime="20201112 12:27:12.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.833" endtime="20201112 12:27:12.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.467" endtime="20201112 12:27:12.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.466" endtime="20201112 12:27:12.859"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.867" endtime="20201112 12:27:12.885"></status>
</kw>
<msg timestamp="20201112 12:27:12.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.866" endtime="20201112 12:27:12.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:12.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:12.886" endtime="20201112 12:27:12.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.889" endtime="20201112 12:27:12.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.863" endtime="20201112 12:27:12.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.861" endtime="20201112 12:27:12.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:12.899" endtime="20201112 12:27:13.186"></status>
</kw>
<msg timestamp="20201112 12:27:13.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:12.898" endtime="20201112 12:27:13.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01969975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:13.190" endtime="20201112 12:27:13.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.199" endtime="20201112 12:27:13.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.895" endtime="20201112 12:27:13.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.894" endtime="20201112 12:27:13.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.206" level="INFO">${RESULT} = [{'time': 0.01969975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5721999999997635e-05, 'source_diff': 5.5721999999997635e-05}, {'time': 0.019769736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:27:13.202" endtime="20201112 12:27:13.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.207" endtime="20201112 12:27:13.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.267" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.266" endtime="20201112 12:27:13.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.270" level="INFO">VALUE: [5.5721999999997635e-05, 5.583299999999819e-05, 5.6485999999997955e-05, 5.5972000000001354e-05, 5.640300000000001e-05, 5.611100000000105e-05, 5.593099999999865e-05, 5.559800000000045e-05, 5.569499999999797e-05, 5.573700000000015e-05, 5.579099999999948e-05, 5.586099999999733e-05, 5.613900000000019e-05, 5.581899999999862e-05, 5.5679999999998925e-05, 5.6277999999999884e-05, 5.633300000000216e-05, 5.561100000000055e-05, 5.6305999999999023e-05, 5.569500000000144e-05, 5.555600000000174e-05, 5.583399999999766e-05, 5.597299999999736e-05, 5.5708000000001534e-05, 5.58480000000007e-05, 5.608400000000138e-05, 5.556999999999784e-05, 5.5750000000000244e-05, 5.5693999999998495e-05, 5.634700000000173e-05, 5.5527999999999134e-05, 5.6277999999999884e-05, 5.5665999999999355e-05, 5.6291999999999454e-05, 5.60549999999993e-05, 5.656899999999937e-05, 5.643099999999915e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.633400000000163e-05, 5.6514000000000564e-05, 5.558399999999741e-05, 5.56809999999984e-05, 5.5736000000000674e-05, 5.554099999999923e-05, 5.5930000000002644e-05, 5.6165999999999855e-05, 5.588899999999994e-05, 5.5680000000002394e-05, 5.634699999999826e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.268" endtime="20201112 12:27:13.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.263" endtime="20201112 12:27:13.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.274" endtime="20201112 12:27:13.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.277" endtime="20201112 12:27:13.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.275" endtime="20201112 12:27:13.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.272" endtime="20201112 12:27:13.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.860" endtime="20201112 12:27:13.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:12.859" endtime="20201112 12:27:13.298"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.307" endtime="20201112 12:27:13.323"></status>
</kw>
<msg timestamp="20201112 12:27:13.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.305" endtime="20201112 12:27:13.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.325" endtime="20201112 12:27:13.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.327" endtime="20201112 12:27:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.302" endtime="20201112 12:27:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.300" endtime="20201112 12:27:13.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.336" endtime="20201112 12:27:13.625"></status>
</kw>
<msg timestamp="20201112 12:27:13.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.335" endtime="20201112 12:27:13.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.630" endtime="20201112 12:27:13.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.638" endtime="20201112 12:27:13.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.332" endtime="20201112 12:27:13.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.330" endtime="20201112 12:27:13.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:13.645" level="INFO">${RESULT} = [{'time': 0.019851361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.019922361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:13.642" endtime="20201112 12:27:13.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:13.659" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:13.646" endtime="20201112 12:27:13.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.663" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:13.662" endtime="20201112 12:27:13.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.666" level="INFO">VALUE: [5.6528000000000134e-05, 5.659699999999851e-05, 5.7278000000000884e-05, 5.706899999999987e-05, 5.712500000000162e-05, 5.743100000000015e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.7264000000001314e-05, 5.7278000000000884e-05, 5.7014000000001064e-05, 5.683300000000266e-05, 5.7069999999999343e-05, 5.73749999999984e-05, 5.738900000000144e-05, 5.7457999999999815e-05, 5.6707999999999065e-05, 5.731900000000012e-05, 5.6971999999998885e-05, 5.7444000000000245e-05, 5.743099999999668e-05, 5.7263999999997844e-05, 5.669499999999897e-05, 5.7042000000000204e-05, 5.716699999999686e-05, 5.7250000000001744e-05, 5.687500000000137e-05, 5.69870000000014e-05, 5.7028000000000634e-05, 5.7430000000000675e-05, 5.6999999999998024e-05, 5.690300000000051e-05, 5.658300000000241e-05, 5.7027999999997164e-05, 5.7055999999999774e-05, 5.658299999999894e-05, 5.709699999999901e-05, 5.6736000000001674e-05, 5.659699999999851e-05, 5.666699999999983e-05, 5.695899999999879e-05, 5.661099999999808e-05, 5.719499999999947e-05, 5.698699999999793e-05, 5.7499999999998525e-05, 5.7457999999999815e-05, 5.662499999999765e-05, 5.7152000000001285e-05, 5.6721999999998635e-05, 5.68610000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:27:13.664" endtime="20201112 12:27:13.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.660" endtime="20201112 12:27:13.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.674" endtime="20201112 12:27:13.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:13.678" endtime="20201112 12:27:13.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.676" endtime="20201112 12:27:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.672" endtime="20201112 12:27:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.299" endtime="20201112 12:27:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.298" endtime="20201112 12:27:13.699"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.707" endtime="20201112 12:27:13.724"></status>
</kw>
<msg timestamp="20201112 12:27:13.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.706" endtime="20201112 12:27:13.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:13.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:13.726" endtime="20201112 12:27:13.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.728" endtime="20201112 12:27:13.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.703" endtime="20201112 12:27:13.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.701" endtime="20201112 12:27:13.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:13.738" endtime="20201112 12:27:14.024"></status>
</kw>
<msg timestamp="20201112 12:27:14.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020750694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:13.736" endtime="20201112 12:27:14.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020750694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.029" endtime="20201112 12:27:14.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.037" endtime="20201112 12:27:14.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.733" endtime="20201112 12:27:14.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.732" endtime="20201112 12:27:14.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.044" level="INFO">${RESULT} = [{'time': 0.020750694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8499999999999525e-05, 'source_diff': 5.8499999999999525e-05}, {'time': 0.020816708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.041" endtime="20201112 12:27:14.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.045" endtime="20201112 12:27:14.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.062" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.061" endtime="20201112 12:27:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.064" level="INFO">VALUE: [5.8499999999999525e-05, 5.786099999999933e-05, 5.7806000000000524e-05, 5.7971999999999885e-05, 5.7528000000001134e-05, 5.8499999999999525e-05, 5.836099999999983e-05, 5.7986000000002924e-05, 5.7820000000000094e-05, 5.7556000000000274e-05, 5.815299999999829e-05, 5.790299999999804e-05, 5.808300000000044e-05, 5.8387999999999496e-05, 5.7764000000001814e-05, 5.783300000000019e-05, 5.802700000000216e-05, 5.8471999999996915e-05, 5.759699999999951e-05, 5.8249999999999275e-05, 5.831900000000112e-05, 5.7764000000001814e-05, 5.8027999999998164e-05, 5.783300000000019e-05, 5.780500000000105e-05, 5.7820000000000094e-05, 5.83749999999994e-05, 5.816700000000133e-05, 5.811099999999958e-05, 5.8028000000001634e-05, 5.784699999999976e-05, 5.752699999999819e-05, 5.75550000000008e-05, 5.809700000000001e-05, 5.7915999999998136e-05, 5.8208000000000565e-05, 5.8472000000000385e-05, 5.83749999999994e-05, 5.766700000000083e-05, 5.834700000000026e-05, 5.784699999999976e-05, 5.813900000000219e-05, 5.763899999999822e-05, 5.758400000000288e-05, 5.844499999999725e-05, 5.759800000000245e-05, 5.826300000000284e-05, 5.811099999999958e-05, 5.8430000000001675e-05, 5.755499999999733e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.063" endtime="20201112 12:27:14.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.058" endtime="20201112 12:27:14.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.068" endtime="20201112 12:27:14.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.071" endtime="20201112 12:27:14.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.069" endtime="20201112 12:27:14.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.066" endtime="20201112 12:27:14.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.699" endtime="20201112 12:27:14.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:13.699" endtime="20201112 12:27:14.092"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.101" endtime="20201112 12:27:14.118"></status>
</kw>
<msg timestamp="20201112 12:27:14.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.099" endtime="20201112 12:27:14.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.119" endtime="20201112 12:27:14.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.122" endtime="20201112 12:27:14.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.096" endtime="20201112 12:27:14.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.094" endtime="20201112 12:27:14.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.131" endtime="20201112 12:27:14.418"></status>
</kw>
<msg timestamp="20201112 12:27:14.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.129" endtime="20201112 12:27:14.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.422" endtime="20201112 12:27:14.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.431" endtime="20201112 12:27:14.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.127" endtime="20201112 12:27:14.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.125" endtime="20201112 12:27:14.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.438" level="INFO">${RESULT} = [{'time': 0.020701167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8584000000000414e-05, 'source_diff': 5.8584000000000414e-05}, {'time': 0.020772167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.434" endtime="20201112 12:27:14.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.439" endtime="20201112 12:27:14.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.455" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.454" endtime="20201112 12:27:14.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.458" level="INFO">VALUE: [5.8584000000000414e-05, 5.9042000000002204e-05, 5.941699999999911e-05, 5.908299999999797e-05, 5.9500000000000525e-05, 5.8943999999998276e-05, 5.886100000000033e-05, 5.8722000000000635e-05, 5.862499999999965e-05, 5.8972000000000885e-05, 5.944499999999825e-05, 5.9306000000002024e-05, 5.8555999999997804e-05, 5.8777999999998914e-05, 5.8792000000001954e-05, 5.8694000000001495e-05, 5.8722000000000635e-05, 5.88749999999999e-05, 5.9429999999999206e-05, 5.883300000000119e-05, 5.9250000000000275e-05, 5.851299999999962e-05, 5.909700000000101e-05, 5.9166000000002855e-05, 5.9291999999998984e-05, 5.862499999999965e-05, 5.863899999999922e-05, 5.933300000000169e-05, 5.93750000000004e-05, 5.8736000000000205e-05, 5.912500000000015e-05, 5.8749999999999775e-05, 5.93750000000004e-05, 5.8986000000000455e-05, 5.8777999999998914e-05, 5.913899999999972e-05, 5.8763999999999345e-05, 5.879099999999901e-05, 5.8722000000000635e-05, 5.9443999999998776e-05, 5.884700000000076e-05, 5.9278000000002884e-05, 5.855499999999833e-05, 5.912500000000015e-05, 5.8556000000001274e-05, 5.8791999999998484e-05, 5.938899999999997e-05, 5.908300000000144e-05, 5.920899999999757e-05, 5.927699999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.457" endtime="20201112 12:27:14.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.452" endtime="20201112 12:27:14.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.462" endtime="20201112 12:27:14.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.465" endtime="20201112 12:27:14.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.463" endtime="20201112 12:27:14.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.460" endtime="20201112 12:27:14.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.093" endtime="20201112 12:27:14.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.092" endtime="20201112 12:27:14.486"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.494" endtime="20201112 12:27:14.511"></status>
</kw>
<msg timestamp="20201112 12:27:14.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.493" endtime="20201112 12:27:14.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.513" endtime="20201112 12:27:14.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.515" endtime="20201112 12:27:14.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.490" endtime="20201112 12:27:14.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.488" endtime="20201112 12:27:14.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.524" endtime="20201112 12:27:14.812"></status>
</kw>
<msg timestamp="20201112 12:27:14.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.523" endtime="20201112 12:27:14.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.816" endtime="20201112 12:27:14.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.825" endtime="20201112 12:27:14.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.520" endtime="20201112 12:27:14.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.518" endtime="20201112 12:27:14.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:14.831" level="INFO">${RESULT} = [{'time': 0.019644944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9958000000002315e-05, 'source_diff': 5.9958000000002315e-05}, {'time': 0.019717958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:14.828" endtime="20201112 12:27:14.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:14.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:14.832" endtime="20201112 12:27:14.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.849" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:14.848" endtime="20201112 12:27:14.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.851" level="INFO">VALUE: [5.9958000000002315e-05, 6.0443999999999776e-05, 5.9957999999998846e-05, 5.9986000000001455e-05, 5.9750000000000775e-05, 5.9665999999999886e-05, 6.005499999999983e-05, 5.9777999999999915e-05, 5.9721999999998165e-05, 5.9986000000001455e-05, 6.0264000000000845e-05, 5.986099999999786e-05, 6.0485999999998485e-05, 5.9791999999999484e-05, 5.972299999999764e-05, 5.9722000000001635e-05, 5.988900000000047e-05, 5.988900000000047e-05, 6.0166000000000386e-05, 6.012500000000115e-05, 6.03750000000014e-05, 5.979100000000001e-05, 5.990300000000004e-05, 5.966699999999936e-05, 5.9722000000001635e-05, 6.047300000000186e-05, 6.015300000000029e-05, 5.9569999999998374e-05, 5.9556000000002274e-05, 6.043099999999968e-05, 5.98750000000009e-05, 6.048700000000143e-05, 6.040300000000054e-05, 5.9764000000000345e-05, 5.954099999999976e-05, 6.041700000000011e-05, 6.008299999999897e-05, 6.008300000000244e-05, 6.005499999999983e-05, 5.965299999999979e-05, 6.009699999999854e-05, 6.0457999999999346e-05, 6.0513999999997625e-05, 5.98750000000009e-05, 5.991699999999961e-05, 5.96949999999985e-05, 6.0291999999999984e-05, 6.0320000000002594e-05, 5.9986000000001455e-05, 5.984699999999829e-05]</msg>
<status status="PASS" starttime="20201112 12:27:14.850" endtime="20201112 12:27:14.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.845" endtime="20201112 12:27:14.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.855" endtime="20201112 12:27:14.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:14.858" endtime="20201112 12:27:14.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.857" endtime="20201112 12:27:14.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.853" endtime="20201112 12:27:14.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.487" endtime="20201112 12:27:14.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.486" endtime="20201112 12:27:14.879"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.888" endtime="20201112 12:27:14.905"></status>
</kw>
<msg timestamp="20201112 12:27:14.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.886" endtime="20201112 12:27:14.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:14.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:14.906" endtime="20201112 12:27:14.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.909" endtime="20201112 12:27:14.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.884" endtime="20201112 12:27:14.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.882" endtime="20201112 12:27:14.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:14.918" endtime="20201112 12:27:15.204"></status>
</kw>
<msg timestamp="20201112 12:27:15.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:14.916" endtime="20201112 12:27:15.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.208" endtime="20201112 12:27:15.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.217" endtime="20201112 12:27:15.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.914" endtime="20201112 12:27:15.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.912" endtime="20201112 12:27:15.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.223" level="INFO">${RESULT} = [{'time': 0.019882903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.088900000000147e-05, 'source_diff': 6.088900000000147e-05}, {'time': 0.019955917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.220" endtime="20201112 12:27:15.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.224" endtime="20201112 12:27:15.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.241" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.240" endtime="20201112 12:27:15.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.243" level="INFO">VALUE: [6.088900000000147e-05, 6.145899999999982e-05, 6.15140000000021e-05, 6.13339999999997e-05, 6.133400000000316e-05, 6.095899999999932e-05, 6.084699999999929e-05, 6.115199999999835e-05, 6.0999999999998555e-05, 6.086099999999886e-05, 6.129099999999804e-05, 6.126399999999838e-05, 6.0833999999999194e-05, 6.127799999999795e-05, 6.070899999999907e-05, 6.113900000000172e-05, 6.059699999999904e-05, 6.091700000000061e-05, 6.149999999999906e-05, 6.144499999999678e-05, 6.127700000000194e-05, 6.137499999999893e-05, 6.061100000000208e-05, 6.0999999999998555e-05, 6.062499999999818e-05, 6.061099999999861e-05, 6.0929999999997236e-05, 6.113900000000172e-05, 6.0749999999998305e-05, 6.066700000000036e-05, 6.058299999999947e-05, 6.0638000000001746e-05, 6.122300000000261e-05, 6.134799999999926e-05, 6.086099999999886e-05, 6.0583999999998944e-05, 6.108299999999997e-05, 6.0694000000000026e-05, 6.147199999999992e-05, 6.077699999999797e-05, 6.131900000000065e-05, 6.062500000000165e-05, 6.0763999999997875e-05, 6.143099999999721e-05, 6.084699999999929e-05, 6.15140000000021e-05, 6.104200000000073e-05, 6.13339999999997e-05, 6.151399999999863e-05, 6.1000000000002025e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.242" endtime="20201112 12:27:15.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.237" endtime="20201112 12:27:15.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.247" endtime="20201112 12:27:15.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.250" endtime="20201112 12:27:15.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.249" endtime="20201112 12:27:15.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.245" endtime="20201112 12:27:15.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.880" endtime="20201112 12:27:15.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:14.880" endtime="20201112 12:27:15.271"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.280" endtime="20201112 12:27:15.296"></status>
</kw>
<msg timestamp="20201112 12:27:15.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.278" endtime="20201112 12:27:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.298" endtime="20201112 12:27:15.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.300" endtime="20201112 12:27:15.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.276" endtime="20201112 12:27:15.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.274" endtime="20201112 12:27:15.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.310" endtime="20201112 12:27:15.595"></status>
</kw>
<msg timestamp="20201112 12:27:15.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.308" endtime="20201112 12:27:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.600" endtime="20201112 12:27:15.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.609" endtime="20201112 12:27:15.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.305" endtime="20201112 12:27:15.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.303" endtime="20201112 12:27:15.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:15.617" level="INFO">${RESULT} = [{'time': 0.019980431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.209800000000001e-05, 'source_diff': 6.209800000000001e-05}, {'time': 0.020057431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:15.613" endtime="20201112 12:27:15.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:15.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:15.618" endtime="20201112 12:27:15.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.634" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:15.633" endtime="20201112 12:27:15.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.637" level="INFO">VALUE: [6.209800000000001e-05, 6.234800000000026e-05, 6.167999999999799e-05, 6.195800000000085e-05, 6.186100000000333e-05, 6.250000000000006e-05, 6.215299999999882e-05, 6.236100000000036e-05, 6.243099999999821e-05, 6.227799999999895e-05, 6.212499999999968e-05, 6.207000000000087e-05, 6.241699999999864e-05, 6.186199999999933e-05, 6.245900000000082e-05, 6.166600000000189e-05, 6.245899999999735e-05, 6.213799999999978e-05, 6.211100000000011e-05, 6.245800000000135e-05, 6.25279999999992e-05, 6.161099999999961e-05, 6.215300000000229e-05, 6.230600000000155e-05, 6.180599999999759e-05, 6.158300000000047e-05, 6.199999999999956e-05, 6.159700000000004e-05, 6.180500000000158e-05, 6.204199999999827e-05, 6.236199999999983e-05, 6.208400000000044e-05, 6.241599999999917e-05, 6.241599999999917e-05, 6.234699999999732e-05, 6.212499999999968e-05, 6.1888999999999e-05, 6.176399999999888e-05, 6.168099999999746e-05, 6.194500000000075e-05, 6.184700000000029e-05, 6.238900000000297e-05, 6.18340000000002e-05, 6.211100000000011e-05, 6.177799999999845e-05, 6.1888999999999e-05, 6.243099999999821e-05, 6.159700000000004e-05, 6.161099999999961e-05, 6.159700000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:27:15.635" endtime="20201112 12:27:15.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.631" endtime="20201112 12:27:15.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.640" endtime="20201112 12:27:15.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:15.644" endtime="20201112 12:27:15.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.642" endtime="20201112 12:27:15.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.639" endtime="20201112 12:27:15.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.272" endtime="20201112 12:27:15.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.271" endtime="20201112 12:27:15.665"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.673" endtime="20201112 12:27:15.690"></status>
</kw>
<msg timestamp="20201112 12:27:15.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.672" endtime="20201112 12:27:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:15.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:15.692" endtime="20201112 12:27:15.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.694" endtime="20201112 12:27:15.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.669" endtime="20201112 12:27:15.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.667" endtime="20201112 12:27:15.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:15.703" endtime="20201112 12:27:15.989"></status>
</kw>
<msg timestamp="20201112 12:27:15.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.702" endtime="20201112 12:27:15.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:15.994" endtime="20201112 12:27:16.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.002" endtime="20201112 12:27:16.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.699" endtime="20201112 12:27:16.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.697" endtime="20201112 12:27:16.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.009" level="INFO">${RESULT} = [{'time': 0.020217514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.341699999999964e-05, 'source_diff': 6.341699999999964e-05}, {'time': 0.020293528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:16.005" endtime="20201112 12:27:16.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.022" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.010" endtime="20201112 12:27:16.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.027" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.026" endtime="20201112 12:27:16.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.029" level="INFO">VALUE: [6.341699999999964e-05, 6.312500000000068e-05, 6.318099999999896e-05, 6.25279999999992e-05, 6.336200000000083e-05, 6.329100000000004e-05, 6.268099999999846e-05, 6.267999999999899e-05, 6.298600000000099e-05, 6.301400000000013e-05, 6.295800000000185e-05, 6.258300000000147e-05, 6.309699999999807e-05, 6.329199999999952e-05, 6.2889e-05, 6.287500000000043e-05, 6.304199999999927e-05, 6.25140000000031e-05, 6.28340000000012e-05, 6.311100000000111e-05, 6.351300000000115e-05, 6.299999999999709e-05, 6.32080000000021e-05, 6.27219999999977e-05, 6.265300000000279e-05, 6.279099999999954e-05, 6.297200000000142e-05, 6.25279999999992e-05, 6.347199999999845e-05, 6.32500000000008e-05, 6.319499999999853e-05, 6.258400000000094e-05, 6.350000000000106e-05, 6.294499999999828e-05, 6.301400000000013e-05, 6.329199999999952e-05, 6.25279999999992e-05, 6.269399999999856e-05, 6.323600000000124e-05, 6.32500000000008e-05, 6.336100000000136e-05, 6.309700000000154e-05, 6.348600000000149e-05, 6.329199999999952e-05, 6.298600000000099e-05, 6.330599999999909e-05, 6.30699999999984e-05, 6.269499999999803e-05, 6.336100000000136e-05, 6.295799999999838e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.028" endtime="20201112 12:27:16.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.023" endtime="20201112 12:27:16.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.033" endtime="20201112 12:27:16.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.036" endtime="20201112 12:27:16.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.034" endtime="20201112 12:27:16.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.031" endtime="20201112 12:27:16.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.666" endtime="20201112 12:27:16.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:15.665" endtime="20201112 12:27:16.057"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.066" endtime="20201112 12:27:16.084"></status>
</kw>
<msg timestamp="20201112 12:27:16.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.064" endtime="20201112 12:27:16.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.085" endtime="20201112 12:27:16.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.088" endtime="20201112 12:27:16.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.062" endtime="20201112 12:27:16.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.059" endtime="20201112 12:27:16.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.097" endtime="20201112 12:27:16.385"></status>
</kw>
<msg timestamp="20201112 12:27:16.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.095" endtime="20201112 12:27:16.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.389" endtime="20201112 12:27:16.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.398" endtime="20201112 12:27:16.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.092" endtime="20201112 12:27:16.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.091" endtime="20201112 12:27:16.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.404" level="INFO">${RESULT} = [{'time': 0.020712764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3889000000001e-05, 'source_diff': 6.3889000000001e-05}, {'time': 0.020786764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:27:16.401" endtime="20201112 12:27:16.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.418" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.405" endtime="20201112 12:27:16.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.422" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.421" endtime="20201112 12:27:16.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.424" level="INFO">VALUE: [6.3889000000001e-05, 6.448599999999902e-05, 6.379100000000054e-05, 6.404200000000027e-05, 6.43890000000015e-05, 6.386100000000186e-05, 6.382000000000262e-05, 6.427800000000095e-05, 6.401399999999766e-05, 6.409700000000254e-05, 6.399999999999809e-05, 6.354199999999977e-05, 6.363900000000075e-05, 6.44440000000003e-05, 6.424999999999834e-05, 6.395800000000285e-05, 6.387500000000143e-05, 6.433299999999975e-05, 6.397199999999895e-05, 6.379200000000002e-05, 6.376400000000088e-05, 6.404200000000027e-05, 6.43890000000015e-05, 6.448599999999902e-05, 6.3889000000001e-05, 6.355499999999986e-05, 6.45419999999973e-05, 6.380599999999959e-05, 6.434699999999932e-05, 6.431900000000018e-05, 6.37500000000013e-05, 6.373599999999827e-05, 6.366699999999989e-05, 6.35280000000002e-05, 6.418099999999996e-05, 6.383399999999873e-05, 6.431999999999966e-05, 6.384800000000176e-05, 6.436100000000236e-05, 6.451400000000163e-05, 6.377799999999698e-05, 6.379200000000002e-05, 6.412499999999821e-05, 6.366600000000042e-05, 6.393000000000024e-05, 6.365300000000032e-05, 6.411100000000211e-05, 6.377800000000045e-05, 6.369399999999956e-05, 6.433299999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.423" endtime="20201112 12:27:16.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.418" endtime="20201112 12:27:16.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.428" endtime="20201112 12:27:16.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.431" endtime="20201112 12:27:16.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.430" endtime="20201112 12:27:16.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.426" endtime="20201112 12:27:16.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.058" endtime="20201112 12:27:16.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.057" endtime="20201112 12:27:16.452"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.461" endtime="20201112 12:27:16.479"></status>
</kw>
<msg timestamp="20201112 12:27:16.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.459" endtime="20201112 12:27:16.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.481" endtime="20201112 12:27:16.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.483" endtime="20201112 12:27:16.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.457" endtime="20201112 12:27:16.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.455" endtime="20201112 12:27:16.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.492" endtime="20201112 12:27:16.779"></status>
</kw>
<msg timestamp="20201112 12:27:16.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.491" endtime="20201112 12:27:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.784" endtime="20201112 12:27:16.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.792" endtime="20201112 12:27:16.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.488" endtime="20201112 12:27:16.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.486" endtime="20201112 12:27:16.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:16.799" level="INFO">${RESULT} = [{'time': 0.019850236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.524999999999934e-05, 'source_diff': 6.524999999999934e-05}, {'time': 0.01992425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:16.795" endtime="20201112 12:27:16.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:16.812" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:16.800" endtime="20201112 12:27:16.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.817" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:16.816" endtime="20201112 12:27:16.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.819" level="INFO">VALUE: [6.524999999999934e-05, 6.529200000000152e-05, 6.479200000000102e-05, 6.50830000000005e-05, 6.457000000000337e-05, 6.45419999999973e-05, 6.532000000000066e-05, 6.479199999999755e-05, 6.480600000000059e-05, 6.49440000000008e-05, 6.497199999999995e-05, 6.474999999999884e-05, 6.524999999999934e-05, 6.476400000000188e-05, 6.4583e-05, 6.515300000000182e-05, 6.486099999999939e-05, 6.536099999999989e-05, 6.549999999999959e-05, 6.455600000000034e-05, 6.501399999999866e-05, 6.469500000000003e-05, 6.505600000000084e-05, 6.495800000000038e-05, 6.548600000000002e-05, 6.495800000000038e-05, 6.548600000000002e-05, 6.519399999999759e-05, 6.487499999999896e-05, 6.50280000000017e-05, 6.551399999999916e-05, 6.537499999999946e-05, 6.538899999999903e-05, 6.544500000000078e-05, 6.474999999999884e-05, 6.479199999999755e-05, 6.455600000000034e-05, 6.493100000000071e-05, 6.534700000000032e-05, 6.479100000000154e-05, 6.524999999999934e-05, 6.520799999999716e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.470800000000013e-05, 6.480600000000059e-05, 6.509700000000007e-05, 6.484699999999982e-05, 6.527700000000247e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201112 12:27:16.818" endtime="20201112 12:27:16.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.813" endtime="20201112 12:27:16.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.823" endtime="20201112 12:27:16.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:16.826" endtime="20201112 12:27:16.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.824" endtime="20201112 12:27:16.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.821" endtime="20201112 12:27:16.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.453" endtime="20201112 12:27:16.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.453" endtime="20201112 12:27:16.847"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.856" endtime="20201112 12:27:16.874"></status>
</kw>
<msg timestamp="20201112 12:27:16.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.854" endtime="20201112 12:27:16.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:16.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:16.875" endtime="20201112 12:27:16.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.878" endtime="20201112 12:27:16.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.851" endtime="20201112 12:27:16.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.849" endtime="20201112 12:27:16.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:16.887" endtime="20201112 12:27:17.173"></status>
</kw>
<msg timestamp="20201112 12:27:17.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:16.885" endtime="20201112 12:27:17.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.177" endtime="20201112 12:27:17.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.186" endtime="20201112 12:27:17.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.882" endtime="20201112 12:27:17.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.881" endtime="20201112 12:27:17.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.192" level="INFO">${RESULT} = [{'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.59029999999991e-05, 'source_diff': 6.59029999999991e-05}, {'time': 0.019760611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:17.189" endtime="20201112 12:27:17.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.205" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.193" endtime="20201112 12:27:17.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.210" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.209" endtime="20201112 12:27:17.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.213" level="INFO">VALUE: [6.59029999999991e-05, 6.602799999999923e-05, 6.5583000000001e-05, 6.60419999999988e-05, 6.591700000000214e-05, 6.634700000000132e-05, 6.57220000000007e-05, 6.588899999999953e-05, 6.627800000000295e-05, 6.615299999999935e-05, 6.586100000000039e-05, 6.563899999999928e-05, 6.648600000000102e-05, 6.631900000000218e-05, 6.62639999999999e-05, 6.648600000000102e-05, 6.598600000000052e-05, 6.641699999999917e-05, 6.634699999999785e-05, 6.638900000000003e-05, 6.595800000000138e-05, 6.558400000000048e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.615199999999988e-05, 6.633299999999828e-05, 6.638900000000003e-05, 6.588899999999953e-05, 6.616600000000292e-05, 6.627799999999948e-05, 6.618100000000196e-05, 6.616699999999892e-05, 6.584700000000082e-05, 6.629199999999905e-05, 6.57639999999994e-05, 6.57229999999967e-05, 6.620899999999763e-05, 6.60839999999975e-05, 6.631899999999871e-05, 6.64159999999997e-05, 6.64440000000023e-05, 6.587499999999996e-05, 6.619399999999859e-05, 6.576400000000288e-05, 6.586100000000039e-05, 6.643099999999874e-05, 6.55419999999983e-05, 6.573600000000027e-05, 6.579199999999855e-05, 6.636099999999742e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.211" endtime="20201112 12:27:17.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.206" endtime="20201112 12:27:17.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.216" endtime="20201112 12:27:17.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.220" endtime="20201112 12:27:17.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.218" endtime="20201112 12:27:17.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.214" endtime="20201112 12:27:17.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.848" endtime="20201112 12:27:17.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:16.847" endtime="20201112 12:27:17.240"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.249" endtime="20201112 12:27:17.267"></status>
</kw>
<msg timestamp="20201112 12:27:17.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.248" endtime="20201112 12:27:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.269" endtime="20201112 12:27:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.271" endtime="20201112 12:27:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.245" endtime="20201112 12:27:17.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.243" endtime="20201112 12:27:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.280" endtime="20201112 12:27:17.567"></status>
</kw>
<msg timestamp="20201112 12:27:17.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:17.279" endtime="20201112 12:27:17.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:17.571" endtime="20201112 12:27:17.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.579" endtime="20201112 12:27:17.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.276" endtime="20201112 12:27:17.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.274" endtime="20201112 12:27:17.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.586" level="INFO">${RESULT} = [{'time': 0.01971375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.676399999999694e-05, 'source_diff': 6.676399999999694e-05}, {'time': 0.019788764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:17.582" endtime="20201112 12:27:17.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.587" endtime="20201112 12:27:17.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.603" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.602" endtime="20201112 12:27:17.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.606" level="INFO">VALUE: [6.676399999999694e-05, 6.673600000000127e-05, 6.736099999999842e-05, 6.656999999999844e-05, 6.680599999999912e-05, 6.72229999999982e-05, 6.666699999999942e-05, 6.681899999999921e-05, 6.7277000000001e-05, 6.731899999999971e-05, 6.652799999999973e-05, 6.675000000000084e-05, 6.750000000000159e-05, 6.708299999999903e-05, 6.713900000000078e-05, 6.672199999999823e-05, 6.67220000000017e-05, 6.709800000000155e-05, 6.659799999999758e-05, 6.67359999999978e-05, 6.745800000000288e-05, 6.726299999999796e-05, 6.670799999999866e-05, 6.726399999999744e-05, 6.737500000000146e-05, 6.669400000000256e-05, 6.70419999999998e-05, 6.709700000000207e-05, 6.661100000000114e-05, 6.686100000000139e-05, 6.737500000000146e-05, 6.688900000000053e-05, 6.67229999999977e-05, 6.683400000000173e-05, 6.705499999999989e-05, 6.716600000000045e-05, 6.690199999999716e-05, 6.734699999999885e-05, 6.687500000000096e-05, 6.719400000000306e-05, 6.709700000000207e-05, 6.737499999999799e-05, 6.734699999999885e-05, 6.737499999999799e-05, 6.726399999999744e-05, 6.727800000000048e-05, 6.693099999999924e-05, 6.693099999999924e-05, 6.655600000000234e-05, 6.741700000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:27:17.604" endtime="20201112 12:27:17.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.600" endtime="20201112 12:27:17.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.610" endtime="20201112 12:27:17.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:17.613" endtime="20201112 12:27:17.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.611" endtime="20201112 12:27:17.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.608" endtime="20201112 12:27:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.241" endtime="20201112 12:27:17.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.241" endtime="20201112 12:27:17.634"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.644" endtime="20201112 12:27:17.661"></status>
</kw>
<msg timestamp="20201112 12:27:17.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.642" endtime="20201112 12:27:17.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:17.663" endtime="20201112 12:27:17.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.665" endtime="20201112 12:27:17.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.639" endtime="20201112 12:27:17.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.637" endtime="20201112 12:27:17.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.675" endtime="20201112 12:27:17.962"></status>
</kw>
<msg timestamp="20201112 12:27:17.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.673" endtime="20201112 12:27:17.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021092333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:17.966" endtime="20201112 12:27:17.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:17.975" endtime="20201112 12:27:17.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.670" endtime="20201112 12:27:17.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.669" endtime="20201112 12:27:17.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:17.981" level="INFO">${RESULT} = [{'time': 0.021092333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.802700000000175e-05, 'source_diff': 6.802700000000175e-05}, {'time': 0.021168361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:17.978" endtime="20201112 12:27:17.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:17.995" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:17.982" endtime="20201112 12:27:17.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:17.999" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:27:17.998" endtime="20201112 12:27:18.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.002" level="INFO">VALUE: [6.802700000000175e-05, 6.829200000000105e-05, 6.812500000000221e-05, 6.84030000000016e-05, 6.827800000000148e-05, 6.818100000000049e-05, 6.791700000000067e-05, 6.827799999999801e-05, 6.812500000000221e-05, 6.849999999999912e-05, 6.761099999999867e-05, 6.758400000000248e-05, 6.800000000000209e-05, 6.850000000000259e-05, 6.804099999999785e-05, 6.834699999999985e-05, 6.827800000000148e-05, 6.831900000000071e-05, 6.847199999999998e-05, 6.763899999999781e-05, 6.812499999999874e-05, 6.80420000000008e-05, 6.768099999999999e-05, 6.808300000000003e-05, 6.852799999999826e-05, 6.756999999999944e-05, 6.762500000000171e-05, 6.847199999999998e-05, 6.77359999999988e-05, 6.795899999999938e-05, 6.830500000000114e-05, 6.75420000000003e-05, 6.758299999999953e-05, 6.797199999999948e-05, 6.815299999999788e-05, 6.77229999999987e-05, 6.805600000000037e-05, 6.7583999999999e-05, 6.752800000000073e-05, 6.8277000000002e-05, 6.755500000000039e-05, 6.812499999999874e-05, 6.852799999999826e-05, 6.813900000000178e-05, 6.855600000000087e-05, 6.82359999999993e-05, 6.826399999999844e-05, 6.779200000000055e-05, 6.768099999999999e-05, 6.829200000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.000" endtime="20201112 12:27:18.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.996" endtime="20201112 12:27:18.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.005" endtime="20201112 12:27:18.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.009" endtime="20201112 12:27:18.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.007" endtime="20201112 12:27:18.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.004" endtime="20201112 12:27:18.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.635" endtime="20201112 12:27:18.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:17.635" endtime="20201112 12:27:18.030"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.038" endtime="20201112 12:27:18.056"></status>
</kw>
<msg timestamp="20201112 12:27:18.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.037" endtime="20201112 12:27:18.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.057" endtime="20201112 12:27:18.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.060" endtime="20201112 12:27:18.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.034" endtime="20201112 12:27:18.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.032" endtime="20201112 12:27:18.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.069" endtime="20201112 12:27:18.356"></status>
</kw>
<msg timestamp="20201112 12:27:18.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.067" endtime="20201112 12:27:18.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.360" endtime="20201112 12:27:18.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.368" endtime="20201112 12:27:18.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.065" endtime="20201112 12:27:18.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.063" endtime="20201112 12:27:18.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.375" level="INFO">${RESULT} = [{'time': 0.019674708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.856899999999749e-05, 'source_diff': 6.856899999999749e-05}, {'time': 0.019751722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.372" endtime="20201112 12:27:18.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.388" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.376" endtime="20201112 12:27:18.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.393" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.392" endtime="20201112 12:27:18.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.395" level="INFO">VALUE: [6.856899999999749e-05, 6.854099999999835e-05, 6.874999999999937e-05, 6.948600000000055e-05, 6.951399999999969e-05, 6.915300000000235e-05, 6.952800000000273e-05, 6.915299999999888e-05, 6.905600000000137e-05, 6.899999999999962e-05, 6.937499999999999e-05, 6.934800000000033e-05, 6.924999999999987e-05, 6.855500000000139e-05, 6.936100000000042e-05, 6.90420000000018e-05, 6.868000000000152e-05, 6.913899999999931e-05, 6.869500000000056e-05, 6.916700000000192e-05, 6.947199999999751e-05, 6.930500000000214e-05, 6.872200000000023e-05, 6.87359999999998e-05, 6.895900000000038e-05, 6.934700000000085e-05, 6.861099999999967e-05, 6.854099999999835e-05, 6.940199999999966e-05, 6.934699999999738e-05, 6.933300000000128e-05, 6.874999999999937e-05, 6.879200000000155e-05, 6.90420000000018e-05, 6.926399999999944e-05, 6.945899999999741e-05, 6.918099999999802e-05, 6.8584e-05, 6.888900000000253e-05, 6.951300000000021e-05, 6.924999999999987e-05, 6.875000000000284e-05, 6.927799999999901e-05, 6.940299999999913e-05, 6.861099999999967e-05, 6.872200000000023e-05, 6.940299999999913e-05, 6.905499999999842e-05, 6.90420000000018e-05, 6.886099999999992e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.394" endtime="20201112 12:27:18.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.389" endtime="20201112 12:27:18.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.399" endtime="20201112 12:27:18.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.402" endtime="20201112 12:27:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.401" endtime="20201112 12:27:18.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.397" endtime="20201112 12:27:18.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.031" endtime="20201112 12:27:18.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.030" endtime="20201112 12:27:18.423"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.432" endtime="20201112 12:27:18.449"></status>
</kw>
<msg timestamp="20201112 12:27:18.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.430" endtime="20201112 12:27:18.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.451" endtime="20201112 12:27:18.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.453" endtime="20201112 12:27:18.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.428" endtime="20201112 12:27:18.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.426" endtime="20201112 12:27:18.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.462" endtime="20201112 12:27:18.749"></status>
</kw>
<msg timestamp="20201112 12:27:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.461" endtime="20201112 12:27:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:18.754" endtime="20201112 12:27:18.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.762" endtime="20201112 12:27:18.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.458" endtime="20201112 12:27:18.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.457" endtime="20201112 12:27:18.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:18.769" level="INFO">${RESULT} = [{'time': 0.019697319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972200000000123e-05, 'source_diff': 6.972200000000123e-05}, {'time': 0.019778306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:18.766" endtime="20201112 12:27:18.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:18.782" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:18.770" endtime="20201112 12:27:18.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.787" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:27:18.786" endtime="20201112 12:27:18.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.789" level="INFO">VALUE: [6.972200000000123e-05, 6.968099999999852e-05, 6.998700000000052e-05, 6.981900000000221e-05, 7.026300000000096e-05, 7.040200000000066e-05, 7.045799999999894e-05, 6.986099999999745e-05, 6.959699999999763e-05, 6.998599999999758e-05, 6.998599999999758e-05, 6.961100000000067e-05, 7.045899999999841e-05, 6.994499999999834e-05, 7.011200000000065e-05, 6.977799999999951e-05, 7.02230000000012e-05, 7.048599999999808e-05, 6.961100000000067e-05, 6.959699999999763e-05, 6.962500000000024e-05, 6.956899999999849e-05, 6.981900000000221e-05, 6.958300000000153e-05, 7.051400000000069e-05, 7.007000000000194e-05, 7.00840000000015e-05, 7.034800000000133e-05, 7.00559999999989e-05, 7.051400000000069e-05, 6.999999999999715e-05, 7.048599999999808e-05, 7.002700000000028e-05, 7.05559999999994e-05, 6.965299999999938e-05, 7.044399999999937e-05, 7.036100000000142e-05, 6.958299999999806e-05, 6.987500000000049e-05, 6.994500000000181e-05, 6.966699999999895e-05, 7.012500000000074e-05, 6.987499999999702e-05, 7.034700000000185e-05, 6.961100000000067e-05, 7.036099999999795e-05, 7.041599999999676e-05, 6.969399999999862e-05, 7.034699999999838e-05, 7.038900000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:27:18.788" endtime="20201112 12:27:18.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.783" endtime="20201112 12:27:18.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.799" endtime="20201112 12:27:18.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:18.802" endtime="20201112 12:27:18.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.801" endtime="20201112 12:27:18.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.797" endtime="20201112 12:27:18.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.424" endtime="20201112 12:27:18.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.423" endtime="20201112 12:27:18.823"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.832" endtime="20201112 12:27:18.849"></status>
</kw>
<msg timestamp="20201112 12:27:18.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.830" endtime="20201112 12:27:18.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:18.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:18.851" endtime="20201112 12:27:18.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.853" endtime="20201112 12:27:18.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.828" endtime="20201112 12:27:18.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.826" endtime="20201112 12:27:18.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:18.862" endtime="20201112 12:27:19.148"></status>
</kw>
<msg timestamp="20201112 12:27:19.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01981375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:18.861" endtime="20201112 12:27:19.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01981375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:19.152" endtime="20201112 12:27:19.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.160" endtime="20201112 12:27:19.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.858" endtime="20201112 12:27:19.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.857" endtime="20201112 12:27:19.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.167" level="INFO">${RESULT} = [{'time': 0.019885236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.148599999999908e-05, 'source_diff': 7.148599999999908e-05}, {'time': 0.019965236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.163" endtime="20201112 12:27:19.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.168" endtime="20201112 12:27:19.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.185" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.184" endtime="20201112 12:27:19.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.187" level="INFO">VALUE: [7.148599999999908e-05, 7.134699999999938e-05, 7.06109999999982e-05, 7.088900000000106e-05, 7.125000000000187e-05, 7.068099999999952e-05, 7.136099999999895e-05, 7.137499999999852e-05, 7.07360000000018e-05, 7.087499999999802e-05, 7.109699999999913e-05, 7.10559999999999e-05, 7.120899999999916e-05, 7.087499999999802e-05, 7.11109999999987e-05, 7.111100000000217e-05, 7.147200000000298e-05, 7.07360000000018e-05, 7.066699999999995e-05, 7.14170000000007e-05, 7.070799999999919e-05, 7.10559999999999e-05, 7.123599999999883e-05, 7.09170000000002e-05, 7.080599999999965e-05, 7.130600000000015e-05, 7.080599999999965e-05, 7.069399999999962e-05, 7.119400000000012e-05, 7.076400000000094e-05, 7.123599999999883e-05, 7.100000000000162e-05, 7.065300000000038e-05, 7.137500000000199e-05, 7.131999999999972e-05, 7.052800000000026e-05, 7.148600000000255e-05, 7.087500000000149e-05, 7.065300000000038e-05, 7.052700000000078e-05, 7.052700000000078e-05, 7.101299999999824e-05, 7.05689999999995e-05, 7.120799999999969e-05, 7.120799999999969e-05, 7.148599999999908e-05, 7.136100000000242e-05, 7.077800000000051e-05, 7.06109999999982e-05, 7.131900000000024e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.186" endtime="20201112 12:27:19.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.181" endtime="20201112 12:27:19.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.191" endtime="20201112 12:27:19.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.194" endtime="20201112 12:27:19.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.192" endtime="20201112 12:27:19.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.189" endtime="20201112 12:27:19.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.824" endtime="20201112 12:27:19.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:18.823" endtime="20201112 12:27:19.215"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.224" endtime="20201112 12:27:19.241"></status>
</kw>
<msg timestamp="20201112 12:27:19.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.222" endtime="20201112 12:27:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.243" endtime="20201112 12:27:19.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.245" endtime="20201112 12:27:19.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.220" endtime="20201112 12:27:19.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.217" endtime="20201112 12:27:19.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.254" endtime="20201112 12:27:19.543"></status>
</kw>
<msg timestamp="20201112 12:27:19.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.253" endtime="20201112 12:27:19.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020167514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.547" endtime="20201112 12:27:19.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.555" endtime="20201112 12:27:19.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.250" endtime="20201112 12:27:19.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.248" endtime="20201112 12:27:19.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.562" level="INFO">${RESULT} = [{'time': 0.020239347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.183300000000031e-05, 'source_diff': 7.183300000000031e-05}, {'time': 0.020325347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.559" endtime="20201112 12:27:19.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.563" endtime="20201112 12:27:19.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.580" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.579" endtime="20201112 12:27:19.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.582" level="INFO">VALUE: [7.183300000000031e-05, 7.176400000000194e-05, 7.233300000000081e-05, 7.2069999999997e-05, 7.234699999999691e-05, 7.229199999999811e-05, 7.186099999999945e-05, 7.15560000000004e-05, 7.220900000000016e-05, 7.21109999999997e-05, 7.168100000000052e-05, 7.184699999999988e-05, 7.183399999999979e-05, 7.152699999999831e-05, 7.251400000000269e-05, 7.183300000000031e-05, 7.184699999999988e-05, 7.251399999999922e-05, 7.24439999999979e-05, 7.165300000000138e-05, 7.177799999999804e-05, 7.188899999999859e-05, 7.208400000000004e-05, 7.24309999999978e-05, 7.209799999999961e-05, 7.215299999999841e-05, 7.186099999999945e-05, 7.169400000000062e-05, 7.17910000000016e-05, 7.205599999999743e-05, 7.248600000000008e-05, 7.231900000000124e-05, 7.248600000000008e-05, 7.168100000000052e-05, 7.162500000000224e-05, 7.204200000000133e-05, 7.166700000000095e-05, 7.222299999999973e-05, 7.162500000000224e-05, 7.24439999999979e-05, 7.165200000000191e-05, 7.200000000000262e-05, 7.194400000000087e-05, 7.231900000000124e-05, 7.247200000000051e-05, 7.165299999999791e-05, 7.247200000000051e-05, 7.209700000000013e-05, 7.236099999999995e-05, 7.227799999999854e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.581" endtime="20201112 12:27:19.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.576" endtime="20201112 12:27:19.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.586" endtime="20201112 12:27:19.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.589" endtime="20201112 12:27:19.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.588" endtime="20201112 12:27:19.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.584" endtime="20201112 12:27:19.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.216" endtime="20201112 12:27:19.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.215" endtime="20201112 12:27:19.610"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.619" endtime="20201112 12:27:19.637"></status>
</kw>
<msg timestamp="20201112 12:27:19.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.617" endtime="20201112 12:27:19.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:19.639" endtime="20201112 12:27:19.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.641" endtime="20201112 12:27:19.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.615" endtime="20201112 12:27:19.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.613" endtime="20201112 12:27:19.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.650" endtime="20201112 12:27:19.937"></status>
</kw>
<msg timestamp="20201112 12:27:19.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.649" endtime="20201112 12:27:19.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:19.941" endtime="20201112 12:27:19.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.949" endtime="20201112 12:27:19.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.646" endtime="20201112 12:27:19.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.644" endtime="20201112 12:27:19.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:19.956" level="INFO">${RESULT} = [{'time': 0.019826278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263899999999934e-05, 'source_diff': 7.263899999999934e-05}, {'time': 0.019913292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:19.953" endtime="20201112 12:27:19.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:19.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:19.957" endtime="20201112 12:27:19.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.974" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:27:19.973" endtime="20201112 12:27:19.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:19.976" level="INFO">VALUE: [7.263899999999934e-05, 7.333399999999782e-05, 7.326399999999997e-05, 7.313899999999984e-05, 7.262499999999977e-05, 7.268100000000152e-05, 7.347200000000151e-05, 7.265199999999944e-05, 7.266599999999901e-05, 7.265299999999891e-05, 7.304199999999886e-05, 7.254199999999836e-05, 7.265299999999891e-05, 7.301399999999972e-05, 7.257000000000097e-05, 7.333400000000129e-05, 7.299999999999668e-05, 7.254199999999836e-05, 7.297300000000048e-05, 7.265199999999944e-05, 7.331899999999877e-05, 7.254099999999888e-05, 7.281900000000174e-05, 7.258300000000106e-05, 7.309699999999766e-05, 7.300000000000015e-05, 7.315300000000288e-05, 7.330599999999868e-05, 7.318099999999855e-05, 7.333400000000129e-05, 7.319399999999865e-05, 7.270900000000066e-05, 7.341599999999976e-05, 7.287500000000002e-05, 7.316599999999951e-05, 7.301399999999972e-05, 7.259700000000063e-05, 7.265299999999891e-05, 7.322199999999779e-05, 7.334700000000138e-05, 7.287500000000002e-05, 7.272300000000023e-05, 7.295900000000091e-05, 7.268000000000205e-05, 7.291599999999926e-05, 7.265199999999944e-05, 7.351399999999675e-05, 7.334699999999791e-05, 7.349999999999718e-05, 7.315300000000288e-05]</msg>
<status status="PASS" starttime="20201112 12:27:19.975" endtime="20201112 12:27:19.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.970" endtime="20201112 12:27:19.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:19.980" endtime="20201112 12:27:19.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:19.983" endtime="20201112 12:27:20.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.982" endtime="20201112 12:27:20.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.978" endtime="20201112 12:27:20.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.611" endtime="20201112 12:27:20.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:19.610" endtime="20201112 12:27:20.004"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.013" endtime="20201112 12:27:20.031"></status>
</kw>
<msg timestamp="20201112 12:27:20.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.011" endtime="20201112 12:27:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.033" endtime="20201112 12:27:20.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.035" endtime="20201112 12:27:20.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.009" endtime="20201112 12:27:20.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.007" endtime="20201112 12:27:20.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.044" endtime="20201112 12:27:20.329"></status>
</kw>
<msg timestamp="20201112 12:27:20.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.042" endtime="20201112 12:27:20.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019741556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.334" endtime="20201112 12:27:20.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.342" endtime="20201112 12:27:20.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.040" endtime="20201112 12:27:20.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.038" endtime="20201112 12:27:20.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.349" level="INFO">${RESULT} = [{'time': 0.019815097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.354099999999988e-05, 'source_diff': 7.354099999999988e-05}, {'time': 0.019901111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:20.345" endtime="20201112 12:27:20.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.350" endtime="20201112 12:27:20.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.367" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.366" endtime="20201112 12:27:20.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.369" level="INFO">VALUE: [7.354099999999988e-05, 7.372199999999829e-05, 7.422299999999826e-05, 7.436100000000195e-05, 7.449999999999818e-05, 7.377800000000004e-05, 7.41249999999978e-05, 7.41249999999978e-05, 7.36110000000012e-05, 7.384799999999789e-05, 7.4069999999999e-05, 7.392999999999983e-05, 7.431899999999977e-05, 7.441600000000076e-05, 7.404199999999986e-05, 7.433299999999934e-05, 7.354199999999936e-05, 7.44309999999998e-05, 7.37500000000009e-05, 7.415300000000041e-05, 7.415300000000041e-05, 7.444500000000284e-05, 7.409800000000161e-05, 7.367999999999958e-05, 7.44439999999999e-05, 7.359699999999816e-05, 7.379100000000013e-05, 7.400000000000115e-05, 7.423599999999836e-05, 7.365299999999991e-05, 7.431899999999977e-05, 7.384700000000188e-05, 7.412500000000127e-05, 7.433399999999882e-05, 7.386100000000145e-05, 7.44309999999998e-05, 7.444499999999937e-05, 7.41379999999979e-05, 7.379100000000013e-05, 7.42500000000014e-05, 7.409700000000213e-05, 7.349999999999718e-05, 7.377800000000004e-05, 7.354199999999936e-05, 7.398599999999811e-05, 7.379199999999961e-05, 7.386100000000145e-05, 7.366699999999948e-05, 7.381899999999927e-05, 7.409699999999866e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.368" endtime="20201112 12:27:20.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.363" endtime="20201112 12:27:20.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.373" endtime="20201112 12:27:20.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.376" endtime="20201112 12:27:20.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.375" endtime="20201112 12:27:20.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.371" endtime="20201112 12:27:20.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.005" endtime="20201112 12:27:20.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.004" endtime="20201112 12:27:20.397"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.406" endtime="20201112 12:27:20.424"></status>
</kw>
<msg timestamp="20201112 12:27:20.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.404" endtime="20201112 12:27:20.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.426" endtime="20201112 12:27:20.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.428" endtime="20201112 12:27:20.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.401" endtime="20201112 12:27:20.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.399" endtime="20201112 12:27:20.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.437" endtime="20201112 12:27:20.724"></status>
</kw>
<msg timestamp="20201112 12:27:20.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.436" endtime="20201112 12:27:20.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019552556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.728" endtime="20201112 12:27:20.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.736" endtime="20201112 12:27:20.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.433" endtime="20201112 12:27:20.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.432" endtime="20201112 12:27:20.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:20.743" level="INFO">${RESULT} = [{'time': 0.019627819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.52630000000025e-05, 'source_diff': 7.52630000000025e-05}, {'time': 0.019713847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:20.740" endtime="20201112 12:27:20.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:20.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:20.744" endtime="20201112 12:27:20.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.761" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:27:20.760" endtime="20201112 12:27:20.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.763" level="INFO">VALUE: [7.52630000000025e-05, 7.520800000000022e-05, 7.551299999999928e-05, 7.515199999999847e-05, 7.493000000000083e-05, 7.45829999999996e-05, 7.484699999999941e-05, 7.516699999999751e-05, 7.527799999999807e-05, 7.548699999999908e-05, 7.51249999999988e-05, 7.530600000000068e-05, 7.470899999999919e-05, 7.54310000000008e-05, 7.469499999999962e-05, 7.53050000000012e-05, 7.49440000000004e-05, 7.456900000000002e-05, 7.527799999999807e-05, 7.481900000000027e-05, 7.533300000000034e-05, 7.463899999999787e-05, 7.520899999999969e-05, 7.487500000000202e-05, 7.480600000000018e-05, 7.470900000000266e-05, 7.492999999999736e-05, 7.545800000000047e-05, 7.45829999999996e-05, 7.454100000000088e-05, 7.468000000000058e-05, 7.531900000000077e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.458300000000306e-05, 7.526400000000197e-05, 7.469499999999962e-05, 7.486099999999898e-05, 7.532000000000025e-05, 7.518000000000108e-05, 7.487499999999855e-05, 7.487500000000202e-05, 7.466600000000101e-05, 7.54029999999982e-05, 7.504199999999739e-05, 7.456900000000002e-05, 7.536099999999948e-05, 7.452800000000079e-05, 7.501399999999825e-05, 7.540300000000166e-05]</msg>
<status status="PASS" starttime="20201112 12:27:20.762" endtime="20201112 12:27:20.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.757" endtime="20201112 12:27:20.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.767" endtime="20201112 12:27:20.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:20.771" endtime="20201112 12:27:20.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.769" endtime="20201112 12:27:20.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.765" endtime="20201112 12:27:20.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.398" endtime="20201112 12:27:20.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.397" endtime="20201112 12:27:20.791"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.800" endtime="20201112 12:27:20.819"></status>
</kw>
<msg timestamp="20201112 12:27:20.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.799" endtime="20201112 12:27:20.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:20.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:20.820" endtime="20201112 12:27:20.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.823" endtime="20201112 12:27:20.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.796" endtime="20201112 12:27:20.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.794" endtime="20201112 12:27:20.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:20.832" endtime="20201112 12:27:21.119"></status>
</kw>
<msg timestamp="20201112 12:27:21.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:20.830" endtime="20201112 12:27:21.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.124" endtime="20201112 12:27:21.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.132" endtime="20201112 12:27:21.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.828" endtime="20201112 12:27:21.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.826" endtime="20201112 12:27:21.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.139" level="INFO">${RESULT} = [{'time': 0.019752347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.577799999999857e-05, 'source_diff': 7.577799999999857e-05}, {'time': 0.019838375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.135" endtime="20201112 12:27:21.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.140" endtime="20201112 12:27:21.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.156" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.155" endtime="20201112 12:27:21.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.159" level="INFO">VALUE: [7.577799999999857e-05, 7.637500000000005e-05, 7.637500000000005e-05, 7.598600000000011e-05, 7.619500000000112e-05, 7.56249999999993e-05, 7.594399999999793e-05, 7.587499999999955e-05, 7.632000000000125e-05, 7.597200000000054e-05, 7.602699999999935e-05, 7.644399999999843e-05, 7.650000000000018e-05, 7.555499999999798e-05, 7.633300000000134e-05, 7.608299999999762e-05, 7.644500000000137e-05, 7.638899999999962e-05, 7.631999999999778e-05, 7.561099999999973e-05, 7.629200000000211e-05, 7.552700000000231e-05, 7.590199999999922e-05, 7.555500000000145e-05, 7.631900000000177e-05, 7.634700000000091e-05, 7.577799999999857e-05, 7.638899999999962e-05, 7.613899999999937e-05, 7.59310000000013e-05, 7.566699999999801e-05, 7.551400000000222e-05, 7.595900000000044e-05, 7.647300000000051e-05, 7.561099999999973e-05, 7.580499999999823e-05, 7.586099999999998e-05, 7.586099999999998e-05, 7.581900000000127e-05, 7.647200000000104e-05, 7.637500000000005e-05, 7.638899999999962e-05, 7.552799999999832e-05, 7.561099999999973e-05, 7.597300000000001e-05, 7.59310000000013e-05, 7.604099999999892e-05, 7.588899999999912e-05, 7.606900000000152e-05, 7.587500000000302e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.158" endtime="20201112 12:27:21.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.153" endtime="20201112 12:27:21.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.163" endtime="20201112 12:27:21.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.166" endtime="20201112 12:27:21.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.164" endtime="20201112 12:27:21.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.161" endtime="20201112 12:27:21.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.792" endtime="20201112 12:27:21.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:20.792" endtime="20201112 12:27:21.187"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.195" endtime="20201112 12:27:21.213"></status>
</kw>
<msg timestamp="20201112 12:27:21.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.194" endtime="20201112 12:27:21.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.214" endtime="20201112 12:27:21.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.217" endtime="20201112 12:27:21.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.191" endtime="20201112 12:27:21.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.189" endtime="20201112 12:27:21.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.226" endtime="20201112 12:27:21.512"></status>
</kw>
<msg timestamp="20201112 12:27:21.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.225" endtime="20201112 12:27:21.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.516" endtime="20201112 12:27:21.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.525" endtime="20201112 12:27:21.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.222" endtime="20201112 12:27:21.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.220" endtime="20201112 12:27:21.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.532" level="INFO">${RESULT} = [{'time': 0.019772375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.674999999999696e-05, 'source_diff': 7.674999999999696e-05}, {'time': 0.019862389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.528" endtime="20201112 12:27:21.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.545" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.533" endtime="20201112 12:27:21.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.549" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.548" endtime="20201112 12:27:21.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.552" level="INFO">VALUE: [7.674999999999696e-05, 7.677799999999957e-05, 7.654200000000236e-05, 7.702799999999982e-05, 7.663899999999987e-05, 7.727800000000007e-05, 7.729100000000017e-05, 7.729199999999964e-05, 7.693000000000283e-05, 7.702799999999982e-05, 7.736099999999801e-05, 7.73189999999993e-05, 7.744399999999943e-05, 7.751400000000075e-05, 7.706999999999853e-05, 7.668100000000205e-05, 7.702799999999982e-05, 7.73189999999993e-05, 7.687500000000055e-05, 7.672199999999782e-05, 7.70830000000021e-05, 7.725000000000093e-05, 7.694399999999893e-05, 7.698600000000111e-05, 7.72640000000005e-05, 7.713900000000037e-05, 7.709700000000166e-05, 7.655599999999846e-05, 7.744399999999943e-05, 7.670899999999772e-05, 7.745900000000194e-05, 7.737500000000105e-05, 7.679099999999967e-05, 7.665299999999944e-05, 7.713900000000037e-05, 7.741699999999976e-05, 7.666699999999901e-05, 7.737500000000105e-05, 7.74449999999989e-05, 7.684700000000141e-05, 7.688900000000012e-05, 7.733300000000234e-05, 7.704200000000286e-05, 7.74030000000002e-05, 7.72770000000006e-05, 7.709799999999767e-05, 7.70830000000021e-05, 7.698599999999764e-05, 7.704199999999939e-05, 7.715299999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.550" endtime="20201112 12:27:21.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.546" endtime="20201112 12:27:21.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.555" endtime="20201112 12:27:21.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.559" endtime="20201112 12:27:21.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.557" endtime="20201112 12:27:21.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.554" endtime="20201112 12:27:21.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.188" endtime="20201112 12:27:21.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.187" endtime="20201112 12:27:21.580"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.588" endtime="20201112 12:27:21.607"></status>
</kw>
<msg timestamp="20201112 12:27:21.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.587" endtime="20201112 12:27:21.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.609" endtime="20201112 12:27:21.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.611" endtime="20201112 12:27:21.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.584" endtime="20201112 12:27:21.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.582" endtime="20201112 12:27:21.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.620" endtime="20201112 12:27:21.906"></status>
</kw>
<msg timestamp="20201112 12:27:21.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.619" endtime="20201112 12:27:21.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020186153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:21.910" endtime="20201112 12:27:21.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.919" endtime="20201112 12:27:21.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.616" endtime="20201112 12:27:21.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.615" endtime="20201112 12:27:21.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:21.926" level="INFO">${RESULT} = [{'time': 0.020264625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847200000000304e-05, 'source_diff': 7.847200000000304e-05}, {'time': 0.020352694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:21.922" endtime="20201112 12:27:21.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:21.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:21.927" endtime="20201112 12:27:21.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.943" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:27:21.942" endtime="20201112 12:27:21.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:21.946" level="INFO">VALUE: [7.847200000000304e-05, 7.850000000000218e-05, 7.761099999999826e-05, 7.831999999999978e-05, 7.798600000000211e-05, 7.791700000000026e-05, 7.777800000000057e-05, 7.794399999999993e-05, 7.830500000000074e-05, 7.818000000000061e-05, 7.834699999999944e-05, 7.851400000000175e-05, 7.748599999999814e-05, 7.818100000000008e-05, 7.843100000000033e-05, 7.75839999999986e-05, 7.80839999999991e-05, 7.791700000000026e-05, 7.843100000000033e-05, 7.75830000000026e-05, 7.813900000000137e-05, 7.76250000000013e-05, 7.838900000000162e-05, 7.777800000000057e-05, 7.780599999999971e-05, 7.850000000000218e-05, 7.830600000000021e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.819499999999965e-05, 7.79449999999994e-05, 7.799999999999821e-05, 7.802699999999788e-05, 7.756899999999955e-05, 7.761099999999826e-05, 7.820799999999975e-05, 7.800000000000168e-05, 7.793099999999983e-05, 7.773599999999839e-05, 7.798599999999864e-05, 7.80839999999991e-05, 7.843100000000033e-05, 7.76250000000013e-05, 7.777800000000057e-05, 7.755499999999999e-05, 7.825000000000193e-05, 7.801400000000125e-05, 7.779100000000067e-05, 7.752800000000032e-05, 7.772199999999882e-05]</msg>
<status status="PASS" starttime="20201112 12:27:21.944" endtime="20201112 12:27:21.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.940" endtime="20201112 12:27:21.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.949" endtime="20201112 12:27:21.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:21.953" endtime="20201112 12:27:21.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.951" endtime="20201112 12:27:21.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.948" endtime="20201112 12:27:21.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.581" endtime="20201112 12:27:21.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.580" endtime="20201112 12:27:21.974"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:21.982" endtime="20201112 12:27:22.001"></status>
</kw>
<msg timestamp="20201112 12:27:22.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:21.981" endtime="20201112 12:27:22.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.003" endtime="20201112 12:27:22.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.005" endtime="20201112 12:27:22.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.978" endtime="20201112 12:27:22.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.976" endtime="20201112 12:27:22.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.014" endtime="20201112 12:27:22.301"></status>
</kw>
<msg timestamp="20201112 12:27:22.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:22.013" endtime="20201112 12:27:22.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0197115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:22.305" endtime="20201112 12:27:22.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.313" endtime="20201112 12:27:22.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.010" endtime="20201112 12:27:22.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.008" endtime="20201112 12:27:22.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.320" level="INFO">${RESULT} = [{'time': 0.019790931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943100000000133e-05, 'source_diff': 7.943100000000133e-05}, {'time': 0.019884944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.317" endtime="20201112 12:27:22.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.333" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.321" endtime="20201112 12:27:22.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.338" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.337" endtime="20201112 12:27:22.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.340" level="INFO">VALUE: [7.943100000000133e-05, 7.943000000000186e-05, 7.868100000000058e-05, 7.936100000000001e-05, 7.918000000000161e-05, 7.858300000000012e-05, 7.861099999999926e-05, 7.929200000000164e-05, 7.916700000000151e-05, 7.882000000000028e-05, 7.924999999999946e-05, 7.898599999999964e-05, 7.866699999999754e-05, 7.901399999999878e-05, 7.912499999999933e-05, 7.852699999999838e-05, 7.870800000000025e-05, 7.887500000000255e-05, 7.91389999999989e-05, 7.94169999999983e-05, 7.873599999999939e-05, 7.880600000000071e-05, 7.937499999999958e-05, 7.901400000000225e-05, 7.934799999999992e-05, 7.865300000000144e-05, 7.886199999999899e-05, 7.90970000000002e-05, 7.948600000000014e-05, 7.948600000000014e-05, 7.90970000000002e-05, 7.915299999999847e-05, 7.865299999999797e-05, 7.932000000000078e-05, 7.900000000000268e-05, 7.87779999999981e-05, 7.888899999999865e-05, 7.870899999999972e-05, 7.938899999999915e-05, 7.944399999999796e-05, 7.943000000000186e-05, 7.855499999999752e-05, 7.897200000000007e-05, 7.91389999999989e-05, 7.912499999999933e-05, 7.86250000000023e-05, 7.916699999999804e-05, 7.895899999999997e-05, 7.91389999999989e-05, 7.884799999999942e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.339" endtime="20201112 12:27:22.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.334" endtime="20201112 12:27:22.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.344" endtime="20201112 12:27:22.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.347" endtime="20201112 12:27:22.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.346" endtime="20201112 12:27:22.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.342" endtime="20201112 12:27:22.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.975" endtime="20201112 12:27:22.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:21.974" endtime="20201112 12:27:22.368"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.377" endtime="20201112 12:27:22.395"></status>
</kw>
<msg timestamp="20201112 12:27:22.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.375" endtime="20201112 12:27:22.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.397" endtime="20201112 12:27:22.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.399" endtime="20201112 12:27:22.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.373" endtime="20201112 12:27:22.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.371" endtime="20201112 12:27:22.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.408" endtime="20201112 12:27:22.695"></status>
</kw>
<msg timestamp="20201112 12:27:22.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.407" endtime="20201112 12:27:22.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019973056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.700" endtime="20201112 12:27:22.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.708" endtime="20201112 12:27:22.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.404" endtime="20201112 12:27:22.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.402" endtime="20201112 12:27:22.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:22.716" level="INFO">${RESULT} = [{'time': 0.019973056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.016699999999904e-05, 'source_diff': 8.016699999999904e-05}, {'time': 0.020062056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:22.712" endtime="20201112 12:27:22.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:22.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:22.717" endtime="20201112 12:27:22.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.734" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:27:22.733" endtime="20201112 12:27:22.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.736" level="INFO">VALUE: [8.016699999999904e-05, 7.984800000000042e-05, 7.99589999999975e-05, 7.984700000000094e-05, 7.974999999999996e-05, 8.029200000000264e-05, 8.038900000000015e-05, 8.043099999999886e-05, 7.990299999999922e-05, 8.04719999999981e-05, 8.034700000000145e-05, 8.004199999999892e-05, 7.96389999999994e-05, 8.037499999999712e-05, 7.98190000000018e-05, 8.005499999999902e-05, 8.036100000000101e-05, 8.012500000000033e-05, 7.969400000000168e-05, 8.04030000000032e-05, 7.962499999999983e-05, 7.956999999999756e-05, 7.966700000000201e-05, 7.968099999999811e-05, 7.952800000000232e-05, 8.031999999999831e-05, 7.979100000000267e-05, 8.04719999999981e-05, 8.031899999999884e-05, 8.045799999999853e-05, 7.980500000000224e-05, 7.984700000000094e-05, 7.993099999999836e-05, 7.984700000000094e-05, 8.006999999999806e-05, 7.981999999999781e-05, 8.016600000000304e-05, 7.993099999999836e-05, 7.959699999999723e-05, 7.97909999999992e-05, 7.998600000000064e-05, 8.031899999999884e-05, 7.976399999999953e-05, 7.991700000000226e-05, 8.02779999999996e-05, 7.981899999999834e-05, 7.952799999999885e-05, 8.034699999999798e-05, 8.005600000000196e-05, 8.030600000000221e-05]</msg>
<status status="PASS" starttime="20201112 12:27:22.735" endtime="20201112 12:27:22.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.730" endtime="20201112 12:27:22.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.740" endtime="20201112 12:27:22.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:22.743" endtime="20201112 12:27:22.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.742" endtime="20201112 12:27:22.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.738" endtime="20201112 12:27:22.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.369" endtime="20201112 12:27:22.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.369" endtime="20201112 12:27:22.764"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.773" endtime="20201112 12:27:22.792"></status>
</kw>
<msg timestamp="20201112 12:27:22.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.771" endtime="20201112 12:27:22.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:22.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:22.793" endtime="20201112 12:27:22.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.796" endtime="20201112 12:27:22.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.769" endtime="20201112 12:27:22.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.767" endtime="20201112 12:27:22.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:22.805" endtime="20201112 12:27:23.092"></status>
</kw>
<msg timestamp="20201112 12:27:23.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:22.803" endtime="20201112 12:27:23.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.096" endtime="20201112 12:27:23.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.104" endtime="20201112 12:27:23.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.801" endtime="20201112 12:27:23.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.799" endtime="20201112 12:27:23.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.111" level="INFO">${RESULT} = [{'time': 0.019966736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.11109999999983e-05, 'source_diff': 8.11109999999983e-05}, {'time': 0.02005675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:23.108" endtime="20201112 12:27:23.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.112" endtime="20201112 12:27:23.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.129" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.128" endtime="20201112 12:27:23.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.131" level="INFO">VALUE: [8.11109999999983e-05, 8.087500000000108e-05, 8.148599999999867e-05, 8.123599999999842e-05, 8.124999999999799e-05, 8.062500000000083e-05, 8.137499999999812e-05, 8.090200000000075e-05, 8.131999999999931e-05, 8.077699999999716e-05, 8.108300000000263e-05, 8.13329999999994e-05, 8.14719999999991e-05, 8.087500000000108e-05, 8.12780000000006e-05, 8.088900000000065e-05, 8.10979999999982e-05, 8.079199999999967e-05, 8.149999999999824e-05, 8.07780000000001e-05, 8.13329999999994e-05, 8.113899999999744e-05, 8.100000000000121e-05, 8.052799999999985e-05, 8.090300000000022e-05, 8.059699999999823e-05, 8.073600000000139e-05, 8.084700000000195e-05, 8.062500000000083e-05, 8.090300000000022e-05, 8.143099999999986e-05, 8.054099999999995e-05, 8.142999999999692e-05, 8.102700000000088e-05, 8.080499999999977e-05, 8.14719999999991e-05, 8.106899999999959e-05, 8.136100000000202e-05, 8.075000000000096e-05, 8.123599999999842e-05, 8.147200000000257e-05, 8.130599999999974e-05, 8.075000000000096e-05, 8.091600000000032e-05, 8.123599999999842e-05, 8.129099999999723e-05, 8.073600000000139e-05, 8.126399999999756e-05, 8.081899999999934e-05, 8.112500000000133e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.130" endtime="20201112 12:27:23.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.125" endtime="20201112 12:27:23.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.135" endtime="20201112 12:27:23.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.138" endtime="20201112 12:27:23.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.137" endtime="20201112 12:27:23.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.133" endtime="20201112 12:27:23.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.765" endtime="20201112 12:27:23.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:22.764" endtime="20201112 12:27:23.159"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.168" endtime="20201112 12:27:23.186"></status>
</kw>
<msg timestamp="20201112 12:27:23.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.166" endtime="20201112 12:27:23.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.188" endtime="20201112 12:27:23.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.190" endtime="20201112 12:27:23.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.164" endtime="20201112 12:27:23.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.162" endtime="20201112 12:27:23.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.199" endtime="20201112 12:27:23.486"></status>
</kw>
<msg timestamp="20201112 12:27:23.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.198" endtime="20201112 12:27:23.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.491" endtime="20201112 12:27:23.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.499" endtime="20201112 12:27:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.195" endtime="20201112 12:27:23.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.193" endtime="20201112 12:27:23.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.506" level="INFO">${RESULT} = [{'time': 0.019764278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.213899999999844e-05, 'source_diff': 8.213899999999844e-05}, {'time': 0.019857292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:23.502" endtime="20201112 12:27:23.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.519" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.507" endtime="20201112 12:27:23.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.523" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.522" endtime="20201112 12:27:23.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.526" level="INFO">VALUE: [8.213899999999844e-05, 8.224999999999899e-05, 8.184699999999948e-05, 8.19170000000008e-05, 8.186099999999905e-05, 8.158299999999966e-05, 8.193100000000036e-05, 8.22780000000016e-05, 8.209699999999973e-05, 8.184699999999948e-05, 8.180600000000024e-05, 8.227799999999813e-05, 8.215199999999853e-05, 8.207000000000006e-05, 8.163899999999794e-05, 8.238899999999869e-05, 8.187499999999862e-05, 8.245799999999706e-05, 8.225000000000246e-05, 8.238899999999869e-05, 8.152800000000085e-05, 8.244400000000096e-05, 8.244500000000043e-05, 8.159699999999923e-05, 8.249999999999924e-05, 8.174999999999849e-05, 8.154200000000042e-05, 8.187499999999862e-05, 8.249999999999924e-05, 8.159699999999923e-05, 8.218100000000061e-05, 8.154200000000042e-05, 8.201399999999831e-05, 8.251400000000228e-05, 8.201399999999831e-05, 8.220899999999975e-05, 8.179200000000067e-05, 8.24170000000013e-05, 8.155599999999999e-05, 8.192999999999742e-05, 8.156900000000009e-05, 8.208300000000016e-05, 8.18329999999999e-05, 8.251399999999881e-05, 8.248599999999967e-05, 8.172199999999935e-05, 8.22919999999977e-05, 8.205600000000049e-05, 8.207000000000006e-05, 8.219500000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.524" endtime="20201112 12:27:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.520" endtime="20201112 12:27:23.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.530" endtime="20201112 12:27:23.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.533" endtime="20201112 12:27:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.532" endtime="20201112 12:27:23.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.528" endtime="20201112 12:27:23.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.160" endtime="20201112 12:27:23.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.160" endtime="20201112 12:27:23.554"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.563" endtime="20201112 12:27:23.581"></status>
</kw>
<msg timestamp="20201112 12:27:23.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.561" endtime="20201112 12:27:23.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.583" endtime="20201112 12:27:23.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.585" endtime="20201112 12:27:23.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.559" endtime="20201112 12:27:23.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.556" endtime="20201112 12:27:23.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.594" endtime="20201112 12:27:23.881"></status>
</kw>
<msg timestamp="20201112 12:27:23.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.593" endtime="20201112 12:27:23.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.885" endtime="20201112 12:27:23.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.893" endtime="20201112 12:27:23.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.590" endtime="20201112 12:27:23.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.589" endtime="20201112 12:27:23.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:23.900" level="INFO">${RESULT} = [{'time': 0.019936222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.33049999999988e-05, 'source_diff': 8.33049999999988e-05}, {'time': 0.020031181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:23.897" endtime="20201112 12:27:23.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:23.913" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:23.901" endtime="20201112 12:27:23.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.918" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:27:23.917" endtime="20201112 12:27:23.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.920" level="INFO">VALUE: [8.33049999999988e-05, 8.27369999999994e-05, 8.332000000000131e-05, 8.28049999999983e-05, 8.276299999999959e-05, 8.334700000000098e-05, 8.304200000000192e-05, 8.337500000000012e-05, 8.274999999999949e-05, 8.302799999999888e-05, 8.34309999999984e-05, 8.31390000000029e-05, 8.270900000000025e-05, 8.276399999999906e-05, 8.316699999999858e-05, 8.272200000000035e-05, 8.324999999999999e-05, 8.266600000000207e-05, 8.33330000000014e-05, 8.281900000000134e-05, 8.284700000000048e-05, 8.352799999999938e-05, 8.320800000000128e-05, 8.334700000000098e-05, 8.269500000000068e-05, 8.265300000000197e-05, 8.258300000000066e-05, 8.341599999999935e-05, 8.265199999999903e-05, 8.267999999999817e-05, 8.33049999999988e-05, 8.254199999999795e-05, 8.309700000000073e-05, 8.32919999999987e-05, 8.291599999999885e-05, 8.336100000000055e-05, 8.276400000000253e-05, 8.252799999999838e-05, 8.316600000000257e-05, 8.337500000000012e-05, 8.273599999999992e-05, 8.291699999999833e-05, 8.2846999999997e-05, 8.255600000000099e-05, 8.3459000000001e-05, 8.326399999999956e-05, 8.280599999999777e-05, 8.302799999999888e-05, 8.336200000000002e-05, 8.332000000000131e-05]</msg>
<status status="PASS" starttime="20201112 12:27:23.919" endtime="20201112 12:27:23.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.914" endtime="20201112 12:27:23.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.928" endtime="20201112 12:27:23.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:23.931" endtime="20201112 12:27:23.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.930" endtime="20201112 12:27:23.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.926" endtime="20201112 12:27:23.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.555" endtime="20201112 12:27:23.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.554" endtime="20201112 12:27:23.952"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.961" endtime="20201112 12:27:23.980"></status>
</kw>
<msg timestamp="20201112 12:27:23.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.959" endtime="20201112 12:27:23.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:23.982" endtime="20201112 12:27:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.984" endtime="20201112 12:27:23.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.957" endtime="20201112 12:27:23.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.955" endtime="20201112 12:27:23.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:23.993" endtime="20201112 12:27:24.282"></status>
</kw>
<msg timestamp="20201112 12:27:24.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:23.992" endtime="20201112 12:27:24.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.286" endtime="20201112 12:27:24.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.294" endtime="20201112 12:27:24.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.989" endtime="20201112 12:27:24.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.988" endtime="20201112 12:27:24.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.301" level="INFO">${RESULT} = [{'time': 0.019788528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.450000000000124e-05, 'source_diff': 8.450000000000124e-05}, {'time': 0.019881556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.298" endtime="20201112 12:27:24.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.314" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.302" endtime="20201112 12:27:24.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.319" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.318" endtime="20201112 12:27:24.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.321" level="INFO">VALUE: [8.450000000000124e-05, 8.369500000000168e-05, 8.43330000000024e-05, 8.352699999999991e-05, 8.381900000000234e-05, 8.402700000000041e-05, 8.372200000000135e-05, 8.366699999999908e-05, 8.39859999999977e-05, 8.438900000000069e-05, 8.408299999999869e-05, 8.401400000000031e-05, 8.36529999999995e-05, 8.408399999999816e-05, 8.44309999999994e-05, 8.426400000000056e-05, 8.390299999999976e-05, 8.391599999999985e-05, 8.409700000000173e-05, 8.384700000000148e-05, 8.448600000000167e-05, 8.388900000000019e-05, 8.437500000000112e-05, 8.44859999999982e-05, 8.442999999999992e-05, 8.36529999999995e-05, 8.368000000000264e-05, 8.419400000000271e-05, 8.356900000000209e-05, 8.395799999999856e-05, 8.451400000000081e-05, 8.391699999999933e-05, 8.36110000000008e-05, 8.413900000000044e-05, 8.411099999999783e-05, 8.441699999999983e-05, 8.440300000000026e-05, 8.373600000000092e-05, 8.359700000000123e-05, 8.444400000000296e-05, 8.43469999999985e-05, 8.431899999999937e-05, 8.426400000000056e-05, 8.384700000000148e-05, 8.372200000000135e-05, 8.426400000000056e-05, 8.451400000000081e-05, 8.384700000000148e-05, 8.432000000000231e-05, 8.372199999999788e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.320" endtime="20201112 12:27:24.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.315" endtime="20201112 12:27:24.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.325" endtime="20201112 12:27:24.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.328" endtime="20201112 12:27:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.327" endtime="20201112 12:27:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.323" endtime="20201112 12:27:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.953" endtime="20201112 12:27:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:23.953" endtime="20201112 12:27:24.349"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.358" endtime="20201112 12:27:24.378"></status>
</kw>
<msg timestamp="20201112 12:27:24.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.356" endtime="20201112 12:27:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.379" endtime="20201112 12:27:24.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.381" endtime="20201112 12:27:24.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.354" endtime="20201112 12:27:24.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.352" endtime="20201112 12:27:24.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.390" endtime="20201112 12:27:24.677"></status>
</kw>
<msg timestamp="20201112 12:27:24.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.389" endtime="20201112 12:27:24.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:24.682" endtime="20201112 12:27:24.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.690" endtime="20201112 12:27:24.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.386" endtime="20201112 12:27:24.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.385" endtime="20201112 12:27:24.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:24.697" level="INFO">${RESULT} = [{'time': 0.019770694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541599999999788e-05, 'source_diff': 8.541599999999788e-05}, {'time': 0.019867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:24.693" endtime="20201112 12:27:24.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:24.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:24.698" endtime="20201112 12:27:24.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.715" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:27:24.714" endtime="20201112 12:27:24.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.717" level="INFO">VALUE: [8.541599999999788e-05, 8.455500000000005e-05, 8.456899999999962e-05, 8.531900000000037e-05, 8.479100000000073e-05, 8.462500000000137e-05, 8.491700000000033e-05, 8.531999999999984e-05, 8.457000000000256e-05, 8.508400000000263e-05, 8.524999999999852e-05, 8.529099999999776e-05, 8.551300000000234e-05, 8.458299999999919e-05, 8.46530000000005e-05, 8.543000000000092e-05, 8.458299999999919e-05, 8.47920000000002e-05, 8.541700000000083e-05, 8.552800000000138e-05, 8.538899999999822e-05, 8.513899999999797e-05, 8.486199999999805e-05, 8.51110000000023e-05, 8.537499999999865e-05, 8.48330000000029e-05, 8.49720000000026e-05, 8.49859999999987e-05, 8.52920000000007e-05, 8.54310000000004e-05, 8.511099999999883e-05, 8.555500000000105e-05, 8.536099999999908e-05, 8.486100000000205e-05, 8.513899999999797e-05, 8.512500000000187e-05, 8.456899999999962e-05, 8.540299999999779e-05, 8.452800000000038e-05, 8.534799999999898e-05, 8.504200000000045e-05, 8.548700000000214e-05, 8.463900000000094e-05, 8.481999999999934e-05, 8.488900000000119e-05, 8.525000000000199e-05, 8.523599999999895e-05, 8.515199999999806e-05, 8.465299999999704e-05, 8.54859999999992e-05]</msg>
<status status="PASS" starttime="20201112 12:27:24.716" endtime="20201112 12:27:24.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.711" endtime="20201112 12:27:24.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.721" endtime="20201112 12:27:24.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:24.724" endtime="20201112 12:27:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.723" endtime="20201112 12:27:24.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.719" endtime="20201112 12:27:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.350" endtime="20201112 12:27:24.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.350" endtime="20201112 12:27:24.745"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.754" endtime="20201112 12:27:24.773"></status>
</kw>
<msg timestamp="20201112 12:27:24.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.753" endtime="20201112 12:27:24.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:24.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:24.774" endtime="20201112 12:27:24.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.777" endtime="20201112 12:27:24.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.750" endtime="20201112 12:27:24.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.748" endtime="20201112 12:27:24.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:24.786" endtime="20201112 12:27:25.074"></status>
</kw>
<msg timestamp="20201112 12:27:25.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02038025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:24.784" endtime="20201112 12:27:25.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02038025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:25.079" endtime="20201112 12:27:25.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.087" endtime="20201112 12:27:25.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.782" endtime="20201112 12:27:25.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.780" endtime="20201112 12:27:25.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.094" level="INFO">${RESULT} = [{'time': 0.020466264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.601400000000231e-05, 'source_diff': 8.601400000000231e-05}, {'time': 0.020563264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.090" endtime="20201112 12:27:25.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.095" endtime="20201112 12:27:25.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.111" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.110" endtime="20201112 12:27:25.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.114" level="INFO">VALUE: [8.601400000000231e-05, 8.624999999999952e-05, 8.555600000000052e-05, 8.652799999999891e-05, 8.558400000000313e-05, 8.638899999999922e-05, 8.555500000000105e-05, 8.592999999999795e-05, 8.592999999999795e-05, 8.595800000000056e-05, 8.620800000000081e-05, 8.565299999999804e-05, 8.587499999999915e-05, 8.64310000000014e-05, 8.587499999999915e-05, 8.568099999999718e-05, 8.5847e-05, 8.644400000000149e-05, 8.629099999999876e-05, 8.618000000000167e-05, 8.611099999999983e-05, 8.62920000000017e-05, 8.624999999999952e-05, 8.619500000000072e-05, 8.63470000000005e-05, 8.577799999999816e-05, 8.587499999999915e-05, 8.559799999999923e-05, 8.64860000000002e-05, 8.604099999999851e-05, 8.63470000000005e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.604200000000145e-05, 8.618100000000115e-05, 8.626399999999909e-05, 8.633400000000041e-05, 8.582000000000034e-05, 8.62920000000017e-05, 8.63050000000018e-05, 8.611099999999983e-05, 8.587500000000262e-05, 8.561099999999933e-05, 8.555499999999758e-05, 8.609700000000026e-05, 8.557000000000009e-05, 8.619500000000072e-05, 8.580600000000077e-05, 8.577800000000163e-05, 8.615299999999854e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.112" endtime="20201112 12:27:25.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.108" endtime="20201112 12:27:25.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.117" endtime="20201112 12:27:25.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.121" endtime="20201112 12:27:25.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.119" endtime="20201112 12:27:25.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.116" endtime="20201112 12:27:25.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.746" endtime="20201112 12:27:25.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:24.746" endtime="20201112 12:27:25.142"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.150" endtime="20201112 12:27:25.169"></status>
</kw>
<msg timestamp="20201112 12:27:25.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.149" endtime="20201112 12:27:25.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.171" endtime="20201112 12:27:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.173" endtime="20201112 12:27:25.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.146" endtime="20201112 12:27:25.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.144" endtime="20201112 12:27:25.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.182" endtime="20201112 12:27:25.469"></status>
</kw>
<msg timestamp="20201112 12:27:25.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.181" endtime="20201112 12:27:25.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.473" endtime="20201112 12:27:25.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.482" endtime="20201112 12:27:25.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.178" endtime="20201112 12:27:25.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.176" endtime="20201112 12:27:25.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.489" level="INFO">${RESULT} = [{'time': 0.019889472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.745799999999859e-05, 'source_diff': 8.745799999999859e-05}, {'time': 0.019989472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.485" endtime="20201112 12:27:25.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.490" endtime="20201112 12:27:25.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.506" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.505" endtime="20201112 12:27:25.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.509" level="INFO">VALUE: [8.745799999999859e-05, 8.711100000000083e-05, 8.740300000000326e-05, 8.656899999999815e-05, 8.697200000000113e-05, 8.679199999999873e-05, 8.73470000000015e-05, 8.659800000000023e-05, 8.69860000000007e-05, 8.677699999999969e-05, 8.694400000000199e-05, 8.752799999999991e-05, 8.708299999999822e-05, 8.744400000000249e-05, 8.726400000000009e-05, 8.726400000000009e-05, 8.695799999999809e-05, 8.6944999999998e-05, 8.750000000000077e-05, 8.654199999999848e-05, 8.713800000000049e-05, 8.758300000000219e-05, 8.659700000000076e-05, 8.718000000000267e-05, 8.658300000000119e-05, 8.691700000000233e-05, 8.672300000000036e-05, 8.690299999999929e-05, 8.665299999999904e-05, 8.723600000000095e-05, 8.691699999999886e-05, 8.681999999999787e-05, 8.679099999999926e-05, 8.744399999999902e-05, 8.706999999999812e-05, 8.670799999999784e-05, 8.743099999999893e-05, 8.737500000000065e-05, 8.74310000000024e-05, 8.750000000000077e-05, 8.66249999999999e-05, 8.705600000000202e-05, 8.677799999999916e-05, 8.654100000000248e-05, 8.686100000000058e-05, 8.672200000000088e-05, 8.750000000000077e-05, 8.695799999999809e-05, 8.723600000000095e-05, 8.745800000000206e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.507" endtime="20201112 12:27:25.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.503" endtime="20201112 12:27:25.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.512" endtime="20201112 12:27:25.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.516" endtime="20201112 12:27:25.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.514" endtime="20201112 12:27:25.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.511" endtime="20201112 12:27:25.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.143" endtime="20201112 12:27:25.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.142" endtime="20201112 12:27:25.537"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.545" endtime="20201112 12:27:25.564"></status>
</kw>
<msg timestamp="20201112 12:27:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.544" endtime="20201112 12:27:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.566" endtime="20201112 12:27:25.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.568" endtime="20201112 12:27:25.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.541" endtime="20201112 12:27:25.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.539" endtime="20201112 12:27:25.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.577" endtime="20201112 12:27:25.865"></status>
</kw>
<msg timestamp="20201112 12:27:25.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.576" endtime="20201112 12:27:25.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020192958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.869" endtime="20201112 12:27:25.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.878" endtime="20201112 12:27:25.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.573" endtime="20201112 12:27:25.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.572" endtime="20201112 12:27:25.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:25.884" level="INFO">${RESULT} = [{'time': 0.020192958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.816600000000063e-05, 'source_diff': 8.816600000000063e-05}, {'time': 0.020291931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:25.881" endtime="20201112 12:27:25.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:25.898" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:25.885" endtime="20201112 12:27:25.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.902" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:27:25.901" endtime="20201112 12:27:25.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.904" level="INFO">VALUE: [8.816600000000063e-05, 8.774999999999755e-05, 8.797199999999866e-05, 8.761099999999786e-05, 8.791600000000038e-05, 8.844400000000002e-05, 8.791699999999986e-05, 8.759699999999829e-05, 8.765300000000004e-05, 8.848599999999873e-05, 8.841600000000088e-05, 8.798700000000118e-05, 8.757000000000209e-05, 8.774999999999755e-05, 8.775000000000102e-05, 8.791600000000038e-05, 8.855600000000005e-05, 8.784700000000201e-05, 8.788900000000072e-05, 8.798599999999823e-05, 8.826399999999762e-05, 8.787500000000115e-05, 8.818099999999968e-05, 8.834800000000198e-05, 8.770899999999832e-05, 8.847199999999916e-05, 8.850000000000177e-05, 8.800000000000127e-05, 8.754100000000001e-05, 8.802800000000041e-05, 8.783400000000191e-05, 8.766700000000308e-05, 8.84860000000022e-05, 8.827700000000119e-05, 8.751400000000034e-05, 8.83059999999998e-05, 8.756899999999915e-05, 8.83189999999999e-05, 8.850000000000177e-05, 8.81670000000001e-05, 8.843000000000045e-05, 8.820799999999934e-05, 8.833299999999947e-05, 8.840299999999732e-05, 8.759699999999829e-05, 8.797299999999814e-05, 8.780499999999983e-05, 8.780499999999983e-05, 8.750000000000077e-05, 8.802800000000041e-05]</msg>
<status status="PASS" starttime="20201112 12:27:25.903" endtime="20201112 12:27:25.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.898" endtime="20201112 12:27:25.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.908" endtime="20201112 12:27:25.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:25.911" endtime="20201112 12:27:25.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.910" endtime="20201112 12:27:25.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.906" endtime="20201112 12:27:25.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.538" endtime="20201112 12:27:25.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.537" endtime="20201112 12:27:25.932"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.941" endtime="20201112 12:27:25.959"></status>
</kw>
<msg timestamp="20201112 12:27:25.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.940" endtime="20201112 12:27:25.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:25.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:25.961" endtime="20201112 12:27:25.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.963" endtime="20201112 12:27:25.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.937" endtime="20201112 12:27:25.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.935" endtime="20201112 12:27:25.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:25.972" endtime="20201112 12:27:26.259"></status>
</kw>
<msg timestamp="20201112 12:27:26.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:25.971" endtime="20201112 12:27:26.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.263" endtime="20201112 12:27:26.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.271" endtime="20201112 12:27:26.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.968" endtime="20201112 12:27:26.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.966" endtime="20201112 12:27:26.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.278" level="INFO">${RESULT} = [{'time': 0.020335778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916699999999764e-05, 'source_diff': 8.916699999999764e-05}, {'time': 0.020438806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.274" endtime="20201112 12:27:26.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.279" endtime="20201112 12:27:26.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.296" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.295" endtime="20201112 12:27:26.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.298" level="INFO">VALUE: [8.916699999999764e-05, 8.901400000000184e-05, 8.861199999999833e-05, 8.912499999999893e-05, 8.861100000000233e-05, 8.862499999999843e-05, 8.940299999999832e-05, 8.861100000000233e-05, 8.932000000000037e-05, 8.898599999999923e-05, 8.933399999999994e-05, 8.902799999999794e-05, 8.86800000000007e-05, 8.86670000000006e-05, 8.922199999999991e-05, 8.856900000000015e-05, 8.91250000000024e-05, 8.873599999999898e-05, 8.948599999999973e-05, 8.858299999999972e-05, 8.937499999999918e-05, 8.909699999999979e-05, 8.897199999999966e-05, 8.924999999999905e-05, 8.91120000000023e-05, 8.91519999999986e-05, 8.883299999999997e-05, 8.922199999999991e-05, 8.89999999999988e-05, 8.915299999999807e-05, 8.940299999999832e-05, 8.901399999999837e-05, 8.922199999999991e-05, 8.883400000000291e-05, 8.923700000000243e-05, 8.865299999999757e-05, 8.879099999999779e-05, 8.872199999999941e-05, 8.942999999999798e-05, 8.893000000000095e-05, 8.927799999999819e-05, 8.884699999999954e-05, 8.929200000000123e-05, 8.929200000000123e-05, 8.856999999999962e-05, 8.857000000000309e-05, 8.930599999999733e-05, 8.923600000000295e-05, 8.944400000000102e-05, 8.920800000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.297" endtime="20201112 12:27:26.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.292" endtime="20201112 12:27:26.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.302" endtime="20201112 12:27:26.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.305" endtime="20201112 12:27:26.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.304" endtime="20201112 12:27:26.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.300" endtime="20201112 12:27:26.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.933" endtime="20201112 12:27:26.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:25.933" endtime="20201112 12:27:26.326"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.335" endtime="20201112 12:27:26.355"></status>
</kw>
<msg timestamp="20201112 12:27:26.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.333" endtime="20201112 12:27:26.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.357" endtime="20201112 12:27:26.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.359" endtime="20201112 12:27:26.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.331" endtime="20201112 12:27:26.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.328" endtime="20201112 12:27:26.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.368" endtime="20201112 12:27:26.655"></status>
</kw>
<msg timestamp="20201112 12:27:26.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020777569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.367" endtime="20201112 12:27:26.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020777569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.660" endtime="20201112 12:27:26.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.668" endtime="20201112 12:27:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.364" endtime="20201112 12:27:26.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.362" endtime="20201112 12:27:26.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:26.675" level="INFO">${RESULT} = [{'time': 0.020867361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.979200000000173e-05, 'source_diff': 8.979200000000173e-05}, {'time': 0.020971361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:26.671" endtime="20201112 12:27:26.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:26.688" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:26.676" endtime="20201112 12:27:26.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.692" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:27:26.691" endtime="20201112 12:27:26.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.695" level="INFO">VALUE: [8.979200000000173e-05, 9.03190000000019e-05, 8.976400000000259e-05, 9.023600000000048e-05, 8.962499999999943e-05, 8.969500000000075e-05, 8.966699999999814e-05, 8.974999999999955e-05, 9.001399999999937e-05, 8.986100000000011e-05, 9.034700000000104e-05, 8.955599999999758e-05, 8.973699999999946e-05, 9.006899999999818e-05, 8.955599999999758e-05, 8.993099999999796e-05, 9.037500000000018e-05, 8.965299999999857e-05, 8.98060000000013e-05, 9.015299999999907e-05, 8.974999999999955e-05, 8.988899999999925e-05, 9.033300000000147e-05, 9.027799999999919e-05, 8.952799999999844e-05, 9.030599999999833e-05, 8.997200000000066e-05, 8.976399999999912e-05, 8.967999999999823e-05, 9.005600000000155e-05, 9.01389999999995e-05, 9.036100000000061e-05, 8.994400000000152e-05, 9.044400000000202e-05, 9.029199999999876e-05, 9.03190000000019e-05, 9.033300000000147e-05, 8.997199999999719e-05, 9.015299999999907e-05, 9.022300000000039e-05, 9.005500000000208e-05, 9.044399999999855e-05, 9.008299999999775e-05, 8.973599999999998e-05, 8.984700000000054e-05, 9.027799999999919e-05, 8.962499999999943e-05, 8.963900000000247e-05, 8.969500000000075e-05, 8.957000000000062e-05]</msg>
<status status="PASS" starttime="20201112 12:27:26.694" endtime="20201112 12:27:26.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.689" endtime="20201112 12:27:26.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.699" endtime="20201112 12:27:26.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:26.702" endtime="20201112 12:27:26.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.700" endtime="20201112 12:27:26.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.697" endtime="20201112 12:27:26.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.327" endtime="20201112 12:27:26.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.326" endtime="20201112 12:27:26.723"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.731" endtime="20201112 12:27:26.751"></status>
</kw>
<msg timestamp="20201112 12:27:26.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.730" endtime="20201112 12:27:26.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:26.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:26.752" endtime="20201112 12:27:26.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.755" endtime="20201112 12:27:26.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.727" endtime="20201112 12:27:26.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.725" endtime="20201112 12:27:26.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:26.764" endtime="20201112 12:27:27.052"></status>
</kw>
<msg timestamp="20201112 12:27:27.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020812458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:26.762" endtime="20201112 12:27:27.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020812458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.057" endtime="20201112 12:27:27.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.065" endtime="20201112 12:27:27.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.760" endtime="20201112 12:27:27.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.758" endtime="20201112 12:27:27.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.072" level="INFO">${RESULT} = [{'time': 0.020903667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.120900000000182e-05, 'source_diff': 9.120900000000182e-05}, {'time': 0.021006681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.068" endtime="20201112 12:27:27.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.085" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.073" endtime="20201112 12:27:27.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.089" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.088" endtime="20201112 12:27:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.092" level="INFO">VALUE: [9.120900000000182e-05, 9.129199999999976e-05, 9.133399999999847e-05, 9.056900000000215e-05, 9.112500000000093e-05, 9.105499999999961e-05, 9.06670000000026e-05, 9.08190000000024e-05, 9.08190000000024e-05, 9.111200000000083e-05, 9.108399999999822e-05, 9.058399999999772e-05, 9.120900000000182e-05, 9.098600000000123e-05, 9.075000000000055e-05, 9.122200000000191e-05, 9.086100000000111e-05, 9.115300000000007e-05, 9.073600000000098e-05, 9.093100000000243e-05, 9.145799999999912e-05, 9.136099999999814e-05, 9.127800000000019e-05, 9.055600000000205e-05, 9.1332999999999e-05, 9.091599999999991e-05, 9.086099999999764e-05, 9.123600000000148e-05, 9.101400000000037e-05, 9.105599999999908e-05, 9.091699999999939e-05, 9.138900000000075e-05, 9.107000000000212e-05, 9.133399999999847e-05, 9.079099999999979e-05, 9.08190000000024e-05, 9.115300000000007e-05, 9.08329999999985e-05, 9.051399999999987e-05, 9.133300000000247e-05, 9.105599999999908e-05, 9.125000000000105e-05, 9.055600000000205e-05, 9.11390000000005e-05, 9.055499999999911e-05, 9.058400000000119e-05, 9.056900000000215e-05, 9.072200000000141e-05, 9.137500000000118e-05, 9.075000000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.090" endtime="20201112 12:27:27.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.086" endtime="20201112 12:27:27.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.095" endtime="20201112 12:27:27.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.099" endtime="20201112 12:27:27.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.097" endtime="20201112 12:27:27.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.094" endtime="20201112 12:27:27.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.724" endtime="20201112 12:27:27.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:26.723" endtime="20201112 12:27:27.120"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.128" endtime="20201112 12:27:27.147"></status>
</kw>
<msg timestamp="20201112 12:27:27.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.127" endtime="20201112 12:27:27.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.149" endtime="20201112 12:27:27.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.151" endtime="20201112 12:27:27.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.124" endtime="20201112 12:27:27.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.122" endtime="20201112 12:27:27.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.160" endtime="20201112 12:27:27.448"></status>
</kw>
<msg timestamp="20201112 12:27:27.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:27.159" endtime="20201112 12:27:27.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:27.452" endtime="20201112 12:27:27.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.460" endtime="20201112 12:27:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.156" endtime="20201112 12:27:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.154" endtime="20201112 12:27:27.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.467" level="INFO">${RESULT} = [{'time': 0.019719681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.218100000000021e-05, 'source_diff': 9.218100000000021e-05}, {'time': 0.019820681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.463" endtime="20201112 12:27:27.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.468" endtime="20201112 12:27:27.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.485" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.484" endtime="20201112 12:27:27.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.487" level="INFO">VALUE: [9.218100000000021e-05, 9.216700000000064e-05, 9.243100000000046e-05, 9.226399999999815e-05, 9.181899999999993e-05, 9.208299999999975e-05, 9.24719999999997e-05, 9.172200000000241e-05, 9.170799999999937e-05, 9.211099999999889e-05, 9.229200000000076e-05, 9.198599999999876e-05, 9.20000000000018e-05, 9.227800000000119e-05, 9.16520000000011e-05, 9.237500000000218e-05, 9.19719999999992e-05, 9.201400000000137e-05, 9.191700000000039e-05, 9.156999999999915e-05, 9.209800000000226e-05, 9.162499999999796e-05, 9.233399999999947e-05, 9.219499999999978e-05, 9.184799999999854e-05, 9.163899999999753e-05, 9.16520000000011e-05, 9.156899999999968e-05, 9.244400000000055e-05, 9.197200000000266e-05, 9.226399999999815e-05, 9.154200000000001e-05, 9.216699999999717e-05, 9.233399999999947e-05, 9.244500000000003e-05, 9.186099999999864e-05, 9.193000000000048e-05, 9.222199999999944e-05, 9.159699999999882e-05, 9.205600000000008e-05, 9.24719999999997e-05, 9.170799999999937e-05, 9.249999999999883e-05, 9.177800000000069e-05, 9.25139999999984e-05, 9.223700000000196e-05, 9.226300000000215e-05, 9.184699999999907e-05, 9.186099999999864e-05, 9.202800000000094e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.486" endtime="20201112 12:27:27.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.481" endtime="20201112 12:27:27.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.491" endtime="20201112 12:27:27.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.494" endtime="20201112 12:27:27.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.493" endtime="20201112 12:27:27.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.489" endtime="20201112 12:27:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.121" endtime="20201112 12:27:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.120" endtime="20201112 12:27:27.515"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.524" endtime="20201112 12:27:27.544"></status>
</kw>
<msg timestamp="20201112 12:27:27.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.522" endtime="20201112 12:27:27.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.545" endtime="20201112 12:27:27.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.548" endtime="20201112 12:27:27.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.520" endtime="20201112 12:27:27.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.517" endtime="20201112 12:27:27.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.557" endtime="20201112 12:27:27.843"></status>
</kw>
<msg timestamp="20201112 12:27:27.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.555" endtime="20201112 12:27:27.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.848" endtime="20201112 12:27:27.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.856" endtime="20201112 12:27:27.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.552" endtime="20201112 12:27:27.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.551" endtime="20201112 12:27:27.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:27.863" level="INFO">${RESULT} = [{'time': 0.019751264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277800000000169e-05, 'source_diff': 9.277800000000169e-05}, {'time': 0.019852278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:27.859" endtime="20201112 12:27:27.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:27.876" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:27.864" endtime="20201112 12:27:27.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.880" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:27:27.879" endtime="20201112 12:27:27.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.883" level="INFO">VALUE: [9.277800000000169e-05, 9.324999999999958e-05, 9.24719999999997e-05, 9.29590000000001e-05, 9.348600000000026e-05, 9.279099999999832e-05, 9.293000000000148e-05, 9.340299999999885e-05, 9.324999999999958e-05, 9.330600000000133e-05, 9.305600000000108e-05, 9.299999999999933e-05, 9.262500000000243e-05, 9.26529999999981e-05, 9.349999999999983e-05, 9.263899999999853e-05, 9.254099999999807e-05, 9.276399999999865e-05, 9.254099999999807e-05, 9.308400000000022e-05, 9.263899999999853e-05, 9.312499999999946e-05, 9.254200000000101e-05, 9.266699999999767e-05, 9.336100000000014e-05, 9.333400000000047e-05, 9.255500000000111e-05, 9.255499999999764e-05, 9.288900000000225e-05, 9.272199999999994e-05, 9.254200000000101e-05, 9.273599999999951e-05, 9.351400000000287e-05, 9.299999999999933e-05, 9.28200000000004e-05, 9.326299999999968e-05, 9.322299999999992e-05, 9.261099999999939e-05, 9.305600000000108e-05, 9.295800000000062e-05, 9.344400000000155e-05, 9.324999999999958e-05, 9.334700000000057e-05, 9.327800000000219e-05, 9.3333000000001e-05, 9.272199999999994e-05, 9.344499999999756e-05, 9.262500000000243e-05, 9.274999999999908e-05, 9.277699999999875e-05]</msg>
<status status="PASS" starttime="20201112 12:27:27.881" endtime="20201112 12:27:27.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.877" endtime="20201112 12:27:27.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.886" endtime="20201112 12:27:27.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:27.890" endtime="20201112 12:27:27.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.888" endtime="20201112 12:27:27.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.885" endtime="20201112 12:27:27.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.516" endtime="20201112 12:27:27.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.515" endtime="20201112 12:27:27.911"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.919" endtime="20201112 12:27:27.938"></status>
</kw>
<msg timestamp="20201112 12:27:27.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.918" endtime="20201112 12:27:27.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:27.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:27.940" endtime="20201112 12:27:27.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.942" endtime="20201112 12:27:27.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.915" endtime="20201112 12:27:27.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.913" endtime="20201112 12:27:27.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:27.951" endtime="20201112 12:27:28.238"></status>
</kw>
<msg timestamp="20201112 12:27:28.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:27.950" endtime="20201112 12:27:28.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019844208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.242" endtime="20201112 12:27:28.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.250" endtime="20201112 12:27:28.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.947" endtime="20201112 12:27:28.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.946" endtime="20201112 12:27:28.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.257" level="INFO">${RESULT} = [{'time': 0.019938653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.444500000000203e-05, 'source_diff': 9.444500000000203e-05}, {'time': 0.020042667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.254" endtime="20201112 12:27:28.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.258" endtime="20201112 12:27:28.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.275" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.274" endtime="20201112 12:27:28.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.277" level="INFO">VALUE: [9.444500000000203e-05, 9.413900000000003e-05, 9.454100000000007e-05, 9.451300000000093e-05, 9.391599999999944e-05, 9.427700000000025e-05, 9.356900000000168e-05, 9.436100000000114e-05, 9.444399999999908e-05, 9.391699999999892e-05, 9.440299999999985e-05, 9.369500000000128e-05, 9.433400000000147e-05, 9.40139999999999e-05, 9.413800000000055e-05, 9.4027e-05, 9.438900000000028e-05, 9.386100000000064e-05, 9.366700000000214e-05, 9.372200000000094e-05, 9.400000000000033e-05, 9.39590000000011e-05, 9.377799999999922e-05, 9.356999999999768e-05, 9.35139999999994e-05, 9.448600000000126e-05, 9.361100000000039e-05, 9.388899999999978e-05, 9.404199999999904e-05, 9.37079999999979e-05, 9.380600000000183e-05, 9.369499999999781e-05, 9.404199999999904e-05, 9.440299999999985e-05, 9.41529999999996e-05, 9.447199999999822e-05, 9.444399999999908e-05, 9.404099999999957e-05, 9.394399999999858e-05, 9.368100000000171e-05, 9.440299999999985e-05, 9.416699999999917e-05, 9.433400000000147e-05, 9.420900000000135e-05, 9.426400000000015e-05, 9.358300000000125e-05, 9.35269999999995e-05, 9.434700000000157e-05, 9.426400000000015e-05, 9.376399999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.276" endtime="20201112 12:27:28.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.271" endtime="20201112 12:27:28.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.281" endtime="20201112 12:27:28.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.284" endtime="20201112 12:27:28.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.283" endtime="20201112 12:27:28.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.279" endtime="20201112 12:27:28.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.912" endtime="20201112 12:27:28.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:27.911" endtime="20201112 12:27:28.305"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.314" endtime="20201112 12:27:28.333"></status>
</kw>
<msg timestamp="20201112 12:27:28.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.312" endtime="20201112 12:27:28.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.335" endtime="20201112 12:27:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.338" endtime="20201112 12:27:28.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.310" endtime="20201112 12:27:28.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.308" endtime="20201112 12:27:28.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.347" endtime="20201112 12:27:28.634"></status>
</kw>
<msg timestamp="20201112 12:27:28.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.345" endtime="20201112 12:27:28.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.638" endtime="20201112 12:27:28.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.647" endtime="20201112 12:27:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.342" endtime="20201112 12:27:28.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.341" endtime="20201112 12:27:28.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:28.654" level="INFO">${RESULT} = [{'time': 0.020141306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.540300000000085e-05, 'source_diff': 9.540300000000085e-05}, {'time': 0.020247306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:28.650" endtime="20201112 12:27:28.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:28.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:28.655" endtime="20201112 12:27:28.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.671" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:27:28.670" endtime="20201112 12:27:28.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.674" level="INFO">VALUE: [9.540300000000085e-05, 9.516700000000017e-05, 9.479100000000032e-05, 9.459700000000182e-05, 9.476400000000065e-05, 9.520800000000287e-05, 9.513900000000103e-05, 9.477800000000022e-05, 9.452799999999997e-05, 9.543099999999999e-05, 9.525000000000158e-05, 9.513900000000103e-05, 9.522199999999897e-05, 9.538899999999781e-05, 9.502800000000047e-05, 9.518099999999974e-05, 9.531900000000343e-05, 9.477800000000022e-05, 9.530599999999986e-05, 9.470900000000185e-05, 9.527800000000072e-05, 9.53469999999991e-05, 9.536100000000214e-05, 9.544399999999661e-05, 9.49720000000022e-05, 9.473600000000151e-05, 9.537500000000171e-05, 9.469499999999881e-05, 9.472200000000194e-05, 9.516700000000017e-05, 9.527800000000072e-05, 9.481999999999893e-05, 9.549999999999836e-05, 9.531899999999996e-05, 9.549999999999836e-05, 9.462500000000096e-05, 9.494399999999958e-05, 9.516700000000017e-05, 9.537499999999824e-05, 9.53469999999991e-05, 9.527800000000072e-05, 9.484799999999807e-05, 9.537500000000171e-05, 9.472199999999847e-05, 9.544400000000008e-05, 9.552800000000097e-05, 9.513900000000103e-05, 9.493000000000001e-05, 9.480599999999936e-05, 9.454199999999954e-05]</msg>
<status status="PASS" starttime="20201112 12:27:28.672" endtime="20201112 12:27:28.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.668" endtime="20201112 12:27:28.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.677" endtime="20201112 12:27:28.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:28.681" endtime="20201112 12:27:28.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.679" endtime="20201112 12:27:28.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.676" endtime="20201112 12:27:28.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.306" endtime="20201112 12:27:28.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.306" endtime="20201112 12:27:28.702"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.710" endtime="20201112 12:27:28.729"></status>
</kw>
<msg timestamp="20201112 12:27:28.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.709" endtime="20201112 12:27:28.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:28.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:28.730" endtime="20201112 12:27:28.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.732" endtime="20201112 12:27:28.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.706" endtime="20201112 12:27:28.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.704" endtime="20201112 12:27:28.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:28.742" endtime="20201112 12:27:29.030"></status>
</kw>
<msg timestamp="20201112 12:27:29.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:28.740" endtime="20201112 12:27:29.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.034" endtime="20201112 12:27:29.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.043" endtime="20201112 12:27:29.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.738" endtime="20201112 12:27:29.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.736" endtime="20201112 12:27:29.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.050" level="INFO">${RESULT} = [{'time': 0.020353861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.649999999999936e-05, 'source_diff': 9.649999999999936e-05}, {'time': 0.020459847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.046" endtime="20201112 12:27:29.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.063" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.051" endtime="20201112 12:27:29.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.067" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.066" endtime="20201112 12:27:29.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.070" level="INFO">VALUE: [9.649999999999936e-05, 9.569400000000033e-05, 9.556900000000021e-05, 9.609699999999985e-05, 9.568100000000024e-05, 9.587499999999874e-05, 9.64859999999998e-05, 9.608399999999975e-05, 9.631900000000096e-05, 9.556900000000021e-05, 9.651399999999893e-05, 9.648600000000326e-05, 9.558299999999978e-05, 9.583300000000003e-05, 9.618100000000074e-05, 9.574999999999861e-05, 9.613900000000203e-05, 9.605599999999714e-05, 9.580500000000089e-05, 9.636100000000314e-05, 9.608299999999681e-05, 9.60140000000019e-05, 9.61530000000016e-05, 9.583300000000003e-05, 9.607000000000018e-05, 9.581999999999993e-05, 9.602800000000147e-05, 9.602800000000147e-05, 9.645800000000065e-05, 9.631899999999749e-05, 9.618000000000126e-05, 9.63470000000001e-05, 9.583300000000003e-05, 9.633300000000053e-05, 9.633300000000053e-05, 9.618100000000074e-05, 9.65279999999985e-05, 9.6334e-05, 9.584799999999907e-05, 9.654200000000154e-05, 9.583300000000003e-05, 9.631900000000096e-05, 9.574999999999861e-05, 9.599999999999886e-05, 9.644500000000056e-05, 9.559699999999935e-05, 9.568099999999677e-05, 9.65270000000025e-05, 9.584799999999907e-05, 9.563899999999806e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.068" endtime="20201112 12:27:29.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.064" endtime="20201112 12:27:29.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.073" endtime="20201112 12:27:29.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.077" endtime="20201112 12:27:29.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.075" endtime="20201112 12:27:29.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.072" endtime="20201112 12:27:29.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.702" endtime="20201112 12:27:29.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:28.702" endtime="20201112 12:27:29.098"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.107" endtime="20201112 12:27:29.125"></status>
</kw>
<msg timestamp="20201112 12:27:29.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.105" endtime="20201112 12:27:29.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.127" endtime="20201112 12:27:29.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.129" endtime="20201112 12:27:29.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.103" endtime="20201112 12:27:29.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.101" endtime="20201112 12:27:29.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.138" endtime="20201112 12:27:29.425"></status>
</kw>
<msg timestamp="20201112 12:27:29.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.137" endtime="20201112 12:27:29.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.429" endtime="20201112 12:27:29.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.438" endtime="20201112 12:27:29.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.134" endtime="20201112 12:27:29.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.132" endtime="20201112 12:27:29.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.444" level="INFO">${RESULT} = [{'time': 0.019749681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695900000000063e-05, 'source_diff': 9.695900000000063e-05}, {'time': 0.019858694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.441" endtime="20201112 12:27:29.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.458" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.445" endtime="20201112 12:27:29.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.462" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.461" endtime="20201112 12:27:29.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.464" level="INFO">VALUE: [9.695900000000063e-05, 9.738800000000034e-05, 9.719399999999837e-05, 9.691600000000244e-05, 9.741700000000242e-05, 9.738899999999981e-05, 9.712499999999999e-05, 9.676399999999918e-05, 9.652800000000197e-05, 9.661099999999992e-05, 9.699999999999986e-05, 9.732000000000143e-05, 9.711099999999695e-05, 9.687499999999974e-05, 9.715199999999966e-05, 9.738899999999981e-05, 9.719400000000183e-05, 9.654200000000154e-05, 9.668100000000124e-05, 9.715299999999913e-05, 9.694499999999759e-05, 9.725000000000011e-05, 9.708300000000128e-05, 9.662499999999949e-05, 9.69860000000003e-05, 9.744400000000208e-05, 9.702800000000247e-05, 9.744399999999862e-05, 9.658300000000078e-05, 9.740299999999938e-05, 9.722300000000045e-05, 9.73479999999971e-05, 9.751300000000046e-05, 9.676299999999971e-05, 9.718000000000226e-05, 9.7027999999999e-05, 9.715299999999913e-05, 9.694499999999759e-05, 9.744500000000156e-05, 9.677699999999928e-05, 9.662499999999949e-05, 9.666700000000167e-05, 9.672299999999995e-05, 9.725000000000011e-05, 9.676399999999918e-05, 9.734699999999763e-05, 9.751399999999993e-05, 9.737500000000024e-05, 9.688899999999931e-05, 9.707000000000118e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.463" endtime="20201112 12:27:29.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.459" endtime="20201112 12:27:29.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.468" endtime="20201112 12:27:29.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.471" endtime="20201112 12:27:29.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.470" endtime="20201112 12:27:29.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.466" endtime="20201112 12:27:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.099" endtime="20201112 12:27:29.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.098" endtime="20201112 12:27:29.492"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.501" endtime="20201112 12:27:29.522"></status>
</kw>
<msg timestamp="20201112 12:27:29.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.500" endtime="20201112 12:27:29.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.523" endtime="20201112 12:27:29.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.526" endtime="20201112 12:27:29.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.497" endtime="20201112 12:27:29.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.495" endtime="20201112 12:27:29.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.535" endtime="20201112 12:27:29.821"></status>
</kw>
<msg timestamp="20201112 12:27:29.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.533" endtime="20201112 12:27:29.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.826" endtime="20201112 12:27:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.834" endtime="20201112 12:27:29.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.531" endtime="20201112 12:27:29.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.529" endtime="20201112 12:27:29.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:29.841" level="INFO">${RESULT} = [{'time': 0.020616931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.754200000000254e-05, 'source_diff': 9.754200000000254e-05}, {'time': 0.020728944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:29.837" endtime="20201112 12:27:29.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:29.854" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:29.842" endtime="20201112 12:27:29.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.859" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:27:29.858" endtime="20201112 12:27:29.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.861" level="INFO">VALUE: [9.754200000000254e-05, 9.837499999999777e-05, 9.84860000000018e-05, 9.820799999999894e-05, 9.779099999999985e-05, 9.804199999999957e-05, 9.8028e-05, 9.797200000000172e-05, 9.819499999999884e-05, 9.847299999999823e-05, 9.779199999999932e-05, 9.762500000000049e-05, 9.805499999999967e-05, 9.824999999999764e-05, 9.795899999999816e-05, 9.819499999999884e-05, 9.826400000000068e-05, 9.813900000000056e-05, 9.836100000000167e-05, 9.773599999999757e-05, 9.801400000000043e-05, 9.851399999999746e-05, 9.783300000000203e-05, 9.761100000000092e-05, 9.85280000000005e-05, 9.770900000000138e-05, 9.795800000000215e-05, 9.782000000000193e-05, 9.788900000000031e-05, 9.765299999999963e-05, 9.77920000000028e-05, 9.831999999999896e-05, 9.79860000000013e-05, 9.84020000000009e-05, 9.783300000000203e-05, 9.759700000000135e-05, 9.783299999999856e-05, 9.847199999999875e-05, 9.762500000000049e-05, 9.844399999999962e-05, 9.843099999999952e-05, 9.804199999999957e-05, 9.808299999999881e-05, 9.813900000000056e-05, 9.830499999999992e-05, 9.776400000000018e-05, 9.795799999999869e-05, 9.768099999999877e-05, 9.823700000000102e-05, 9.78059999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:27:29.860" endtime="20201112 12:27:29.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.855" endtime="20201112 12:27:29.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.865" endtime="20201112 12:27:29.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:29.868" endtime="20201112 12:27:29.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.867" endtime="20201112 12:27:29.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.863" endtime="20201112 12:27:29.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.493" endtime="20201112 12:27:29.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.493" endtime="20201112 12:27:29.889"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.898" endtime="20201112 12:27:29.919"></status>
</kw>
<msg timestamp="20201112 12:27:29.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.896" endtime="20201112 12:27:29.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:29.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:29.920" endtime="20201112 12:27:29.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.923" endtime="20201112 12:27:29.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.894" endtime="20201112 12:27:29.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.892" endtime="20201112 12:27:29.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:29.932" endtime="20201112 12:27:30.218"></status>
</kw>
<msg timestamp="20201112 12:27:30.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:29.930" endtime="20201112 12:27:30.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.222" endtime="20201112 12:27:30.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.230" endtime="20201112 12:27:30.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.928" endtime="20201112 12:27:30.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.926" endtime="20201112 12:27:30.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.237" level="INFO">${RESULT} = [{'time': 0.020829847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.91939999999969e-05, 'source_diff': 9.91939999999969e-05}, {'time': 0.020938847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:30.234" endtime="20201112 12:27:30.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.238" endtime="20201112 12:27:30.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.255" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.254" endtime="20201112 12:27:30.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.257" level="INFO">VALUE: [9.91939999999969e-05, 9.875000000000161e-05, 9.938899999999834e-05, 9.941700000000095e-05, 9.901400000000143e-05, 9.879200000000032e-05, 9.875000000000161e-05, 9.905600000000014e-05, 9.851400000000093e-05, 9.886100000000217e-05, 9.861100000000192e-05, 9.926399999999821e-05, 9.873599999999857e-05, 9.895799999999969e-05, 9.93609999999992e-05, 9.904200000000057e-05, 9.88059999999999e-05, 9.850000000000136e-05, 9.855599999999964e-05, 9.887500000000174e-05, 9.929100000000135e-05, 9.873599999999857e-05, 9.92219999999995e-05, 9.947299999999923e-05, 9.881899999999999e-05, 9.93060000000004e-05, 9.886199999999817e-05, 9.93479999999991e-05, 9.915200000000166e-05, 9.873699999999805e-05, 9.930500000000092e-05, 9.88609999999987e-05, 9.869399999999987e-05, 9.948599999999932e-05, 9.909699999999938e-05, 9.877800000000075e-05, 9.934800000000257e-05, 9.875000000000161e-05, 9.88609999999987e-05, 9.886200000000164e-05, 9.927700000000178e-05, 9.891600000000098e-05, 9.945800000000019e-05, 9.942999999999758e-05, 9.854200000000007e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.927799999999778e-05, 9.88059999999999e-05, 9.943000000000105e-05]</msg>
<status status="PASS" starttime="20201112 12:27:30.256" endtime="20201112 12:27:30.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.251" endtime="20201112 12:27:30.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.261" endtime="20201112 12:27:30.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.264" endtime="20201112 12:27:30.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.263" endtime="20201112 12:27:30.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.259" endtime="20201112 12:27:30.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.890" endtime="20201112 12:27:30.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:29.889" endtime="20201112 12:27:30.285"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.294" endtime="20201112 12:27:30.313"></status>
</kw>
<msg timestamp="20201112 12:27:30.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.292" endtime="20201112 12:27:30.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.315" endtime="20201112 12:27:30.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.317" endtime="20201112 12:27:30.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.290" endtime="20201112 12:27:30.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.288" endtime="20201112 12:27:30.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.326" endtime="20201112 12:27:30.614"></status>
</kw>
<msg timestamp="20201112 12:27:30.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.325" endtime="20201112 12:27:30.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.619" endtime="20201112 12:27:30.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.627" endtime="20201112 12:27:30.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.322" endtime="20201112 12:27:30.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.320" endtime="20201112 12:27:30.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:30.633" level="INFO">${RESULT} = [{'time': 0.019880764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.96809999999973e-05, 'source_diff': 9.96809999999973e-05}, {'time': 0.019993764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:30.630" endtime="20201112 12:27:30.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:30.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:30.634" endtime="20201112 12:27:30.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.651" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:27:30.650" endtime="20201112 12:27:30.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.653" level="INFO">VALUE: [9.96809999999973e-05, 0.00010040300000000238, 0.00010002699999999906, 9.977800000000175e-05, 0.00010018100000000127, 9.973599999999957e-05, 0.0001004020000000029, 9.992999999999808e-05, 0.0001004999999999999, 9.98609999999997e-05, 9.976399999999871e-05, 9.962499999999902e-05, 0.00010037499999999977, 9.981900000000099e-05, 0.00010008300000000081, 9.980499999999795e-05, 9.983300000000056e-05, 0.00010048599999999686, 9.981899999999752e-05, 0.0001001809999999978, 0.00010019400000000137, 0.00010032000000000096, 0.00010034700000000063, 9.99999999999994e-05, 9.979200000000132e-05, 9.976399999999871e-05, 9.962499999999902e-05, 0.00010008400000000028, 9.998599999999983e-05, 9.980500000000142e-05, 0.0001004999999999999, 0.00010034700000000063, 0.00010015300000000213, 9.979200000000132e-05, 0.00010009700000000038, 9.958300000000031e-05, 0.00010052799999999903, 0.00010005500000000167, 9.962499999999902e-05, 9.958300000000031e-05, 0.00010015299999999866, 9.982000000000046e-05, 0.00010032000000000096, 9.969500000000034e-05, 9.957000000000021e-05, 9.959699999999988e-05, 9.995799999999722e-05, 9.98609999999997e-05, 9.956900000000074e-05, 0.00010018100000000127]</msg>
<status status="PASS" starttime="20201112 12:27:30.652" endtime="20201112 12:27:30.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.647" endtime="20201112 12:27:30.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.657" endtime="20201112 12:27:30.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:30.661" endtime="20201112 12:27:30.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.659" endtime="20201112 12:27:30.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.655" endtime="20201112 12:27:30.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.286" endtime="20201112 12:27:30.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.285" endtime="20201112 12:27:30.681"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.690" endtime="20201112 12:27:30.710"></status>
</kw>
<msg timestamp="20201112 12:27:30.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.689" endtime="20201112 12:27:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:30.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:30.711" endtime="20201112 12:27:30.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.714" endtime="20201112 12:27:30.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.686" endtime="20201112 12:27:30.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.684" endtime="20201112 12:27:30.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:30.723" endtime="20201112 12:27:31.009"></status>
</kw>
<msg timestamp="20201112 12:27:31.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:30.721" endtime="20201112 12:27:31.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.013" endtime="20201112 12:27:31.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.021" endtime="20201112 12:27:31.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.718" endtime="20201112 12:27:31.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.717" endtime="20201112 12:27:31.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.028" level="INFO">${RESULT} = [{'time': 0.019936444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010129099999999988, 'source_diff': 0.00010129099999999988}, {'time': 0.020044444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:31.025" endtime="20201112 12:27:31.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.041" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.029" endtime="20201112 12:27:31.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.045" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.044" endtime="20201112 12:27:31.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.048" level="INFO">VALUE: [0.00010129099999999988, 0.00010081900000000199, 0.00010113800000000062, 0.00010108300000000181, 0.00010104099999999963, 0.00010122299999999751, 0.00010140299999999991, 0.00010080499999999895, 0.00010132000000000196, 0.00010075000000000014, 0.00010088899999999984, 0.00010140199999999697, 0.00010059700000000088, 0.00010094399999999865, 0.00010090299999999941, 0.00010141699999999948, 0.00010084700000000113, 0.00010055599999999817, 0.00010143099999999905, 0.00010127800000000325, 0.00010087500000000027, 0.0001005549999999987, 0.00010095800000000169, 0.00010115299999999966, 0.00010101399999999996, 0.00010058300000000131, 0.0001008610000000007, 0.00010105600000000214, 0.00010088899999999984, 0.00010079199999999885, 0.00010073700000000005, 0.00010102700000000006, 0.00010125000000000065, 0.00010062500000000002, 0.00010145799999999872, 0.00010125000000000065, 0.00010088899999999984, 0.0001013199999999985, 0.00010077799999999928, 0.00010147299999999776, 0.00010112500000000052, 0.00010109699999999791, 0.0001011939999999989, 0.00010130599999999892, 0.00010116699999999923, 0.00010119500000000184, 0.00010073600000000058, 0.00010076300000000024, 0.00010127799999999978, 0.00010094499999999812]</msg>
<status status="PASS" starttime="20201112 12:27:31.047" endtime="20201112 12:27:31.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.042" endtime="20201112 12:27:31.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.051" endtime="20201112 12:27:31.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.055" endtime="20201112 12:27:31.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.053" endtime="20201112 12:27:31.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.050" endtime="20201112 12:27:31.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.682" endtime="20201112 12:27:31.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:30.682" endtime="20201112 12:27:31.076"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.084" endtime="20201112 12:27:31.103"></status>
</kw>
<msg timestamp="20201112 12:27:31.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.083" endtime="20201112 12:27:31.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.105" endtime="20201112 12:27:31.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.107" endtime="20201112 12:27:31.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.080" endtime="20201112 12:27:31.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.078" endtime="20201112 12:27:31.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.116" endtime="20201112 12:27:31.403"></status>
</kw>
<msg timestamp="20201112 12:27:31.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.115" endtime="20201112 12:27:31.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.407" endtime="20201112 12:27:31.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.415" endtime="20201112 12:27:31.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.112" endtime="20201112 12:27:31.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.111" endtime="20201112 12:27:31.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.421" level="INFO">${RESULT} = [{'time': 0.019744903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010227800000000078, 'source_diff': 0.00010227800000000078}, {'time': 0.019859903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:31.418" endtime="20201112 12:27:31.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.422" endtime="20201112 12:27:31.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.439" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.438" endtime="20201112 12:27:31.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.441" level="INFO">VALUE: [0.00010227800000000078, 0.00010208400000000228, 0.00010163899999999712, 0.00010244400000000015, 0.00010179100000000038, 0.0001015549999999997, 0.00010152700000000056, 0.00010206899999999977, 0.00010234700000000263, 0.00010249999999999843, 0.00010216700000000023, 0.00010187500000000127, 0.00010216700000000023, 0.0001020420000000001, 0.00010154100000000013, 0.00010173600000000158, 0.00010204100000000063, 0.00010206899999999977, 0.00010174999999999768, 0.00010243100000000005, 0.00010247199999999929, 0.00010206999999999924, 0.00010183400000000203, 0.0001017359999999981, 0.00010225000000000165, 0.00010184700000000213, 0.00010201400000000097, 0.00010238900000000134, 0.00010216700000000023, 0.00010180599999999942, 0.000101819999999999, 0.00010209700000000238, 0.00010162499999999755, 0.00010177700000000081, 0.00010174999999999768, 0.00010194399999999965, 0.00010231900000000002, 0.00010216700000000023, 0.00010184699999999866, 0.0001023610000000022, 0.00010216700000000023, 0.0001016809999999993, 0.00010188800000000137, 0.00010211099999999848, 0.00010167999999999983, 0.00010179099999999691, 0.00010176400000000071, 0.00010227800000000078, 0.00010201400000000097, 0.00010156999999999874]</msg>
<status status="PASS" starttime="20201112 12:27:31.440" endtime="20201112 12:27:31.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.435" endtime="20201112 12:27:31.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.445" endtime="20201112 12:27:31.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.448" endtime="20201112 12:27:31.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.447" endtime="20201112 12:27:31.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.443" endtime="20201112 12:27:31.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.077" endtime="20201112 12:27:31.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.076" endtime="20201112 12:27:31.469"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.478" endtime="20201112 12:27:31.497"></status>
</kw>
<msg timestamp="20201112 12:27:31.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.476" endtime="20201112 12:27:31.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.498" endtime="20201112 12:27:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.501" endtime="20201112 12:27:31.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.474" endtime="20201112 12:27:31.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.472" endtime="20201112 12:27:31.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.510" endtime="20201112 12:27:31.797"></status>
</kw>
<msg timestamp="20201112 12:27:31.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.508" endtime="20201112 12:27:31.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.801" endtime="20201112 12:27:31.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.810" endtime="20201112 12:27:31.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.506" endtime="20201112 12:27:31.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.504" endtime="20201112 12:27:31.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:31.816" level="INFO">${RESULT} = [{'time': 0.019693514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010308300000000034, 'source_diff': 0.00010308300000000034}, {'time': 0.019810542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:31.813" endtime="20201112 12:27:31.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:31.829" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:31.817" endtime="20201112 12:27:31.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.834" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:27:31.833" endtime="20201112 12:27:31.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.836" level="INFO">VALUE: [0.00010308300000000034, 0.00010326399999999875, 0.00010275000000000215, 0.00010351300000000299, 0.00010344500000000062, 0.00010268000000000083, 0.00010301400000000197, 0.00010294400000000065, 0.00010266699999999726, 0.00010281900000000052, 0.00010261100000000245, 0.00010344500000000062, 0.00010255600000000017, 0.0001030559999999972, 0.00010345799999999725, 0.00010308300000000034, 0.00010283300000000009, 0.00010309699999999991, 0.00010275000000000215, 0.00010311099999999948, 0.00010291700000000098, 0.00010319500000000037, 0.00010341599999999854, 0.0001033200000000005, 0.00010316599999999829, 0.00010277799999999782, 0.00010318099999999733, 0.00010302800000000154, 0.00010340299999999844, 0.00010349999999999943, 0.00010352799999999857, 0.00010283399999999956, 0.00010351400000000247, 0.0001026940000000004, 0.00010284699999999966, 0.00010348599999999986, 0.00010349999999999943, 0.00010302799999999807, 0.00010291699999999751, 0.00010280600000000042, 0.00010326400000000222, 0.0001025420000000006, 0.00010258299999999984, 0.00010311099999999948, 0.0001029160000000015, 0.0001025420000000006, 0.00010265300000000116, 0.0001030420000000011, 0.0001026810000000003, 0.00010309699999999991]</msg>
<status status="PASS" starttime="20201112 12:27:31.835" endtime="20201112 12:27:31.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.830" endtime="20201112 12:27:31.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.840" endtime="20201112 12:27:31.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:31.844" endtime="20201112 12:27:31.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.843" endtime="20201112 12:27:31.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.839" endtime="20201112 12:27:31.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.470" endtime="20201112 12:27:31.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.470" endtime="20201112 12:27:31.865"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.874" endtime="20201112 12:27:31.894"></status>
</kw>
<msg timestamp="20201112 12:27:31.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.872" endtime="20201112 12:27:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:31.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:31.895" endtime="20201112 12:27:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.898" endtime="20201112 12:27:31.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.870" endtime="20201112 12:27:31.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.868" endtime="20201112 12:27:31.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:31.907" endtime="20201112 12:27:32.195"></status>
</kw>
<msg timestamp="20201112 12:27:32.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:31.905" endtime="20201112 12:27:32.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.200" endtime="20201112 12:27:32.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.208" endtime="20201112 12:27:32.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.903" endtime="20201112 12:27:32.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.901" endtime="20201112 12:27:32.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.214" level="INFO">${RESULT} = [{'time': 0.020664861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010445799999999825, 'source_diff': 0.00010445799999999825}, {'time': 0.020781875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:32.211" endtime="20201112 12:27:32.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.215" endtime="20201112 12:27:32.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.231" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.230" endtime="20201112 12:27:32.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.234" level="INFO">VALUE: [0.00010445799999999825, 0.00010397199999999732, 0.00010369399999999793, 0.0001038749999999998, 0.00010440299999999944, 0.00010363900000000259, 0.00010401300000000002, 0.00010412500000000005, 0.00010376399999999925, 0.00010367999999999836, 0.00010401400000000297, 0.00010408399999999735, 0.00010444500000000162, 0.00010413899999999962, 0.00010444500000000162, 0.0001038879999999999, 0.00010390199999999947, 0.00010365199999999922, 0.00010380500000000195, 0.00010374999999999968, 0.00010415299999999919, 0.00010386100000000023, 0.00010413899999999962, 0.00010352799999999857, 0.00010426399999999975, 0.00010408300000000134, 0.00010433300000000159, 0.0001040139999999995, 0.0001036810000000013, 0.00010444400000000215, 0.00010393099999999808, 0.00010441699999999901, 0.00010409699999999744, 0.00010381999999999753, 0.00010357000000000074, 0.00010445800000000172, 0.00010411100000000048, 0.00010374999999999968, 0.00010381900000000152, 0.00010409700000000091, 0.00010409700000000091, 0.00010384700000000066, 0.00010366700000000173, 0.0001036949999999974, 0.00010361199999999945, 0.00010430499999999898, 0.00010369399999999793, 0.00010434700000000116, 0.00010361099999999998, 0.00010430599999999846]</msg>
<status status="PASS" starttime="20201112 12:27:32.232" endtime="20201112 12:27:32.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.228" endtime="20201112 12:27:32.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.237" endtime="20201112 12:27:32.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.241" endtime="20201112 12:27:32.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.239" endtime="20201112 12:27:32.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.236" endtime="20201112 12:27:32.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.866" endtime="20201112 12:27:32.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:31.866" endtime="20201112 12:27:32.262"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.270" endtime="20201112 12:27:32.291"></status>
</kw>
<msg timestamp="20201112 12:27:32.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.269" endtime="20201112 12:27:32.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.292" endtime="20201112 12:27:32.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.295" endtime="20201112 12:27:32.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.266" endtime="20201112 12:27:32.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.264" endtime="20201112 12:27:32.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.304" endtime="20201112 12:27:32.591"></status>
</kw>
<msg timestamp="20201112 12:27:32.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.302" endtime="20201112 12:27:32.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:32.595" endtime="20201112 12:27:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.603" endtime="20201112 12:27:32.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.300" endtime="20201112 12:27:32.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.298" endtime="20201112 12:27:32.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:32.610" level="INFO">${RESULT} = [{'time': 0.020730903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010547199999999882, 'source_diff': 0.00010547199999999882}, {'time': 0.020850917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:32.606" endtime="20201112 12:27:32.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:32.623" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:32.611" endtime="20201112 12:27:32.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.627" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:27:32.626" endtime="20201112 12:27:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:32.629" level="INFO">VALUE: [0.00010547199999999882, 0.0001053750000000013, 0.00010493100000000255, 0.00010508400000000181, 0.00010463900000000012, 0.00010509700000000191, 0.00010475000000000068, 0.00010481899999999905, 0.00010459700000000141, 0.00010522199999999857, 0.0001050140000000005, 0.0001048750000000008, 0.00010480499999999948, 0.00010458299999999837, 0.00010467999999999936, 0.00010494400000000265, 0.00010504199999999964, 0.0001055279999999971, 0.00010530599999999946, 0.00010543099999999958, 0.00010483400000000156, 0.00010538900000000087, 0.0001053750000000013, 0.00010516600000000029, 0.0001050550000000032, 0.00010551399999999753, 0.00010447200000000129, 0.0001046810000000023, 0.00010490299999999994, 0.00010454199999999914, 0.0001053620000000012, 0.00010545799999999925, 0.00010513900000000062, 0.00010458299999999837, 0.00010513900000000062, 0.00010541700000000001, 0.00010476400000000025, 0.000105207999999999, 0.00010516699999999976, 0.00010495899999999822, 0.0001050140000000005, 0.00010502800000000007, 0.00010511100000000148, 0.00010476400000000025, 0.00010543000000000011, 0.00010481899999999905, 0.00010461100000000098, 0.00010511099999999801, 0.00010509699999999844, 0.00010547299999999829]</msg>
<status status="PASS" starttime="20201112 12:27:32.628" endtime="20201112 12:27:32.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.623" endtime="20201112 12:27:32.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.633" endtime="20201112 12:27:32.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.636" endtime="20201112 12:27:32.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.635" endtime="20201112 12:27:32.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.631" endtime="20201112 12:27:32.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.263" endtime="20201112 12:27:32.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.262" endtime="20201112 12:27:32.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:26:53.116" endtime="20201112 12:27:32.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.662" endtime="20201112 12:27:32.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.661" endtime="20201112 12:27:32.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.659" endtime="20201112 12:27:32.683"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:26:49.992" endtime="20201112 12:27:32.683" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:32.690" endtime="20201112 12:27:32.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.689" endtime="20201112 12:27:32.710"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:32.724" endtime="20201112 12:27:35.746"></status>
</kw>
<msg timestamp="20201112 12:27:35.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:32.723" endtime="20201112 12:27:35.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.749" endtime="20201112 12:27:35.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.758" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:27:35.754" endtime="20201112 12:27:35.759"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:32.719" endtime="20201112 12:27:35.760"></status>
</kw>
<status status="FAIL" starttime="20201112 12:27:32.717" endtime="20201112 12:27:35.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.715" endtime="20201112 12:27:35.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:27:35.770" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:27:35.768" endtime="20201112 12:27:35.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.764" endtime="20201112 12:27:35.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.715" endtime="20201112 12:27:35.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.714" endtime="20201112 12:27:35.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.773" endtime="20201112 12:27:35.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.713" endtime="20201112 12:27:35.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.711" endtime="20201112 12:27:35.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:32.687" endtime="20201112 12:27:35.779"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.800" endtime="20201112 12:27:35.815"></status>
</kw>
<msg timestamp="20201112 12:27:35.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.796" endtime="20201112 12:27:35.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:35.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:35.816" endtime="20201112 12:27:35.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.819" endtime="20201112 12:27:35.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.790" endtime="20201112 12:27:35.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.786" endtime="20201112 12:27:35.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:35.828" endtime="20201112 12:27:36.121"></status>
</kw>
<msg timestamp="20201112 12:27:36.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101737875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101743361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:35.826" endtime="20201112 12:27:36.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101737875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101743361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.125" endtime="20201112 12:27:36.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.134" endtime="20201112 12:27:36.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.824" endtime="20201112 12:27:36.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.822" endtime="20201112 12:27:36.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.141" level="INFO">${RESULT} = [{'time': 3.101743361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000054503e-06, 'source_diff': 5.486000000054503e-06}, {'time': 3.101756417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.138" endtime="20201112 12:27:36.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.142" endtime="20201112 12:27:36.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.159" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.158" endtime="20201112 12:27:36.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.162" level="INFO">VALUE: [5.486000000054503e-06, 6.305999999955958e-06, 6.277999999859674e-06, 5.889000000092182e-06, 5.4729999998670564e-06, 5.874999999821995e-06, 6.29200000012986e-06, 5.860999999995897e-06, 5.888999999648092e-06, 5.4729999998670564e-06, 5.486000000054503e-06, 5.903000000362368e-06, 5.485999999610414e-06, 5.471999999784316e-06, 5.875000000266084e-06, 5.833000000343702e-06, 6.278000000303763e-06, 5.4999999998806e-06, 5.9580000000281075e-06, 5.875000000266084e-06, 6.305999999955958e-06, 5.486000000054503e-06, 5.4729999998670564e-06, 5.417000000118577e-06, 5.874999999821995e-06, 6.277999999859674e-06, 5.875000000266084e-06, 5.4999999998806e-06, 5.486000000054503e-06, 5.889000000092182e-06, 6.29200000012986e-06, 5.4729999998670564e-06, 5.473000000311146e-06, 6.347000000239689e-06, 5.943999999757921e-06, 5.860999999995897e-06, 5.485999999610414e-06, 5.486000000054503e-06, 5.472000000228405e-06, 5.888999999648092e-06, 5.486000000054503e-06, 6.276999999776933e-06, 5.943999999757921e-06, 6.278000000303763e-06, 6.249999999763389e-06, 6.306000000400047e-06, 5.819000000073515e-06, 5.485999999610414e-06, 5.4999999998806e-06, 5.4579999999582185e-06]</msg>
<status status="PASS" starttime="20201112 12:27:36.160" endtime="20201112 12:27:36.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.156" endtime="20201112 12:27:36.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.165" endtime="20201112 12:27:36.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.168" endtime="20201112 12:27:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.167" endtime="20201112 12:27:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.163" endtime="20201112 12:27:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.783" endtime="20201112 12:27:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.782" endtime="20201112 12:27:36.189"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.198" endtime="20201112 12:27:36.211"></status>
</kw>
<msg timestamp="20201112 12:27:36.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.197" endtime="20201112 12:27:36.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.213" endtime="20201112 12:27:36.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.215" endtime="20201112 12:27:36.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.194" endtime="20201112 12:27:36.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.192" endtime="20201112 12:27:36.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.224" endtime="20201112 12:27:36.513"></status>
</kw>
<msg timestamp="20201112 12:27:36.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.223" endtime="20201112 12:27:36.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.518" endtime="20201112 12:27:36.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.526" endtime="20201112 12:27:36.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.220" endtime="20201112 12:27:36.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.219" endtime="20201112 12:27:36.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.532" level="INFO">${RESULT} = [{'time': 0.020302764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.020316042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.529" endtime="20201112 12:27:36.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.547" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.533" endtime="20201112 12:27:36.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.552" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.551" endtime="20201112 12:27:36.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.554" level="INFO">VALUE: [7.056000000001811e-06, 7.180999999998466e-06, 7.0969999999975775e-06, 6.292000000001491e-06, 6.679999999998493e-06, 6.6669999999983964e-06, 7.0829999999980076e-06, 6.249999999999312e-06, 7.110999999997147e-06, 6.277000000002447e-06, 6.709000000000576e-06, 7.486000000000992e-06, 6.7779999999989515e-06, 7.055000000002337e-06, 7.097000000001047e-06, 7.167000000002366e-06, 7.111000000000617e-06, 7.514000000000132e-06, 6.694000000001532e-06, 6.667000000001866e-06, 7.056000000001811e-06, 7.084000000000951e-06, 6.7079999999976325e-06, 7.125000000000187e-06, 7.069999999997911e-06, 6.292000000001491e-06, 6.679999999998493e-06, 7.068999999998438e-06, 6.679999999998493e-06, 7.111000000000617e-06, 6.695000000001006e-06, 6.680000000001962e-06, 6.708000000001102e-06, 7.055999999998341e-06, 7.180999999998466e-06, 6.693999999998063e-06, 7.0969999999975775e-06, 6.679999999998493e-06, 7.0980000000005206e-06, 6.638999999999257e-06, 6.722000000000672e-06, 6.695000000001006e-06, 7.084000000000951e-06, 6.695000000001006e-06, 6.693999999998063e-06, 6.6669999999983964e-06, 6.292000000001491e-06, 6.304999999998118e-06, 7.0829999999980076e-06, 6.306000000001061e-06]</msg>
<status status="PASS" starttime="20201112 12:27:36.553" endtime="20201112 12:27:36.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.548" endtime="20201112 12:27:36.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.558" endtime="20201112 12:27:36.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.561" endtime="20201112 12:27:36.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.560" endtime="20201112 12:27:36.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.556" endtime="20201112 12:27:36.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.190" endtime="20201112 12:27:36.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.190" endtime="20201112 12:27:36.582"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.591" endtime="20201112 12:27:36.605"></status>
</kw>
<msg timestamp="20201112 12:27:36.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.589" endtime="20201112 12:27:36.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.606" endtime="20201112 12:27:36.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.609" endtime="20201112 12:27:36.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.587" endtime="20201112 12:27:36.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.585" endtime="20201112 12:27:36.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.618" endtime="20201112 12:27:36.904"></status>
</kw>
<msg timestamp="20201112 12:27:36.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.616" endtime="20201112 12:27:36.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019969083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:36.908" endtime="20201112 12:27:36.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.917" endtime="20201112 12:27:36.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.613" endtime="20201112 12:27:36.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.612" endtime="20201112 12:27:36.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:36.923" level="INFO">${RESULT} = [{'time': 0.019969083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.290999999997078e-06, 'source_diff': 8.290999999997078e-06}, {'time': 0.019981819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:36.920" endtime="20201112 12:27:36.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:36.936" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:36.924" endtime="20201112 12:27:36.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.941" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:27:36.940" endtime="20201112 12:27:36.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:36.943" level="INFO">VALUE: [8.290999999997078e-06, 7.833000000002227e-06, 8.292000000000022e-06, 7.903000000000077e-06, 7.486000000000992e-06, 7.500000000000562e-06, 8.305000000000118e-06, 8.389000000001007e-06, 7.986000000001492e-06, 7.500000000000562e-06, 8.332999999999258e-06, 8.292000000000022e-06, 8.319999999999161e-06, 7.903000000000077e-06, 8.292000000000022e-06, 7.903000000000077e-06, 7.903000000000077e-06, 8.319999999999161e-06, 7.486000000000992e-06, 7.499999999997092e-06, 8.291000000000548e-06, 8.319999999999161e-06, 7.903000000000077e-06, 7.500000000000562e-06, 7.443999999998813e-06, 7.499999999997092e-06, 7.500000000000562e-06, 7.903000000000077e-06, 7.500000000000562e-06, 7.916999999999647e-06, 8.292000000000022e-06, 7.499999999997092e-06, 7.903000000000077e-06, 8.319999999999161e-06, 7.499999999997092e-06, 7.486000000000992e-06, 7.445000000001756e-06, 7.500000000000562e-06, 7.943999999999313e-06, 7.917000000003116e-06, 7.874999999997467e-06, 7.903000000000077e-06, 7.500000000000562e-06, 7.847000000001797e-06, 7.485999999997522e-06, 7.929999999999743e-06, 7.514000000000132e-06, 8.264000000000882e-06, 8.319999999999161e-06, 7.903000000000077e-06]</msg>
<status status="PASS" starttime="20201112 12:27:36.942" endtime="20201112 12:27:36.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.937" endtime="20201112 12:27:36.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.949" endtime="20201112 12:27:36.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:36.953" endtime="20201112 12:27:36.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.952" endtime="20201112 12:27:36.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.948" endtime="20201112 12:27:36.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.583" endtime="20201112 12:27:36.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.583" endtime="20201112 12:27:36.975"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:36.984" endtime="20201112 12:27:36.998"></status>
</kw>
<msg timestamp="20201112 12:27:36.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.982" endtime="20201112 12:27:36.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:36.999" endtime="20201112 12:27:37.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.002" endtime="20201112 12:27:37.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.980" endtime="20201112 12:27:37.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.977" endtime="20201112 12:27:37.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.011" endtime="20201112 12:27:37.318"></status>
</kw>
<msg timestamp="20201112 12:27:37.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.010" endtime="20201112 12:27:37.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.322" endtime="20201112 12:27:37.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.331" endtime="20201112 12:27:37.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.007" endtime="20201112 12:27:37.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.005" endtime="20201112 12:27:37.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.338" level="INFO">${RESULT} = [{'time': 0.020485972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.020498722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:37.334" endtime="20201112 12:27:37.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.352" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.339" endtime="20201112 12:27:37.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.357" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.355" endtime="20201112 12:27:37.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.360" level="INFO">VALUE: [9.528000000001702e-06, 9.110999999999148e-06, 9.110999999999148e-06, 8.318999999999688e-06, 8.694999999999536e-06, 9.124999999998717e-06, 8.707999999999633e-06, 8.625000000001687e-06, 9.083000000000008e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.709000000002576e-06, 9.139000000001757e-06, 8.750000000001812e-06, 8.305999999999591e-06, 9.097999999999051e-06, 8.305000000000118e-06, 8.221999999998703e-06, 9.110999999999148e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.722999999998676e-06, 9.124999999998717e-06, 8.749999999998342e-06, 9.110999999999148e-06, 9.125000000002187e-06, 8.347999999998301e-06, 8.721999999999203e-06, 9.125000000002187e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.305999999999591e-06, 9.111999999998621e-06, 9.042000000000772e-06, 9.125000000002187e-06, 9.167000000000897e-06, 9.125000000002187e-06, 8.290999999997078e-06, 9.125000000002187e-06, 9.139000000001757e-06, 8.694999999999536e-06, 8.707999999999633e-06, 9.083000000000008e-06, 9.194000000000563e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.318999999999688e-06]</msg>
<status status="PASS" starttime="20201112 12:27:37.358" endtime="20201112 12:27:37.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.352" endtime="20201112 12:27:37.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.364" endtime="20201112 12:27:37.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.367" endtime="20201112 12:27:37.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.366" endtime="20201112 12:27:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.362" endtime="20201112 12:27:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.976" endtime="20201112 12:27:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:36.975" endtime="20201112 12:27:37.388"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.398" endtime="20201112 12:27:37.413"></status>
</kw>
<msg timestamp="20201112 12:27:37.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.396" endtime="20201112 12:27:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.414" endtime="20201112 12:27:37.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.417" endtime="20201112 12:27:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.393" endtime="20201112 12:27:37.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.391" endtime="20201112 12:27:37.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.426" endtime="20201112 12:27:37.713"></status>
</kw>
<msg timestamp="20201112 12:27:37.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.425" endtime="20201112 12:27:37.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.717" endtime="20201112 12:27:37.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.726" endtime="20201112 12:27:37.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.422" endtime="20201112 12:27:37.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.420" endtime="20201112 12:27:37.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:37.733" level="INFO">${RESULT} = [{'time': 0.021443944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.929999999998274e-06, 'source_diff': 9.929999999998274e-06}, {'time': 0.021458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:27:37.729" endtime="20201112 12:27:37.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:37.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:37.734" endtime="20201112 12:27:37.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.751" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:27:37.750" endtime="20201112 12:27:37.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.754" level="INFO">VALUE: [9.929999999998274e-06, 1.0333000000001258e-05, 9.527999999998232e-06, 9.944000000001313e-06, 1.0320000000001162e-05, 9.513999999998662e-06, 1.0333000000001258e-05, 9.458000000000383e-06, 9.929999999998274e-06, 9.527000000002228e-06, 9.513999999998662e-06, 1.0319000000001688e-05, 9.930000000001743e-06, 1.0333000000001258e-05, 9.569000000000938e-06, 9.930999999997747e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.943999999997843e-06, 1.0318999999998218e-05, 9.541999999997802e-06, 9.526999999998759e-06, 9.499999999999093e-06, 1.0348000000000301e-05, 1.0332999999997788e-05, 9.444000000000813e-06, 9.929999999998274e-06, 9.513999999998662e-06, 1.0291999999998552e-05, 9.528000000001702e-06, 9.526999999998759e-06, 9.540999999998329e-06, 9.527000000002228e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.931000000001217e-06, 1.0347000000000828e-05, 1.0012999999999689e-05, 9.526999999998759e-06, 9.929999999998274e-06, 9.499999999999093e-06, 9.542000000001272e-06, 9.930999999997747e-06, 1.0013999999999162e-05, 9.957999999997413e-06, 9.514000000002132e-06, 1.0374999999999968e-05, 9.916000000002173e-06, 1.0346999999997358e-05, 9.513999999998662e-06]</msg>
<status status="PASS" starttime="20201112 12:27:37.752" endtime="20201112 12:27:37.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.747" endtime="20201112 12:27:37.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.758" endtime="20201112 12:27:37.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:37.762" endtime="20201112 12:27:37.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.760" endtime="20201112 12:27:37.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.757" endtime="20201112 12:27:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.389" endtime="20201112 12:27:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.389" endtime="20201112 12:27:37.783"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.792" endtime="20201112 12:27:37.806"></status>
</kw>
<msg timestamp="20201112 12:27:37.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.791" endtime="20201112 12:27:37.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:37.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:37.808" endtime="20201112 12:27:37.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.810" endtime="20201112 12:27:37.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.788" endtime="20201112 12:27:37.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.786" endtime="20201112 12:27:37.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:37.820" endtime="20201112 12:27:38.107"></status>
</kw>
<msg timestamp="20201112 12:27:38.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:37.818" endtime="20201112 12:27:38.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.112" endtime="20201112 12:27:38.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.120" endtime="20201112 12:27:38.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.816" endtime="20201112 12:27:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.814" endtime="20201112 12:27:38.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.127" level="INFO">${RESULT} = [{'time': 0.020473028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.020488208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.123" endtime="20201112 12:27:38.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.141" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.128" endtime="20201112 12:27:38.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.146" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.145" endtime="20201112 12:27:38.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.149" level="INFO">VALUE: [1.1152999999999857e-05, 1.0750000000000343e-05, 1.1165999999999954e-05, 1.1111000000001148e-05, 1.0318999999998218e-05, 1.0750000000000343e-05, 1.0722000000001203e-05, 1.1125000000000718e-05, 1.1152999999999857e-05, 1.0737000000000246e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.1152000000000384e-05, 1.0722000000001203e-05, 1.1097999999997582e-05, 1.0667000000002397e-05, 1.1125000000000718e-05, 1.1152999999999857e-05, 1.1084000000001482e-05, 1.0750000000000343e-05, 1.0749999999996873e-05, 1.1139000000000288e-05, 1.0318999999998218e-05, 1.1152000000000384e-05, 1.0737000000000246e-05, 1.1194999999998567e-05, 1.0319000000001688e-05, 1.1207999999998663e-05, 1.0736000000000773e-05, 1.1139000000000288e-05, 1.1179999999999524e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0819000000002188e-05, 1.1112000000000621e-05, 1.0348000000000301e-05, 1.0736000000000773e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.1139000000000288e-05, 1.1152999999999857e-05, 1.0374999999999968e-05, 1.0665999999999454e-05, 1.0735999999997303e-05, 1.1152999999999857e-05, 1.0334000000000731e-05, 1.0750000000000343e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0319999999997692e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.147" endtime="20201112 12:27:38.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.142" endtime="20201112 12:27:38.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.152" endtime="20201112 12:27:38.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.156" endtime="20201112 12:27:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.154" endtime="20201112 12:27:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.150" endtime="20201112 12:27:38.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.784" endtime="20201112 12:27:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:37.783" endtime="20201112 12:27:38.177"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.186" endtime="20201112 12:27:38.200"></status>
</kw>
<msg timestamp="20201112 12:27:38.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.184" endtime="20201112 12:27:38.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.201" endtime="20201112 12:27:38.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.204" endtime="20201112 12:27:38.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.181" endtime="20201112 12:27:38.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.179" endtime="20201112 12:27:38.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.213" endtime="20201112 12:27:38.500"></status>
</kw>
<msg timestamp="20201112 12:27:38.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:38.211" endtime="20201112 12:27:38.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:27:38.504" endtime="20201112 12:27:38.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.513" endtime="20201112 12:27:38.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.209" endtime="20201112 12:27:38.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.207" endtime="20201112 12:27:38.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.520" level="INFO">${RESULT} = [{'time': 0.020037, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.020055931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:27:38.516" endtime="20201112 12:27:38.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.533" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.521" endtime="20201112 12:27:38.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.538" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.537" endtime="20201112 12:27:38.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.540" level="INFO">VALUE: [1.1943999999999844e-05, 1.1944999999999317e-05, 1.1958000000002883e-05, 1.1541999999999802e-05, 1.1541000000000329e-05, 1.1554999999999899e-05, 1.1541999999999802e-05, 1.1554999999999899e-05, 1.1958000000002883e-05, 1.1569999999998942e-05, 1.1943999999999844e-05, 1.2333999999999262e-05, 1.2333999999999262e-05, 1.1555999999999372e-05, 1.1597000000002078e-05, 1.1597999999998082e-05, 1.1930000000000274e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1930000000000274e-05, 1.2389000000001538e-05, 1.1541000000000329e-05, 1.1944999999999317e-05, 1.1598000000001552e-05, 1.1541000000000329e-05, 1.2346999999999358e-05, 1.1528000000000233e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1570000000002412e-05, 1.2375000000001968e-05, 1.2361999999998402e-05, 1.1624999999997748e-05, 1.1555999999999372e-05, 1.1957999999999414e-05, 1.1958000000002883e-05, 1.2347999999998832e-05, 1.1554999999999899e-05, 1.1985999999998553e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1888999999997568e-05, 1.1554999999999899e-05, 1.1957999999999414e-05, 1.1944999999999317e-05, 1.1943999999999844e-05, 1.1930000000000274e-05, 1.2014000000001163e-05, 1.2361000000002398e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.539" endtime="20201112 12:27:38.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.534" endtime="20201112 12:27:38.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.544" endtime="20201112 12:27:38.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.547" endtime="20201112 12:27:38.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.546" endtime="20201112 12:27:38.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.542" endtime="20201112 12:27:38.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.178" endtime="20201112 12:27:38.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.177" endtime="20201112 12:27:38.568"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.577" endtime="20201112 12:27:38.591"></status>
</kw>
<msg timestamp="20201112 12:27:38.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.575" endtime="20201112 12:27:38.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.592" endtime="20201112 12:27:38.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.595" endtime="20201112 12:27:38.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.573" endtime="20201112 12:27:38.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.571" endtime="20201112 12:27:38.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.604" endtime="20201112 12:27:38.905"></status>
</kw>
<msg timestamp="20201112 12:27:38.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.602" endtime="20201112 12:27:38.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:38.909" endtime="20201112 12:27:38.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.918" endtime="20201112 12:27:38.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.600" endtime="20201112 12:27:38.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.598" endtime="20201112 12:27:38.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:38.924" level="INFO">${RESULT} = [{'time': 0.019763056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.019783083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:38.921" endtime="20201112 12:27:38.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:38.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:38.926" endtime="20201112 12:27:38.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.942" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:27:38.941" endtime="20201112 12:27:38.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:38.945" level="INFO">VALUE: [1.2375000000001968e-05, 1.2360999999998928e-05, 1.2792000000001053e-05, 1.3124999999999248e-05, 1.276299999999897e-05, 1.2749999999998873e-05, 1.3165999999998484e-05, 1.3152999999998388e-05, 1.3167000000001428e-05, 1.3165999999998484e-05, 1.3181000000000997e-05, 1.2778000000001483e-05, 1.2792000000001053e-05, 1.2764000000001913e-05, 1.3167000000001428e-05, 1.2763999999998443e-05, 1.3181000000000997e-05, 1.2361000000002398e-05, 1.2361000000002398e-05, 1.3222000000000234e-05, 1.3179999999998054e-05, 1.2764000000001913e-05, 1.3151999999998915e-05, 1.2749999999998873e-05, 1.2778000000001483e-05, 1.2764000000001913e-05, 1.2333999999999262e-05, 1.3151999999998915e-05, 1.2805000000001149e-05, 1.3167000000001428e-05, 1.3166999999997958e-05, 1.3152999999998388e-05, 1.2722999999999207e-05, 1.3153000000001858e-05, 1.3166999999997958e-05, 1.2777999999998013e-05, 1.3167000000001428e-05, 1.3195000000000567e-05, 1.3236000000003273e-05, 1.3153000000001858e-05, 1.3166999999997958e-05, 1.2346999999999358e-05, 1.2764000000001913e-05, 1.2348000000002302e-05, 1.279099999999811e-05, 1.3166999999997958e-05, 1.2360999999998928e-05, 1.276299999999897e-05, 1.3166999999997958e-05, 1.3165999999998484e-05]</msg>
<status status="PASS" starttime="20201112 12:27:38.943" endtime="20201112 12:27:38.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.939" endtime="20201112 12:27:38.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.948" endtime="20201112 12:27:38.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:38.952" endtime="20201112 12:27:38.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.950" endtime="20201112 12:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.947" endtime="20201112 12:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.569" endtime="20201112 12:27:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.569" endtime="20201112 12:27:38.973"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:38.985" endtime="20201112 12:27:39.000"></status>
</kw>
<msg timestamp="20201112 12:27:39.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:38.983" endtime="20201112 12:27:39.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.001" endtime="20201112 12:27:39.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.004" endtime="20201112 12:27:39.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.980" endtime="20201112 12:27:39.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.978" endtime="20201112 12:27:39.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.013" endtime="20201112 12:27:39.300"></status>
</kw>
<msg timestamp="20201112 12:27:39.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023613056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.011" endtime="20201112 12:27:39.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023613056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.304" endtime="20201112 12:27:39.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.313" endtime="20201112 12:27:39.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.009" endtime="20201112 12:27:39.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.007" endtime="20201112 12:27:39.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.320" level="INFO">${RESULT} = [{'time': 0.023627042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.023644347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.316" endtime="20201112 12:27:39.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.333" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.321" endtime="20201112 12:27:39.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.338" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.337" endtime="20201112 12:27:39.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.340" level="INFO">VALUE: [1.3986000000000554e-05, 1.4375000000000498e-05, 1.4000000000000123e-05, 1.3972999999996988e-05, 1.3568999999998e-05, 1.3972000000000984e-05, 1.3915999999999235e-05, 1.3972000000000984e-05, 1.3931000000001748e-05, 1.3972000000000984e-05, 1.3570000000000942e-05, 1.3943999999998374e-05, 1.4000000000000123e-05, 1.4375000000000498e-05, 1.3583000000001039e-05, 1.3986000000000554e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3943999999998374e-05, 1.3987000000000027e-05, 1.3555999999997903e-05, 1.3986000000000554e-05, 1.3541999999998333e-05, 1.3527999999998763e-05, 1.3555999999997903e-05, 1.3986000000000554e-05, 1.3556000000001373e-05, 1.3972000000000984e-05, 1.3570000000000942e-05, 1.3957999999997944e-05, 1.3569000000001469e-05, 1.3971999999997514e-05, 1.3957999999997944e-05, 1.3513999999999193e-05, 1.3971999999997514e-05, 1.3973000000000457e-05, 1.358299999999757e-05, 1.4013999999999693e-05, 1.355499999999843e-05, 1.3513999999999193e-05, 1.3972000000000984e-05, 1.3556000000001373e-05, 1.3972000000000984e-05, 1.3570000000000942e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3985999999997084e-05, 1.3569000000001469e-05, 1.3972999999996988e-05, 1.4000000000000123e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.339" endtime="20201112 12:27:39.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.334" endtime="20201112 12:27:39.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.344" endtime="20201112 12:27:39.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.347" endtime="20201112 12:27:39.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.346" endtime="20201112 12:27:39.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.342" endtime="20201112 12:27:39.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.976" endtime="20201112 12:27:39.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:38.973" endtime="20201112 12:27:39.368"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.377" endtime="20201112 12:27:39.393"></status>
</kw>
<msg timestamp="20201112 12:27:39.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.375" endtime="20201112 12:27:39.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.394" endtime="20201112 12:27:39.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.397" endtime="20201112 12:27:39.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.373" endtime="20201112 12:27:39.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.371" endtime="20201112 12:27:39.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.406" endtime="20201112 12:27:39.706"></status>
</kw>
<msg timestamp="20201112 12:27:39.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020603958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:39.405" endtime="20201112 12:27:39.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02058875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020603958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:39.711" endtime="20201112 12:27:39.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.719" endtime="20201112 12:27:39.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.402" endtime="20201112 12:27:39.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.400" endtime="20201112 12:27:39.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:39.726" level="INFO">${RESULT} = [{'time': 0.020603958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5207999999999194e-05, 'source_diff': 1.5207999999999194e-05}, {'time': 0.020625069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:39.722" endtime="20201112 12:27:39.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:39.740" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:39.727" endtime="20201112 12:27:39.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.745" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:27:39.744" endtime="20201112 12:27:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.747" level="INFO">VALUE: [1.5207999999999194e-05, 1.479100000000011e-05, 1.4443999999998874e-05, 1.5180000000000055e-05, 1.5180000000000055e-05, 1.4722000000001734e-05, 1.5193999999999624e-05, 1.5195000000002568e-05, 1.5237000000001277e-05, 1.4778000000000013e-05, 1.5193999999999624e-05, 1.4375000000000498e-05, 1.4764000000000443e-05, 1.5222000000002234e-05, 1.5180000000000055e-05, 1.4778000000000013e-05, 1.479100000000011e-05, 1.4778000000000013e-05, 1.5180999999999528e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.5222999999998238e-05, 1.4361000000000929e-05, 1.477700000000054e-05, 1.481899999999925e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4805999999999153e-05, 1.4389000000000068e-05, 1.4778000000000013e-05, 1.4806000000002623e-05, 1.4778000000000013e-05, 1.5180000000000055e-05, 1.481899999999925e-05, 1.4389000000000068e-05, 1.4791999999999583e-05, 1.4375000000000498e-05, 1.5193999999999624e-05, 1.4306000000002123e-05, 1.5195000000002568e-05, 1.5236000000001804e-05, 1.4778000000000013e-05, 1.477700000000054e-05, 1.4722000000001734e-05, 1.5180000000000055e-05, 1.5194000000003094e-05, 1.4361000000000929e-05, 1.480499999999968e-05, 1.5180999999999528e-05, 1.5193999999999624e-05]</msg>
<status status="PASS" starttime="20201112 12:27:39.746" endtime="20201112 12:27:39.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.741" endtime="20201112 12:27:39.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.751" endtime="20201112 12:27:39.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:39.755" endtime="20201112 12:27:39.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.753" endtime="20201112 12:27:39.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.749" endtime="20201112 12:27:39.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.369" endtime="20201112 12:27:39.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.368" endtime="20201112 12:27:39.776"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.784" endtime="20201112 12:27:39.799"></status>
</kw>
<msg timestamp="20201112 12:27:39.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.783" endtime="20201112 12:27:39.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:39.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:39.801" endtime="20201112 12:27:39.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.803" endtime="20201112 12:27:39.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.780" endtime="20201112 12:27:39.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.778" endtime="20201112 12:27:39.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:39.813" endtime="20201112 12:27:40.099"></status>
</kw>
<msg timestamp="20201112 12:27:40.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:39.811" endtime="20201112 12:27:40.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020213944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.103" endtime="20201112 12:27:40.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.112" endtime="20201112 12:27:40.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.808" endtime="20201112 12:27:40.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.807" endtime="20201112 12:27:40.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.119" level="INFO">${RESULT} = [{'time': 0.020213944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.561100000000218e-05, 'source_diff': 1.561100000000218e-05}, {'time': 0.020232708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.115" endtime="20201112 12:27:40.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.132" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.120" endtime="20201112 12:27:40.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.137" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.136" endtime="20201112 12:27:40.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.139" level="INFO">VALUE: [1.561100000000218e-05, 1.559699999999914e-05, 1.5207999999999194e-05, 1.5583999999999043e-05, 1.5973000000002457e-05, 1.5985999999999084e-05, 1.5999999999998654e-05, 1.559699999999914e-05, 1.6014000000001694e-05, 1.559700000000261e-05, 1.6028000000001263e-05, 1.5985999999999084e-05, 1.63889999999986e-05, 1.641699999999774e-05, 1.641700000000121e-05, 1.5999999999998654e-05, 1.6014000000001694e-05, 1.637499999999903e-05, 1.5250000000001374e-05, 1.559699999999914e-05, 1.6000000000002124e-05, 1.5958999999999418e-05, 1.640300000000164e-05, 1.559699999999914e-05, 1.559700000000261e-05, 1.5180999999999528e-05, 1.559699999999914e-05, 1.640299999999817e-05, 1.6416000000001735e-05, 1.601299999999875e-05, 1.6415999999998265e-05, 1.6014000000001694e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.6013999999998224e-05, 1.5583999999999043e-05, 1.6000000000002124e-05, 1.5999999999998654e-05, 1.6458000000000444e-05, 1.638900000000207e-05, 1.6014000000001694e-05, 1.6013999999998224e-05, 1.6014000000001694e-05, 1.5597999999998613e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.555500000000043e-05, 1.559700000000261e-05, 1.559699999999914e-05, 1.5985999999999084e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.138" endtime="20201112 12:27:40.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.133" endtime="20201112 12:27:40.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.143" endtime="20201112 12:27:40.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.146" endtime="20201112 12:27:40.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.145" endtime="20201112 12:27:40.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.141" endtime="20201112 12:27:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.777" endtime="20201112 12:27:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:39.776" endtime="20201112 12:27:40.167"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.176" endtime="20201112 12:27:40.192"></status>
</kw>
<msg timestamp="20201112 12:27:40.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.174" endtime="20201112 12:27:40.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.193" endtime="20201112 12:27:40.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.196" endtime="20201112 12:27:40.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.172" endtime="20201112 12:27:40.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.170" endtime="20201112 12:27:40.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.205" endtime="20201112 12:27:40.492"></status>
</kw>
<msg timestamp="20201112 12:27:40.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.204" endtime="20201112 12:27:40.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.496" endtime="20201112 12:27:40.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.504" endtime="20201112 12:27:40.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.201" endtime="20201112 12:27:40.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.199" endtime="20201112 12:27:40.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.511" level="INFO">${RESULT} = [{'time': 0.020105819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.67629999999995e-05, 'source_diff': 1.67629999999995e-05}, {'time': 0.020128736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:40.508" endtime="20201112 12:27:40.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.512" endtime="20201112 12:27:40.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.529" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.528" endtime="20201112 12:27:40.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.532" level="INFO">VALUE: [1.67629999999995e-05, 1.641700000000121e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.7263999999999474e-05, 1.643099999999731e-05, 1.680499999999821e-05, 1.7221999999997295e-05, 1.637499999999903e-05, 1.683300000000082e-05, 1.7193999999998155e-05, 1.7236000000000334e-05, 1.6819999999997254e-05, 1.680500000000168e-05, 1.681900000000125e-05, 1.680500000000168e-05, 1.7208000000001195e-05, 1.680499999999821e-05, 1.641700000000121e-05, 1.7209000000000668e-05, 1.641699999999774e-05, 1.633300000000032e-05, 1.6806000000001153e-05, 1.6778000000002014e-05, 1.641699999999774e-05, 1.681899999999778e-05, 1.719499999999763e-05, 1.6387999999999125e-05, 1.6792000000001583e-05, 1.7221999999997295e-05, 1.687499999999953e-05, 1.7222000000000764e-05, 1.6792000000001583e-05, 1.680499999999821e-05, 1.6749999999999404e-05, 1.640300000000164e-05, 1.7208000000001195e-05, 1.679099999999864e-05, 1.6792000000001583e-05, 1.6791999999998114e-05, 1.7236000000000334e-05, 1.643099999999731e-05, 1.7195000000001098e-05, 1.641699999999774e-05, 1.640299999999817e-05, 1.638900000000207e-05, 1.6847999999999863e-05, 1.7208000000001195e-05, 1.7193999999998155e-05, 1.641700000000121e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.530" endtime="20201112 12:27:40.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.526" endtime="20201112 12:27:40.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.535" endtime="20201112 12:27:40.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.539" endtime="20201112 12:27:40.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.537" endtime="20201112 12:27:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.534" endtime="20201112 12:27:40.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.168" endtime="20201112 12:27:40.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.168" endtime="20201112 12:27:40.560"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.569" endtime="20201112 12:27:40.583"></status>
</kw>
<msg timestamp="20201112 12:27:40.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.567" endtime="20201112 12:27:40.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.585" endtime="20201112 12:27:40.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.587" endtime="20201112 12:27:40.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.565" endtime="20201112 12:27:40.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.563" endtime="20201112 12:27:40.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.597" endtime="20201112 12:27:40.882"></status>
</kw>
<msg timestamp="20201112 12:27:40.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020095889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.595" endtime="20201112 12:27:40.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020095889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.887" endtime="20201112 12:27:40.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.895" endtime="20201112 12:27:40.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.592" endtime="20201112 12:27:40.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.591" endtime="20201112 12:27:40.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:40.902" level="INFO">${RESULT} = [{'time': 0.020095889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.759699999999767e-05, 'source_diff': 1.759699999999767e-05}, {'time': 0.020122778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:40.898" endtime="20201112 12:27:40.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:40.915" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:40.903" endtime="20201112 12:27:40.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.920" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:27:40.919" endtime="20201112 12:27:40.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.922" level="INFO">VALUE: [1.759699999999767e-05, 1.7209000000000668e-05, 1.762500000000028e-05, 1.8429999999999835e-05, 1.811100000000121e-05, 1.8027999999999794e-05, 1.763899999999985e-05, 1.8042000000002834e-05, 1.8027999999999794e-05, 1.765299999999942e-05, 1.8027999999999794e-05, 1.765299999999942e-05, 1.8014000000000224e-05, 1.8429999999999835e-05, 1.8014000000000224e-05, 1.8014000000000224e-05, 1.762500000000028e-05, 1.802700000000032e-05, 1.845900000000192e-05, 1.8027999999999794e-05, 1.766700000000246e-05, 1.843099999999931e-05, 1.805499999999946e-05, 1.845899999999845e-05, 1.7638000000000376e-05, 1.804099999999989e-05, 1.802700000000032e-05, 1.802700000000032e-05, 1.72089999999972e-05, 1.843099999999931e-05, 1.762500000000028e-05, 1.8027999999999794e-05, 1.762500000000028e-05, 1.804099999999989e-05, 1.763899999999985e-05, 1.8415999999996796e-05, 1.8014000000000224e-05, 1.8027999999999794e-05, 1.8429999999999835e-05, 1.8013999999996755e-05, 1.762500000000028e-05, 1.75829999999981e-05, 1.8056000000002403e-05, 1.713900000000282e-05, 1.759699999999767e-05, 1.762500000000028e-05, 1.802700000000032e-05, 1.8027999999999794e-05, 1.8027999999999794e-05, 1.7679999999999085e-05]</msg>
<status status="PASS" starttime="20201112 12:27:40.921" endtime="20201112 12:27:40.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.916" endtime="20201112 12:27:40.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.933" endtime="20201112 12:27:40.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:40.936" endtime="20201112 12:27:40.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.935" endtime="20201112 12:27:40.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.931" endtime="20201112 12:27:40.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.561" endtime="20201112 12:27:40.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.560" endtime="20201112 12:27:40.957"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.966" endtime="20201112 12:27:40.983"></status>
</kw>
<msg timestamp="20201112 12:27:40.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.965" endtime="20201112 12:27:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:40.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:40.984" endtime="20201112 12:27:40.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.987" endtime="20201112 12:27:40.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.962" endtime="20201112 12:27:40.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.960" endtime="20201112 12:27:40.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:40.996" endtime="20201112 12:27:41.282"></status>
</kw>
<msg timestamp="20201112 12:27:41.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020973236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:40.995" endtime="20201112 12:27:41.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020973236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020992069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.286" endtime="20201112 12:27:41.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.294" endtime="20201112 12:27:41.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.992" endtime="20201112 12:27:41.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.990" endtime="20201112 12:27:41.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.301" level="INFO">${RESULT} = [{'time': 0.020992069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.883299999999935e-05, 'source_diff': 1.883299999999935e-05}, {'time': 0.021017153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:41.298" endtime="20201112 12:27:41.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.302" endtime="20201112 12:27:41.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.321" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.320" endtime="20201112 12:27:41.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.323" level="INFO">VALUE: [1.883299999999935e-05, 1.8764000000000974e-05, 1.883299999999935e-05, 1.883299999999935e-05, 1.886099999999849e-05, 1.884700000000239e-05, 1.883299999999935e-05, 1.837500000000103e-05, 1.8833999999998824e-05, 1.8834000000002293e-05, 1.8443999999999405e-05, 1.9235999999998865e-05, 1.883300000000282e-05, 1.9222000000002765e-05, 1.9249999999998435e-05, 1.9237000000001808e-05, 1.883300000000282e-05, 1.841699999999974e-05, 1.883300000000282e-05, 1.884699999999892e-05, 1.883299999999935e-05, 1.9236000000002335e-05, 1.8833999999998824e-05, 1.8819999999999254e-05, 1.883299999999935e-05, 1.9250000000001904e-05, 1.9235999999998865e-05, 1.881899999999978e-05, 1.8833999999998824e-05, 1.9250000000001904e-05, 1.8847999999998394e-05, 1.9236000000002335e-05, 1.843100000000278e-05, 1.915300000000092e-05, 1.9221999999999295e-05, 1.883299999999935e-05, 1.884699999999892e-05, 1.9250000000001904e-05, 1.884699999999892e-05, 1.9222000000002765e-05, 1.884699999999892e-05, 1.843099999999931e-05, 1.9264000000001474e-05, 1.8443999999999405e-05, 1.883299999999935e-05, 1.9249999999998435e-05, 1.9264000000001474e-05, 1.8833999999998824e-05, 1.8443999999999405e-05, 1.9222000000002765e-05]</msg>
<status status="PASS" starttime="20201112 12:27:41.322" endtime="20201112 12:27:41.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.317" endtime="20201112 12:27:41.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.327" endtime="20201112 12:27:41.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.331" endtime="20201112 12:27:41.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.329" endtime="20201112 12:27:41.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.325" endtime="20201112 12:27:41.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.958" endtime="20201112 12:27:41.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:40.958" endtime="20201112 12:27:41.351"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.360" endtime="20201112 12:27:41.376"></status>
</kw>
<msg timestamp="20201112 12:27:41.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.359" endtime="20201112 12:27:41.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.378" endtime="20201112 12:27:41.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.380" endtime="20201112 12:27:41.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.356" endtime="20201112 12:27:41.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.354" endtime="20201112 12:27:41.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.389" endtime="20201112 12:27:41.676"></status>
</kw>
<msg timestamp="20201112 12:27:41.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.388" endtime="20201112 12:27:41.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.680" endtime="20201112 12:27:41.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.689" endtime="20201112 12:27:41.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.385" endtime="20201112 12:27:41.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.383" endtime="20201112 12:27:41.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:41.696" level="INFO">${RESULT} = [{'time': 0.020150264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.00830000000006e-05, 'source_diff': 2.00830000000006e-05}, {'time': 0.020173208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:41.692" endtime="20201112 12:27:41.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:41.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:41.697" endtime="20201112 12:27:41.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.714" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:27:41.713" endtime="20201112 12:27:41.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.716" level="INFO">VALUE: [2.00830000000006e-05, 2.004100000000189e-05, 1.963899999999838e-05, 1.965300000000142e-05, 1.965300000000142e-05, 1.965299999999795e-05, 1.963899999999838e-05, 1.956900000000053e-05, 1.963900000000185e-05, 1.963899999999838e-05, 2.0056000000000934e-05, 1.965300000000142e-05, 1.95830000000001e-05, 1.963899999999838e-05, 2.0042000000001364e-05, 1.965299999999795e-05, 2.0056000000000934e-05, 2.006900000000103e-05, 1.923699999999834e-05, 1.966700000000099e-05, 2.004099999999842e-05, 1.929100000000114e-05, 2.005499999999799e-05, 2.0056000000000934e-05, 2.009700000000017e-05, 2.0042000000001364e-05, 1.963900000000185e-05, 1.9651999999998476e-05, 2.0041999999997895e-05, 2.044500000000088e-05, 1.963900000000185e-05, 2.044500000000088e-05, 1.963900000000185e-05, 1.9985999999999615e-05, 1.9708000000000225e-05, 1.9250000000001904e-05, 2.0042000000001364e-05, 2.005500000000146e-05, 1.963900000000185e-05, 1.962500000000228e-05, 1.961099999999924e-05, 1.9637999999998906e-05, 2.0056000000000934e-05, 1.962499999999881e-05, 1.963899999999838e-05, 2.0027999999998325e-05, 2.0055999999997465e-05, 1.962499999999881e-05, 2.008299999999713e-05, 1.963899999999838e-05]</msg>
<status status="PASS" starttime="20201112 12:27:41.715" endtime="20201112 12:27:41.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.710" endtime="20201112 12:27:41.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.720" endtime="20201112 12:27:41.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:41.723" endtime="20201112 12:27:41.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.722" endtime="20201112 12:27:41.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.718" endtime="20201112 12:27:41.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.352" endtime="20201112 12:27:41.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.352" endtime="20201112 12:27:41.744"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.753" endtime="20201112 12:27:41.768"></status>
</kw>
<msg timestamp="20201112 12:27:41.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.751" endtime="20201112 12:27:41.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:41.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:41.770" endtime="20201112 12:27:41.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.772" endtime="20201112 12:27:41.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.749" endtime="20201112 12:27:41.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.747" endtime="20201112 12:27:41.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:41.782" endtime="20201112 12:27:42.068"></status>
</kw>
<msg timestamp="20201112 12:27:42.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:41.780" endtime="20201112 12:27:42.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.072" endtime="20201112 12:27:42.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.081" endtime="20201112 12:27:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.778" endtime="20201112 12:27:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.776" endtime="20201112 12:27:42.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.088" level="INFO">${RESULT} = [{'time': 0.020091444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0472000000000545e-05, 'source_diff': 2.0472000000000545e-05}, {'time': 0.020120514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.084" endtime="20201112 12:27:42.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.101" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.089" endtime="20201112 12:27:42.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.106" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.105" endtime="20201112 12:27:42.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.108" level="INFO">VALUE: [2.0472000000000545e-05, 2.084699999999745e-05, 2.087500000000006e-05, 2.086100000000049e-05, 2.086100000000049e-05, 2.045900000000045e-05, 2.045900000000045e-05, 2.0834000000000824e-05, 2.1250000000000435e-05, 2.0848000000000394e-05, 2.0444000000001405e-05, 2.1264000000000005e-05, 2.1306000000002184e-05, 2.084700000000092e-05, 2.088899999999963e-05, 2.126300000000053e-05, 2.1264000000000005e-05, 2.0848000000000394e-05, 2.086100000000049e-05, 2.12770000000001e-05, 2.1277999999999575e-05, 2.084700000000092e-05, 2.0457999999997506e-05, 2.0848000000000394e-05, 2.086100000000049e-05, 2.0472000000000545e-05, 2.1250000000000435e-05, 2.041699999999827e-05, 2.086100000000049e-05, 2.0472000000000545e-05, 2.086099999999702e-05, 2.086100000000049e-05, 2.1319999999998285e-05, 2.086100000000049e-05, 2.0861999999999964e-05, 2.052700000000282e-05, 2.086100000000049e-05, 2.1264000000000005e-05, 2.0415999999998796e-05, 2.086100000000049e-05, 2.0929999999998866e-05, 2.0834000000000824e-05, 2.0471999999997076e-05, 2.084700000000092e-05, 2.0457999999997506e-05, 2.045900000000045e-05, 2.12770000000001e-05, 2.0457999999997506e-05, 2.0848000000000394e-05, 2.0429999999998366e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.107" endtime="20201112 12:27:42.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.102" endtime="20201112 12:27:42.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.112" endtime="20201112 12:27:42.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.115" endtime="20201112 12:27:42.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.114" endtime="20201112 12:27:42.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.110" endtime="20201112 12:27:42.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.745" endtime="20201112 12:27:42.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:41.744" endtime="20201112 12:27:42.137"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.145" endtime="20201112 12:27:42.160"></status>
</kw>
<msg timestamp="20201112 12:27:42.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.144" endtime="20201112 12:27:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.161" endtime="20201112 12:27:42.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.164" endtime="20201112 12:27:42.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.141" endtime="20201112 12:27:42.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.139" endtime="20201112 12:27:42.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.173" endtime="20201112 12:27:42.461"></status>
</kw>
<msg timestamp="20201112 12:27:42.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.171" endtime="20201112 12:27:42.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.465" endtime="20201112 12:27:42.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.473" endtime="20201112 12:27:42.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.169" endtime="20201112 12:27:42.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.167" endtime="20201112 12:27:42.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.480" level="INFO">${RESULT} = [{'time': 0.020440625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1693999999999186e-05, 'source_diff': 2.1693999999999186e-05}, {'time': 0.020468736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.477" endtime="20201112 12:27:42.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.493" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.481" endtime="20201112 12:27:42.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.498" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.497" endtime="20201112 12:27:42.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.501" level="INFO">VALUE: [2.1693999999999186e-05, 2.2514000000001255e-05, 2.208299999999913e-05, 2.166699999999952e-05, 2.129099999999967e-05, 2.166699999999952e-05, 2.2041999999999895e-05, 2.248700000000159e-05, 2.166699999999952e-05, 2.20969999999987e-05, 2.2443999999999936e-05, 2.2471999999999076e-05, 2.20969999999987e-05, 2.2069999999999035e-05, 2.1666000000000046e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.166699999999952e-05, 2.206899999999956e-05, 2.1666000000000046e-05, 2.20830000000026e-05, 2.1694000000002656e-05, 2.15830000000021e-05, 2.2084000000002074e-05, 2.126300000000053e-05, 2.168100000000256e-05, 2.166700000000299e-05, 2.2028000000000325e-05, 2.1291999999999145e-05, 2.159700000000167e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.2485999999998646e-05, 2.2083999999998605e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.208299999999913e-05, 2.1666000000000046e-05, 2.248700000000159e-05, 2.1735999999997896e-05, 2.166699999999952e-05, 2.2485999999998646e-05, 2.209700000000217e-05, 2.2472000000002545e-05, 2.2500000000001685e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.2528000000000825e-05, 2.2070000000002504e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.499" endtime="20201112 12:27:42.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.494" endtime="20201112 12:27:42.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.504" endtime="20201112 12:27:42.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.508" endtime="20201112 12:27:42.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.506" endtime="20201112 12:27:42.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.503" endtime="20201112 12:27:42.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.138" endtime="20201112 12:27:42.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.137" endtime="20201112 12:27:42.529"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.537" endtime="20201112 12:27:42.552"></status>
</kw>
<msg timestamp="20201112 12:27:42.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.536" endtime="20201112 12:27:42.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.554" endtime="20201112 12:27:42.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.556" endtime="20201112 12:27:42.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.533" endtime="20201112 12:27:42.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.531" endtime="20201112 12:27:42.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.565" endtime="20201112 12:27:42.852"></status>
</kw>
<msg timestamp="20201112 12:27:42.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.564" endtime="20201112 12:27:42.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.856" endtime="20201112 12:27:42.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.864" endtime="20201112 12:27:42.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.561" endtime="20201112 12:27:42.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.559" endtime="20201112 12:27:42.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:42.871" level="INFO">${RESULT} = [{'time': 0.020071889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.020099944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:42.868" endtime="20201112 12:27:42.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:42.886" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:42.872" endtime="20201112 12:27:42.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.890" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:27:42.889" endtime="20201112 12:27:42.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.893" level="INFO">VALUE: [2.2471999999999076e-05, 2.251300000000178e-05, 2.3292000000001145e-05, 2.2888000000002157e-05, 2.287500000000206e-05, 2.284699999999945e-05, 2.3278000000001575e-05, 2.2833999999999355e-05, 2.2471999999999076e-05, 2.3306000000000715e-05, 2.287499999999859e-05, 2.29030000000012e-05, 2.247299999999855e-05, 2.3292000000001145e-05, 2.2471999999999076e-05, 2.3306000000000715e-05, 2.3276999999998632e-05, 2.2486000000002115e-05, 2.329100000000167e-05, 2.2471999999999076e-05, 2.2472000000002545e-05, 2.3250000000002435e-05, 2.3277999999998106e-05, 2.2485999999998646e-05, 2.2471999999999076e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.32770000000021e-05, 2.287499999999859e-05, 2.294499999999991e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.3291999999997676e-05, 2.290299999999773e-05, 2.2901999999998257e-05, 2.2485999999998646e-05, 2.29030000000012e-05, 2.3291999999997676e-05, 2.329100000000167e-05, 2.291700000000077e-05, 2.2486000000002115e-05, 2.3278000000001575e-05, 2.2486000000002115e-05, 2.287499999999859e-05, 2.247299999999855e-05, 2.2471999999999076e-05, 2.2485999999998646e-05, 2.2486000000002115e-05, 2.2499999999998216e-05]</msg>
<status status="PASS" starttime="20201112 12:27:42.891" endtime="20201112 12:27:42.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.887" endtime="20201112 12:27:42.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.897" endtime="20201112 12:27:42.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:42.900" endtime="20201112 12:27:42.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.898" endtime="20201112 12:27:42.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.895" endtime="20201112 12:27:42.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.530" endtime="20201112 12:27:42.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.529" endtime="20201112 12:27:42.921"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.930" endtime="20201112 12:27:42.945"></status>
</kw>
<msg timestamp="20201112 12:27:42.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.928" endtime="20201112 12:27:42.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:42.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:42.947" endtime="20201112 12:27:42.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.949" endtime="20201112 12:27:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.926" endtime="20201112 12:27:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.924" endtime="20201112 12:27:42.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:42.958" endtime="20201112 12:27:43.245"></status>
</kw>
<msg timestamp="20201112 12:27:43.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:42.957" endtime="20201112 12:27:43.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.249" endtime="20201112 12:27:43.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.257" endtime="20201112 12:27:43.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.954" endtime="20201112 12:27:43.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.952" endtime="20201112 12:27:43.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.264" level="INFO">${RESULT} = [{'time': 0.020085403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3250000000002435e-05, 'source_diff': 2.3250000000002435e-05}, {'time': 0.020118611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.261" endtime="20201112 12:27:43.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.278" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.265" endtime="20201112 12:27:43.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.282" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.281" endtime="20201112 12:27:43.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.285" level="INFO">VALUE: [2.3250000000002435e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4084000000000605e-05, 2.4098000000000175e-05, 2.4069999999997566e-05, 2.369499999999719e-05, 2.369500000000066e-05, 2.3694000000001186e-05, 2.3235999999999396e-05, 2.3708000000000756e-05, 2.40970000000007e-05, 2.369500000000066e-05, 2.3763999999999036e-05, 2.412499999999984e-05, 2.4112000000003214e-05, 2.3292000000001145e-05, 2.411100000000027e-05, 2.3763999999999036e-05, 2.40970000000007e-05, 2.369500000000066e-05, 2.411100000000027e-05, 2.408300000000113e-05, 2.368100000000109e-05, 2.3292000000001145e-05, 2.405500000000199e-05, 2.3694000000001186e-05, 2.3694000000001186e-05, 2.370900000000023e-05, 2.3277999999998106e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.415300000000245e-05, 2.4084000000000605e-05, 2.3277999999998106e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4084000000000605e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4513999999999786e-05, 2.412499999999984e-05, 2.370900000000023e-05, 2.362499999999934e-05, 2.4070000000001035e-05, 2.4111999999999745e-05, 2.3694000000001186e-05, 2.369500000000066e-05, 2.40970000000007e-05, 2.40970000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.283" endtime="20201112 12:27:43.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.278" endtime="20201112 12:27:43.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.288" endtime="20201112 12:27:43.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.292" endtime="20201112 12:27:43.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.290" endtime="20201112 12:27:43.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.287" endtime="20201112 12:27:43.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.922" endtime="20201112 12:27:43.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:42.921" endtime="20201112 12:27:43.313"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.322" endtime="20201112 12:27:43.338"></status>
</kw>
<msg timestamp="20201112 12:27:43.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.320" endtime="20201112 12:27:43.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.340" endtime="20201112 12:27:43.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.342" endtime="20201112 12:27:43.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.317" endtime="20201112 12:27:43.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.315" endtime="20201112 12:27:43.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.351" endtime="20201112 12:27:43.636"></status>
</kw>
<msg timestamp="20201112 12:27:43.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.350" endtime="20201112 12:27:43.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020872972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.640" endtime="20201112 12:27:43.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.649" endtime="20201112 12:27:43.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.347" endtime="20201112 12:27:43.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.345" endtime="20201112 12:27:43.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:43.655" level="INFO">${RESULT} = [{'time': 0.020872972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4513999999999786e-05, 'source_diff': 2.4513999999999786e-05}, {'time': 0.020899986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:43.652" endtime="20201112 12:27:43.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:43.669" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:43.656" endtime="20201112 12:27:43.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.673" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:27:43.672" endtime="20201112 12:27:43.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.676" level="INFO">VALUE: [2.4513999999999786e-05, 2.4485999999997177e-05, 2.49169999999993e-05, 2.5346999999998482e-05, 2.531900000000281e-05, 2.4500000000000216e-05, 2.494499999999844e-05, 2.4500000000000216e-05, 2.5305999999999246e-05, 2.4513999999999786e-05, 2.4500000000000216e-05, 2.4542000000002395e-05, 2.487500000000059e-05, 2.4513999999999786e-05, 2.4486000000000646e-05, 2.4500000000000216e-05, 2.490299999999973e-05, 2.4554999999999022e-05, 2.4513999999999786e-05, 2.4888000000000687e-05, 2.4500000000000216e-05, 2.4930000000002867e-05, 2.49169999999993e-05, 2.4500000000000216e-05, 2.4513999999999786e-05, 2.495900000000148e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.533300000000238e-05, 2.4847999999997455e-05, 2.4500000000000216e-05, 2.487500000000059e-05, 2.4513000000000312e-05, 2.5318999999999342e-05, 2.49169999999993e-05, 2.5346999999998482e-05, 2.4527999999999356e-05, 2.5319999999998816e-05, 2.4513999999999786e-05, 2.4500000000000216e-05, 2.5318999999999342e-05, 2.4500000000000216e-05, 2.448700000000012e-05, 2.4513999999999786e-05, 2.4513999999999786e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.531900000000281e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:27:43.674" endtime="20201112 12:27:43.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.670" endtime="20201112 12:27:43.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.680" endtime="20201112 12:27:43.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:43.683" endtime="20201112 12:27:43.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.681" endtime="20201112 12:27:43.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.678" endtime="20201112 12:27:43.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.314" endtime="20201112 12:27:43.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.313" endtime="20201112 12:27:43.704"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.713" endtime="20201112 12:27:43.728"></status>
</kw>
<msg timestamp="20201112 12:27:43.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.711" endtime="20201112 12:27:43.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:43.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:43.730" endtime="20201112 12:27:43.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.732" endtime="20201112 12:27:43.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.709" endtime="20201112 12:27:43.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.707" endtime="20201112 12:27:43.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:43.742" endtime="20201112 12:27:44.029"></status>
</kw>
<msg timestamp="20201112 12:27:44.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:43.740" endtime="20201112 12:27:44.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.033" endtime="20201112 12:27:44.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.042" endtime="20201112 12:27:44.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.738" endtime="20201112 12:27:44.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.736" endtime="20201112 12:27:44.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.049" level="INFO">${RESULT} = [{'time': 0.020151931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.612500000000184e-05, 'source_diff': 2.612500000000184e-05}, {'time': 0.020185736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:44.045" endtime="20201112 12:27:44.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.063" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.050" endtime="20201112 12:27:44.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.067" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.066" endtime="20201112 12:27:44.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.070" level="INFO">VALUE: [2.612500000000184e-05, 2.6096999999999232e-05, 2.5721999999998857e-05, 2.611100000000227e-05, 2.6110999999998802e-05, 2.5722000000002326e-05, 2.612500000000184e-05, 2.6110999999998802e-05, 2.6097999999998706e-05, 2.5735999999998427e-05, 2.5304999999999772e-05, 2.5708000000002756e-05, 2.5305999999999246e-05, 2.6124999999998372e-05, 2.5305999999999246e-05, 2.6124999999998372e-05, 2.5304999999999772e-05, 2.6110999999998802e-05, 2.6124999999998372e-05, 2.5764000000001036e-05, 2.612500000000184e-05, 2.612500000000184e-05, 2.612500000000184e-05, 2.6124999999998372e-05, 2.5708000000002756e-05, 2.5778000000000606e-05, 2.5763999999997567e-05, 2.5680000000000147e-05, 2.611100000000227e-05, 2.612500000000184e-05, 2.5346999999998482e-05, 2.6124999999998372e-05, 2.6110999999998802e-05, 2.5319999999998816e-05, 2.5318999999999342e-05, 2.5735999999998427e-05, 2.612500000000184e-05, 2.611100000000227e-05, 2.5332999999998912e-05, 2.612500000000184e-05, 2.5735999999998427e-05, 2.613899999999794e-05, 2.5320000000002285e-05, 2.6124999999998372e-05, 2.612500000000184e-05, 2.6110999999998802e-05, 2.5708000000002756e-05, 2.569500000000266e-05, 2.612500000000184e-05, 2.5722000000002326e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.068" endtime="20201112 12:27:44.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.063" endtime="20201112 12:27:44.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.073" endtime="20201112 12:27:44.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.077" endtime="20201112 12:27:44.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.075" endtime="20201112 12:27:44.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.072" endtime="20201112 12:27:44.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.705" endtime="20201112 12:27:44.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:43.704" endtime="20201112 12:27:44.098"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.107" endtime="20201112 12:27:44.122"></status>
</kw>
<msg timestamp="20201112 12:27:44.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.105" endtime="20201112 12:27:44.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.124" endtime="20201112 12:27:44.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.126" endtime="20201112 12:27:44.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.102" endtime="20201112 12:27:44.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.100" endtime="20201112 12:27:44.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.135" endtime="20201112 12:27:44.422"></status>
</kw>
<msg timestamp="20201112 12:27:44.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.134" endtime="20201112 12:27:44.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.427" endtime="20201112 12:27:44.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.435" endtime="20201112 12:27:44.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.131" endtime="20201112 12:27:44.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.129" endtime="20201112 12:27:44.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.442" level="INFO">${RESULT} = [{'time': 0.020073917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6514000000001786e-05, 'source_diff': 2.6514000000001786e-05}, {'time': 0.020104875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:44.438" endtime="20201112 12:27:44.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.443" endtime="20201112 12:27:44.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.461" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.460" endtime="20201112 12:27:44.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.463" level="INFO">VALUE: [2.6514000000001786e-05, 2.6444000000000467e-05, 2.6528000000001356e-05, 2.694500000000044e-05, 2.693100000000087e-05, 2.7333000000000912e-05, 2.6999999999999247e-05, 2.7347000000000482e-05, 2.6541999999997457e-05, 2.694500000000044e-05, 2.6542000000000926e-05, 2.6526999999998413e-05, 2.6542000000000926e-05, 2.6944000000000967e-05, 2.6527999999997887e-05, 2.6930000000001397e-05, 2.6527999999997887e-05, 2.6930000000001397e-05, 2.7361000000000052e-05, 2.6513999999998317e-05, 2.6500000000002216e-05, 2.7318999999997873e-05, 2.7334000000000386e-05, 2.693100000000087e-05, 2.6541000000001452e-05, 2.6930000000001397e-05, 2.7332999999997443e-05, 2.6554999999997553e-05, 2.6874999999999122e-05, 2.6583000000000162e-05, 2.6915999999998358e-05, 2.6929999999997928e-05, 2.7333000000000912e-05, 2.6985999999999677e-05, 2.6528000000001356e-05, 2.69170000000013e-05, 2.7333000000000912e-05, 2.7333000000000912e-05, 2.7347000000000482e-05, 2.7319999999997346e-05, 2.691699999999783e-05, 2.7361000000000052e-05, 2.6527999999997887e-05, 2.6527000000001882e-05, 2.6542000000000926e-05, 2.6999999999999247e-05, 2.6514000000001786e-05, 2.7361000000000052e-05, 2.6514000000001786e-05, 2.693100000000087e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.462" endtime="20201112 12:27:44.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.457" endtime="20201112 12:27:44.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.467" endtime="20201112 12:27:44.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.471" endtime="20201112 12:27:44.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.469" endtime="20201112 12:27:44.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.466" endtime="20201112 12:27:44.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.099" endtime="20201112 12:27:44.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.098" endtime="20201112 12:27:44.492"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.500" endtime="20201112 12:27:44.516"></status>
</kw>
<msg timestamp="20201112 12:27:44.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.499" endtime="20201112 12:27:44.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.517" endtime="20201112 12:27:44.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.520" endtime="20201112 12:27:44.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.496" endtime="20201112 12:27:44.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.494" endtime="20201112 12:27:44.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.529" endtime="20201112 12:27:44.815"></status>
</kw>
<msg timestamp="20201112 12:27:44.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.527" endtime="20201112 12:27:44.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.820" endtime="20201112 12:27:44.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.828" endtime="20201112 12:27:44.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.525" endtime="20201112 12:27:44.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.523" endtime="20201112 12:27:44.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:44.835" level="INFO">${RESULT} = [{'time': 0.020111569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7333000000000912e-05, 'source_diff': 2.7333000000000912e-05}, {'time': 0.020142472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:44.832" endtime="20201112 12:27:44.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:44.848" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:44.836" endtime="20201112 12:27:44.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.853" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:27:44.852" endtime="20201112 12:27:44.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.855" level="INFO">VALUE: [2.7333000000000912e-05, 2.7749999999999997e-05, 2.7721999999997388e-05, 2.7735999999996958e-05, 2.7790999999999233e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.8179999999999178e-05, 2.7334000000000386e-05, 2.8111000000000802e-05, 2.8138000000000468e-05, 2.7361000000000052e-05, 2.7319000000001342e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.8152999999999512e-05, 2.7749999999999997e-05, 2.7805999999998277e-05, 2.7333000000000912e-05, 2.816699999999908e-05, 2.7334000000000386e-05, 2.7334000000000386e-05, 2.7749999999999997e-05, 2.7333000000000912e-05, 2.7736000000000427e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.8138999999999942e-05, 2.7333000000000912e-05, 2.8138999999999942e-05, 2.8165999999999608e-05, 2.8138000000000468e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.7749999999999997e-05, 2.7722000000000857e-05, 2.7334000000000386e-05, 2.7735999999996958e-05, 2.7346999999997013e-05, 2.768100000000162e-05, 2.7749999999999997e-05, 2.7735999999996958e-05, 2.772300000000033e-05, 2.7277999999998637e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.7749999999999997e-05, 2.7347000000000482e-05]</msg>
<status status="PASS" starttime="20201112 12:27:44.854" endtime="20201112 12:27:44.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.849" endtime="20201112 12:27:44.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.859" endtime="20201112 12:27:44.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:44.863" endtime="20201112 12:27:44.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.861" endtime="20201112 12:27:44.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.858" endtime="20201112 12:27:44.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.492" endtime="20201112 12:27:44.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.492" endtime="20201112 12:27:44.884"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.892" endtime="20201112 12:27:44.908"></status>
</kw>
<msg timestamp="20201112 12:27:44.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.891" endtime="20201112 12:27:44.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:44.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:44.910" endtime="20201112 12:27:44.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.912" endtime="20201112 12:27:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.888" endtime="20201112 12:27:44.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.886" endtime="20201112 12:27:44.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:44.921" endtime="20201112 12:27:45.207"></status>
</kw>
<msg timestamp="20201112 12:27:45.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:44.920" endtime="20201112 12:27:45.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.212" endtime="20201112 12:27:45.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.220" endtime="20201112 12:27:45.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.917" endtime="20201112 12:27:45.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.915" endtime="20201112 12:27:45.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.227" level="INFO">${RESULT} = [{'time': 0.020009625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9360999999998583e-05, 'source_diff': 2.9360999999998583e-05}, {'time': 0.020041347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:45.224" endtime="20201112 12:27:45.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.241" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:45.228" endtime="20201112 12:27:45.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.245" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.244" endtime="20201112 12:27:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.248" level="INFO">VALUE: [2.9360999999998583e-05, 2.8554999999999553e-05, 2.8554999999999553e-05, 2.8556000000002496e-05, 2.8540999999999983e-05, 2.8929999999999928e-05, 2.8597000000001732e-05, 2.8943999999999498e-05, 2.8554999999999553e-05, 2.8943999999999498e-05, 2.8556000000002496e-05, 2.8929999999999928e-05, 2.9361000000002052e-05, 2.8540999999999983e-05, 2.9361000000002052e-05, 2.9374999999998153e-05, 2.9375000000001622e-05, 2.8555999999999027e-05, 2.8957999999999068e-05, 2.8527999999999887e-05, 2.9014000000000817e-05, 2.8541999999999457e-05, 2.8957999999999068e-05, 2.9430000000000428e-05, 2.8541999999999457e-05, 2.8957999999999068e-05, 2.8541999999999457e-05, 2.9360999999998583e-05, 2.8554999999999553e-05, 2.8971999999998638e-05, 2.8943999999999498e-05, 2.8916000000000358e-05, 2.8514000000000317e-05, 2.8582999999998693e-05, 2.8554999999999553e-05, 2.8556000000002496e-05, 2.895899999999854e-05, 2.8527999999999887e-05, 2.8555999999999027e-05, 2.9374999999998153e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.8943999999999498e-05, 2.8556000000002496e-05, 2.9360999999998583e-05, 2.8556000000002496e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.94309999999999e-05, 2.8929999999999928e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.246" endtime="20201112 12:27:45.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.242" endtime="20201112 12:27:45.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.251" endtime="20201112 12:27:45.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.255" endtime="20201112 12:27:45.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.253" endtime="20201112 12:27:45.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.250" endtime="20201112 12:27:45.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.884" endtime="20201112 12:27:45.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:44.884" endtime="20201112 12:27:45.276"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.284" endtime="20201112 12:27:45.301"></status>
</kw>
<msg timestamp="20201112 12:27:45.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.283" endtime="20201112 12:27:45.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.302" endtime="20201112 12:27:45.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.305" endtime="20201112 12:27:45.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.280" endtime="20201112 12:27:45.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.278" endtime="20201112 12:27:45.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.314" endtime="20201112 12:27:45.601"></status>
</kw>
<msg timestamp="20201112 12:27:45.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.312" endtime="20201112 12:27:45.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.606" endtime="20201112 12:27:45.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.614" endtime="20201112 12:27:45.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.310" endtime="20201112 12:27:45.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.308" endtime="20201112 12:27:45.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:45.621" level="INFO">${RESULT} = [{'time': 0.020103542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9360999999998583e-05, 'source_diff': 2.9360999999998583e-05}, {'time': 0.020142569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:45.617" endtime="20201112 12:27:45.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:45.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:45.622" endtime="20201112 12:27:45.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.639" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:27:45.638" endtime="20201112 12:27:45.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.641" level="INFO">VALUE: [2.9360999999998583e-05, 2.9360999999998583e-05, 2.9361000000002052e-05, 2.9348000000001956e-05, 3.0166000000001608e-05, 2.9749999999998528e-05, 2.9763999999998098e-05, 3.022299999999936e-05, 2.9806000000000277e-05, 2.9417000000000332e-05, 3.0152999999998042e-05, 3.019500000000022e-05, 3.0208000000000318e-05, 2.9749999999998528e-05, 2.9360999999998583e-05, 2.9417000000000332e-05, 2.9749999999998528e-05, 2.9750000000001997e-05, 2.9750000000001997e-05, 3.0166999999997612e-05, 2.9764000000001567e-05, 2.9750000000001997e-05, 2.9764000000001567e-05, 3.0194000000000748e-05, 2.9764000000001567e-05, 2.9375000000001622e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 3.016599999999814e-05, 3.0167000000001082e-05, 2.9763999999998098e-05, 2.9346999999999013e-05, 3.0167000000001082e-05, 2.9361000000002052e-05, 3.0167000000001082e-05, 2.9763999999998098e-05, 3.0096999999999763e-05, 3.0167000000001082e-05, 3.0181000000000652e-05, 3.0180000000001178e-05, 2.9346999999999013e-05, 2.9792000000000707e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 2.9764000000001567e-05, 3.0181000000000652e-05, 3.0167000000001082e-05, 2.9778000000001137e-05]</msg>
<status status="PASS" starttime="20201112 12:27:45.640" endtime="20201112 12:27:45.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.635" endtime="20201112 12:27:45.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.645" endtime="20201112 12:27:45.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:45.649" endtime="20201112 12:27:45.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.647" endtime="20201112 12:27:45.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.643" endtime="20201112 12:27:45.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.277" endtime="20201112 12:27:45.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.276" endtime="20201112 12:27:45.670"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.678" endtime="20201112 12:27:45.694"></status>
</kw>
<msg timestamp="20201112 12:27:45.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.677" endtime="20201112 12:27:45.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:45.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:45.696" endtime="20201112 12:27:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.699" endtime="20201112 12:27:45.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.674" endtime="20201112 12:27:45.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.672" endtime="20201112 12:27:45.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:45.708" endtime="20201112 12:27:45.994"></status>
</kw>
<msg timestamp="20201112 12:27:45.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020133222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.706" endtime="20201112 12:27:45.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020133222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:45.999" endtime="20201112 12:27:46.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.007" endtime="20201112 12:27:46.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.704" endtime="20201112 12:27:46.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.702" endtime="20201112 12:27:46.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.014" level="INFO">${RESULT} = [{'time': 0.020133222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.140299999999929e-05, 'source_diff': 3.140299999999929e-05}, {'time': 0.020172986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.010" endtime="20201112 12:27:46.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.015" endtime="20201112 12:27:46.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.033" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.032" endtime="20201112 12:27:46.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.036" level="INFO">VALUE: [3.140299999999929e-05, 3.058300000000069e-05, 3.098600000000021e-05, 3.061099999999983e-05, 3.140299999999929e-05, 3.056900000000112e-05, 3.0584000000000167e-05, 3.058300000000069e-05, 3.142999999999896e-05, 3.059700000000026e-05, 3.06249999999994e-05, 3.055500000000155e-05, 3.141599999999939e-05, 3.102799999999892e-05, 3.0584000000000167e-05, 3.098600000000021e-05, 3.101399999999935e-05, 3.098600000000021e-05, 3.0167000000001082e-05, 3.099999999999978e-05, 3.056900000000112e-05, 3.098600000000021e-05, 3.098700000000315e-05, 3.056999999999713e-05, 3.137500000000015e-05, 3.098600000000021e-05, 3.09579999999976e-05, 3.137500000000015e-05, 3.097200000000064e-05, 3.098600000000021e-05, 3.098600000000021e-05, 3.138899999999972e-05, 3.054200000000146e-05, 3.098599999999674e-05, 3.097300000000011e-05, 3.05700000000006e-05, 3.0584000000000167e-05, 3.097200000000064e-05, 3.104200000000196e-05, 3.058300000000069e-05, 3.098600000000021e-05, 3.0597999999999737e-05, 3.097200000000064e-05, 3.058300000000069e-05, 3.0568999999997654e-05, 3.058300000000069e-05, 3.092999999999846e-05, 3.0167000000001082e-05, 3.05700000000006e-05, 3.098600000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.034" endtime="20201112 12:27:46.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.030" endtime="20201112 12:27:46.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.040" endtime="20201112 12:27:46.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.043" endtime="20201112 12:27:46.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.041" endtime="20201112 12:27:46.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.038" endtime="20201112 12:27:46.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.671" endtime="20201112 12:27:46.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:45.670" endtime="20201112 12:27:46.064"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.073" endtime="20201112 12:27:46.088"></status>
</kw>
<msg timestamp="20201112 12:27:46.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.071" endtime="20201112 12:27:46.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.090" endtime="20201112 12:27:46.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.093" endtime="20201112 12:27:46.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.069" endtime="20201112 12:27:46.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.066" endtime="20201112 12:27:46.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.102" endtime="20201112 12:27:46.388"></status>
</kw>
<msg timestamp="20201112 12:27:46.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.100" endtime="20201112 12:27:46.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020064528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.393" endtime="20201112 12:27:46.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.401" endtime="20201112 12:27:46.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.098" endtime="20201112 12:27:46.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.096" endtime="20201112 12:27:46.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.408" level="INFO">${RESULT} = [{'time': 0.020064528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.144500000000147e-05, 'source_diff': 3.144500000000147e-05}, {'time': 0.020103542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.404" endtime="20201112 12:27:46.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.421" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.409" endtime="20201112 12:27:46.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.426" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.425" endtime="20201112 12:27:46.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.428" level="INFO">VALUE: [3.144500000000147e-05, 3.177799999999967e-05, 3.215200000000057e-05, 3.136100000000058e-05, 3.218099999999918e-05, 3.136100000000058e-05, 3.218099999999918e-05, 3.145899999999757e-05, 3.219500000000222e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137499999999668e-05, 3.217999999999971e-05, 3.226399999999713e-05, 3.137500000000015e-05, 3.140300000000276e-05, 3.179199999999924e-05, 3.219499999999875e-05, 3.1346999999997543e-05, 3.177799999999967e-05, 3.219399999999928e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.217999999999971e-05, 3.1348000000000487e-05, 3.137500000000015e-05, 3.177799999999967e-05, 3.1790999999999764e-05, 3.1790999999999764e-05, 3.141600000000286e-05, 3.220800000000232e-05, 3.1777000000000194e-05, 3.17640000000001e-05, 3.179199999999924e-05, 3.223699999999746e-05, 3.218099999999918e-05, 3.1332999999997974e-05, 3.180600000000228e-05, 3.1777000000000194e-05, 3.177799999999967e-05, 3.177799999999967e-05, 3.219500000000222e-05, 3.179199999999924e-05, 3.137500000000015e-05, 3.177799999999967e-05, 3.140299999999929e-05, 3.1790999999999764e-05, 3.138899999999972e-05, 3.1777000000000194e-05, 3.179199999999924e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.427" endtime="20201112 12:27:46.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.422" endtime="20201112 12:27:46.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.432" endtime="20201112 12:27:46.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.436" endtime="20201112 12:27:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.434" endtime="20201112 12:27:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.430" endtime="20201112 12:27:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.065" endtime="20201112 12:27:46.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.064" endtime="20201112 12:27:46.457"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.465" endtime="20201112 12:27:46.481"></status>
</kw>
<msg timestamp="20201112 12:27:46.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.464" endtime="20201112 12:27:46.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.483" endtime="20201112 12:27:46.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.485" endtime="20201112 12:27:46.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.461" endtime="20201112 12:27:46.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.459" endtime="20201112 12:27:46.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.494" endtime="20201112 12:27:46.781"></status>
</kw>
<msg timestamp="20201112 12:27:46.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.493" endtime="20201112 12:27:46.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.785" endtime="20201112 12:27:46.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.794" endtime="20201112 12:27:46.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.490" endtime="20201112 12:27:46.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.489" endtime="20201112 12:27:46.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:46.801" level="INFO">${RESULT} = [{'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.302800000000092e-05, 'source_diff': 3.302800000000092e-05}, {'time': 0.020138222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:46.797" endtime="20201112 12:27:46.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:46.814" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:46.802" endtime="20201112 12:27:46.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.819" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:27:46.818" endtime="20201112 12:27:46.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.821" level="INFO">VALUE: [3.302800000000092e-05, 3.259700000000226e-05, 3.2582999999999224e-05, 3.261100000000183e-05, 3.2582999999999224e-05, 3.302799999999745e-05, 3.340300000000129e-05, 3.259700000000226e-05, 3.26250000000014e-05, 3.259700000000226e-05, 3.299999999999831e-05, 3.300000000000178e-05, 3.259700000000226e-05, 3.2596999999998794e-05, 3.301399999999788e-05, 3.300000000000178e-05, 3.343000000000096e-05, 3.297299999999864e-05, 3.2596999999998794e-05, 3.219399999999928e-05, 3.266700000000011e-05, 3.2596999999998794e-05, 3.301400000000135e-05, 3.26389999999975e-05, 3.300000000000178e-05, 3.298600000000221e-05, 3.3388999999998253e-05, 3.261100000000183e-05, 3.298600000000221e-05, 3.341600000000139e-05, 3.340300000000129e-05, 3.222300000000136e-05, 3.295800000000307e-05, 3.340299999999782e-05, 3.261100000000183e-05, 3.298599999999874e-05, 3.34580000000001e-05, 3.298600000000221e-05, 3.340300000000129e-05, 3.2596999999998794e-05, 3.298599999999874e-05, 3.261100000000183e-05, 3.297199999999917e-05, 3.340300000000129e-05, 3.2596999999998794e-05, 3.300000000000178e-05, 3.26250000000014e-05, 3.261100000000183e-05, 3.2624999999997933e-05, 3.341599999999792e-05]</msg>
<status status="PASS" starttime="20201112 12:27:46.820" endtime="20201112 12:27:46.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.815" endtime="20201112 12:27:46.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.825" endtime="20201112 12:27:46.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:46.828" endtime="20201112 12:27:46.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.827" endtime="20201112 12:27:46.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.823" endtime="20201112 12:27:46.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.458" endtime="20201112 12:27:46.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.457" endtime="20201112 12:27:46.849"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.858" endtime="20201112 12:27:46.874"></status>
</kw>
<msg timestamp="20201112 12:27:46.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.856" endtime="20201112 12:27:46.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:46.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:46.876" endtime="20201112 12:27:46.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.878" endtime="20201112 12:27:46.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.854" endtime="20201112 12:27:46.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.852" endtime="20201112 12:27:46.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:46.887" endtime="20201112 12:27:47.174"></status>
</kw>
<msg timestamp="20201112 12:27:47.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:46.886" endtime="20201112 12:27:47.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.179" endtime="20201112 12:27:47.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.187" endtime="20201112 12:27:47.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.883" endtime="20201112 12:27:47.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.881" endtime="20201112 12:27:47.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.194" level="INFO">${RESULT} = [{'time': 0.020010903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.419500000000075e-05, 'source_diff': 3.419500000000075e-05}, {'time': 0.020047792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:47.190" endtime="20201112 12:27:47.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:47.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:47.195" endtime="20201112 12:27:47.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.212" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.211" endtime="20201112 12:27:47.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.214" level="INFO">VALUE: [3.419500000000075e-05, 3.340299999999782e-05, 3.340300000000129e-05, 3.416700000000161e-05, 3.422299999999989e-05, 3.341700000000086e-05, 3.3819000000000904e-05, 3.420900000000032e-05, 3.387500000000265e-05, 3.3847000000000044e-05, 3.3791000000001764e-05, 3.341600000000139e-05, 3.3833000000000474e-05, 3.422299999999989e-05, 3.422200000000042e-05, 3.420800000000085e-05, 3.3804999999997865e-05, 3.37779999999982e-05, 3.3804999999997865e-05, 3.3445e-05, 3.380599999999734e-05, 3.382000000000038e-05, 3.419400000000128e-05, 3.420799999999738e-05, 3.381999999999691e-05, 3.3833000000000474e-05, 3.340300000000129e-05, 3.3819000000000904e-05, 3.343000000000096e-05, 3.420900000000032e-05, 3.3445e-05, 3.338900000000172e-05, 3.3804999999997865e-05, 3.416699999999814e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.427800000000217e-05, 3.418099999999771e-05, 3.388900000000222e-05, 3.3374999999998683e-05, 3.422299999999989e-05, 3.341600000000139e-05, 3.3833000000000474e-05, 3.343100000000043e-05, 3.4152999999998573e-05, 3.422299999999989e-05, 3.343000000000096e-05, 3.422200000000042e-05, 3.422200000000042e-05, 3.341600000000139e-05]</msg>
<status status="PASS" starttime="20201112 12:27:47.213" endtime="20201112 12:27:47.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.208" endtime="20201112 12:27:47.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.218" endtime="20201112 12:27:47.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.222" endtime="20201112 12:27:47.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.220" endtime="20201112 12:27:47.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.216" endtime="20201112 12:27:47.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.850" endtime="20201112 12:27:47.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:46.849" endtime="20201112 12:27:47.243"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.251" endtime="20201112 12:27:47.268"></status>
</kw>
<msg timestamp="20201112 12:27:47.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.250" endtime="20201112 12:27:47.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.269" endtime="20201112 12:27:47.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.272" endtime="20201112 12:27:47.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.247" endtime="20201112 12:27:47.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.245" endtime="20201112 12:27:47.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.281" endtime="20201112 12:27:47.568"></status>
</kw>
<msg timestamp="20201112 12:27:47.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.279" endtime="20201112 12:27:47.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.572" endtime="20201112 12:27:47.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.581" endtime="20201112 12:27:47.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.277" endtime="20201112 12:27:47.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.275" endtime="20201112 12:27:47.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.587" level="INFO">${RESULT} = [{'time': 0.020099889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429199999999786e-05, 'source_diff': 4.429199999999786e-05}, {'time': 0.020151889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:47.584" endtime="20201112 12:27:47.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:47.602" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:47.588" endtime="20201112 12:27:47.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.607" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.606" endtime="20201112 12:27:47.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.609" level="INFO">VALUE: [4.429199999999786e-05, 4.447200000000026e-05, 4.4610999999999956e-05, 4.4333000000000566e-05, 4.416600000000173e-05, 4.4694999999997376e-05, 4.457000000000072e-05, 4.4722999999999985e-05, 4.470800000000094e-05, 4.465199999999919e-05, 4.465199999999919e-05, 4.451399999999897e-05, 4.44860000000033e-05, 4.480500000000193e-05, 4.4333000000000566e-05, 4.480500000000193e-05, 4.473600000000008e-05, 4.4917000000001955e-05, 4.4653000000002135e-05, 4.4402999999998416e-05, 4.455600000000115e-05, 4.429199999999786e-05, 4.4917000000001955e-05, 4.4597000000000386e-05, 4.448599999999983e-05, 4.4653000000002135e-05, 4.4110999999999456e-05, 4.4652999999998666e-05, 4.451400000000244e-05, 4.4096999999999886e-05, 4.397199999999976e-05, 4.4583000000000816e-05, 4.4625000000002996e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.4110999999999456e-05, 4.448599999999983e-05, 4.429099999999839e-05, 4.455600000000115e-05, 4.419400000000087e-05, 4.4624999999999526e-05, 4.454200000000158e-05, 4.465200000000266e-05, 4.4360999999999706e-05, 4.4138999999998596e-05, 4.483400000000054e-05, 4.408399999999979e-05, 4.4874999999999776e-05, 4.4652999999998666e-05, 4.426299999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:47.608" endtime="20201112 12:27:47.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.603" endtime="20201112 12:27:47.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.613" endtime="20201112 12:27:47.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:47.616" endtime="20201112 12:27:47.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.615" endtime="20201112 12:27:47.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.611" endtime="20201112 12:27:47.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.243" endtime="20201112 12:27:47.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.243" endtime="20201112 12:27:47.637"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.646" endtime="20201112 12:27:47.663"></status>
</kw>
<msg timestamp="20201112 12:27:47.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.644" endtime="20201112 12:27:47.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:47.664" endtime="20201112 12:27:47.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.667" endtime="20201112 12:27:47.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.642" endtime="20201112 12:27:47.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.640" endtime="20201112 12:27:47.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.676" endtime="20201112 12:27:47.963"></status>
</kw>
<msg timestamp="20201112 12:27:47.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.674" endtime="20201112 12:27:47.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:47.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020048236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:47.967" endtime="20201112 12:27:47.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:47.975" endtime="20201112 12:27:47.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.672" endtime="20201112 12:27:47.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.670" endtime="20201112 12:27:47.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:47.982" level="INFO">${RESULT} = [{'time': 0.020048236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.529199999999886e-05, 'source_diff': 4.529199999999886e-05}, {'time': 0.020101236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:47.979" endtime="20201112 12:27:47.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:47.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:47.983" endtime="20201112 12:27:47.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.000" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:27:47.999" endtime="20201112 12:27:48.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.003" level="INFO">VALUE: [4.529199999999886e-05, 4.577799999999979e-05, 4.594399999999915e-05, 4.5111000000000456e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.498600000000033e-05, 4.5833000000002067e-05, 4.5597000000001386e-05, 4.552799999999954e-05, 4.5459000000001165e-05, 4.583399999999807e-05, 4.541599999999951e-05, 4.526300000000025e-05, 4.513800000000012e-05, 4.502699999999957e-05, 4.5125000000000026e-05, 4.554099999999964e-05, 4.534699999999767e-05, 4.5652999999999666e-05, 4.516599999999926e-05, 4.544399999999865e-05, 4.51939999999984e-05, 4.5069000000001747e-05, 4.5403000000002885e-05, 4.530599999999843e-05, 4.529199999999886e-05, 4.5597000000001386e-05, 4.5361000000000706e-05, 4.547200000000126e-05, 4.536099999999724e-05, 4.4973000000000235e-05, 4.5666999999999236e-05, 4.584800000000111e-05, 4.5361000000000706e-05, 4.5444999999998126e-05, 4.594400000000262e-05, 4.580500000000293e-05, 4.580499999999946e-05, 4.5625000000000526e-05, 4.580499999999946e-05, 4.567999999999933e-05, 4.5583000000001817e-05, 4.592999999999958e-05, 4.587499999999731e-05, 4.5402999999999416e-05, 4.5583000000001817e-05, 4.570800000000194e-05, 4.545799999999822e-05, 4.570799999999847e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.001" endtime="20201112 12:27:48.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.996" endtime="20201112 12:27:48.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.006" endtime="20201112 12:27:48.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.010" endtime="20201112 12:27:48.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.008" endtime="20201112 12:27:48.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.005" endtime="20201112 12:27:48.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.638" endtime="20201112 12:27:48.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:47.638" endtime="20201112 12:27:48.031"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.040" endtime="20201112 12:27:48.056"></status>
</kw>
<msg timestamp="20201112 12:27:48.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.038" endtime="20201112 12:27:48.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.058" endtime="20201112 12:27:48.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.060" endtime="20201112 12:27:48.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.035" endtime="20201112 12:27:48.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.033" endtime="20201112 12:27:48.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.069" endtime="20201112 12:27:48.357"></status>
</kw>
<msg timestamp="20201112 12:27:48.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.068" endtime="20201112 12:27:48.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.361" endtime="20201112 12:27:48.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.370" endtime="20201112 12:27:48.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.065" endtime="20201112 12:27:48.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.063" endtime="20201112 12:27:48.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.377" level="INFO">${RESULT} = [{'time': 0.020357806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.627800000000029e-05, 'source_diff': 4.627800000000029e-05}, {'time': 0.020408806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:48.373" endtime="20201112 12:27:48.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.378" endtime="20201112 12:27:48.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.395" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.394" endtime="20201112 12:27:48.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.397" level="INFO">VALUE: [4.627800000000029e-05, 4.633400000000204e-05, 4.629199999999986e-05, 4.641600000000051e-05, 4.641600000000051e-05, 4.6125000000001026e-05, 4.622200000000201e-05, 4.6611000000001956e-05, 4.644400000000312e-05, 4.631899999999953e-05, 4.6430999999999556e-05, 4.6597000000002387e-05, 4.595800000000219e-05, 4.672199999999904e-05, 4.68199999999995e-05, 4.690299999999745e-05, 4.6611000000001956e-05, 4.6667000000000236e-05, 4.6694999999999376e-05, 4.6403000000000416e-05, 4.652800000000054e-05, 4.666600000000076e-05, 4.6667000000000236e-05, 4.6875000000001776e-05, 4.6361000000001706e-05, 4.612499999999756e-05, 4.658299999999935e-05, 4.648600000000183e-05, 4.658299999999935e-05, 4.65000000000014e-05, 4.631899999999953e-05, 4.598600000000133e-05, 4.6445000000002595e-05, 4.613899999999713e-05, 4.630599999999943e-05, 4.622199999999854e-05, 4.682000000000297e-05, 4.677800000000079e-05, 4.677800000000079e-05, 4.602800000000004e-05, 4.6167000000003205e-05, 4.602800000000004e-05, 4.6653000000000666e-05, 4.616600000000026e-05, 4.6013000000001e-05, 4.605499999999971e-05, 4.6139000000000596e-05, 4.683300000000307e-05, 4.6639000000001096e-05, 4.631899999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.396" endtime="20201112 12:27:48.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.391" endtime="20201112 12:27:48.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.401" endtime="20201112 12:27:48.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.404" endtime="20201112 12:27:48.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.403" endtime="20201112 12:27:48.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.399" endtime="20201112 12:27:48.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.032" endtime="20201112 12:27:48.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.031" endtime="20201112 12:27:48.425"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.434" endtime="20201112 12:27:48.451"></status>
</kw>
<msg timestamp="20201112 12:27:48.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.432" endtime="20201112 12:27:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.452" endtime="20201112 12:27:48.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.454" endtime="20201112 12:27:48.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.430" endtime="20201112 12:27:48.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.428" endtime="20201112 12:27:48.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.464" endtime="20201112 12:27:48.751"></status>
</kw>
<msg timestamp="20201112 12:27:48.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020513847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.462" endtime="20201112 12:27:48.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020513847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:48.755" endtime="20201112 12:27:48.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.764" endtime="20201112 12:27:48.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.460" endtime="20201112 12:27:48.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.458" endtime="20201112 12:27:48.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:48.771" level="INFO">${RESULT} = [{'time': 0.020560931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.708399999999932e-05, 'source_diff': 4.708399999999932e-05}, {'time': 0.020610931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:48.767" endtime="20201112 12:27:48.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:48.784" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:48.771" endtime="20201112 12:27:48.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.788" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:27:48.787" endtime="20201112 12:27:48.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.791" level="INFO">VALUE: [4.708399999999932e-05, 4.7722999999999516e-05, 4.7361000000002706e-05, 4.788800000000287e-05, 4.787499999999931e-05, 4.724999999999868e-05, 4.776399999999875e-05, 4.788899999999888e-05, 4.749999999999893e-05, 4.7153000000001166e-05, 4.741699999999752e-05, 4.780500000000146e-05, 4.786099999999974e-05, 4.727800000000129e-05, 4.755600000000068e-05, 4.7931000000001056e-05, 4.78879999999994e-05, 4.780499999999799e-05, 4.786200000000268e-05, 4.752800000000154e-05, 4.732e-05, 4.734699999999967e-05, 4.7875000000002776e-05, 4.758300000000035e-05, 4.749999999999893e-05, 4.759699999999992e-05, 4.715200000000169e-05, 4.770800000000047e-05, 4.791599999999854e-05, 4.7639000000002096e-05, 4.758300000000035e-05, 4.7375000000002276e-05, 4.791699999999802e-05, 4.784700000000017e-05, 4.761099999999949e-05, 4.773600000000308e-05, 4.7958999999996726e-05, 4.708399999999932e-05, 4.76529999999982e-05, 4.777799999999832e-05, 4.729200000000086e-05, 4.736099999999924e-05, 4.776399999999875e-05, 4.776399999999875e-05, 4.734699999999967e-05, 4.759699999999992e-05, 4.729100000000139e-05, 4.711099999999899e-05, 4.7139000000001596e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201112 12:27:48.790" endtime="20201112 12:27:48.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.785" endtime="20201112 12:27:48.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.795" endtime="20201112 12:27:48.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:48.798" endtime="20201112 12:27:48.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.797" endtime="20201112 12:27:48.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.793" endtime="20201112 12:27:48.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.426" endtime="20201112 12:27:48.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.426" endtime="20201112 12:27:48.819"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.828" endtime="20201112 12:27:48.844"></status>
</kw>
<msg timestamp="20201112 12:27:48.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.826" endtime="20201112 12:27:48.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:48.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:48.845" endtime="20201112 12:27:48.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.848" endtime="20201112 12:27:48.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.824" endtime="20201112 12:27:48.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.822" endtime="20201112 12:27:48.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:48.857" endtime="20201112 12:27:49.144"></status>
</kw>
<msg timestamp="20201112 12:27:49.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:48.856" endtime="20201112 12:27:49.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020085431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:27:49.148" endtime="20201112 12:27:49.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.157" endtime="20201112 12:27:49.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.853" endtime="20201112 12:27:49.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.851" endtime="20201112 12:27:49.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.163" level="INFO">${RESULT} = [{'time': 0.02013425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.881899999999856e-05, 'source_diff': 4.881899999999856e-05}, {'time': 0.02018625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:49.160" endtime="20201112 12:27:49.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:49.164" endtime="20201112 12:27:49.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.183" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.182" endtime="20201112 12:27:49.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.185" level="INFO">VALUE: [4.881899999999856e-05, 4.805599999999771e-05, 4.879199999999889e-05, 4.845800000000122e-05, 4.838899999999938e-05, 4.876399999999975e-05, 4.848599999999689e-05, 4.886200000000021e-05, 4.83330000000011e-05, 4.8681000000001806e-05, 4.837499999999981e-05, 4.855499999999874e-05, 4.843000000000208e-05, 4.879099999999942e-05, 4.82079999999975e-05, 4.822200000000054e-05, 4.879099999999942e-05, 4.877799999999932e-05, 4.8667000000002236e-05, 4.849999999999993e-05, 4.8639000000003096e-05, 4.879200000000236e-05, 4.859700000000092e-05, 4.880599999999846e-05, 4.851400000000297e-05, 4.827799999999882e-05, 4.8139000000002596e-05, 4.877799999999932e-05, 4.8209000000000446e-05, 4.833400000000057e-05, 4.824999999999968e-05, 4.829199999999839e-05, 4.876300000000028e-05, 4.888899999999988e-05, 4.840199999999947e-05, 4.856899999999831e-05, 4.858299999999788e-05, 4.83330000000011e-05, 4.812499999999956e-05, 4.86529999999992e-05, 4.863800000000015e-05, 4.805600000000118e-05, 4.862500000000006e-05, 4.894499999999816e-05, 4.8707999999998e-05, 4.879200000000236e-05, 4.838899999999938e-05, 4.859800000000039e-05, 4.868099999999834e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201112 12:27:49.184" endtime="20201112 12:27:49.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.179" endtime="20201112 12:27:49.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.189" endtime="20201112 12:27:49.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.192" endtime="20201112 12:27:49.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.191" endtime="20201112 12:27:49.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.187" endtime="20201112 12:27:49.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.820" endtime="20201112 12:27:49.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:48.819" endtime="20201112 12:27:49.213"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.222" endtime="20201112 12:27:49.238"></status>
</kw>
<msg timestamp="20201112 12:27:49.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.220" endtime="20201112 12:27:49.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.239" endtime="20201112 12:27:49.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.242" endtime="20201112 12:27:49.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.218" endtime="20201112 12:27:49.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.216" endtime="20201112 12:27:49.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.251" endtime="20201112 12:27:49.538"></status>
</kw>
<msg timestamp="20201112 12:27:49.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.249" endtime="20201112 12:27:49.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020130625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.542" endtime="20201112 12:27:49.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.550" endtime="20201112 12:27:49.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.247" endtime="20201112 12:27:49.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.245" endtime="20201112 12:27:49.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.557" level="INFO">${RESULT} = [{'time': 0.020130625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.900000000000043e-05, 'source_diff': 4.900000000000043e-05}, {'time': 0.020183653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:49.554" endtime="20201112 12:27:49.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.571" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:49.558" endtime="20201112 12:27:49.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.575" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.574" endtime="20201112 12:27:49.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.578" level="INFO">VALUE: [4.900000000000043e-05, 4.958399999999835e-05, 4.98469999999987e-05, 4.902799999999957e-05, 4.909699999999795e-05, 4.902799999999957e-05, 4.988900000000088e-05, 4.930600000000243e-05, 4.8917000000002486e-05, 4.924999999999721e-05, 4.940299999999995e-05, 4.9014e-05, 4.961100000000149e-05, 4.951300000000103e-05, 4.963900000000063e-05, 4.93469999999982e-05, 4.895799999999825e-05, 4.904099999999967e-05, 4.983299999999913e-05, 4.96530000000002e-05, 4.950000000000093e-05, 4.954199999999964e-05, 4.988900000000088e-05, 4.981999999999903e-05, 4.952800000000007e-05, 4.966699999999977e-05, 4.986099999999827e-05, 4.937500000000081e-05, 4.938900000000038e-05, 4.938900000000038e-05, 4.9486999999997366e-05, 4.902799999999957e-05, 4.967999999999986e-05, 4.909700000000142e-05, 4.977700000000085e-05, 4.977700000000085e-05, 4.908299999999838e-05, 4.9707999999999e-05, 4.930500000000296e-05, 4.961100000000149e-05, 4.906900000000228e-05, 4.905500000000271e-05, 4.9431000000002556e-05, 4.936100000000124e-05, 4.936100000000124e-05, 4.962500000000106e-05, 4.93469999999982e-05, 4.977800000000032e-05, 4.9167000000002736e-05, 4.952800000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:27:49.576" endtime="20201112 12:27:49.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.571" endtime="20201112 12:27:49.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.581" endtime="20201112 12:27:49.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.585" endtime="20201112 12:27:49.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.583" endtime="20201112 12:27:49.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.580" endtime="20201112 12:27:49.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.214" endtime="20201112 12:27:49.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.214" endtime="20201112 12:27:49.606"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.614" endtime="20201112 12:27:49.631"></status>
</kw>
<msg timestamp="20201112 12:27:49.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.613" endtime="20201112 12:27:49.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:49.632" endtime="20201112 12:27:49.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.635" endtime="20201112 12:27:49.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.610" endtime="20201112 12:27:49.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.608" endtime="20201112 12:27:49.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.644" endtime="20201112 12:27:49.930"></status>
</kw>
<msg timestamp="20201112 12:27:49.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.642" endtime="20201112 12:27:49.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:49.935" endtime="20201112 12:27:49.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.943" endtime="20201112 12:27:49.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.640" endtime="20201112 12:27:49.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.638" endtime="20201112 12:27:49.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:49.950" level="INFO">${RESULT} = [{'time': 0.020020667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026399999999778e-05, 'source_diff': 5.026399999999778e-05}, {'time': 0.020079625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:49.946" endtime="20201112 12:27:49.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:49.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:49.951" endtime="20201112 12:27:49.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.968" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:27:49.967" endtime="20201112 12:27:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:49.970" level="INFO">VALUE: [5.026399999999778e-05, 5.004200000000014e-05, 5.025000000000168e-05, 5.002800000000057e-05, 5.03339999999991e-05, 5.0320000000003e-05, 5.041700000000052e-05, 5.090299999999798e-05, 5.048600000000236e-05, 5.088899999999841e-05, 5.026300000000178e-05, 5.037500000000181e-05, 5.016600000000079e-05, 5.045799999999975e-05, 5.033299999999963e-05, 5.073600000000261e-05, 5.022199999999907e-05, 5.040299999999748e-05, 5.062500000000206e-05, 5.056900000000031e-05, 5.029200000000039e-05, 5.005599999999971e-05, 5.047199999999932e-05, 5.036100000000224e-05, 5.077799999999785e-05, 5.083300000000013e-05, 5.040300000000095e-05, 5.068100000000034e-05, 4.995899999999873e-05, 5.056999999999978e-05, 5.072299999999905e-05, 5.055500000000074e-05, 5.013900000000113e-05, 5.013900000000113e-05, 5.049999999999846e-05, 5.031900000000006e-05, 5.029100000000092e-05, 5.068100000000034e-05, 5.058299999999988e-05, 5.029200000000039e-05, 5.050000000000193e-05, 5.037500000000181e-05, 5.082000000000003e-05, 5.087499999999884e-05, 5.069499999999991e-05, 5.045899999999923e-05, 5.045899999999923e-05, 4.995899999999873e-05, 5.066700000000077e-05, 5.082000000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:27:49.969" endtime="20201112 12:27:49.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.964" endtime="20201112 12:27:49.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:49.974" endtime="20201112 12:27:49.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:49.977" endtime="20201112 12:27:49.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.976" endtime="20201112 12:27:49.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.972" endtime="20201112 12:27:49.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.607" endtime="20201112 12:27:49.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.606" endtime="20201112 12:27:49.998"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.007" endtime="20201112 12:27:50.024"></status>
</kw>
<msg timestamp="20201112 12:27:50.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.006" endtime="20201112 12:27:50.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.026" endtime="20201112 12:27:50.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.028" endtime="20201112 12:27:50.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.003" endtime="20201112 12:27:50.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.001" endtime="20201112 12:27:50.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.038" endtime="20201112 12:27:50.325"></status>
</kw>
<msg timestamp="20201112 12:27:50.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.036" endtime="20201112 12:27:50.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021020208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.329" endtime="20201112 12:27:50.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.337" endtime="20201112 12:27:50.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.033" endtime="20201112 12:27:50.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.032" endtime="20201112 12:27:50.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.344" level="INFO">${RESULT} = [{'time': 0.021071319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111100000000299e-05, 'source_diff': 5.111100000000299e-05}, {'time': 0.021127361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:50.341" endtime="20201112 12:27:50.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.358" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:50.345" endtime="20201112 12:27:50.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.362" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.361" endtime="20201112 12:27:50.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.365" level="INFO">VALUE: [5.111100000000299e-05, 5.183300000000113e-05, 5.191700000000202e-05, 5.108300000000038e-05, 5.106900000000081e-05, 5.136099999999977e-05, 5.147200000000032e-05, 5.15279999999986e-05, 5.118100000000084e-05, 5.100000000000243e-05, 5.124999999999921e-05, 5.158299999999741e-05, 5.108300000000038e-05, 5.148599999999989e-05, 5.1415999999998574e-05, 5.129200000000139e-05, 5.111099999999952e-05, 5.174999999999971e-05, 5.151299999999956e-05, 5.133300000000063e-05, 5.118000000000136e-05, 5.119400000000093e-05, 5.179099999999895e-05, 5.177800000000232e-05, 5.188899999999941e-05, 5.143099999999762e-05, 5.105499999999777e-05, 5.190300000000245e-05, 5.191700000000202e-05, 5.130600000000096e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.159799999999992e-05, 5.180600000000146e-05, 5.150000000000293e-05, 5.138899999999891e-05, 5.177799999999885e-05, 5.1401999999999004e-05, 5.1707999999997534e-05, 5.1152000000002223e-05, 5.15409999999987e-05, 5.133300000000063e-05, 5.141700000000152e-05, 5.18470000000007e-05, 5.11530000000017e-05, 5.124999999999921e-05, 5.188899999999941e-05, 5.157000000000078e-05, 5.098599999999939e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201112 12:27:50.363" endtime="20201112 12:27:50.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.358" endtime="20201112 12:27:50.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.368" endtime="20201112 12:27:50.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.372" endtime="20201112 12:27:50.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.370" endtime="20201112 12:27:50.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.367" endtime="20201112 12:27:50.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.999" endtime="20201112 12:27:50.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:49.999" endtime="20201112 12:27:50.393"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.402" endtime="20201112 12:27:50.418"></status>
</kw>
<msg timestamp="20201112 12:27:50.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.400" endtime="20201112 12:27:50.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.419" endtime="20201112 12:27:50.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.422" endtime="20201112 12:27:50.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.397" endtime="20201112 12:27:50.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.395" endtime="20201112 12:27:50.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.431" endtime="20201112 12:27:50.717"></status>
</kw>
<msg timestamp="20201112 12:27:50.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.429" endtime="20201112 12:27:50.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020129389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.721" endtime="20201112 12:27:50.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.730" endtime="20201112 12:27:50.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.427" endtime="20201112 12:27:50.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.425" endtime="20201112 12:27:50.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:50.736" level="INFO">${RESULT} = [{'time': 0.020129389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.259700000000145e-05, 'source_diff': 5.259700000000145e-05}, {'time': 0.020184375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:50.733" endtime="20201112 12:27:50.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:50.751" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:50.737" endtime="20201112 12:27:50.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.756" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:27:50.755" endtime="20201112 12:27:50.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.758" level="INFO">VALUE: [5.259700000000145e-05, 5.272200000000157e-05, 5.277799999999985e-05, 5.250000000000046e-05, 5.258400000000135e-05, 5.2735999999997674e-05, 5.255599999999874e-05, 5.227800000000282e-05, 5.205599999999824e-05, 5.288900000000041e-05, 5.255499999999927e-05, 5.283300000000213e-05, 5.244400000000218e-05, 5.231999999999806e-05, 5.213899999999966e-05, 5.255500000000274e-05, 5.262500000000059e-05, 5.223600000000064e-05, 5.213899999999966e-05, 5.261099999999755e-05, 5.26669999999993e-05, 5.207000000000128e-05, 5.244499999999819e-05, 5.2721999999998104e-05, 5.218099999999837e-05, 5.212500000000009e-05, 5.258400000000135e-05, 5.287500000000084e-05, 5.233300000000163e-05, 5.2916000000000074e-05, 5.277700000000038e-05, 5.273600000000114e-05, 5.229099999999945e-05, 5.2707999999998534e-05, 5.261100000000102e-05, 5.262500000000059e-05, 5.2679999999999394e-05, 5.209699999999748e-05, 5.230600000000196e-05, 5.276400000000028e-05, 5.243099999999862e-05, 5.248600000000089e-05, 5.220899999999751e-05, 5.283399999999813e-05, 5.293099999999912e-05, 5.263899999999669e-05, 5.262500000000059e-05, 5.2679999999999394e-05, 5.236100000000077e-05, 5.202699999999963e-05]</msg>
<status status="PASS" starttime="20201112 12:27:50.757" endtime="20201112 12:27:50.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.752" endtime="20201112 12:27:50.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.762" endtime="20201112 12:27:50.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:50.765" endtime="20201112 12:27:50.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.764" endtime="20201112 12:27:50.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.760" endtime="20201112 12:27:50.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.394" endtime="20201112 12:27:50.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.393" endtime="20201112 12:27:50.787"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.795" endtime="20201112 12:27:50.813"></status>
</kw>
<msg timestamp="20201112 12:27:50.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.794" endtime="20201112 12:27:50.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:50.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:50.815" endtime="20201112 12:27:50.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.817" endtime="20201112 12:27:50.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.791" endtime="20201112 12:27:50.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.789" endtime="20201112 12:27:50.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:50.827" endtime="20201112 12:27:51.113"></status>
</kw>
<msg timestamp="20201112 12:27:51.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:50.825" endtime="20201112 12:27:51.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.117" endtime="20201112 12:27:51.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.126" endtime="20201112 12:27:51.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.822" endtime="20201112 12:27:51.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.821" endtime="20201112 12:27:51.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.133" level="INFO">${RESULT} = [{'time': 0.020227819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3652000000001254e-05, 'source_diff': 5.3652000000001254e-05}, {'time': 0.020289903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:51.129" endtime="20201112 12:27:51.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:51.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:51.134" endtime="20201112 12:27:51.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.151" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:27:51.150" endtime="20201112 12:27:51.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.154" level="INFO">VALUE: [5.3652000000001254e-05, 5.336100000000177e-05, 5.362500000000159e-05, 5.354200000000017e-05, 5.306999999999881e-05, 5.3471999999998854e-05, 5.3707999999999534e-05, 5.306999999999881e-05, 5.338899999999744e-05, 5.313900000000066e-05, 5.361099999999855e-05, 5.301400000000053e-05, 5.388900000000141e-05, 5.325000000000121e-05, 5.383399999999913e-05, 5.365299999999726e-05, 5.379200000000042e-05, 5.3888000000001934e-05, 5.338900000000091e-05, 5.3944000000000214e-05, 5.361100000000202e-05, 5.379100000000095e-05, 5.379200000000042e-05, 5.329100000000045e-05, 5.38609999999988e-05, 5.3193999999999464e-05, 5.3485999999998424e-05, 5.391700000000055e-05, 5.304199999999967e-05, 5.390300000000098e-05, 5.377800000000085e-05, 5.363900000000116e-05, 5.344499999999919e-05, 5.359800000000192e-05, 5.3749999999998244e-05, 5.301300000000106e-05, 5.383299999999966e-05, 5.3680000000000394e-05, 5.3443999999999714e-05, 5.329100000000045e-05, 5.358299999999941e-05, 5.395899999999926e-05, 5.3013999999997063e-05, 5.315300000000023e-05, 5.388900000000141e-05, 5.2999999999997494e-05, 5.304199999999967e-05, 5.365299999999726e-05, 5.361099999999855e-05, 5.308400000000185e-05]</msg>
<status status="PASS" starttime="20201112 12:27:51.152" endtime="20201112 12:27:51.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.147" endtime="20201112 12:27:51.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.165" endtime="20201112 12:27:51.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.168" endtime="20201112 12:27:51.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.166" endtime="20201112 12:27:51.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.163" endtime="20201112 12:27:51.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.787" endtime="20201112 12:27:51.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:50.787" endtime="20201112 12:27:51.189"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.198" endtime="20201112 12:27:51.215"></status>
</kw>
<msg timestamp="20201112 12:27:51.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.196" endtime="20201112 12:27:51.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.216" endtime="20201112 12:27:51.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.219" endtime="20201112 12:27:51.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.194" endtime="20201112 12:27:51.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.191" endtime="20201112 12:27:51.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.228" endtime="20201112 12:27:51.515"></status>
</kw>
<msg timestamp="20201112 12:27:51.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.227" endtime="20201112 12:27:51.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.519" endtime="20201112 12:27:51.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.527" endtime="20201112 12:27:51.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.224" endtime="20201112 12:27:51.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.222" endtime="20201112 12:27:51.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.534" level="INFO">${RESULT} = [{'time': 0.020505514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.437499999999887e-05, 'source_diff': 5.437499999999887e-05}, {'time': 0.020569528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:51.531" endtime="20201112 12:27:51.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:51.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:51.535" endtime="20201112 12:27:51.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.552" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:27:51.551" endtime="20201112 12:27:51.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.555" level="INFO">VALUE: [5.437499999999887e-05, 5.488899999999894e-05, 5.4763999999998814e-05, 5.412500000000209e-05, 5.4165999999997855e-05, 5.491699999999808e-05, 5.430600000000049e-05, 5.4444000000000714e-05, 5.4401999999998535e-05, 5.456900000000084e-05, 5.406900000000034e-05, 5.488900000000241e-05, 5.451400000000203e-05, 5.406899999999687e-05, 5.43479999999992e-05, 5.4485999999999424e-05, 5.441699999999758e-05, 5.3971999999999354e-05, 5.465299999999826e-05, 5.479200000000142e-05, 5.432000000000006e-05, 5.405599999999677e-05, 5.393100000000012e-05, 5.4915999999998605e-05, 5.447299999999933e-05, 5.401300000000206e-05, 5.4444000000000714e-05, 5.402700000000163e-05, 5.475000000000271e-05, 5.431900000000059e-05, 5.459699999999998e-05, 5.405500000000077e-05, 5.3944000000000214e-05, 5.4471999999999854e-05, 5.461099999999955e-05, 5.440300000000148e-05, 5.4499999999998994e-05, 5.408399999999938e-05, 5.483300000000066e-05, 5.480500000000152e-05, 5.450000000000246e-05, 5.427800000000135e-05, 5.430600000000049e-05, 5.427800000000135e-05, 5.434699999999973e-05, 5.488900000000241e-05, 5.476400000000228e-05, 5.437499999999887e-05, 5.4722000000000104e-05, 5.454200000000117e-05]</msg>
<status status="PASS" starttime="20201112 12:27:51.553" endtime="20201112 12:27:51.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.549" endtime="20201112 12:27:51.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.558" endtime="20201112 12:27:51.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.562" endtime="20201112 12:27:51.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.560" endtime="20201112 12:27:51.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.557" endtime="20201112 12:27:51.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.190" endtime="20201112 12:27:51.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.189" endtime="20201112 12:27:51.583"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.592" endtime="20201112 12:27:51.609"></status>
</kw>
<msg timestamp="20201112 12:27:51.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.590" endtime="20201112 12:27:51.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.610" endtime="20201112 12:27:51.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.613" endtime="20201112 12:27:51.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.587" endtime="20201112 12:27:51.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.585" endtime="20201112 12:27:51.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.622" endtime="20201112 12:27:51.909"></status>
</kw>
<msg timestamp="20201112 12:27:51.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.621" endtime="20201112 12:27:51.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020830403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:51.913" endtime="20201112 12:27:51.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.922" endtime="20201112 12:27:51.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.618" endtime="20201112 12:27:51.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.616" endtime="20201112 12:27:51.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:51.928" level="INFO">${RESULT} = [{'time': 0.020830403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5472000000000854e-05, 'source_diff': 5.5472000000000854e-05}, {'time': 0.020894417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:51.925" endtime="20201112 12:27:51.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:51.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:51.929" endtime="20201112 12:27:51.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.947" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:27:51.946" endtime="20201112 12:27:51.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:51.949" level="INFO">VALUE: [5.5472000000000854e-05, 5.506999999999734e-05, 5.49869999999994e-05, 5.520900000000051e-05, 5.56809999999984e-05, 5.58610000000008e-05, 5.5429999999998675e-05, 5.506899999999787e-05, 5.5151999999999285e-05, 5.5929999999999175e-05, 5.590299999999951e-05, 5.590299999999951e-05, 5.513899999999919e-05, 5.4972000000000354e-05, 5.5249999999999744e-05, 5.5791999999998954e-05, 5.518100000000137e-05, 5.491700000000155e-05, 5.5763999999999814e-05, 5.566699999999883e-05, 5.582000000000156e-05, 5.5166000000002324e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.5651999999999785e-05, 5.531900000000159e-05, 5.561100000000055e-05, 5.5486000000000424e-05, 5.580500000000252e-05, 5.551400000000303e-05, 5.558400000000088e-05, 5.504200000000167e-05, 5.5041999999998203e-05, 5.563899999999969e-05, 5.50280000000021e-05, 5.555600000000174e-05, 5.559800000000045e-05, 5.588899999999994e-05, 5.513899999999919e-05, 5.558400000000088e-05, 5.581999999999809e-05, 5.530500000000202e-05, 5.561100000000055e-05, 5.556900000000184e-05, 5.5527999999999134e-05, 5.534700000000073e-05, 5.5777999999999384e-05, 5.580600000000199e-05, 5.558299999999794e-05, 5.5708000000001534e-05]</msg>
<status status="PASS" starttime="20201112 12:27:51.948" endtime="20201112 12:27:51.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.943" endtime="20201112 12:27:51.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.953" endtime="20201112 12:27:51.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:51.957" endtime="20201112 12:27:51.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.955" endtime="20201112 12:27:51.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.951" endtime="20201112 12:27:51.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.584" endtime="20201112 12:27:51.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.583" endtime="20201112 12:27:51.978"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:51.987" endtime="20201112 12:27:52.003"></status>
</kw>
<msg timestamp="20201112 12:27:52.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:51.985" endtime="20201112 12:27:52.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.004" endtime="20201112 12:27:52.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.007" endtime="20201112 12:27:52.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.982" endtime="20201112 12:27:52.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.980" endtime="20201112 12:27:52.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.016" endtime="20201112 12:27:52.303"></status>
</kw>
<msg timestamp="20201112 12:27:52.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.015" endtime="20201112 12:27:52.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.308" endtime="20201112 12:27:52.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.316" endtime="20201112 12:27:52.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.012" endtime="20201112 12:27:52.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.010" endtime="20201112 12:27:52.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.323" level="INFO">${RESULT} = [{'time': 0.020280708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6500000000000994e-05, 'source_diff': 5.6500000000000994e-05}, {'time': 0.020341722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:52.319" endtime="20201112 12:27:52.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.338" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:52.324" endtime="20201112 12:27:52.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.342" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.341" endtime="20201112 12:27:52.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.345" level="INFO">VALUE: [5.6500000000000994e-05, 5.681899999999962e-05, 5.613900000000019e-05, 5.60549999999993e-05, 5.6721999999998635e-05, 5.6514000000000564e-05, 5.655600000000274e-05, 5.5985999999997454e-05, 5.612500000000062e-05, 5.615299999999976e-05, 5.6041999999999204e-05, 5.633399999999816e-05, 5.673699999999768e-05, 5.6819999999999093e-05, 5.640300000000001e-05, 5.6555999999999274e-05, 5.5985999999997454e-05, 5.6000000000000494e-05, 5.659700000000198e-05, 5.6193999999998995e-05, 5.5972000000001354e-05, 5.654100000000023e-05, 5.5943999999998745e-05, 5.6486000000001424e-05, 5.6722000000002104e-05, 5.6444000000002714e-05, 5.6736000000001674e-05, 5.5958000000001784e-05, 5.670900000000201e-05, 5.6569999999998843e-05, 5.622300000000108e-05, 5.6250000000000744e-05, 5.6305999999999023e-05, 5.647300000000133e-05, 5.6485999999997955e-05, 5.6249999999997274e-05, 5.679100000000048e-05, 5.6943999999999745e-05, 5.6930000000000175e-05, 5.6277999999999884e-05, 5.611100000000105e-05, 5.60280000000031e-05, 5.607000000000181e-05, 5.656899999999937e-05, 5.641699999999958e-05, 5.683399999999866e-05, 5.5985999999997454e-05, 5.6319999999998593e-05, 5.6638000000001215e-05, 5.6528000000000134e-05]</msg>
<status status="PASS" starttime="20201112 12:27:52.343" endtime="20201112 12:27:52.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.339" endtime="20201112 12:27:52.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.348" endtime="20201112 12:27:52.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.352" endtime="20201112 12:27:52.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.350" endtime="20201112 12:27:52.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.347" endtime="20201112 12:27:52.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.979" endtime="20201112 12:27:52.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:51.978" endtime="20201112 12:27:52.373"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.382" endtime="20201112 12:27:52.399"></status>
</kw>
<msg timestamp="20201112 12:27:52.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.380" endtime="20201112 12:27:52.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.401" endtime="20201112 12:27:52.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.403" endtime="20201112 12:27:52.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.377" endtime="20201112 12:27:52.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.375" endtime="20201112 12:27:52.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.412" endtime="20201112 12:27:52.698"></status>
</kw>
<msg timestamp="20201112 12:27:52.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:52.411" endtime="20201112 12:27:52.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020779347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:52.703" endtime="20201112 12:27:52.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.711" endtime="20201112 12:27:52.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.408" endtime="20201112 12:27:52.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.406" endtime="20201112 12:27:52.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:52.718" level="INFO">${RESULT} = [{'time': 0.0208365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.715300000000076e-05, 'source_diff': 5.715300000000076e-05}, {'time': 0.020896514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:52.715" endtime="20201112 12:27:52.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:52.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:52.719" endtime="20201112 12:27:52.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.736" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:27:52.735" endtime="20201112 12:27:52.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.739" level="INFO">VALUE: [5.715300000000076e-05, 5.7736000000002674e-05, 5.719499999999947e-05, 5.744499999999972e-05, 5.720899999999904e-05, 5.743099999999668e-05, 5.779099999999801e-05, 5.715300000000076e-05, 5.738900000000144e-05, 5.7708000000000065e-05, 5.7735999999999205e-05, 5.7430000000000675e-05, 5.7749999999998775e-05, 5.71809999999999e-05, 5.758299999999994e-05, 5.7457999999999815e-05, 5.740300000000101e-05, 5.708299999999944e-05, 5.762499999999865e-05, 5.7792000000000954e-05, 5.7069999999999343e-05, 5.736099999999883e-05, 5.763899999999822e-05, 5.716700000000033e-05, 5.76810000000004e-05, 5.7166000000000855e-05, 5.730499999999708e-05, 5.7666000000001355e-05, 5.736099999999883e-05, 5.7680000000000925e-05, 5.763900000000169e-05, 5.783300000000019e-05, 5.712499999999815e-05, 5.713900000000119e-05, 5.7471999999999385e-05, 5.7542000000000704e-05, 5.733299999999969e-05, 5.7055999999999774e-05, 5.7555999999996804e-05, 5.720899999999904e-05, 5.784799999999923e-05, 5.7027999999997164e-05, 5.7721999999999635e-05, 5.734799999999873e-05, 5.786099999999933e-05, 5.712499999999815e-05, 5.706899999999987e-05, 5.765300000000126e-05, 5.7777999999997914e-05, 5.7291999999996984e-05]</msg>
<status status="PASS" starttime="20201112 12:27:52.737" endtime="20201112 12:27:52.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.732" endtime="20201112 12:27:52.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.742" endtime="20201112 12:27:52.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:52.746" endtime="20201112 12:27:52.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.744" endtime="20201112 12:27:52.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.740" endtime="20201112 12:27:52.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.374" endtime="20201112 12:27:52.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.373" endtime="20201112 12:27:52.767"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.776" endtime="20201112 12:27:52.793"></status>
</kw>
<msg timestamp="20201112 12:27:52.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.774" endtime="20201112 12:27:52.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:52.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:52.795" endtime="20201112 12:27:52.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.797" endtime="20201112 12:27:52.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.771" endtime="20201112 12:27:52.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.769" endtime="20201112 12:27:52.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:52.806" endtime="20201112 12:27:53.094"></status>
</kw>
<msg timestamp="20201112 12:27:53.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:52.805" endtime="20201112 12:27:53.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.098" endtime="20201112 12:27:53.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.107" endtime="20201112 12:27:53.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.802" endtime="20201112 12:27:53.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.800" endtime="20201112 12:27:53.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.114" level="INFO">${RESULT} = [{'time': 0.021111847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.813899999999872e-05, 'source_diff': 5.813899999999872e-05}, {'time': 0.021174875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:53.110" endtime="20201112 12:27:53.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.115" endtime="20201112 12:27:53.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.132" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.131" endtime="20201112 12:27:53.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.134" level="INFO">VALUE: [5.813899999999872e-05, 5.841699999999811e-05, 5.813900000000219e-05, 5.8014000000002064e-05, 5.812499999999915e-05, 5.8457999999997345e-05, 5.841699999999811e-05, 5.865299999999879e-05, 5.8848000000000233e-05, 5.868099999999793e-05, 5.862499999999965e-05, 5.811099999999958e-05, 5.881899999999815e-05, 5.808300000000044e-05, 5.866699999999836e-05, 5.812500000000262e-05, 5.8736000000000205e-05, 5.8208000000000565e-05, 5.840299999999854e-05, 5.7972000000003354e-05, 5.80689999999974e-05, 5.820900000000004e-05, 5.888899999999947e-05, 5.8306000000001024e-05, 5.8278000000001884e-05, 5.840300000000201e-05, 5.8777999999998914e-05, 5.838899999999897e-05, 5.8637999999999746e-05, 5.8944000000001745e-05, 5.861100000000008e-05, 5.8763999999999345e-05, 5.8235999999999705e-05, 5.865300000000226e-05, 5.8763999999999345e-05, 5.8513999999999095e-05, 5.863899999999922e-05, 5.7985999999999455e-05, 5.88749999999999e-05, 5.8320000000000594e-05, 5.8056000000000774e-05, 5.815300000000176e-05, 5.8542000000001704e-05, 5.838900000000244e-05, 5.8513999999999095e-05, 5.8278000000001884e-05, 5.884699999999729e-05, 5.804099999999826e-05, 5.812499999999915e-05, 5.881900000000162e-05]</msg>
<status status="PASS" starttime="20201112 12:27:53.133" endtime="20201112 12:27:53.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.128" endtime="20201112 12:27:53.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.138" endtime="20201112 12:27:53.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.141" endtime="20201112 12:27:53.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.140" endtime="20201112 12:27:53.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.136" endtime="20201112 12:27:53.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.768" endtime="20201112 12:27:53.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:52.767" endtime="20201112 12:27:53.162"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.171" endtime="20201112 12:27:53.189"></status>
</kw>
<msg timestamp="20201112 12:27:53.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.170" endtime="20201112 12:27:53.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.191" endtime="20201112 12:27:53.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.194" endtime="20201112 12:27:53.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.167" endtime="20201112 12:27:53.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.165" endtime="20201112 12:27:53.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.203" endtime="20201112 12:27:53.490"></status>
</kw>
<msg timestamp="20201112 12:27:53.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.201" endtime="20201112 12:27:53.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.494" endtime="20201112 12:27:53.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.503" endtime="20201112 12:27:53.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.199" endtime="20201112 12:27:53.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.197" endtime="20201112 12:27:53.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.510" level="INFO">${RESULT} = [{'time': 0.020050069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9665999999999886e-05, 'source_diff': 5.9665999999999886e-05}, {'time': 0.020118069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:27:53.506" endtime="20201112 12:27:53.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.511" endtime="20201112 12:27:53.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.528" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.527" endtime="20201112 12:27:53.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.530" level="INFO">VALUE: [5.9665999999999886e-05, 5.979100000000001e-05, 5.933300000000169e-05, 5.9916000000000136e-05, 5.9651999999996846e-05, 5.9693999999999026e-05, 5.9415999999999636e-05, 5.8985999999996985e-05, 5.979100000000001e-05, 5.9013999999999595e-05, 5.906900000000187e-05, 5.9013999999999595e-05, 5.965299999999979e-05, 5.991699999999961e-05, 5.9791999999999484e-05, 5.9277999999999414e-05, 5.912500000000015e-05, 5.986100000000133e-05, 5.9597999999997514e-05, 5.9277999999999414e-05, 5.9486000000000955e-05, 5.908300000000144e-05, 5.9151999999999816e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.913900000000319e-05, 5.980499999999958e-05, 5.984699999999829e-05, 5.9457999999998346e-05, 5.96949999999985e-05, 5.9041999999998734e-05, 5.9638000000000746e-05, 5.912500000000015e-05, 5.9707999999998596e-05, 5.9292000000002454e-05, 5.9347999999997264e-05, 5.9348000000000734e-05, 5.9485999999997485e-05, 5.9263999999999845e-05, 5.90689999999984e-05, 5.8915999999999136e-05, 5.955499999999933e-05, 5.913899999999972e-05, 5.940299999999954e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.93750000000004e-05, 5.959700000000151e-05, 5.9291999999998984e-05, 5.8972000000000885e-05]</msg>
<status status="PASS" starttime="20201112 12:27:53.529" endtime="20201112 12:27:53.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.524" endtime="20201112 12:27:53.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.534" endtime="20201112 12:27:53.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.537" endtime="20201112 12:27:53.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.536" endtime="20201112 12:27:53.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.532" endtime="20201112 12:27:53.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.163" endtime="20201112 12:27:53.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.163" endtime="20201112 12:27:53.558"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.568" endtime="20201112 12:27:53.586"></status>
</kw>
<msg timestamp="20201112 12:27:53.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.566" endtime="20201112 12:27:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.588" endtime="20201112 12:27:53.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.590" endtime="20201112 12:27:53.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.563" endtime="20201112 12:27:53.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.561" endtime="20201112 12:27:53.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.600" endtime="20201112 12:27:53.886"></status>
</kw>
<msg timestamp="20201112 12:27:53.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020899986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.598" endtime="20201112 12:27:53.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020899986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020960819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.890" endtime="20201112 12:27:53.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.899" endtime="20201112 12:27:53.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.595" endtime="20201112 12:27:53.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.594" endtime="20201112 12:27:53.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:53.905" level="INFO">${RESULT} = [{'time': 0.020960819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083299999999972e-05, 'source_diff': 6.083299999999972e-05}, {'time': 0.021028833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:53.902" endtime="20201112 12:27:53.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:53.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:53.906" endtime="20201112 12:27:53.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.925" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:27:53.924" endtime="20201112 12:27:53.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.927" level="INFO">VALUE: [6.083299999999972e-05, 6.077700000000144e-05, 6.034699999999879e-05, 6.0499999999998055e-05, 6.0721999999999166e-05, 6.0764000000001345e-05, 6.084700000000276e-05, 6.0014000000000595e-05, 6.0028000000000165e-05, 6.0777999999997445e-05, 6.066700000000036e-05, 6.0694000000000026e-05, 6.0334000000002164e-05, 6.090300000000104e-05, 6.091699999999714e-05, 6.083299999999972e-05, 6.0430000000000206e-05, 6.006900000000287e-05, 6.034699999999879e-05, 6.0402000000001066e-05, 6.0014000000000595e-05, 6.084699999999929e-05, 6.0264000000000845e-05, 6.009699999999854e-05, 6.012499999999768e-05, 6.0041999999999734e-05, 5.9958000000002315e-05, 6.038900000000097e-05, 6.012500000000115e-05, 5.994500000000222e-05, 5.997300000000136e-05, 6.0749999999998305e-05, 6.0819999999999624e-05, 6.012500000000115e-05, 6.086100000000233e-05, 6.016699999999986e-05, 6.058299999999947e-05, 6.079099999999754e-05, 6.0249999999997805e-05, 6.095899999999932e-05, 6.0457999999999346e-05, 6.062500000000165e-05, 6.093100000000018e-05, 6.0806000000000054e-05, 6.040300000000054e-05, 6.0778000000000915e-05, 6.062500000000165e-05, 6.0278000000000415e-05, 6.072300000000211e-05, 6.0680000000000456e-05]</msg>
<status status="PASS" starttime="20201112 12:27:53.926" endtime="20201112 12:27:53.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.921" endtime="20201112 12:27:53.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.931" endtime="20201112 12:27:53.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:53.935" endtime="20201112 12:27:53.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.933" endtime="20201112 12:27:53.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.929" endtime="20201112 12:27:53.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.559" endtime="20201112 12:27:53.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.559" endtime="20201112 12:27:53.956"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.964" endtime="20201112 12:27:53.981"></status>
</kw>
<msg timestamp="20201112 12:27:53.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.963" endtime="20201112 12:27:53.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:53.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:53.983" endtime="20201112 12:27:53.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.985" endtime="20201112 12:27:53.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.960" endtime="20201112 12:27:53.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.958" endtime="20201112 12:27:53.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:53.994" endtime="20201112 12:27:54.282"></status>
</kw>
<msg timestamp="20201112 12:27:54.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:53.993" endtime="20201112 12:27:54.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.286" endtime="20201112 12:27:54.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.295" endtime="20201112 12:27:54.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.990" endtime="20201112 12:27:54.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.988" endtime="20201112 12:27:54.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.301" level="INFO">${RESULT} = [{'time': 0.020349931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.123700000000218e-05, 'source_diff': 6.123700000000218e-05}, {'time': 0.020420917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:54.298" endtime="20201112 12:27:54.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.315" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:54.302" endtime="20201112 12:27:54.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.319" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.318" endtime="20201112 12:27:54.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.322" level="INFO">VALUE: [6.123700000000218e-05, 6.143100000000068e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.130600000000055e-05, 6.137499999999893e-05, 6.12499999999988e-05, 6.188799999999953e-05, 6.166599999999842e-05, 6.15690000000009e-05, 6.136099999999936e-05, 6.176400000000234e-05, 6.165300000000179e-05, 6.116699999999739e-05, 6.123599999999924e-05, 6.15560000000008e-05, 6.181900000000115e-05, 6.191700000000161e-05, 6.15560000000008e-05, 6.097300000000236e-05, 6.163799999999928e-05, 6.133300000000022e-05, 6.183300000000072e-05, 6.19439999999978e-05, 6.130499999999761e-05, 6.147199999999992e-05, 6.152800000000166e-05, 6.161099999999961e-05, 6.152800000000166e-05, 6.145800000000035e-05, 6.176400000000234e-05, 6.176400000000234e-05, 6.151399999999863e-05, 6.147199999999992e-05, 6.1888999999999e-05, 6.134700000000326e-05, 6.182000000000062e-05, 6.116600000000139e-05, 6.162500000000265e-05, 6.109699999999954e-05, 6.179100000000201e-05, 6.136099999999936e-05, 6.123599999999924e-05, 6.179099999999854e-05, 6.184699999999682e-05, 6.1000000000002025e-05, 6.154100000000176e-05, 6.0957999999999846e-05, 6.154200000000123e-05, 6.173599999999974e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.320" endtime="20201112 12:27:54.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.316" endtime="20201112 12:27:54.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.325" endtime="20201112 12:27:54.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.329" endtime="20201112 12:27:54.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.327" endtime="20201112 12:27:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.324" endtime="20201112 12:27:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.957" endtime="20201112 12:27:54.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:53.956" endtime="20201112 12:27:54.350"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.359" endtime="20201112 12:27:54.377"></status>
</kw>
<msg timestamp="20201112 12:27:54.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.357" endtime="20201112 12:27:54.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.378" endtime="20201112 12:27:54.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.381" endtime="20201112 12:27:54.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.354" endtime="20201112 12:27:54.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.352" endtime="20201112 12:27:54.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.390" endtime="20201112 12:27:54.676"></status>
</kw>
<msg timestamp="20201112 12:27:54.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.388" endtime="20201112 12:27:54.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.681" endtime="20201112 12:27:54.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.689" endtime="20201112 12:27:54.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.386" endtime="20201112 12:27:54.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.384" endtime="20201112 12:27:54.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:54.696" level="INFO">${RESULT} = [{'time': 0.020157889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.220799999999763e-05, 'source_diff': 6.220799999999763e-05}, {'time': 0.020229903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:54.692" endtime="20201112 12:27:54.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:54.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:54.697" endtime="20201112 12:27:54.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.715" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:27:54.714" endtime="20201112 12:27:54.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.717" level="INFO">VALUE: [6.220799999999763e-05, 6.259700000000104e-05, 6.270900000000107e-05, 6.265299999999932e-05, 6.255599999999834e-05, 6.259699999999757e-05, 6.250000000000006e-05, 6.247200000000092e-05, 6.280499999999911e-05, 6.201399999999913e-05, 6.272200000000117e-05, 6.255500000000233e-05, 6.233300000000122e-05, 6.248599999999702e-05, 6.26950000000015e-05, 6.197200000000042e-05, 6.211099999999664e-05, 6.279200000000248e-05, 6.208400000000044e-05, 6.199999999999956e-05, 6.245900000000082e-05, 6.265299999999932e-05, 6.20279999999987e-05, 6.213899999999925e-05, 6.288800000000053e-05, 6.20279999999987e-05, 6.281900000000215e-05, 6.273600000000074e-05, 6.226400000000284e-05, 6.255599999999834e-05, 6.293100000000218e-05, 6.272200000000117e-05, 6.23340000000007e-05, 6.226399999999938e-05, 6.247200000000092e-05, 6.279199999999902e-05, 6.25279999999992e-05, 6.209800000000001e-05, 6.232000000000112e-05, 6.212499999999968e-05, 6.286100000000086e-05, 6.287500000000043e-05, 6.283299999999825e-05, 6.254199999999877e-05, 6.218000000000196e-05, 6.276399999999988e-05, 6.261100000000061e-05, 6.27500000000003e-05, 6.259700000000104e-05, 6.229200000000198e-05]</msg>
<status status="PASS" starttime="20201112 12:27:54.716" endtime="20201112 12:27:54.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.711" endtime="20201112 12:27:54.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.721" endtime="20201112 12:27:54.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:54.724" endtime="20201112 12:27:54.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.723" endtime="20201112 12:27:54.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.719" endtime="20201112 12:27:54.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.351" endtime="20201112 12:27:54.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.350" endtime="20201112 12:27:54.745"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.754" endtime="20201112 12:27:54.771"></status>
</kw>
<msg timestamp="20201112 12:27:54.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.752" endtime="20201112 12:27:54.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:54.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:54.773" endtime="20201112 12:27:54.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.775" endtime="20201112 12:27:54.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.750" endtime="20201112 12:27:54.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.748" endtime="20201112 12:27:54.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:54.784" endtime="20201112 12:27:55.071"></status>
</kw>
<msg timestamp="20201112 12:27:55.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:54.783" endtime="20201112 12:27:55.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020036014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.076" endtime="20201112 12:27:55.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.084" endtime="20201112 12:27:55.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.780" endtime="20201112 12:27:55.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.779" endtime="20201112 12:27:55.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.091" level="INFO">${RESULT} = [{'time': 0.020036014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.30560000000023e-05, 'source_diff': 6.30560000000023e-05}, {'time': 0.020107014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:55.088" endtime="20201112 12:27:55.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.092" endtime="20201112 12:27:55.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.109" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.108" endtime="20201112 12:27:55.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.111" level="INFO">VALUE: [6.30560000000023e-05, 6.37219999999987e-05, 6.322300000000114e-05, 6.311200000000058e-05, 6.380500000000011e-05, 6.383299999999925e-05, 6.308400000000144e-05, 6.297200000000142e-05, 6.358300000000247e-05, 6.366600000000042e-05, 6.387500000000143e-05, 6.354199999999977e-05, 6.368099999999946e-05, 6.295800000000185e-05, 6.400000000000156e-05, 6.309700000000154e-05, 6.316699999999939e-05, 6.3195000000002e-05, 6.377800000000045e-05, 6.304199999999927e-05, 6.336200000000083e-05, 6.345899999999835e-05, 6.380500000000011e-05, 6.295800000000185e-05, 6.35690000000029e-05, 6.329100000000004e-05, 6.32219999999982e-05, 6.345799999999888e-05, 6.358300000000247e-05, 6.333299999999875e-05, 6.338899999999703e-05, 6.393099999999971e-05, 6.301400000000013e-05, 6.37500000000013e-05, 6.365300000000032e-05, 6.300000000000056e-05, 6.35280000000002e-05, 6.3889000000001e-05, 6.379200000000002e-05, 6.381899999999968e-05, 6.37219999999987e-05, 6.342999999999974e-05, 6.356899999999943e-05, 6.367999999999999e-05, 6.330499999999961e-05, 6.376400000000088e-05, 6.384699999999882e-05, 6.311100000000111e-05, 6.384700000000229e-05, 6.332000000000212e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.110" endtime="20201112 12:27:55.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.105" endtime="20201112 12:27:55.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.115" endtime="20201112 12:27:55.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.119" endtime="20201112 12:27:55.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.117" endtime="20201112 12:27:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.113" endtime="20201112 12:27:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.746" endtime="20201112 12:27:55.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:54.746" endtime="20201112 12:27:55.140"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.148" endtime="20201112 12:27:55.165"></status>
</kw>
<msg timestamp="20201112 12:27:55.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.147" endtime="20201112 12:27:55.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.167" endtime="20201112 12:27:55.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.169" endtime="20201112 12:27:55.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.144" endtime="20201112 12:27:55.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.142" endtime="20201112 12:27:55.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.179" endtime="20201112 12:27:55.466"></status>
</kw>
<msg timestamp="20201112 12:27:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.177" endtime="20201112 12:27:55.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.470" endtime="20201112 12:27:55.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.478" endtime="20201112 12:27:55.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.174" endtime="20201112 12:27:55.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.172" endtime="20201112 12:27:55.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.485" level="INFO">${RESULT} = [{'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.419499999999953e-05, 'source_diff': 6.419499999999953e-05}, {'time': 0.020293167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:55.482" endtime="20201112 12:27:55.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.500" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.486" endtime="20201112 12:27:55.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.504" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.503" endtime="20201112 12:27:55.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.507" level="INFO">VALUE: [6.419499999999953e-05, 6.400000000000156e-05, 6.487500000000243e-05, 6.426299999999843e-05, 6.408400000000244e-05, 6.433299999999975e-05, 6.479100000000154e-05, 6.408300000000297e-05, 6.397200000000242e-05, 6.433299999999975e-05, 6.455500000000086e-05, 6.413900000000125e-05, 6.481899999999721e-05, 6.429200000000052e-05, 6.40280000000007e-05, 6.399999999999809e-05, 6.447299999999892e-05, 6.483399999999973e-05, 6.474999999999884e-05, 6.426299999999843e-05, 6.399999999999809e-05, 6.486099999999939e-05, 6.415299999999735e-05, 6.487499999999896e-05, 6.449999999999859e-05, 6.406899999999993e-05, 6.426400000000138e-05, 6.477800000000145e-05, 6.406899999999993e-05, 6.408300000000297e-05, 6.459799999999905e-05, 6.451399999999816e-05, 6.472300000000264e-05, 6.493099999999724e-05, 6.466600000000142e-05, 6.477700000000197e-05, 6.479099999999807e-05, 6.437500000000193e-05, 6.47639999999984e-05, 6.495899999999985e-05, 6.434700000000279e-05, 6.473600000000274e-05, 6.447199999999945e-05, 6.481899999999721e-05, 6.461100000000261e-05, 6.411100000000211e-05, 6.479200000000102e-05, 6.405599999999984e-05, 6.400000000000156e-05, 6.448699999999849e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.505" endtime="20201112 12:27:55.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.501" endtime="20201112 12:27:55.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.511" endtime="20201112 12:27:55.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.514" endtime="20201112 12:27:55.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.512" endtime="20201112 12:27:55.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.509" endtime="20201112 12:27:55.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.141" endtime="20201112 12:27:55.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.140" endtime="20201112 12:27:55.535"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.544" endtime="20201112 12:27:55.562"></status>
</kw>
<msg timestamp="20201112 12:27:55.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.542" endtime="20201112 12:27:55.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.563" endtime="20201112 12:27:55.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.566" endtime="20201112 12:27:55.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.540" endtime="20201112 12:27:55.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.537" endtime="20201112 12:27:55.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.575" endtime="20201112 12:27:55.862"></status>
</kw>
<msg timestamp="20201112 12:27:55.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.573" endtime="20201112 12:27:55.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.867" endtime="20201112 12:27:55.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.875" endtime="20201112 12:27:55.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.571" endtime="20201112 12:27:55.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.569" endtime="20201112 12:27:55.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:55.882" level="INFO">${RESULT} = [{'time': 0.020899194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554099999999882e-05, 'source_diff': 6.554099999999882e-05}, {'time': 0.020970208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:55.878" endtime="20201112 12:27:55.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:55.895" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:55.883" endtime="20201112 12:27:55.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.900" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:27:55.899" endtime="20201112 12:27:55.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.902" level="INFO">VALUE: [6.554099999999882e-05, 6.541600000000217e-05, 6.52639999999989e-05, 6.527799999999848e-05, 6.574999999999984e-05, 6.587499999999996e-05, 6.4889000000002e-05, 6.582000000000116e-05, 6.527799999999848e-05, 6.57220000000007e-05, 6.54029999999986e-05, 6.522299999999967e-05, 6.57639999999994e-05, 6.5583999999997e-05, 6.566599999999895e-05, 6.554100000000229e-05, 6.573600000000027e-05, 6.570800000000113e-05, 6.548600000000002e-05, 6.561100000000014e-05, 6.591699999999867e-05, 6.591699999999867e-05, 6.55419999999983e-05, 6.536099999999989e-05, 6.566700000000189e-05, 6.586100000000039e-05, 6.574999999999984e-05, 6.512500000000268e-05, 6.542999999999827e-05, 6.522299999999967e-05, 6.548600000000002e-05, 6.533300000000075e-05, 6.574999999999984e-05, 6.580499999999864e-05, 6.52500000000028e-05, 6.556899999999796e-05, 6.577800000000245e-05, 6.594499999999781e-05, 6.52639999999989e-05, 6.568100000000146e-05, 6.547200000000045e-05, 6.50700000000004e-05, 6.569500000000103e-05, 6.580500000000211e-05, 6.533300000000075e-05, 6.534700000000032e-05, 6.502700000000222e-05, 6.492999999999777e-05, 6.543000000000174e-05, 6.566700000000189e-05]</msg>
<status status="PASS" starttime="20201112 12:27:55.901" endtime="20201112 12:27:55.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.896" endtime="20201112 12:27:55.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.906" endtime="20201112 12:27:55.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:55.909" endtime="20201112 12:27:55.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.908" endtime="20201112 12:27:55.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.904" endtime="20201112 12:27:55.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.536" endtime="20201112 12:27:55.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.535" endtime="20201112 12:27:55.930"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.939" endtime="20201112 12:27:55.956"></status>
</kw>
<msg timestamp="20201112 12:27:55.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.937" endtime="20201112 12:27:55.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:55.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:55.957" endtime="20201112 12:27:55.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.960" endtime="20201112 12:27:55.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.935" endtime="20201112 12:27:55.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.933" endtime="20201112 12:27:55.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:55.969" endtime="20201112 12:27:56.256"></status>
</kw>
<msg timestamp="20201112 12:27:56.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:55.967" endtime="20201112 12:27:56.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.260" endtime="20201112 12:27:56.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.269" endtime="20201112 12:27:56.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.965" endtime="20201112 12:27:56.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.963" endtime="20201112 12:27:56.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.275" level="INFO">${RESULT} = [{'time': 0.020135889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.684700000000182e-05, 'source_diff': 6.684700000000182e-05}, {'time': 0.020208917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:56.272" endtime="20201112 12:27:56.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:56.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:56.276" endtime="20201112 12:27:56.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.293" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:27:56.292" endtime="20201112 12:27:56.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.296" level="INFO">VALUE: [6.684700000000182e-05, 6.622300000000067e-05, 6.645899999999788e-05, 6.630599999999862e-05, 6.616599999999945e-05, 6.662500000000071e-05, 6.67220000000017e-05, 6.600000000000009e-05, 6.644399999999884e-05, 6.675000000000084e-05, 6.606900000000193e-05, 6.604200000000227e-05, 6.670800000000213e-05, 6.651400000000016e-05, 6.616700000000239e-05, 6.625000000000034e-05, 6.677799999999998e-05, 6.641699999999917e-05, 6.679200000000302e-05, 6.634699999999785e-05, 6.662499999999724e-05, 6.684699999999835e-05, 6.616599999999945e-05, 6.637500000000046e-05, 6.681899999999921e-05, 6.687500000000096e-05, 6.663900000000028e-05, 6.688900000000053e-05, 6.634699999999785e-05, 6.655599999999887e-05, 6.652799999999973e-05, 6.661099999999767e-05, 6.616699999999892e-05, 6.68480000000013e-05, 6.677799999999998e-05, 6.670899999999813e-05, 6.60830000000015e-05, 6.665200000000038e-05, 6.598600000000052e-05, 6.672199999999823e-05, 6.683300000000225e-05, 6.636099999999742e-05, 6.666699999999942e-05, 6.677799999999998e-05, 6.605599999999837e-05, 6.669499999999856e-05, 6.656999999999844e-05, 6.675000000000084e-05, 6.637499999999699e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:27:56.294" endtime="20201112 12:27:56.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.290" endtime="20201112 12:27:56.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.305" endtime="20201112 12:27:56.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.309" endtime="20201112 12:27:56.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.307" endtime="20201112 12:27:56.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.303" endtime="20201112 12:27:56.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.931" endtime="20201112 12:27:56.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:55.930" endtime="20201112 12:27:56.330"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.338" endtime="20201112 12:27:56.356"></status>
</kw>
<msg timestamp="20201112 12:27:56.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.337" endtime="20201112 12:27:56.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.358" endtime="20201112 12:27:56.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.360" endtime="20201112 12:27:56.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.334" endtime="20201112 12:27:56.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.332" endtime="20201112 12:27:56.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.369" endtime="20201112 12:27:56.655"></status>
</kw>
<msg timestamp="20201112 12:27:56.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.368" endtime="20201112 12:27:56.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.659" endtime="20201112 12:27:56.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.668" endtime="20201112 12:27:56.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.365" endtime="20201112 12:27:56.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.363" endtime="20201112 12:27:56.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:56.674" level="INFO">${RESULT} = [{'time': 0.020719069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.752700000000125e-05, 'source_diff': 6.752700000000125e-05}, {'time': 0.020791083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:56.671" endtime="20201112 12:27:56.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:56.688" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:56.675" endtime="20201112 12:27:56.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.692" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:27:56.691" endtime="20201112 12:27:56.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.695" level="INFO">VALUE: [6.752700000000125e-05, 6.738899999999756e-05, 6.786099999999892e-05, 6.736100000000189e-05, 6.727800000000048e-05, 6.701400000000066e-05, 6.752800000000073e-05, 6.787500000000196e-05, 6.729200000000005e-05, 6.734700000000232e-05, 6.723600000000177e-05, 6.7583999999999e-05, 6.759800000000205e-05, 6.7583000000003e-05, 6.791700000000067e-05, 6.706899999999946e-05, 6.744399999999984e-05, 6.763900000000128e-05, 6.776399999999794e-05, 6.730600000000309e-05, 6.790299999999763e-05, 6.756899999999996e-05, 6.734699999999885e-05, 6.756999999999944e-05, 6.727800000000048e-05, 6.765300000000085e-05, 6.736100000000189e-05, 6.711100000000164e-05, 6.733400000000223e-05, 6.712500000000121e-05, 6.737500000000146e-05, 6.734699999999885e-05, 6.70419999999998e-05, 6.743000000000027e-05, 6.733299999999928e-05, 6.769400000000009e-05, 6.723600000000177e-05, 6.780600000000012e-05, 6.781900000000021e-05, 6.70969999999986e-05, 6.790299999999763e-05, 6.79030000000011e-05, 6.736200000000137e-05, 6.695899999999838e-05, 6.736100000000189e-05, 6.737500000000146e-05, 6.713900000000078e-05, 6.72640000000009e-05, 6.719399999999959e-05, 6.706899999999946e-05]</msg>
<status status="PASS" starttime="20201112 12:27:56.693" endtime="20201112 12:27:56.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.689" endtime="20201112 12:27:56.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.698" endtime="20201112 12:27:56.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:56.702" endtime="20201112 12:27:56.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.700" endtime="20201112 12:27:56.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.697" endtime="20201112 12:27:56.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.330" endtime="20201112 12:27:56.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.330" endtime="20201112 12:27:56.723"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.732" endtime="20201112 12:27:56.750"></status>
</kw>
<msg timestamp="20201112 12:27:56.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.730" endtime="20201112 12:27:56.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:56.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:56.751" endtime="20201112 12:27:56.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.754" endtime="20201112 12:27:56.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.728" endtime="20201112 12:27:56.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.725" endtime="20201112 12:27:56.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:56.763" endtime="20201112 12:27:57.051"></status>
</kw>
<msg timestamp="20201112 12:27:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:56.761" endtime="20201112 12:27:57.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.055" endtime="20201112 12:27:57.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.063" endtime="20201112 12:27:57.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.759" endtime="20201112 12:27:57.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.757" endtime="20201112 12:27:57.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.070" level="INFO">${RESULT} = [{'time': 0.020941833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.837499999999899e-05, 'source_diff': 6.837499999999899e-05}, {'time': 0.021017833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:57.067" endtime="20201112 12:27:57.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.085" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:57.071" endtime="20201112 12:27:57.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.090" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.089" endtime="20201112 12:27:57.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.092" level="INFO">VALUE: [6.837499999999899e-05, 6.849999999999912e-05, 6.884700000000035e-05, 6.876399999999894e-05, 6.883300000000078e-05, 6.80420000000008e-05, 6.830500000000114e-05, 6.829199999999758e-05, 6.80420000000008e-05, 6.890299999999863e-05, 6.876399999999894e-05, 6.818100000000049e-05, 6.886099999999992e-05, 6.798700000000199e-05, 6.852799999999826e-05, 6.844500000000031e-05, 6.85970000000001e-05, 6.891599999999873e-05, 6.862499999999924e-05, 6.872200000000023e-05, 6.80420000000008e-05, 6.834699999999985e-05, 6.822199999999973e-05, 6.85559999999974e-05, 6.820800000000016e-05, 6.87359999999998e-05, 6.806999999999994e-05, 6.829199999999758e-05, 6.884700000000035e-05, 6.847299999999945e-05, 6.87909999999986e-05, 6.866600000000195e-05, 6.813899999999831e-05, 6.879100000000207e-05, 6.880600000000112e-05, 6.872200000000023e-05, 6.80969999999996e-05, 6.887499999999949e-05, 6.884700000000035e-05, 6.822199999999973e-05, 6.879200000000155e-05, 6.849999999999912e-05, 6.816700000000092e-05, 6.845799999999694e-05, 6.813800000000231e-05, 6.843100000000074e-05, 6.847199999999998e-05, 6.798599999999905e-05, 6.849999999999912e-05, 6.80420000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.091" endtime="20201112 12:27:57.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.086" endtime="20201112 12:27:57.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.096" endtime="20201112 12:27:57.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.099" endtime="20201112 12:27:57.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.098" endtime="20201112 12:27:57.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.094" endtime="20201112 12:27:57.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.724" endtime="20201112 12:27:57.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:56.723" endtime="20201112 12:27:57.120"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.129" endtime="20201112 12:27:57.147"></status>
</kw>
<msg timestamp="20201112 12:27:57.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.127" endtime="20201112 12:27:57.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.148" endtime="20201112 12:27:57.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.151" endtime="20201112 12:27:57.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.125" endtime="20201112 12:27:57.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.123" endtime="20201112 12:27:57.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.160" endtime="20201112 12:27:57.447"></status>
</kw>
<msg timestamp="20201112 12:27:57.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.159" endtime="20201112 12:27:57.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.452" endtime="20201112 12:27:57.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.460" endtime="20201112 12:27:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.156" endtime="20201112 12:27:57.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.154" endtime="20201112 12:27:57.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.467" level="INFO">${RESULT} = [{'time': 0.020804444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.895799999999744e-05, 'source_diff': 6.895799999999744e-05}, {'time': 0.020883458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:57.463" endtime="20201112 12:27:57.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:57.468" endtime="20201112 12:27:57.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.485" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.484" endtime="20201112 12:27:57.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.487" level="INFO">VALUE: [6.895799999999744e-05, 6.981900000000221e-05, 6.976399999999994e-05, 6.991599999999973e-05, 6.945799999999794e-05, 6.980600000000212e-05, 6.924999999999987e-05, 6.908299999999756e-05, 6.924999999999987e-05, 6.934699999999738e-05, 6.920900000000063e-05, 6.977799999999951e-05, 6.929200000000205e-05, 6.913799999999984e-05, 6.929100000000257e-05, 6.963899999999981e-05, 6.983299999999831e-05, 6.972200000000123e-05, 6.984700000000135e-05, 6.944399999999837e-05, 6.956999999999797e-05, 6.988900000000006e-05, 6.986100000000092e-05, 6.980599999999865e-05, 6.95559999999984e-05, 6.947200000000098e-05, 6.947300000000045e-05, 6.97230000000007e-05, 6.959699999999763e-05, 6.936100000000042e-05, 6.990200000000016e-05, 6.931999999999772e-05, 6.972199999999776e-05, 6.906899999999799e-05, 6.977799999999951e-05, 6.969399999999862e-05, 6.988900000000006e-05, 6.95559999999984e-05, 6.894499999999734e-05, 6.977800000000298e-05, 6.940299999999913e-05, 6.92909999999991e-05, 6.944399999999837e-05, 6.986100000000092e-05, 6.913899999999931e-05, 6.955499999999892e-05, 6.927799999999901e-05, 6.899999999999962e-05, 6.94169999999987e-05, 6.947300000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.486" endtime="20201112 12:27:57.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.481" endtime="20201112 12:27:57.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.491" endtime="20201112 12:27:57.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.494" endtime="20201112 12:27:57.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.493" endtime="20201112 12:27:57.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.489" endtime="20201112 12:27:57.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.121" endtime="20201112 12:27:57.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.121" endtime="20201112 12:27:57.515"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.524" endtime="20201112 12:27:57.541"></status>
</kw>
<msg timestamp="20201112 12:27:57.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.523" endtime="20201112 12:27:57.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.542" endtime="20201112 12:27:57.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.545" endtime="20201112 12:27:57.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.520" endtime="20201112 12:27:57.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.518" endtime="20201112 12:27:57.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.554" endtime="20201112 12:27:57.841"></status>
</kw>
<msg timestamp="20201112 12:27:57.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:57.552" endtime="20201112 12:27:57.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:27:57.845" endtime="20201112 12:27:57.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.854" endtime="20201112 12:27:57.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.550" endtime="20201112 12:27:57.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.548" endtime="20201112 12:27:57.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:57.861" level="INFO">${RESULT} = [{'time': 0.0199675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.088899999999759e-05, 'source_diff': 7.088899999999759e-05}, {'time': 0.0200475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:27:57.857" endtime="20201112 12:27:57.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:57.874" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:57.862" endtime="20201112 12:27:57.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.879" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:27:57.877" endtime="20201112 12:27:57.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.881" level="INFO">VALUE: [7.088899999999759e-05, 7.033299999999881e-05, 7.007000000000194e-05, 7.031899999999924e-05, 7.020899999999816e-05, 7.051399999999722e-05, 7.051400000000069e-05, 6.999999999999715e-05, 7.008299999999856e-05, 7.002700000000028e-05, 7.001400000000019e-05, 7.070900000000213e-05, 7.040300000000013e-05, 7.077800000000051e-05, 7.02360000000013e-05, 7.072199999999876e-05, 7.009699999999813e-05, 7.022199999999826e-05, 7.052800000000026e-05, 7.00559999999989e-05, 7.026400000000044e-05, 7.025000000000087e-05, 7.027800000000001e-05, 7.088799999999812e-05, 7.001400000000019e-05, 7.040300000000013e-05, 7.026400000000044e-05, 7.044499999999884e-05, 7.07499999999979e-05, 7.012500000000074e-05, 7.008300000000203e-05, 7.029199999999958e-05, 7.081999999999922e-05, 6.998600000000105e-05, 7.001400000000019e-05, 7.066600000000048e-05, 7.056999999999897e-05, 7.07910000000006e-05, 7.019399999999912e-05, 7.065199999999744e-05, 7.045800000000241e-05, 7.037500000000099e-05, 7.050000000000112e-05, 7.052800000000026e-05, 7.059699999999863e-05, 7.027800000000001e-05, 7.058299999999906e-05, 7.040300000000013e-05, 7.095899999999891e-05, 7.05559999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:27:57.880" endtime="20201112 12:27:57.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.875" endtime="20201112 12:27:57.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.885" endtime="20201112 12:27:57.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:57.888" endtime="20201112 12:27:57.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.887" endtime="20201112 12:27:57.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.883" endtime="20201112 12:27:57.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.516" endtime="20201112 12:27:57.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.516" endtime="20201112 12:27:57.909"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.918" endtime="20201112 12:27:57.936"></status>
</kw>
<msg timestamp="20201112 12:27:57.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.916" endtime="20201112 12:27:57.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:57.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:57.938" endtime="20201112 12:27:57.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.940" endtime="20201112 12:27:57.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.914" endtime="20201112 12:27:57.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.912" endtime="20201112 12:27:57.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:57.949" endtime="20201112 12:27:58.237"></status>
</kw>
<msg timestamp="20201112 12:27:58.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:57.948" endtime="20201112 12:27:58.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.241" endtime="20201112 12:27:58.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.249" endtime="20201112 12:27:58.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.945" endtime="20201112 12:27:58.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.943" endtime="20201112 12:27:58.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.256" level="INFO">${RESULT} = [{'time': 0.020077333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.192999999999783e-05, 'source_diff': 7.192999999999783e-05}, {'time': 0.020156347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:58.253" endtime="20201112 12:27:58.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:58.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:58.258" endtime="20201112 12:27:58.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.275" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:27:58.274" endtime="20201112 12:27:58.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.277" level="INFO">VALUE: [7.192999999999783e-05, 7.148600000000255e-05, 7.112500000000174e-05, 7.184699999999988e-05, 7.154200000000083e-05, 7.180600000000065e-05, 7.176399999999847e-05, 7.151400000000169e-05, 7.101399999999772e-05, 7.188899999999859e-05, 7.127800000000101e-05, 7.122299999999873e-05, 7.133299999999981e-05, 7.111100000000217e-05, 7.145799999999994e-05, 7.140300000000113e-05, 7.180500000000117e-05, 7.127800000000101e-05, 7.15560000000004e-05, 7.122199999999926e-05, 7.101400000000119e-05, 7.144500000000331e-05, 7.19309999999973e-05, 7.158399999999954e-05, 7.15560000000004e-05, 7.120799999999969e-05, 7.112499999999827e-05, 7.169400000000062e-05, 7.1069e-05, 7.149999999999865e-05, 7.116700000000045e-05, 7.168000000000105e-05, 7.130600000000015e-05, 7.162500000000224e-05, 7.130600000000015e-05, 7.104200000000033e-05, 7.10979999999986e-05, 7.126400000000144e-05, 7.173599999999933e-05, 7.102800000000076e-05, 7.115200000000141e-05, 7.120799999999969e-05, 7.14300000000008e-05, 7.177800000000151e-05, 7.177800000000151e-05, 7.108399999999904e-05, 7.182000000000022e-05, 7.120799999999969e-05, 7.134699999999938e-05, 7.131999999999972e-05]</msg>
<status status="PASS" starttime="20201112 12:27:58.276" endtime="20201112 12:27:58.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.271" endtime="20201112 12:27:58.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.281" endtime="20201112 12:27:58.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.284" endtime="20201112 12:27:58.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.283" endtime="20201112 12:27:58.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.279" endtime="20201112 12:27:58.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.910" endtime="20201112 12:27:58.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:57.910" endtime="20201112 12:27:58.305"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.314" endtime="20201112 12:27:58.331"></status>
</kw>
<msg timestamp="20201112 12:27:58.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.313" endtime="20201112 12:27:58.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.333" endtime="20201112 12:27:58.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.335" endtime="20201112 12:27:58.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.310" endtime="20201112 12:27:58.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.308" endtime="20201112 12:27:58.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.344" endtime="20201112 12:27:58.631"></status>
</kw>
<msg timestamp="20201112 12:27:58.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.343" endtime="20201112 12:27:58.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.635" endtime="20201112 12:27:58.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.644" endtime="20201112 12:27:58.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.340" endtime="20201112 12:27:58.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.338" endtime="20201112 12:27:58.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:58.650" level="INFO">${RESULT} = [{'time': 0.020212986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.227799999999854e-05, 'source_diff': 7.227799999999854e-05}, {'time': 0.020288056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:58.647" endtime="20201112 12:27:58.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:58.665" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:58.651" endtime="20201112 12:27:58.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.670" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:27:58.669" endtime="20201112 12:27:58.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.672" level="INFO">VALUE: [7.227799999999854e-05, 7.237499999999952e-05, 7.265299999999891e-05, 7.279199999999861e-05, 7.207000000000047e-05, 7.277799999999904e-05, 7.293100000000177e-05, 7.22499999999994e-05, 7.216699999999798e-05, 7.258400000000054e-05, 7.259700000000063e-05, 7.234699999999691e-05, 7.241599999999876e-05, 7.22499999999994e-05, 7.205500000000142e-05, 7.298600000000058e-05, 7.248600000000008e-05, 7.245800000000094e-05, 7.279200000000208e-05, 7.266700000000195e-05, 7.279200000000208e-05, 7.209799999999961e-05, 7.298600000000058e-05, 7.212500000000274e-05, 7.233300000000081e-05, 7.272200000000076e-05, 7.286100000000045e-05, 7.286100000000045e-05, 7.256899999999802e-05, 7.266699999999848e-05, 7.215300000000188e-05, 7.234699999999691e-05, 7.290299999999916e-05, 7.279200000000208e-05, 7.258400000000054e-05, 7.27499999999999e-05, 7.20560000000009e-05, 7.238799999999962e-05, 7.293100000000177e-05, 7.262499999999977e-05, 7.223599999999983e-05, 7.279099999999913e-05, 7.213900000000231e-05, 7.263900000000281e-05, 7.279199999999861e-05, 7.276399999999947e-05, 7.232000000000072e-05, 7.283400000000079e-05, 7.26110000000002e-05, 7.284800000000036e-05]</msg>
<status status="PASS" starttime="20201112 12:27:58.671" endtime="20201112 12:27:58.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.666" endtime="20201112 12:27:58.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.676" endtime="20201112 12:27:58.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:58.679" endtime="20201112 12:27:58.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.678" endtime="20201112 12:27:58.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.674" endtime="20201112 12:27:58.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.306" endtime="20201112 12:27:58.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.306" endtime="20201112 12:27:58.700"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.709" endtime="20201112 12:27:58.727"></status>
</kw>
<msg timestamp="20201112 12:27:58.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.708" endtime="20201112 12:27:58.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:58.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:58.729" endtime="20201112 12:27:58.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.731" endtime="20201112 12:27:58.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.705" endtime="20201112 12:27:58.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.703" endtime="20201112 12:27:58.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:58.740" endtime="20201112 12:27:59.027"></status>
</kw>
<msg timestamp="20201112 12:27:59.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:58.739" endtime="20201112 12:27:59.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019948875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020022292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.031" endtime="20201112 12:27:59.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.040" endtime="20201112 12:27:59.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.736" endtime="20201112 12:27:59.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.734" endtime="20201112 12:27:59.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.046" level="INFO">${RESULT} = [{'time': 0.020022292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.341699999999923e-05, 'source_diff': 7.341699999999923e-05}, {'time': 0.020100306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:59.043" endtime="20201112 12:27:59.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.060" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.047" endtime="20201112 12:27:59.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.064" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.063" endtime="20201112 12:27:59.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.067" level="INFO">VALUE: [7.341699999999923e-05, 7.365299999999991e-05, 7.348600000000108e-05, 7.363900000000034e-05, 7.309700000000113e-05, 7.352799999999979e-05, 7.341599999999976e-05, 7.365299999999991e-05, 7.301399999999972e-05, 7.312500000000027e-05, 7.316699999999898e-05, 7.388899999999712e-05, 7.380599999999918e-05, 7.332000000000172e-05, 7.316699999999898e-05, 7.377700000000056e-05, 7.334700000000138e-05, 7.313899999999984e-05, 7.345799999999847e-05, 7.333300000000181e-05, 7.297200000000101e-05, 7.331900000000224e-05, 7.373600000000133e-05, 7.301399999999972e-05, 7.35829999999986e-05, 7.322199999999779e-05, 7.332000000000172e-05, 7.330599999999868e-05, 7.345799999999847e-05, 7.352799999999979e-05, 7.390199999999722e-05, 7.361099999999773e-05, 7.377800000000004e-05, 7.348600000000108e-05, 7.344499999999837e-05, 7.30829999999981e-05, 7.387500000000102e-05, 7.355599999999893e-05, 7.31110000000007e-05, 7.301399999999972e-05, 7.36110000000012e-05, 7.32910000000031e-05, 7.341599999999976e-05, 7.331999999999825e-05, 7.34300000000028e-05, 7.379100000000013e-05, 7.305499999999895e-05, 7.36110000000012e-05, 7.384700000000188e-05, 7.323599999999736e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.065" endtime="20201112 12:27:59.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.061" endtime="20201112 12:27:59.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.070" endtime="20201112 12:27:59.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.074" endtime="20201112 12:27:59.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.072" endtime="20201112 12:27:59.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.069" endtime="20201112 12:27:59.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.701" endtime="20201112 12:27:59.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:58.701" endtime="20201112 12:27:59.094"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.103" endtime="20201112 12:27:59.121"></status>
</kw>
<msg timestamp="20201112 12:27:59.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.102" endtime="20201112 12:27:59.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.123" endtime="20201112 12:27:59.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.125" endtime="20201112 12:27:59.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.099" endtime="20201112 12:27:59.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.097" endtime="20201112 12:27:59.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.134" endtime="20201112 12:27:59.424"></status>
</kw>
<msg timestamp="20201112 12:27:59.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.133" endtime="20201112 12:27:59.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020801083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.433" endtime="20201112 12:27:59.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.452" endtime="20201112 12:27:59.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.130" endtime="20201112 12:27:59.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.129" endtime="20201112 12:27:59.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.466" level="INFO">${RESULT} = [{'time': 0.020801083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46110000000022e-05, 'source_diff': 7.46110000000022e-05}, {'time': 0.020883069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:27:59.459" endtime="20201112 12:27:59.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.496" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.468" endtime="20201112 12:27:59.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.505" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.503" endtime="20201112 12:27:59.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.510" level="INFO">VALUE: [7.46110000000022e-05, 7.447199999999904e-05, 7.480499999999723e-05, 7.429100000000063e-05, 7.41110000000017e-05, 7.434700000000238e-05, 7.455500000000045e-05, 7.433399999999882e-05, 7.432000000000272e-05, 7.488899999999812e-05, 7.452799999999732e-05, 7.424999999999793e-05, 7.418099999999955e-05, 7.395799999999897e-05, 7.415200000000094e-05, 7.488800000000212e-05, 7.473600000000233e-05, 7.491600000000126e-05, 7.4763999999998e-05, 7.466700000000048e-05, 7.472199999999929e-05, 7.472199999999929e-05, 7.484699999999941e-05, 7.447299999999851e-05, 7.400000000000115e-05, 7.394500000000234e-05, 7.42500000000014e-05, 7.481900000000027e-05, 7.487499999999855e-05, 7.479099999999766e-05, 7.447200000000251e-05, 7.463899999999787e-05, 7.486099999999898e-05, 7.433299999999934e-05, 7.407000000000247e-05, 7.408300000000256e-05, 7.39309999999993e-05, 7.466700000000048e-05, 7.455599999999993e-05, 7.466700000000048e-05, 7.479200000000061e-05, 7.445899999999894e-05, 7.456900000000002e-05, 7.4763999999998e-05, 7.479100000000113e-05, 7.472199999999929e-05, 7.405499999999995e-05, 7.40829999999991e-05, 7.45829999999996e-05, 7.409700000000213e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.507" endtime="20201112 12:27:59.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.498" endtime="20201112 12:27:59.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.518" endtime="20201112 12:27:59.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.524" endtime="20201112 12:27:59.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.521" endtime="20201112 12:27:59.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.514" endtime="20201112 12:27:59.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.095" endtime="20201112 12:27:59.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.095" endtime="20201112 12:27:59.546"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.555" endtime="20201112 12:27:59.573"></status>
</kw>
<msg timestamp="20201112 12:27:59.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.553" endtime="20201112 12:27:59.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.574" endtime="20201112 12:27:59.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.577" endtime="20201112 12:27:59.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.551" endtime="20201112 12:27:59.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.549" endtime="20201112 12:27:59.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.586" endtime="20201112 12:27:59.873"></status>
</kw>
<msg timestamp="20201112 12:27:59.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019926653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.584" endtime="20201112 12:27:59.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019926653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.877" endtime="20201112 12:27:59.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.886" endtime="20201112 12:27:59.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.582" endtime="20201112 12:27:59.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.580" endtime="20201112 12:27:59.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:27:59.893" level="INFO">${RESULT} = [{'time': 0.020002139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.548599999999961e-05, 'source_diff': 7.548599999999961e-05}, {'time': 0.020081208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:27:59.889" endtime="20201112 12:27:59.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:27:59.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:27:59.894" endtime="20201112 12:27:59.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.910" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:27:59.909" endtime="20201112 12:27:59.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.913" level="INFO">VALUE: [7.548599999999961e-05, 7.518000000000108e-05, 7.577799999999857e-05, 7.562500000000277e-05, 7.527799999999807e-05, 7.536099999999948e-05, 7.587500000000302e-05, 7.516600000000151e-05, 7.520800000000022e-05, 7.548599999999961e-05, 7.515299999999794e-05, 7.56249999999993e-05, 7.577800000000204e-05, 7.530600000000068e-05, 7.55700000000005e-05, 7.57500000000029e-05, 7.588899999999912e-05, 7.522199999999979e-05, 7.586099999999998e-05, 7.497199999999954e-05, 7.551400000000222e-05, 7.540199999999872e-05, 7.53890000000021e-05, 7.53050000000012e-05, 7.591700000000173e-05, 7.529200000000111e-05, 7.50830000000001e-05, 7.52639999999985e-05, 7.550000000000265e-05, 7.584700000000041e-05, 7.55700000000005e-05, 7.518100000000055e-05, 7.527800000000154e-05, 7.509799999999914e-05, 7.569400000000115e-05, 7.531900000000077e-05, 7.513900000000184e-05, 7.556900000000102e-05, 7.533300000000034e-05, 7.556900000000102e-05, 7.502800000000129e-05, 7.579200000000161e-05, 7.59029999999987e-05, 7.577799999999857e-05, 7.5763999999999e-05, 7.566700000000148e-05, 7.554200000000136e-05, 7.590300000000216e-05, 7.581900000000127e-05, 7.540199999999872e-05]</msg>
<status status="PASS" starttime="20201112 12:27:59.911" endtime="20201112 12:27:59.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.907" endtime="20201112 12:27:59.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.916" endtime="20201112 12:27:59.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:27:59.920" endtime="20201112 12:27:59.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.918" endtime="20201112 12:27:59.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.915" endtime="20201112 12:27:59.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.547" endtime="20201112 12:27:59.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.547" endtime="20201112 12:27:59.941"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.950" endtime="20201112 12:27:59.969"></status>
</kw>
<msg timestamp="20201112 12:27:59.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.948" endtime="20201112 12:27:59.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:27:59.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:27:59.970" endtime="20201112 12:27:59.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.972" endtime="20201112 12:27:59.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.945" endtime="20201112 12:27:59.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.943" endtime="20201112 12:27:59.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:27:59.981" endtime="20201112 12:28:00.268"></status>
</kw>
<msg timestamp="20201112 12:28:00.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:27:59.980" endtime="20201112 12:28:00.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.272" endtime="20201112 12:28:00.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.281" endtime="20201112 12:28:00.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.977" endtime="20201112 12:28:00.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.976" endtime="20201112 12:28:00.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.288" level="INFO">${RESULT} = [{'time': 0.020107306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6764e-05, 'source_diff': 7.6764e-05}, {'time': 0.020186319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.643000000000233e-...</msg>
<status status="PASS" starttime="20201112 12:28:00.284" endtime="20201112 12:28:00.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.303" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:00.289" endtime="20201112 12:28:00.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.307" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.306" endtime="20201112 12:28:00.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.310" level="INFO">VALUE: [7.6764e-05, 7.643000000000233e-05, 7.609700000000066e-05, 7.62769999999996e-05, 7.681900000000227e-05, 7.629099999999917e-05, 7.633299999999787e-05, 7.630599999999821e-05, 7.638800000000015e-05, 7.668100000000205e-05, 7.608400000000057e-05, 7.636100000000048e-05, 7.634800000000039e-05, 7.680599999999871e-05, 7.609700000000066e-05, 7.659700000000116e-05, 7.661099999999726e-05, 7.598600000000011e-05, 7.61249999999998e-05, 7.672199999999782e-05, 7.673600000000086e-05, 7.61249999999998e-05, 7.686100000000098e-05, 7.672300000000076e-05, 7.611199999999971e-05, 7.650000000000018e-05, 7.688900000000012e-05, 7.659799999999717e-05, 7.669399999999868e-05, 7.694399999999893e-05, 7.630599999999821e-05, 7.634700000000091e-05, 7.652799999999932e-05, 7.675000000000043e-05, 7.672200000000129e-05, 7.682000000000175e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.605599999999796e-05, 7.652799999999932e-05, 7.683299999999837e-05, 7.59440000000014e-05, 7.6457999999998e-05, 7.605499999999848e-05, 7.606899999999805e-05, 7.670900000000119e-05, 7.655600000000193e-05, 7.693000000000283e-05, 7.623600000000036e-05, 7.669500000000162e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.308" endtime="20201112 12:28:00.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.304" endtime="20201112 12:28:00.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.313" endtime="20201112 12:28:00.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.317" endtime="20201112 12:28:00.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.315" endtime="20201112 12:28:00.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.312" endtime="20201112 12:28:00.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.942" endtime="20201112 12:28:00.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:59.941" endtime="20201112 12:28:00.338"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.347" endtime="20201112 12:28:00.366"></status>
</kw>
<msg timestamp="20201112 12:28:00.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.345" endtime="20201112 12:28:00.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.367" endtime="20201112 12:28:00.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.370" endtime="20201112 12:28:00.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.342" endtime="20201112 12:28:00.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.340" endtime="20201112 12:28:00.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.379" endtime="20201112 12:28:00.665"></status>
</kw>
<msg timestamp="20201112 12:28:00.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.377" endtime="20201112 12:28:00.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:00.670" endtime="20201112 12:28:00.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.678" endtime="20201112 12:28:00.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.374" endtime="20201112 12:28:00.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.373" endtime="20201112 12:28:00.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:00.685" level="INFO">${RESULT} = [{'time': 0.020105917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.747300000000151e-05, 'source_diff': 7.747300000000151e-05}, {'time': 0.020186944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:00.681" endtime="20201112 12:28:00.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:00.698" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:00.686" endtime="20201112 12:28:00.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.702" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:28:00.701" endtime="20201112 12:28:00.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.705" level="INFO">VALUE: [7.747300000000151e-05, 7.761099999999826e-05, 7.759799999999817e-05, 7.790199999999775e-05, 7.774999999999796e-05, 7.738900000000062e-05, 7.780500000000024e-05, 7.788900000000112e-05, 7.76250000000013e-05, 7.772199999999882e-05, 7.791700000000026e-05, 7.752800000000032e-05, 7.740299999999672e-05, 7.731999999999878e-05, 7.759800000000164e-05, 7.755600000000293e-05, 7.747300000000151e-05, 7.79579999999995e-05, 7.758299999999912e-05, 7.723599999999789e-05, 7.779100000000067e-05, 7.756899999999955e-05, 7.698600000000111e-05, 7.772199999999882e-05, 7.741699999999976e-05, 7.695900000000144e-05, 7.779200000000014e-05, 7.75839999999986e-05, 7.7764000000001e-05, 7.729199999999964e-05, 7.752800000000032e-05, 7.733299999999887e-05, 7.738899999999715e-05, 7.793000000000036e-05, 7.765300000000044e-05, 7.698600000000111e-05, 7.731999999999878e-05, 7.73189999999993e-05, 7.705599999999896e-05, 7.723599999999789e-05, 7.72770000000006e-05, 7.786200000000146e-05, 7.725000000000093e-05, 7.773599999999839e-05, 7.73050000000032e-05, 7.72640000000005e-05, 7.730499999999974e-05, 7.779200000000014e-05, 7.788899999999765e-05, 7.705499999999949e-05]</msg>
<status status="PASS" starttime="20201112 12:28:00.703" endtime="20201112 12:28:00.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.699" endtime="20201112 12:28:00.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.708" endtime="20201112 12:28:00.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:00.712" endtime="20201112 12:28:00.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.710" endtime="20201112 12:28:00.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.707" endtime="20201112 12:28:00.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.339" endtime="20201112 12:28:00.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.338" endtime="20201112 12:28:00.733"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.741" endtime="20201112 12:28:00.759"></status>
</kw>
<msg timestamp="20201112 12:28:00.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.740" endtime="20201112 12:28:00.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:00.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:00.760" endtime="20201112 12:28:00.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.763" endtime="20201112 12:28:00.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.737" endtime="20201112 12:28:00.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.735" endtime="20201112 12:28:00.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:00.772" endtime="20201112 12:28:01.059"></status>
</kw>
<msg timestamp="20201112 12:28:01.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:00.770" endtime="20201112 12:28:01.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019958597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:01.063" endtime="20201112 12:28:01.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.071" endtime="20201112 12:28:01.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.768" endtime="20201112 12:28:01.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.766" endtime="20201112 12:28:01.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.078" level="INFO">${RESULT} = [{'time': 0.019958597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.809700000000266e-05, 'source_diff': 7.809700000000266e-05}, {'time': 0.020042611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:01.075" endtime="20201112 12:28:01.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.079" endtime="20201112 12:28:01.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.096" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.095" endtime="20201112 12:28:01.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.098" level="INFO">VALUE: [7.809700000000266e-05, 7.890299999999822e-05, 7.834699999999944e-05, 7.813900000000137e-05, 7.834799999999892e-05, 7.82640000000015e-05, 7.819400000000018e-05, 7.813900000000137e-05, 7.855600000000046e-05, 7.865200000000197e-05, 7.855500000000099e-05, 7.86389999999984e-05, 7.876399999999853e-05, 7.892999999999789e-05, 7.875000000000243e-05, 7.809700000000266e-05, 7.834699999999944e-05, 7.829200000000064e-05, 7.8764000000002e-05, 7.861100000000273e-05, 7.85969999999997e-05, 7.830500000000074e-05, 7.842999999999739e-05, 7.87909999999982e-05, 7.876399999999853e-05, 7.80969999999992e-05, 7.798599999999864e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.848599999999914e-05, 7.833400000000282e-05, 7.884699999999994e-05, 7.888899999999865e-05, 7.820900000000269e-05, 7.806900000000006e-05, 7.844400000000043e-05, 7.847199999999957e-05, 7.870800000000025e-05, 7.872199999999982e-05, 7.8458e-05, 7.825000000000193e-05, 7.826399999999803e-05, 7.811099999999876e-05, 7.848599999999914e-05, 7.837499999999858e-05, 7.86519999999985e-05, 7.805599999999996e-05, 7.830600000000021e-05, 7.877699999999863e-05, 7.851300000000228e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.097" endtime="20201112 12:28:01.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.092" endtime="20201112 12:28:01.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.102" endtime="20201112 12:28:01.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.105" endtime="20201112 12:28:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.104" endtime="20201112 12:28:01.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.100" endtime="20201112 12:28:01.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.734" endtime="20201112 12:28:01.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:00.733" endtime="20201112 12:28:01.126"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.135" endtime="20201112 12:28:01.153"></status>
</kw>
<msg timestamp="20201112 12:28:01.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.133" endtime="20201112 12:28:01.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.154" endtime="20201112 12:28:01.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.157" endtime="20201112 12:28:01.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.131" endtime="20201112 12:28:01.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.129" endtime="20201112 12:28:01.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.166" endtime="20201112 12:28:01.453"></status>
</kw>
<msg timestamp="20201112 12:28:01.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.164" endtime="20201112 12:28:01.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.457" endtime="20201112 12:28:01.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.465" endtime="20201112 12:28:01.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.162" endtime="20201112 12:28:01.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.160" endtime="20201112 12:28:01.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.472" level="INFO">${RESULT} = [{'time': 0.020424667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.97779999999991e-05, 'source_diff': 7.97779999999991e-05}, {'time': 0.020509681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:01.469" endtime="20201112 12:28:01.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.485" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.473" endtime="20201112 12:28:01.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.490" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.489" endtime="20201112 12:28:01.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.492" level="INFO">VALUE: [7.97779999999991e-05, 7.9458999999997e-05, 7.973600000000039e-05, 7.952699999999938e-05, 7.976399999999953e-05, 7.95970000000007e-05, 7.93190000000013e-05, 7.95970000000007e-05, 7.9764000000003e-05, 7.99169999999988e-05, 7.983300000000138e-05, 7.987500000000008e-05, 7.936100000000001e-05, 7.92229999999998e-05, 7.970900000000072e-05, 7.908300000000063e-05, 7.97770000000031e-05, 7.958299999999766e-05, 7.918099999999761e-05, 7.965299999999897e-05, 7.958299999999766e-05, 7.938900000000262e-05, 7.923599999999989e-05, 7.983400000000085e-05, 7.979199999999867e-05, 7.973600000000039e-05, 7.948699999999961e-05, 7.955499999999852e-05, 7.95840000000006e-05, 7.977699999999963e-05, 7.962499999999983e-05, 7.938899999999915e-05, 7.89580000000005e-05, 7.970799999999778e-05, 7.905600000000096e-05, 7.941700000000176e-05, 7.906999999999706e-05, 7.94719999999971e-05, 7.895899999999997e-05, 7.912499999999933e-05, 7.988899999999965e-05, 7.987500000000008e-05, 7.93329999999974e-05, 7.98190000000018e-05, 7.976399999999953e-05, 7.905600000000096e-05, 7.905600000000096e-05, 7.972200000000082e-05, 7.905600000000096e-05, 7.918000000000161e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.491" endtime="20201112 12:28:01.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.486" endtime="20201112 12:28:01.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.500" endtime="20201112 12:28:01.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.504" endtime="20201112 12:28:01.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.502" endtime="20201112 12:28:01.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.499" endtime="20201112 12:28:01.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.127" endtime="20201112 12:28:01.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.127" endtime="20201112 12:28:01.525"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.534" endtime="20201112 12:28:01.552"></status>
</kw>
<msg timestamp="20201112 12:28:01.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.532" endtime="20201112 12:28:01.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.554" endtime="20201112 12:28:01.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.557" endtime="20201112 12:28:01.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.529" endtime="20201112 12:28:01.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.527" endtime="20201112 12:28:01.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.566" endtime="20201112 12:28:01.853"></status>
</kw>
<msg timestamp="20201112 12:28:01.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.564" endtime="20201112 12:28:01.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.858" endtime="20201112 12:28:01.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.869" endtime="20201112 12:28:01.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.561" endtime="20201112 12:28:01.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.560" endtime="20201112 12:28:01.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:01.878" level="INFO">${RESULT} = [{'time': 0.020308431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.065299999999997e-05, 'source_diff': 8.065299999999997e-05}, {'time': 0.020398431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:01.874" endtime="20201112 12:28:01.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:01.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:01.880" endtime="20201112 12:28:01.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.902" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:28:01.900" endtime="20201112 12:28:01.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.904" level="INFO">VALUE: [8.065299999999997e-05, 8.059800000000117e-05, 8.088800000000118e-05, 8.025000000000046e-05, 8.020800000000175e-05, 8.0458000000002e-05, 8.015299999999947e-05, 8.070799999999878e-05, 7.998599999999717e-05, 8.04169999999993e-05, 8.048600000000114e-05, 8.070900000000172e-05, 8.055599999999899e-05, 8.074999999999749e-05, 8.023700000000036e-05, 8.058299999999866e-05, 8.055499999999952e-05, 8.054199999999942e-05, 8.037500000000058e-05, 8.001399999999978e-05, 8.045799999999853e-05, 8.048600000000114e-05, 8.005600000000196e-05, 8.062500000000083e-05, 8.030599999999874e-05, 8.07230000000013e-05, 8.06390000000004e-05, 8.06390000000004e-05, 8.004200000000239e-05, 8.06390000000004e-05, 8.084700000000195e-05, 8.056900000000256e-05, 8.001399999999978e-05, 8.052799999999985e-05, 8.06390000000004e-05, 8.008299999999816e-05, 8.004199999999892e-05, 8.030599999999874e-05, 8.048599999999767e-05, 8.00970000000012e-05, 8.016599999999957e-05, 8.041599999999982e-05, 8.036100000000101e-05, 8.006900000000206e-05, 8.011100000000076e-05, 8.020800000000175e-05, 8.038900000000015e-05, 8.079200000000314e-05, 8.030599999999874e-05, 8.001399999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:28:01.903" endtime="20201112 12:28:01.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.897" endtime="20201112 12:28:01.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.908" endtime="20201112 12:28:01.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:01.911" endtime="20201112 12:28:01.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.910" endtime="20201112 12:28:01.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.906" endtime="20201112 12:28:01.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.526" endtime="20201112 12:28:01.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.525" endtime="20201112 12:28:01.932"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.941" endtime="20201112 12:28:01.959"></status>
</kw>
<msg timestamp="20201112 12:28:01.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.939" endtime="20201112 12:28:01.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:01.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:01.961" endtime="20201112 12:28:01.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.963" endtime="20201112 12:28:01.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.937" endtime="20201112 12:28:01.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.934" endtime="20201112 12:28:01.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:01.973" endtime="20201112 12:28:02.261"></status>
</kw>
<msg timestamp="20201112 12:28:02.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:01.971" endtime="20201112 12:28:02.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:02.265" endtime="20201112 12:28:02.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.274" endtime="20201112 12:28:02.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.969" endtime="20201112 12:28:02.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.967" endtime="20201112 12:28:02.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.281" level="INFO">${RESULT} = [{'time': 0.020104458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.131899999999984e-05, 'source_diff': 8.131899999999984e-05}, {'time': 0.020193514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:02.278" endtime="20201112 12:28:02.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.295" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:02.282" endtime="20201112 12:28:02.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.300" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.299" endtime="20201112 12:28:02.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.302" level="INFO">VALUE: [8.131899999999984e-05, 8.181999999999981e-05, 8.141600000000082e-05, 8.176400000000153e-05, 8.120799999999928e-05, 8.155600000000346e-05, 8.113799999999796e-05, 8.184699999999948e-05, 8.140300000000072e-05, 8.176399999999806e-05, 8.147299999999857e-05, 8.162499999999837e-05, 8.156900000000009e-05, 8.126400000000103e-05, 8.136099999999855e-05, 8.16390000000014e-05, 8.118099999999961e-05, 8.12780000000006e-05, 8.181999999999981e-05, 8.12780000000006e-05, 8.10840000000021e-05, 8.11390000000009e-05, 8.134800000000192e-05, 8.156900000000009e-05, 8.158299999999966e-05, 8.095799999999903e-05, 8.137500000000158e-05, 8.172199999999935e-05, 8.16390000000014e-05, 8.155599999999999e-05, 8.188900000000165e-05, 8.186099999999905e-05, 8.125000000000146e-05, 8.188899999999819e-05, 8.112499999999787e-05, 8.14170000000003e-05, 8.18329999999999e-05, 8.100000000000121e-05, 8.11390000000009e-05, 8.106899999999959e-05, 8.09719999999986e-05, 8.137499999999812e-05, 8.159699999999923e-05, 8.134700000000245e-05, 8.175000000000196e-05, 8.147299999999857e-05, 8.15840000000026e-05, 8.16529999999975e-05, 8.162499999999837e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.301" endtime="20201112 12:28:02.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.296" endtime="20201112 12:28:02.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.306" endtime="20201112 12:28:02.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.310" endtime="20201112 12:28:02.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.308" endtime="20201112 12:28:02.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.304" endtime="20201112 12:28:02.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.933" endtime="20201112 12:28:02.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:01.932" endtime="20201112 12:28:02.331"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.340" endtime="20201112 12:28:02.362"></status>
</kw>
<msg timestamp="20201112 12:28:02.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.339" endtime="20201112 12:28:02.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.365" endtime="20201112 12:28:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.371" endtime="20201112 12:28:02.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.336" endtime="20201112 12:28:02.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.334" endtime="20201112 12:28:02.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.391" endtime="20201112 12:28:02.688"></status>
</kw>
<msg timestamp="20201112 12:28:02.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02134425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:02.388" endtime="20201112 12:28:02.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02134425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:28:02.692" endtime="20201112 12:28:02.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.701" endtime="20201112 12:28:02.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.382" endtime="20201112 12:28:02.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.378" endtime="20201112 12:28:02.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:02.708" level="INFO">${RESULT} = [{'time': 0.02134425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.202799999999788e-05, 'source_diff': 8.202799999999788e-05}, {'time': 0.02143425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:02.704" endtime="20201112 12:28:02.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:02.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:02.709" endtime="20201112 12:28:02.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.726" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:28:02.725" endtime="20201112 12:28:02.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.729" level="INFO">VALUE: [8.202799999999788e-05, 8.223599999999942e-05, 8.26109999999998e-05, 8.269500000000068e-05, 8.275000000000296e-05, 8.202800000000135e-05, 8.255500000000152e-05, 8.227699999999866e-05, 8.288799999999971e-05, 8.236099999999955e-05, 8.263899999999894e-05, 8.273599999999992e-05, 8.24170000000013e-05, 8.284700000000048e-05, 8.245800000000053e-05, 8.284799999999995e-05, 8.205599999999702e-05, 8.240200000000225e-05, 8.231999999999684e-05, 8.25979999999997e-05, 8.237500000000259e-05, 8.280599999999777e-05, 8.269399999999774e-05, 8.248600000000314e-05, 8.230600000000074e-05, 8.287499999999962e-05, 8.202800000000135e-05, 8.207000000000006e-05, 8.223599999999942e-05, 8.224999999999899e-05, 8.252800000000185e-05, 8.208399999999963e-05, 8.263799999999946e-05, 8.249999999999924e-05, 8.274999999999949e-05, 8.24720000000001e-05, 8.229200000000117e-05, 8.272200000000035e-05, 8.281899999999787e-05, 8.288899999999919e-05, 8.290300000000222e-05, 8.232000000000031e-05, 8.26390000000024e-05, 8.218099999999715e-05, 8.284700000000048e-05, 8.223599999999942e-05, 8.269400000000121e-05, 8.286100000000005e-05, 8.256899999999762e-05, 8.274999999999949e-05]</msg>
<status status="PASS" starttime="20201112 12:28:02.728" endtime="20201112 12:28:02.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.723" endtime="20201112 12:28:02.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.733" endtime="20201112 12:28:02.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:02.736" endtime="20201112 12:28:02.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.735" endtime="20201112 12:28:02.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.731" endtime="20201112 12:28:02.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.332" endtime="20201112 12:28:02.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.331" endtime="20201112 12:28:02.758"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.767" endtime="20201112 12:28:02.786"></status>
</kw>
<msg timestamp="20201112 12:28:02.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.765" endtime="20201112 12:28:02.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:02.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:02.787" endtime="20201112 12:28:02.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.790" endtime="20201112 12:28:02.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.762" endtime="20201112 12:28:02.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.760" endtime="20201112 12:28:02.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:02.800" endtime="20201112 12:28:03.087"></status>
</kw>
<msg timestamp="20201112 12:28:03.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:02.798" endtime="20201112 12:28:03.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0205855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:03.091" endtime="20201112 12:28:03.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.100" endtime="20201112 12:28:03.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.795" endtime="20201112 12:28:03.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.793" endtime="20201112 12:28:03.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.107" level="INFO">${RESULT} = [{'time': 0.020668694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.319400000000171e-05, 'source_diff': 8.319400000000171e-05}, {'time': 0.020760681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.103" endtime="20201112 12:28:03.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.121" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.108" endtime="20201112 12:28:03.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.125" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.124" endtime="20201112 12:28:03.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.128" level="INFO">VALUE: [8.319400000000171e-05, 8.302799999999888e-05, 8.381899999999887e-05, 8.367999999999917e-05, 8.38049999999993e-05, 8.37919999999992e-05, 8.381899999999887e-05, 8.380599999999877e-05, 8.3152999999999e-05, 8.316700000000204e-05, 8.383399999999791e-05, 8.304199999999845e-05, 8.332000000000131e-05, 8.36659999999996e-05, 8.309700000000073e-05, 8.330500000000227e-05, 8.351399999999981e-05, 8.345799999999806e-05, 8.354199999999895e-05, 8.340299999999926e-05, 8.31110000000003e-05, 8.319499999999772e-05, 8.388900000000019e-05, 8.342999999999892e-05, 8.301399999999931e-05, 8.38330000000019e-05, 8.31110000000003e-05, 8.390200000000028e-05, 8.329099999999923e-05, 8.355499999999905e-05, 8.368000000000264e-05, 8.3152999999999e-05, 8.308299999999769e-05, 8.319400000000171e-05, 8.372199999999788e-05, 8.348600000000067e-05, 8.305599999999802e-05, 8.348600000000067e-05, 8.294400000000146e-05, 8.309699999999726e-05, 8.370800000000178e-05, 8.29720000000006e-05, 8.341699999999883e-05, 8.299999999999974e-05, 8.299999999999974e-05, 8.305599999999802e-05, 8.355599999999852e-05, 8.327799999999913e-05, 8.30980000000002e-05, 8.31110000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.126" endtime="20201112 12:28:03.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.121" endtime="20201112 12:28:03.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.132" endtime="20201112 12:28:03.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.135" endtime="20201112 12:28:03.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.134" endtime="20201112 12:28:03.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.130" endtime="20201112 12:28:03.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.759" endtime="20201112 12:28:03.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:02.758" endtime="20201112 12:28:03.156"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.166" endtime="20201112 12:28:03.184"></status>
</kw>
<msg timestamp="20201112 12:28:03.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.164" endtime="20201112 12:28:03.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.186" endtime="20201112 12:28:03.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.188" endtime="20201112 12:28:03.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.161" endtime="20201112 12:28:03.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.159" endtime="20201112 12:28:03.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.198" endtime="20201112 12:28:03.485"></status>
</kw>
<msg timestamp="20201112 12:28:03.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020678625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.196" endtime="20201112 12:28:03.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020678625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.489" endtime="20201112 12:28:03.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.498" endtime="20201112 12:28:03.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.193" endtime="20201112 12:28:03.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.191" endtime="20201112 12:28:03.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.505" level="INFO">${RESULT} = [{'time': 0.020762889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.426400000000056e-05, 'source_diff': 8.426400000000056e-05}, {'time': 0.020856903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.501" endtime="20201112 12:28:03.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.506" endtime="20201112 12:28:03.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.524" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.523" endtime="20201112 12:28:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.527" level="INFO">VALUE: [8.426400000000056e-05, 8.436099999999808e-05, 8.433399999999841e-05, 8.404199999999945e-05, 8.475000000000149e-05, 8.427800000000013e-05, 8.409699999999826e-05, 8.419399999999924e-05, 8.43049999999998e-05, 8.426400000000056e-05, 8.48050000000003e-05, 8.481899999999987e-05, 8.41249999999974e-05, 8.437500000000112e-05, 8.490300000000076e-05, 8.484799999999848e-05, 8.495899999999904e-05, 8.441599999999688e-05, 8.431999999999884e-05, 8.445799999999906e-05, 8.474999999999802e-05, 8.39859999999977e-05, 8.472199999999888e-05, 8.450000000000124e-05, 8.44859999999982e-05, 8.465299999999704e-05, 8.469499999999922e-05, 8.469499999999922e-05, 8.430599999999927e-05, 8.408299999999869e-05, 8.39729999999976e-05, 8.431899999999937e-05, 8.444399999999949e-05, 8.44859999999982e-05, 8.401400000000031e-05, 8.46110000000018e-05, 8.459699999999876e-05, 8.49309999999999e-05, 8.420899999999829e-05, 8.425000000000099e-05, 8.490200000000128e-05, 8.459700000000223e-05, 8.484700000000248e-05, 8.470799999999931e-05, 8.480499999999683e-05, 8.483299999999944e-05, 8.401400000000031e-05, 8.419399999999924e-05, 8.426400000000056e-05, 8.441699999999983e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.526" endtime="20201112 12:28:03.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.521" endtime="20201112 12:28:03.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.531" endtime="20201112 12:28:03.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.534" endtime="20201112 12:28:03.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.533" endtime="20201112 12:28:03.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.529" endtime="20201112 12:28:03.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.157" endtime="20201112 12:28:03.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.157" endtime="20201112 12:28:03.555"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.564" endtime="20201112 12:28:03.582"></status>
</kw>
<msg timestamp="20201112 12:28:03.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.563" endtime="20201112 12:28:03.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.584" endtime="20201112 12:28:03.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.586" endtime="20201112 12:28:03.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.560" endtime="20201112 12:28:03.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.558" endtime="20201112 12:28:03.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.596" endtime="20201112 12:28:03.884"></status>
</kw>
<msg timestamp="20201112 12:28:03.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.594" endtime="20201112 12:28:03.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.889" endtime="20201112 12:28:03.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.897" endtime="20201112 12:28:03.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.592" endtime="20201112 12:28:03.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.590" endtime="20201112 12:28:03.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:03.904" level="INFO">${RESULT} = [{'time': 0.020977944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555499999999758e-05, 'source_diff': 8.555499999999758e-05}, {'time': 0.021068944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:03.901" endtime="20201112 12:28:03.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:03.918" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:03.905" endtime="20201112 12:28:03.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.923" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:28:03.922" endtime="20201112 12:28:03.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.925" level="INFO">VALUE: [8.555499999999758e-05, 8.590199999999881e-05, 8.586099999999958e-05, 8.522199999999938e-05, 8.580499999999783e-05, 8.53469999999995e-05, 8.583300000000044e-05, 8.524999999999852e-05, 8.57920000000012e-05, 8.577800000000163e-05, 8.551399999999834e-05, 8.506900000000012e-05, 8.594399999999752e-05, 8.54859999999992e-05, 8.573600000000292e-05, 8.53050000000008e-05, 8.53469999999995e-05, 8.54859999999992e-05, 8.540300000000126e-05, 8.511099999999883e-05, 8.56249999999989e-05, 8.54310000000004e-05, 8.531999999999984e-05, 8.558300000000019e-05, 8.552699999999844e-05, 8.565199999999856e-05, 8.527799999999766e-05, 8.5847e-05, 8.518000000000067e-05, 8.590300000000176e-05, 8.554200000000095e-05, 8.513899999999797e-05, 8.572299999999936e-05, 8.520899999999929e-05, 8.52920000000007e-05, 8.544499999999997e-05, 8.56660000000016e-05, 8.577699999999869e-05, 8.541600000000135e-05, 8.516700000000058e-05, 8.536100000000255e-05, 8.554200000000095e-05, 8.541700000000083e-05, 8.558399999999966e-05, 8.587500000000262e-05, 8.576399999999859e-05, 8.56249999999989e-05, 8.515199999999806e-05, 8.588899999999872e-05, 8.541600000000135e-05]</msg>
<status status="PASS" starttime="20201112 12:28:03.924" endtime="20201112 12:28:03.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.919" endtime="20201112 12:28:03.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.929" endtime="20201112 12:28:03.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:03.933" endtime="20201112 12:28:03.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.931" endtime="20201112 12:28:03.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.927" endtime="20201112 12:28:03.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.556" endtime="20201112 12:28:03.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.556" endtime="20201112 12:28:03.954"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.963" endtime="20201112 12:28:03.981"></status>
</kw>
<msg timestamp="20201112 12:28:03.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.961" endtime="20201112 12:28:03.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:03.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:03.983" endtime="20201112 12:28:03.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.986" endtime="20201112 12:28:03.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.958" endtime="20201112 12:28:03.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.956" endtime="20201112 12:28:03.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:03.995" endtime="20201112 12:28:04.282"></status>
</kw>
<msg timestamp="20201112 12:28:04.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:03.993" endtime="20201112 12:28:04.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.287" endtime="20201112 12:28:04.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.295" endtime="20201112 12:28:04.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.991" endtime="20201112 12:28:04.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.989" endtime="20201112 12:28:04.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.302" level="INFO">${RESULT} = [{'time': 0.020602931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.619500000000072e-05, 'source_diff': 8.619500000000072e-05}, {'time': 0.020698944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:04.299" endtime="20201112 12:28:04.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:04.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:04.303" endtime="20201112 12:28:04.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.321" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:28:04.319" endtime="20201112 12:28:04.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.323" level="INFO">VALUE: [8.619500000000072e-05, 8.63470000000005e-05, 8.636100000000008e-05, 8.679100000000273e-05, 8.627800000000213e-05, 8.604200000000145e-05, 8.605500000000155e-05, 8.595800000000056e-05, 8.640300000000226e-05, 8.634699999999704e-05, 8.677799999999916e-05, 8.665299999999904e-05, 8.66119999999998e-05, 8.620799999999734e-05, 8.652800000000238e-05, 8.61249999999994e-05, 8.643000000000192e-05, 8.602800000000188e-05, 8.677799999999916e-05, 8.611099999999983e-05, 8.637500000000312e-05, 8.679199999999873e-05, 8.640299999999879e-05, 8.641700000000183e-05, 8.684800000000048e-05, 8.61799999999982e-05, 8.630499999999833e-05, 8.656899999999815e-05, 8.631900000000137e-05, 8.592999999999795e-05, 8.683300000000144e-05, 8.599999999999927e-05, 8.604200000000145e-05, 8.636100000000008e-05, 8.618000000000167e-05, 8.677799999999916e-05, 8.67920000000022e-05, 8.663900000000294e-05, 8.652699999999944e-05, 8.659700000000076e-05, 8.602800000000188e-05, 8.659700000000076e-05, 8.69860000000007e-05, 8.68059999999983e-05, 8.623599999999995e-05, 8.623599999999995e-05, 8.681999999999787e-05, 8.61669999999981e-05, 8.659700000000076e-05, 8.63470000000005e-05]</msg>
<status status="PASS" starttime="20201112 12:28:04.322" endtime="20201112 12:28:04.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.317" endtime="20201112 12:28:04.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.327" endtime="20201112 12:28:04.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.330" endtime="20201112 12:28:04.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.329" endtime="20201112 12:28:04.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.325" endtime="20201112 12:28:04.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.955" endtime="20201112 12:28:04.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:03.954" endtime="20201112 12:28:04.352"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.361" endtime="20201112 12:28:04.380"></status>
</kw>
<msg timestamp="20201112 12:28:04.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.360" endtime="20201112 12:28:04.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.382" endtime="20201112 12:28:04.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.384" endtime="20201112 12:28:04.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.357" endtime="20201112 12:28:04.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.355" endtime="20201112 12:28:04.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.394" endtime="20201112 12:28:04.680"></status>
</kw>
<msg timestamp="20201112 12:28:04.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021088056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.392" endtime="20201112 12:28:04.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021000722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021088056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.684" endtime="20201112 12:28:04.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.693" endtime="20201112 12:28:04.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.390" endtime="20201112 12:28:04.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.388" endtime="20201112 12:28:04.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:04.700" level="INFO">${RESULT} = [{'time': 0.021088056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.733400000000141e-05, 'source_diff': 8.733400000000141e-05}, {'time': 0.021182, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:28:04.696" endtime="20201112 12:28:04.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:04.714" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:04.701" endtime="20201112 12:28:04.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.718" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:28:04.717" endtime="20201112 12:28:04.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.721" level="INFO">VALUE: [8.733400000000141e-05, 8.793099999999943e-05, 8.727799999999966e-05, 8.784700000000201e-05, 8.701399999999984e-05, 8.752799999999991e-05, 8.781999999999887e-05, 8.722300000000086e-05, 8.744399999999902e-05, 8.701399999999984e-05, 8.733300000000194e-05, 8.737500000000065e-05, 8.793099999999943e-05, 8.756900000000262e-05, 8.78189999999994e-05, 8.761100000000133e-05, 8.777800000000016e-05, 8.706999999999812e-05, 8.734699999999804e-05, 8.765200000000056e-05, 8.75129999999974e-05, 8.755499999999958e-05, 8.786100000000158e-05, 8.759699999999829e-05, 8.741699999999936e-05, 8.78059999999993e-05, 8.731999999999837e-05, 8.708399999999769e-05, 8.736100000000108e-05, 8.781999999999887e-05, 8.701399999999984e-05, 8.736100000000108e-05, 8.731999999999837e-05, 8.772200000000188e-05, 8.737500000000065e-05, 8.758300000000219e-05, 8.777800000000016e-05, 8.790300000000029e-05, 8.705599999999855e-05, 8.700000000000027e-05, 8.744500000000197e-05, 8.755600000000252e-05, 8.747199999999816e-05, 8.697199999999766e-05, 8.748599999999773e-05, 8.766599999999666e-05, 8.736099999999761e-05, 8.708300000000169e-05, 8.756899999999915e-05, 8.78059999999993e-05]</msg>
<status status="PASS" starttime="20201112 12:28:04.720" endtime="20201112 12:28:04.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.715" endtime="20201112 12:28:04.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.725" endtime="20201112 12:28:04.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:04.728" endtime="20201112 12:28:04.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.727" endtime="20201112 12:28:04.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.723" endtime="20201112 12:28:04.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.353" endtime="20201112 12:28:04.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.352" endtime="20201112 12:28:04.749"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.759" endtime="20201112 12:28:04.778"></status>
</kw>
<msg timestamp="20201112 12:28:04.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.757" endtime="20201112 12:28:04.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:04.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:04.779" endtime="20201112 12:28:04.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.782" endtime="20201112 12:28:04.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.754" endtime="20201112 12:28:04.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.752" endtime="20201112 12:28:04.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:04.791" endtime="20201112 12:28:05.079"></status>
</kw>
<msg timestamp="20201112 12:28:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:04.790" endtime="20201112 12:28:05.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020806306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020895125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.083" endtime="20201112 12:28:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.092" endtime="20201112 12:28:05.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.787" endtime="20201112 12:28:05.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.785" endtime="20201112 12:28:05.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.099" level="INFO">${RESULT} = [{'time': 0.020895125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.88190000000004e-05, 'source_diff': 8.88190000000004e-05}, {'time': 0.020989125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:05.096" endtime="20201112 12:28:05.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:05.100" endtime="20201112 12:28:05.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.119" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.118" endtime="20201112 12:28:05.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.122" level="INFO">VALUE: [8.88190000000004e-05, 8.79860000000017e-05, 8.872200000000288e-05, 8.830600000000327e-05, 8.883299999999997e-05, 8.827800000000066e-05, 8.865300000000104e-05, 8.83189999999999e-05, 8.823599999999848e-05, 8.805500000000008e-05, 8.797200000000213e-05, 8.819399999999977e-05, 8.845899999999907e-05, 8.883299999999997e-05, 8.837500000000165e-05, 8.881999999999987e-05, 8.86670000000006e-05, 8.872300000000236e-05, 8.840200000000131e-05, 8.822199999999891e-05, 8.834699999999904e-05, 8.811099999999836e-05, 8.843099999999993e-05, 8.851399999999787e-05, 8.872199999999941e-05, 8.838900000000122e-05, 8.877799999999769e-05, 8.845899999999907e-05, 8.834799999999851e-05, 8.868100000000018e-05, 8.85129999999984e-05, 8.876400000000159e-05, 8.795799999999909e-05, 8.847199999999916e-05, 8.895800000000009e-05, 8.883299999999997e-05, 8.804199999999998e-05, 8.843099999999993e-05, 8.827800000000066e-05, 8.808399999999869e-05, 8.804199999999998e-05, 8.883299999999997e-05, 8.861099999999886e-05, 8.88190000000004e-05, 8.83189999999999e-05, 8.886099999999911e-05, 8.844400000000002e-05, 8.879200000000073e-05, 8.855600000000005e-05, 8.804199999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.120" endtime="20201112 12:28:05.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.115" endtime="20201112 12:28:05.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.126" endtime="20201112 12:28:05.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.129" endtime="20201112 12:28:05.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.127" endtime="20201112 12:28:05.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.124" endtime="20201112 12:28:05.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.750" endtime="20201112 12:28:05.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:04.750" endtime="20201112 12:28:05.150"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.159" endtime="20201112 12:28:05.178"></status>
</kw>
<msg timestamp="20201112 12:28:05.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.158" endtime="20201112 12:28:05.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.180" endtime="20201112 12:28:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.182" endtime="20201112 12:28:05.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.155" endtime="20201112 12:28:05.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.153" endtime="20201112 12:28:05.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.192" endtime="20201112 12:28:05.479"></status>
</kw>
<msg timestamp="20201112 12:28:05.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.190" endtime="20201112 12:28:05.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.484" endtime="20201112 12:28:05.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.492" endtime="20201112 12:28:05.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.188" endtime="20201112 12:28:05.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.186" endtime="20201112 12:28:05.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.500" level="INFO">${RESULT} = [{'time': 0.020673639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.974999999999955e-05, 'source_diff': 8.974999999999955e-05}, {'time': 0.020766653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:05.496" endtime="20201112 12:28:05.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:05.501" endtime="20201112 12:28:05.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.518" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.517" endtime="20201112 12:28:05.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.521" level="INFO">VALUE: [8.974999999999955e-05, 8.976399999999912e-05, 8.94450000000005e-05, 8.940299999999832e-05, 8.927799999999819e-05, 8.951399999999887e-05, 8.940300000000179e-05, 8.930500000000133e-05, 8.941599999999841e-05, 8.965299999999857e-05, 8.922199999999991e-05, 8.979200000000173e-05, 8.990299999999882e-05, 8.938899999999875e-05, 8.965300000000204e-05, 8.977800000000216e-05, 8.936100000000308e-05, 8.948599999999973e-05, 8.934700000000004e-05, 8.915299999999807e-05, 8.98190000000014e-05, 8.954199999999801e-05, 8.972200000000041e-05, 8.952800000000191e-05, 8.954200000000148e-05, 8.940300000000179e-05, 8.918099999999721e-05, 8.94869999999992e-05, 8.909699999999979e-05, 8.984699999999707e-05, 8.89860000000027e-05, 8.959699999999682e-05, 8.973599999999998e-05, 8.972200000000041e-05, 8.983300000000097e-05, 8.897199999999966e-05, 8.923599999999948e-05, 8.958300000000072e-05, 8.977699999999922e-05, 8.972299999999989e-05, 8.961099999999986e-05, 8.977699999999922e-05, 8.937500000000265e-05, 8.979099999999879e-05, 8.972299999999989e-05, 8.897199999999966e-05, 8.952799999999844e-05, 8.988799999999977e-05, 8.995800000000109e-05, 8.947299999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.519" endtime="20201112 12:28:05.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.514" endtime="20201112 12:28:05.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.524" endtime="20201112 12:28:05.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.528" endtime="20201112 12:28:05.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.526" endtime="20201112 12:28:05.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.523" endtime="20201112 12:28:05.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.151" endtime="20201112 12:28:05.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.151" endtime="20201112 12:28:05.549"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.558" endtime="20201112 12:28:05.577"></status>
</kw>
<msg timestamp="20201112 12:28:05.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.557" endtime="20201112 12:28:05.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.578" endtime="20201112 12:28:05.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.581" endtime="20201112 12:28:05.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.554" endtime="20201112 12:28:05.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.552" endtime="20201112 12:28:05.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.590" endtime="20201112 12:28:05.877"></status>
</kw>
<msg timestamp="20201112 12:28:05.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020905625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020996361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.589" endtime="20201112 12:28:05.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020905625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020996361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.881" endtime="20201112 12:28:05.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.890" endtime="20201112 12:28:05.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.586" endtime="20201112 12:28:05.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.584" endtime="20201112 12:28:05.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:05.897" level="INFO">${RESULT} = [{'time': 0.020996361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.073600000000098e-05, 'source_diff': 9.073600000000098e-05}, {'time': 0.021091361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:05.893" endtime="20201112 12:28:05.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:05.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:05.898" endtime="20201112 12:28:05.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.915" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:28:05.914" endtime="20201112 12:28:05.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.918" level="INFO">VALUE: [9.073600000000098e-05, 9.090299999999982e-05, 9.051399999999987e-05, 9.047199999999769e-05, 9.047199999999769e-05, 9.086100000000111e-05, 9.069499999999828e-05, 9.069499999999828e-05, 9.002800000000241e-05, 9.012499999999993e-05, 9.088899999999678e-05, 9.077799999999969e-05, 9.048600000000073e-05, 9.062500000000043e-05, 9.047200000000116e-05, 9.040299999999932e-05, 9.011099999999689e-05, 9.01670000000021e-05, 9.075000000000055e-05, 9.054199999999901e-05, 9.020800000000134e-05, 9.056899999999868e-05, 9.045799999999812e-05, 9.022200000000091e-05, 8.997200000000066e-05, 9.08199999999984e-05, 9.068099999999871e-05, 9.022300000000039e-05, 9.029099999999929e-05, 9.018099999999821e-05, 9.083399999999797e-05, 8.99999999999998e-05, 9.072200000000141e-05, 9.034699999999757e-05, 9.044400000000202e-05, 9.001399999999937e-05, 9.072200000000141e-05, 9.040299999999932e-05, 9.04589999999976e-05, 9.079199999999926e-05, 9.009800000000026e-05, 9.03060000000018e-05, 9.084800000000101e-05, 9.052699999999997e-05, 9.005500000000208e-05, 9.004099999999904e-05, 9.055499999999911e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.068099999999871e-05]</msg>
<status status="PASS" starttime="20201112 12:28:05.916" endtime="20201112 12:28:05.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.911" endtime="20201112 12:28:05.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.921" endtime="20201112 12:28:05.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:05.925" endtime="20201112 12:28:05.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.923" endtime="20201112 12:28:05.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.920" endtime="20201112 12:28:05.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.550" endtime="20201112 12:28:05.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.549" endtime="20201112 12:28:05.946"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.955" endtime="20201112 12:28:05.973"></status>
</kw>
<msg timestamp="20201112 12:28:05.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.954" endtime="20201112 12:28:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:05.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:05.975" endtime="20201112 12:28:05.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.978" endtime="20201112 12:28:05.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.951" endtime="20201112 12:28:05.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.949" endtime="20201112 12:28:05.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:05.987" endtime="20201112 12:28:06.274"></status>
</kw>
<msg timestamp="20201112 12:28:06.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:05.986" endtime="20201112 12:28:06.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.279" endtime="20201112 12:28:06.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.287" endtime="20201112 12:28:06.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.983" endtime="20201112 12:28:06.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.981" endtime="20201112 12:28:06.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.294" level="INFO">${RESULT} = [{'time': 0.020753125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.155599999999958e-05, 'source_diff': 9.155599999999958e-05}, {'time': 0.020851153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:06.291" endtime="20201112 12:28:06.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.308" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.296" endtime="20201112 12:28:06.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.313" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.312" endtime="20201112 12:28:06.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.315" level="INFO">VALUE: [9.155599999999958e-05, 9.176400000000112e-05, 9.186099999999864e-05, 9.143099999999946e-05, 9.125000000000105e-05, 9.147200000000216e-05, 9.098599999999776e-05, 9.101400000000037e-05, 9.141600000000041e-05, 9.123600000000148e-05, 9.188899999999778e-05, 9.184699999999907e-05, 9.129199999999976e-05, 9.155599999999958e-05, 9.126399999999715e-05, 9.177700000000122e-05, 9.170799999999937e-05, 9.172199999999894e-05, 9.137499999999771e-05, 9.112499999999746e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.112500000000093e-05, 9.10000000000008e-05, 9.099999999999733e-05, 9.136100000000161e-05, 9.194400000000005e-05, 9.106899999999918e-05, 9.098600000000123e-05, 9.179099999999732e-05, 9.159699999999882e-05, 9.154100000000054e-05, 9.175000000000155e-05, 9.159699999999882e-05, 9.1639000000001e-05, 9.108400000000169e-05, 9.152800000000044e-05, 9.147299999999817e-05, 9.122300000000139e-05, 9.109800000000126e-05, 9.11390000000005e-05, 9.101400000000037e-05, 9.127800000000019e-05, 9.141699999999989e-05, 9.186099999999864e-05, 9.151400000000087e-05, 9.138900000000075e-05, 9.154200000000001e-05, 9.101400000000037e-05, 9.159799999999829e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.314" endtime="20201112 12:28:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.309" endtime="20201112 12:28:06.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.319" endtime="20201112 12:28:06.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.323" endtime="20201112 12:28:06.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.321" endtime="20201112 12:28:06.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.317" endtime="20201112 12:28:06.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.947" endtime="20201112 12:28:06.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:05.946" endtime="20201112 12:28:06.344"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.353" endtime="20201112 12:28:06.371"></status>
</kw>
<msg timestamp="20201112 12:28:06.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.351" endtime="20201112 12:28:06.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.373" endtime="20201112 12:28:06.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.376" endtime="20201112 12:28:06.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.349" endtime="20201112 12:28:06.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.346" endtime="20201112 12:28:06.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.386" endtime="20201112 12:28:06.673"></status>
</kw>
<msg timestamp="20201112 12:28:06.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.384" endtime="20201112 12:28:06.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.678" endtime="20201112 12:28:06.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.686" endtime="20201112 12:28:06.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.381" endtime="20201112 12:28:06.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.379" endtime="20201112 12:28:06.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:06.693" level="INFO">${RESULT} = [{'time': 0.020775806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.219499999999978e-05, 'source_diff': 9.219499999999978e-05}, {'time': 0.020871833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:06.690" endtime="20201112 12:28:06.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:06.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:06.694" endtime="20201112 12:28:06.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.713" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:28:06.712" endtime="20201112 12:28:06.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.716" level="INFO">VALUE: [9.219499999999978e-05, 9.231900000000043e-05, 9.248599999999926e-05, 9.238899999999828e-05, 9.288899999999878e-05, 9.194400000000005e-05, 9.213899999999803e-05, 9.288899999999878e-05, 9.229199999999729e-05, 9.209799999999879e-05, 9.257000000000015e-05, 9.261200000000233e-05, 9.274999999999908e-05, 9.251400000000187e-05, 9.208299999999975e-05, 9.249999999999883e-05, 9.195799999999962e-05, 9.258300000000025e-05, 9.199999999999833e-05, 9.28200000000004e-05, 9.241700000000089e-05, 9.268100000000071e-05, 9.218100000000021e-05, 9.227699999999825e-05, 9.215199999999812e-05, 9.205500000000061e-05, 9.281900000000093e-05, 9.270800000000037e-05, 9.280599999999736e-05, 9.290299999999835e-05, 9.254200000000101e-05, 9.209799999999879e-05, 9.283399999999997e-05, 9.205600000000008e-05, 9.208299999999975e-05, 9.26940000000008e-05, 9.230499999999739e-05, 9.28330000000005e-05, 9.268000000000123e-05, 9.256899999999721e-05, 9.294400000000105e-05, 9.284700000000007e-05, 9.251400000000187e-05, 9.197299999999867e-05, 9.21390000000015e-05, 9.19870000000017e-05, 9.261099999999939e-05, 9.290300000000182e-05, 9.262500000000243e-05, 9.231900000000043e-05]</msg>
<status status="PASS" starttime="20201112 12:28:06.714" endtime="20201112 12:28:06.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.710" endtime="20201112 12:28:06.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.726" endtime="20201112 12:28:06.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:06.730" endtime="20201112 12:28:06.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.728" endtime="20201112 12:28:06.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.724" endtime="20201112 12:28:06.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.345" endtime="20201112 12:28:06.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.344" endtime="20201112 12:28:06.751"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.760" endtime="20201112 12:28:06.780"></status>
</kw>
<msg timestamp="20201112 12:28:06.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.758" endtime="20201112 12:28:06.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:06.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:06.782" endtime="20201112 12:28:06.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.784" endtime="20201112 12:28:06.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.756" endtime="20201112 12:28:06.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.753" endtime="20201112 12:28:06.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:06.794" endtime="20201112 12:28:07.081"></status>
</kw>
<msg timestamp="20201112 12:28:07.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:06.792" endtime="20201112 12:28:07.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.085" endtime="20201112 12:28:07.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.094" endtime="20201112 12:28:07.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.789" endtime="20201112 12:28:07.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.788" endtime="20201112 12:28:07.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.101" level="INFO">${RESULT} = [{'time': 0.021449222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.36659999999992e-05, 'source_diff': 9.36659999999992e-05}, {'time': 0.021552222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:07.097" endtime="20201112 12:28:07.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:07.102" endtime="20201112 12:28:07.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.119" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.118" endtime="20201112 12:28:07.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.122" level="INFO">VALUE: [9.36659999999992e-05, 9.356899999999821e-05, 9.308400000000022e-05, 9.315300000000207e-05, 9.338899999999928e-05, 9.380599999999836e-05, 9.394500000000153e-05, 9.363899999999953e-05, 9.381899999999846e-05, 9.38880000000003e-05, 9.322200000000044e-05, 9.317999999999826e-05, 9.323600000000001e-05, 9.323600000000001e-05, 9.355599999999811e-05, 9.331999999999743e-05, 9.354199999999854e-05, 9.369499999999781e-05, 9.366699999999867e-05, 9.319399999999783e-05, 9.381899999999846e-05, 9.358300000000125e-05, 9.387500000000021e-05, 9.358300000000125e-05, 9.356900000000168e-05, 9.308300000000075e-05, 9.305599999999761e-05, 9.348600000000026e-05, 9.326399999999915e-05, 9.31940000000013e-05, 9.327699999999925e-05, 9.320800000000087e-05, 9.311099999999989e-05, 9.30139999999989e-05, 9.343100000000146e-05, 9.322200000000044e-05, 9.390300000000282e-05, 9.36529999999991e-05, 9.36529999999991e-05, 9.306900000000118e-05, 9.333400000000047e-05, 9.343099999999799e-05, 9.394399999999858e-05, 9.305500000000161e-05, 9.377799999999922e-05, 9.309700000000032e-05, 9.380600000000183e-05, 9.379199999999879e-05, 9.400000000000033e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.120" endtime="20201112 12:28:07.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.115" endtime="20201112 12:28:07.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.125" endtime="20201112 12:28:07.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.129" endtime="20201112 12:28:07.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.127" endtime="20201112 12:28:07.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.124" endtime="20201112 12:28:07.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.752" endtime="20201112 12:28:07.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:06.751" endtime="20201112 12:28:07.150"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.159" endtime="20201112 12:28:07.178"></status>
</kw>
<msg timestamp="20201112 12:28:07.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.158" endtime="20201112 12:28:07.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.180" endtime="20201112 12:28:07.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.182" endtime="20201112 12:28:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.155" endtime="20201112 12:28:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.153" endtime="20201112 12:28:07.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.192" endtime="20201112 12:28:07.479"></status>
</kw>
<msg timestamp="20201112 12:28:07.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020656389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020750597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.190" endtime="20201112 12:28:07.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020656389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020750597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.483" endtime="20201112 12:28:07.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.492" endtime="20201112 12:28:07.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.187" endtime="20201112 12:28:07.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.185" endtime="20201112 12:28:07.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.499" level="INFO">${RESULT} = [{'time': 0.020750597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.42079999999984e-05, 'source_diff': 9.42079999999984e-05}, {'time': 0.020854569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:28:07.496" endtime="20201112 12:28:07.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:07.500" endtime="20201112 12:28:07.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.518" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.517" endtime="20201112 12:28:07.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.520" level="INFO">VALUE: [9.42079999999984e-05, 9.442999999999951e-05, 9.479099999999685e-05, 9.44859999999978e-05, 9.43469999999981e-05, 9.409699999999785e-05, 9.479199999999979e-05, 9.438900000000028e-05, 9.4333999999998e-05, 9.423700000000049e-05, 9.419499999999831e-05, 9.412500000000046e-05, 9.494500000000253e-05, 9.495799999999915e-05, 9.398600000000076e-05, 9.494399999999958e-05, 9.430499999999939e-05, 9.469399999999933e-05, 9.400000000000033e-05, 9.413900000000003e-05, 9.425000000000058e-05, 9.488900000000078e-05, 9.430499999999939e-05, 9.452799999999997e-05, 9.491600000000044e-05, 9.484700000000207e-05, 9.458299999999878e-05, 9.411100000000089e-05, 9.411100000000089e-05, 9.477799999999675e-05, 9.430599999999886e-05, 9.457000000000215e-05, 9.431899999999896e-05, 9.402799999999947e-05, 9.438900000000028e-05, 9.48469999999986e-05, 9.48469999999986e-05, 9.430499999999939e-05, 9.476400000000065e-05, 9.459699999999835e-05, 9.469399999999933e-05, 9.40139999999999e-05, 9.443100000000246e-05, 9.441599999999994e-05, 9.458300000000225e-05, 9.48339999999985e-05, 9.436100000000114e-05, 9.44859999999978e-05, 9.470800000000237e-05, 9.445799999999865e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.519" endtime="20201112 12:28:07.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.514" endtime="20201112 12:28:07.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.524" endtime="20201112 12:28:07.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.528" endtime="20201112 12:28:07.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.526" endtime="20201112 12:28:07.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.522" endtime="20201112 12:28:07.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.151" endtime="20201112 12:28:07.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.151" endtime="20201112 12:28:07.549"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.558" endtime="20201112 12:28:07.576"></status>
</kw>
<msg timestamp="20201112 12:28:07.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.556" endtime="20201112 12:28:07.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.578" endtime="20201112 12:28:07.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.580" endtime="20201112 12:28:07.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.554" endtime="20201112 12:28:07.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.551" endtime="20201112 12:28:07.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.590" endtime="20201112 12:28:07.877"></status>
</kw>
<msg timestamp="20201112 12:28:07.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021096417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021191889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.588" endtime="20201112 12:28:07.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021096417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021191889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.882" endtime="20201112 12:28:07.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.890" endtime="20201112 12:28:07.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.586" endtime="20201112 12:28:07.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.584" endtime="20201112 12:28:07.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:07.897" level="INFO">${RESULT} = [{'time': 0.021191889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.547199999999922e-05, 'source_diff': 9.547199999999922e-05}, {'time': 0.021292889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:07.894" endtime="20201112 12:28:07.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:07.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:07.898" endtime="20201112 12:28:07.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.916" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:28:07.915" endtime="20201112 12:28:07.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.918" level="INFO">VALUE: [9.547199999999922e-05, 9.568100000000024e-05, 9.600000000000233e-05, 9.545899999999913e-05, 9.505599999999961e-05, 9.527800000000072e-05, 9.576400000000165e-05, 9.587500000000221e-05, 9.55140000000014e-05, 9.587500000000221e-05, 9.508299999999928e-05, 9.536099999999867e-05, 9.53469999999991e-05, 9.530599999999986e-05, 9.529200000000029e-05, 9.581999999999993e-05, 9.565299999999763e-05, 9.586099999999917e-05, 9.580500000000089e-05, 9.540300000000085e-05, 9.525000000000158e-05, 9.506899999999971e-05, 9.527800000000072e-05, 9.550000000000183e-05, 9.547199999999922e-05, 9.580600000000036e-05, 9.595800000000015e-05, 9.588899999999831e-05, 9.577700000000175e-05, 9.555500000000064e-05, 9.580500000000089e-05, 9.558299999999978e-05, 9.531899999999996e-05, 9.544400000000008e-05, 9.587499999999874e-05, 9.53469999999991e-05, 9.51530000000006e-05, 9.581999999999993e-05, 9.538900000000128e-05, 9.53469999999991e-05, 9.565200000000162e-05, 9.511100000000189e-05, 9.49720000000022e-05, 9.506899999999971e-05, 9.575000000000208e-05, 9.576399999999818e-05, 9.512499999999799e-05, 9.554199999999707e-05, 9.54729999999987e-05, 9.544400000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:28:07.917" endtime="20201112 12:28:07.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.912" endtime="20201112 12:28:07.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.922" endtime="20201112 12:28:07.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:07.926" endtime="20201112 12:28:07.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.924" endtime="20201112 12:28:07.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.920" endtime="20201112 12:28:07.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.550" endtime="20201112 12:28:07.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.549" endtime="20201112 12:28:07.947"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.956" endtime="20201112 12:28:07.976"></status>
</kw>
<msg timestamp="20201112 12:28:07.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.954" endtime="20201112 12:28:07.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:07.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:07.978" endtime="20201112 12:28:07.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.980" endtime="20201112 12:28:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.952" endtime="20201112 12:28:07.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.949" endtime="20201112 12:28:07.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:07.990" endtime="20201112 12:28:08.277"></status>
</kw>
<msg timestamp="20201112 12:28:08.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021213875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:07.988" endtime="20201112 12:28:08.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021213875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.281" endtime="20201112 12:28:08.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.290" endtime="20201112 12:28:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.985" endtime="20201112 12:28:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.983" endtime="20201112 12:28:08.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.297" level="INFO">${RESULT} = [{'time': 0.021310569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.669400000000133e-05, 'source_diff': 9.669400000000133e-05}, {'time': 0.021413597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:08.293" endtime="20201112 12:28:08.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:08.298" endtime="20201112 12:28:08.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.317" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.316" endtime="20201112 12:28:08.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.319" level="INFO">VALUE: [9.669400000000133e-05, 9.626399999999868e-05, 9.645900000000013e-05, 9.694399999999812e-05, 9.613899999999856e-05, 9.623599999999954e-05, 9.640300000000185e-05, 9.686100000000017e-05, 9.66669999999982e-05, 9.619400000000083e-05, 9.633300000000053e-05, 9.626399999999868e-05, 9.645800000000065e-05, 9.604200000000104e-05, 9.61660000000017e-05, 9.676399999999918e-05, 9.631899999999749e-05, 9.663899999999906e-05, 9.669400000000133e-05, 9.641700000000142e-05, 9.613899999999856e-05, 9.636100000000314e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.624999999999911e-05, 9.637499999999924e-05, 9.642999999999805e-05, 9.680500000000189e-05, 9.609699999999985e-05, 9.595800000000015e-05, 9.681899999999799e-05, 9.631999999999696e-05, 9.613899999999856e-05, 9.688899999999931e-05, 9.659800000000329e-05, 9.644500000000056e-05, 9.656900000000121e-05, 9.680500000000189e-05, 9.61530000000016e-05, 9.66530000000021e-05, 9.611099999999942e-05, 9.637499999999924e-05, 9.612499999999899e-05, 9.638900000000228e-05, 9.67920000000018e-05, 9.665299999999863e-05, 9.641600000000194e-05, 9.680499999999842e-05, 9.661099999999992e-05, 9.658300000000078e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.318" endtime="20201112 12:28:08.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.313" endtime="20201112 12:28:08.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.323" endtime="20201112 12:28:08.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.327" endtime="20201112 12:28:08.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.325" endtime="20201112 12:28:08.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.322" endtime="20201112 12:28:08.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.948" endtime="20201112 12:28:08.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:07.947" endtime="20201112 12:28:08.348"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.357" endtime="20201112 12:28:08.377"></status>
</kw>
<msg timestamp="20201112 12:28:08.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.355" endtime="20201112 12:28:08.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.379" endtime="20201112 12:28:08.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.381" endtime="20201112 12:28:08.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.353" endtime="20201112 12:28:08.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.350" endtime="20201112 12:28:08.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.391" endtime="20201112 12:28:08.677"></status>
</kw>
<msg timestamp="20201112 12:28:08.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.389" endtime="20201112 12:28:08.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021037431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.682" endtime="20201112 12:28:08.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.690" endtime="20201112 12:28:08.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.386" endtime="20201112 12:28:08.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.384" endtime="20201112 12:28:08.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:08.697" level="INFO">${RESULT} = [{'time': 0.021037431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.772299999999748e-05, 'source_diff': 9.772299999999748e-05}, {'time': 0.021138431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:08.694" endtime="20201112 12:28:08.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:08.711" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:08.698" endtime="20201112 12:28:08.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.716" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:28:08.714" endtime="20201112 12:28:08.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.718" level="INFO">VALUE: [9.772299999999748e-05, 9.705599999999814e-05, 9.741600000000294e-05, 9.777700000000028e-05, 9.730499999999892e-05, 9.730499999999892e-05, 9.716700000000217e-05, 9.783299999999856e-05, 9.763900000000006e-05, 9.737500000000024e-05, 9.718100000000174e-05, 9.745900000000113e-05, 9.702800000000247e-05, 9.787500000000074e-05, 9.779099999999985e-05, 9.71530000000026e-05, 9.762500000000049e-05, 9.706900000000171e-05, 9.793099999999902e-05, 9.725000000000011e-05, 9.704199999999857e-05, 9.774999999999714e-05, 9.719399999999837e-05, 9.773600000000104e-05, 9.784699999999813e-05, 9.78609999999977e-05, 9.765299999999963e-05, 9.711100000000042e-05, 9.74860000000008e-05, 9.7334000000001e-05, 9.769500000000181e-05, 9.725000000000011e-05, 9.766700000000267e-05, 9.776400000000018e-05, 9.719399999999837e-05, 9.786100000000117e-05, 9.75279999999995e-05, 9.71799999999988e-05, 9.754200000000254e-05, 9.743099999999852e-05, 9.716700000000217e-05, 9.722200000000097e-05, 9.788900000000031e-05, 9.713900000000303e-05, 9.733299999999806e-05, 9.71799999999988e-05, 9.765200000000016e-05, 9.779099999999985e-05, 9.709699999999738e-05, 9.747200000000122e-05]</msg>
<status status="PASS" starttime="20201112 12:28:08.717" endtime="20201112 12:28:08.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.712" endtime="20201112 12:28:08.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.722" endtime="20201112 12:28:08.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:08.726" endtime="20201112 12:28:08.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.724" endtime="20201112 12:28:08.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.720" endtime="20201112 12:28:08.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.349" endtime="20201112 12:28:08.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.348" endtime="20201112 12:28:08.747"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.756" endtime="20201112 12:28:08.776"></status>
</kw>
<msg timestamp="20201112 12:28:08.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.754" endtime="20201112 12:28:08.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:08.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:08.777" endtime="20201112 12:28:08.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.780" endtime="20201112 12:28:08.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.751" endtime="20201112 12:28:08.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.749" endtime="20201112 12:28:08.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:08.789" endtime="20201112 12:28:09.076"></status>
</kw>
<msg timestamp="20201112 12:28:09.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:08.788" endtime="20201112 12:28:09.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.080" endtime="20201112 12:28:09.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.089" endtime="20201112 12:28:09.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.785" endtime="20201112 12:28:09.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.783" endtime="20201112 12:28:09.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.096" level="INFO">${RESULT} = [{'time': 0.020613139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870799999999944e-05, 'source_diff': 9.870799999999944e-05}, {'time': 0.020717153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:09.093" endtime="20201112 12:28:09.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.110" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.097" endtime="20201112 12:28:09.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.114" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.113" endtime="20201112 12:28:09.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.117" level="INFO">VALUE: [9.870799999999944e-05, 9.819499999999884e-05, 9.851400000000093e-05, 9.841699999999995e-05, 9.858299999999931e-05, 9.8721999999999e-05, 9.893000000000055e-05, 9.85410000000006e-05, 9.801399999999696e-05, 9.859700000000235e-05, 9.829199999999982e-05, 9.875000000000161e-05, 9.84999999999979e-05, 9.813900000000056e-05, 9.891700000000045e-05, 9.829099999999688e-05, 9.870799999999944e-05, 9.811099999999795e-05, 9.83059999999994e-05, 9.862499999999802e-05, 9.79860000000013e-05, 9.859699999999888e-05, 9.88470000000026e-05, 9.819499999999884e-05, 9.840300000000038e-05, 9.856900000000321e-05, 9.880500000000042e-05, 9.838900000000081e-05, 9.836100000000167e-05, 9.85280000000005e-05, 9.865300000000063e-05, 9.855599999999964e-05, 9.833399999999853e-05, 9.858400000000225e-05, 9.826400000000068e-05, 9.805599999999914e-05, 9.859700000000235e-05, 9.877700000000128e-05, 9.881899999999999e-05, 9.798599999999782e-05, 9.863899999999759e-05, 9.881899999999999e-05, 9.881999999999946e-05, 9.884699999999913e-05, 9.805599999999914e-05, 9.848700000000127e-05, 9.813800000000109e-05, 9.861100000000192e-05, 9.813900000000056e-05, 9.826400000000068e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.116" endtime="20201112 12:28:09.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.111" endtime="20201112 12:28:09.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.121" endtime="20201112 12:28:09.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.124" endtime="20201112 12:28:09.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.123" endtime="20201112 12:28:09.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.119" endtime="20201112 12:28:09.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.748" endtime="20201112 12:28:09.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:08.747" endtime="20201112 12:28:09.145"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.154" endtime="20201112 12:28:09.174"></status>
</kw>
<msg timestamp="20201112 12:28:09.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.153" endtime="20201112 12:28:09.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.175" endtime="20201112 12:28:09.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.178" endtime="20201112 12:28:09.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.150" endtime="20201112 12:28:09.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.148" endtime="20201112 12:28:09.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.187" endtime="20201112 12:28:09.476"></status>
</kw>
<msg timestamp="20201112 12:28:09.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:09.186" endtime="20201112 12:28:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020572431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:28:09.480" endtime="20201112 12:28:09.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.489" endtime="20201112 12:28:09.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.183" endtime="20201112 12:28:09.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.181" endtime="20201112 12:28:09.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.496" level="INFO">${RESULT} = [{'time': 0.020572431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943099999999705e-05, 'source_diff': 9.943099999999705e-05}, {'time': 0.020677444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:09.492" endtime="20201112 12:28:09.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.497" endtime="20201112 12:28:09.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.514" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.513" endtime="20201112 12:28:09.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.517" level="INFO">VALUE: [9.943099999999705e-05, 9.987499999999927e-05, 9.923599999999907e-05, 9.923599999999907e-05, 9.995800000000069e-05, 9.941700000000095e-05, 9.908299999999981e-05, 9.905600000000014e-05, 9.931999999999996e-05, 9.959799999999935e-05, 9.975000000000261e-05, 9.99159999999985e-05, 9.929200000000082e-05, 9.934699999999963e-05, 9.983300000000056e-05, 9.929200000000082e-05, 9.912499999999852e-05, 9.929200000000082e-05, 9.941699999999748e-05, 9.913899999999809e-05, 9.977799999999828e-05, 9.905600000000014e-05, 9.976399999999871e-05, 9.977700000000228e-05, 9.915300000000113e-05, 9.891700000000045e-05, 9.948599999999932e-05, 9.9722e-05, 9.940299999999791e-05, 9.905599999999667e-05, 9.929200000000082e-05, 9.963900000000206e-05, 9.912500000000199e-05, 9.95549999999977e-05, 9.941700000000095e-05, 9.956900000000074e-05, 9.906900000000024e-05, 9.965300000000163e-05, 9.969500000000034e-05, 9.954200000000107e-05, 9.961099999999945e-05, 9.977799999999828e-05, 9.925000000000211e-05, 9.941600000000148e-05, 9.959699999999988e-05, 9.988900000000231e-05, 9.908299999999981e-05, 9.9722e-05, 9.983400000000003e-05, 9.926399999999821e-05]</msg>
<status status="PASS" starttime="20201112 12:28:09.515" endtime="20201112 12:28:09.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.510" endtime="20201112 12:28:09.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.520" endtime="20201112 12:28:09.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.524" endtime="20201112 12:28:09.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.522" endtime="20201112 12:28:09.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.519" endtime="20201112 12:28:09.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.146" endtime="20201112 12:28:09.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.146" endtime="20201112 12:28:09.545"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.554" endtime="20201112 12:28:09.574"></status>
</kw>
<msg timestamp="20201112 12:28:09.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.552" endtime="20201112 12:28:09.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.575" endtime="20201112 12:28:09.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.578" endtime="20201112 12:28:09.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.550" endtime="20201112 12:28:09.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.548" endtime="20201112 12:28:09.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.588" endtime="20201112 12:28:09.875"></status>
</kw>
<msg timestamp="20201112 12:28:09.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.586" endtime="20201112 12:28:09.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.879" endtime="20201112 12:28:09.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.888" endtime="20201112 12:28:09.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.583" endtime="20201112 12:28:09.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.581" endtime="20201112 12:28:09.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:09.894" level="INFO">${RESULT} = [{'time': 0.020497611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.998599999999983e-05, 'source_diff': 9.998599999999983e-05}, {'time': 0.020606653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:09.891" endtime="20201112 12:28:09.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:09.909" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:09.895" endtime="20201112 12:28:09.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.914" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:28:09.913" endtime="20201112 12:28:09.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.917" level="INFO">VALUE: [9.998599999999983e-05, 0.00010083399999999756, 0.00010058299999999784, 9.994500000000059e-05, 0.00010073600000000058, 0.00010051399999999946, 0.00010020900000000041, 0.00010094500000000159, 0.0001005549999999987, 0.00010011099999999995, 0.00010024999999999964, 0.0001000419999999981, 0.00010013899999999909, 9.997200000000026e-05, 0.00010047200000000076, 0.00010007000000000071, 0.00010045799999999772, 0.00010023600000000008, 0.00010073700000000005, 0.00010099999999999693, 9.998599999999983e-05, 0.00010062500000000002, 0.00010087500000000027, 0.00010055500000000217, 0.00010087500000000027, 0.00010006899999999777, 0.00010082000000000146, 9.995900000000016e-05, 0.00010008400000000028, 0.00010008300000000081, 0.000100415999999999, 0.00010030499999999845, 0.00010041600000000248, 0.00010004200000000157, 0.0001003610000000002, 9.998599999999983e-05, 9.997200000000026e-05, 0.00010065299999999916, 0.000100819999999998, 0.00010056900000000174, 0.00010030500000000192, 0.00010087500000000027, 0.0001000410000000021, 0.00010008300000000081, 0.00010055599999999817, 0.00010023700000000302, 0.00010091699999999898, 0.00010061100000000045, 0.0001008480000000006, 0.0001003480000000001]</msg>
<status status="PASS" starttime="20201112 12:28:09.915" endtime="20201112 12:28:09.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.910" endtime="20201112 12:28:09.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.920" endtime="20201112 12:28:09.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:09.924" endtime="20201112 12:28:09.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.922" endtime="20201112 12:28:09.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.919" endtime="20201112 12:28:09.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.546" endtime="20201112 12:28:09.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.545" endtime="20201112 12:28:09.945"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.954" endtime="20201112 12:28:09.975"></status>
</kw>
<msg timestamp="20201112 12:28:09.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.953" endtime="20201112 12:28:09.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:09.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:09.976" endtime="20201112 12:28:09.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.979" endtime="20201112 12:28:09.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.950" endtime="20201112 12:28:09.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.948" endtime="20201112 12:28:09.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:09.989" endtime="20201112 12:28:10.275"></status>
</kw>
<msg timestamp="20201112 12:28:10.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:09.987" endtime="20201112 12:28:10.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.280" endtime="20201112 12:28:10.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.288" endtime="20201112 12:28:10.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.984" endtime="20201112 12:28:10.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.982" endtime="20201112 12:28:10.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.295" level="INFO">${RESULT} = [{'time': 0.021386236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010113900000000009, 'source_diff': 0.00010113900000000009}, {'time': 0.021493236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:10.292" endtime="20201112 12:28:10.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.308" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:10.296" endtime="20201112 12:28:10.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.313" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.312" endtime="20201112 12:28:10.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.315" level="INFO">VALUE: [0.00010113900000000009, 0.00010145799999999872, 0.00010173600000000158, 0.0001018610000000017, 0.000101028000000003, 0.0001013199999999985, 0.00010126400000000021, 0.00010126400000000021, 0.0001016939999999994, 0.00010166600000000026, 0.0001017359999999981, 0.00010191699999999998, 0.000101819999999999, 0.00010188900000000084, 0.00010147200000000176, 0.00010141699999999948, 0.00010155600000000264, 0.00010184699999999866, 0.00010130499999999945, 0.00010148600000000133, 0.00010158299999999884, 0.00010105599999999867, 0.00010112499999999705, 0.00010176399999999725, 0.00010130599999999892, 0.00010127799999999978, 0.00010177800000000028, 0.00010152800000000003, 0.00010124999999999718, 0.0001015549999999997, 0.00010106900000000224, 0.00010141699999999948, 0.00010163900000000059, 0.00010132000000000196, 0.00010132000000000196, 0.00010148600000000133, 0.0001014870000000008, 0.0001011809999999988, 0.00010137500000000077, 0.00010187500000000127, 0.00010116699999999923, 0.00010108299999999834, 0.0001018749999999978, 0.0001018610000000017, 0.00010169499999999887, 0.00010177800000000028, 0.00010118100000000227, 0.00010183300000000256, 0.00010158300000000231, 0.00010190199999999747]</msg>
<status status="PASS" starttime="20201112 12:28:10.314" endtime="20201112 12:28:10.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.309" endtime="20201112 12:28:10.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.319" endtime="20201112 12:28:10.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.323" endtime="20201112 12:28:10.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.321" endtime="20201112 12:28:10.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.317" endtime="20201112 12:28:10.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.946" endtime="20201112 12:28:10.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:09.946" endtime="20201112 12:28:10.344"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.353" endtime="20201112 12:28:10.372"></status>
</kw>
<msg timestamp="20201112 12:28:10.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.352" endtime="20201112 12:28:10.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.374" endtime="20201112 12:28:10.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.376" endtime="20201112 12:28:10.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.349" endtime="20201112 12:28:10.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.347" endtime="20201112 12:28:10.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.386" endtime="20201112 12:28:10.674"></status>
</kw>
<msg timestamp="20201112 12:28:10.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.384" endtime="20201112 12:28:10.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020577444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.678" endtime="20201112 12:28:10.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.686" endtime="20201112 12:28:10.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.382" endtime="20201112 12:28:10.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.380" endtime="20201112 12:28:10.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:10.693" level="INFO">${RESULT} = [{'time': 0.020679431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001019870000000013, 'source_diff': 0.0001019870000000013}, {'time': 0.020784431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:10.690" endtime="20201112 12:28:10.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:10.707" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:10.694" endtime="20201112 12:28:10.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.711" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:28:10.710" endtime="20201112 12:28:10.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.714" level="INFO">VALUE: [0.0001019870000000013, 0.0001020139999999975, 0.00010263899999999812, 0.00010249999999999843, 0.00010248600000000233, 0.00010248600000000233, 0.00010279200000000085, 0.00010281900000000052, 0.00010288800000000237, 0.00010258399999999931, 0.0001020139999999975, 0.00010222299999999851, 0.00010284799999999913, 0.00010265300000000116, 0.00010236099999999873, 0.00010195799999999922, 0.0001025420000000006, 0.00010269499999999987, 0.00010252800000000103, 0.00010277699999999834, 0.00010236099999999873, 0.00010229200000000035, 0.00010233399999999906, 0.00010216599999999729, 0.00010284699999999966, 0.0001020550000000002, 0.00010238900000000134, 0.0001027359999999991, 0.00010241700000000048, 0.00010240300000000091, 0.00010198599999999836, 0.00010259800000000235, 0.00010270799999999997, 0.00010208299999999934, 0.00010234700000000263, 0.00010230500000000045, 0.00010263900000000159, 0.00010234799999999863, 0.00010283300000000009, 0.00010234700000000263, 0.00010236099999999873, 0.00010259800000000235, 0.00010294400000000065, 0.00010198599999999836, 0.00010259699999999941, 0.00010233299999999959, 0.00010284699999999966, 0.00010255600000000017, 0.00010290300000000141, 0.00010252800000000103]</msg>
<status status="PASS" starttime="20201112 12:28:10.713" endtime="20201112 12:28:10.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.708" endtime="20201112 12:28:10.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.718" endtime="20201112 12:28:10.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:10.721" endtime="20201112 12:28:10.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.720" endtime="20201112 12:28:10.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.716" endtime="20201112 12:28:10.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.345" endtime="20201112 12:28:10.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.344" endtime="20201112 12:28:10.742"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.751" endtime="20201112 12:28:10.770"></status>
</kw>
<msg timestamp="20201112 12:28:10.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.750" endtime="20201112 12:28:10.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:10.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:10.772" endtime="20201112 12:28:10.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.774" endtime="20201112 12:28:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.747" endtime="20201112 12:28:10.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.745" endtime="20201112 12:28:10.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:10.784" endtime="20201112 12:28:11.070"></status>
</kw>
<msg timestamp="20201112 12:28:11.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020587819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:10.782" endtime="20201112 12:28:11.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020587819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.075" endtime="20201112 12:28:11.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.083" endtime="20201112 12:28:11.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.779" endtime="20201112 12:28:11.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.778" endtime="20201112 12:28:11.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.090" level="INFO">${RESULT} = [{'time': 0.020587819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010316600000000176, 'source_diff': 0.00010316600000000176}, {'time': 0.020697819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:11.087" endtime="20201112 12:28:11.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:11.103" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:11.091" endtime="20201112 12:28:11.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.108" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:28:11.107" endtime="20201112 12:28:11.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.111" level="INFO">VALUE: [0.00010316600000000176, 0.00010369399999999793, 0.00010347299999999976, 0.0001038879999999999, 0.00010338900000000234, 0.00010354100000000213, 0.00010343099999999758, 0.0001031949999999969, 0.00010324999999999918, 0.00010370900000000044, 0.0001030420000000011, 0.00010359700000000041, 0.00010326299999999927, 0.00010336099999999973, 0.00010302700000000206, 0.00010326399999999875, 0.00010390300000000241, 0.0001033749999999993, 0.00010327799999999832, 0.00010358400000000031, 0.00010334799999999963, 0.00010299999999999893, 0.0001031940000000009, 0.00010313900000000209, 0.00010329099999999841, 0.00010355499999999823, 0.00010304199999999764, 0.00010336099999999973, 0.00010337500000000277, 0.00010376399999999925, 0.000103820000000001, 0.0001038749999999998, 0.00010327799999999832, 0.0001032359999999996, 0.0001037360000000001, 0.00010333300000000059, 0.000103513999999999, 0.00010304199999999764, 0.00010355600000000117, 0.00010319500000000037, 0.00010345900000000019, 0.00010329200000000135, 0.00010334799999999963, 0.00010380499999999848, 0.0001038749999999998, 0.00010331900000000102, 0.00010361099999999998, 0.00010394400000000165, 0.00010348599999999986, 0.00010358400000000031]</msg>
<status status="PASS" starttime="20201112 12:28:11.109" endtime="20201112 12:28:11.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.104" endtime="20201112 12:28:11.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.114" endtime="20201112 12:28:11.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.118" endtime="20201112 12:28:11.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.116" endtime="20201112 12:28:11.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.113" endtime="20201112 12:28:11.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.743" endtime="20201112 12:28:11.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:10.743" endtime="20201112 12:28:11.139"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.148" endtime="20201112 12:28:11.168"></status>
</kw>
<msg timestamp="20201112 12:28:11.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.147" endtime="20201112 12:28:11.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.170" endtime="20201112 12:28:11.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.172" endtime="20201112 12:28:11.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.144" endtime="20201112 12:28:11.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.142" endtime="20201112 12:28:11.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.182" endtime="20201112 12:28:11.469"></status>
</kw>
<msg timestamp="20201112 12:28:11.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.180" endtime="20201112 12:28:11.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.473" endtime="20201112 12:28:11.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.482" endtime="20201112 12:28:11.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.177" endtime="20201112 12:28:11.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.175" endtime="20201112 12:28:11.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.489" level="INFO">${RESULT} = [{'time': 0.020599153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010445899999999772, 'source_diff': 0.00010445899999999772}, {'time': 0.020708167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:11.485" endtime="20201112 12:28:11.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:11.503" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:11.490" endtime="20201112 12:28:11.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.508" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:28:11.507" endtime="20201112 12:28:11.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.511" level="INFO">VALUE: [0.00010445899999999772, 0.00010418099999999833, 0.00010413899999999962, 0.0001047360000000011, 0.00010483300000000209, 0.00010456900000000227, 0.00010444399999999868, 0.00010456900000000227, 0.00010486099999999776, 0.00010411100000000048, 0.00010406999999999778, 0.00010416699999999876, 0.00010442999999999911, 0.00010491600000000004, 0.00010447200000000129, 0.00010484700000000166, 0.0001047079999999985, 0.00010466699999999926, 0.00010461100000000098, 0.00010463900000000012, 0.00010408399999999735, 0.00010480599999999896, 0.00010401300000000002, 0.00010463900000000012, 0.00010415199999999972, 0.0001043750000000003, 0.00010466700000000273, 0.00010479199999999939, 0.00010448600000000086, 0.00010448600000000086, 0.00010440299999999944, 0.00010408400000000081, 0.00010483299999999862, 0.00010458299999999837, 0.00010448599999999739, 0.00010434700000000116, 0.00010402799999999907, 0.00010436100000000073, 0.00010463900000000012, 0.0001043750000000003, 0.00010465299999999969, 0.00010491699999999951, 0.00010448700000000033, 0.00010415199999999972, 0.00010430499999999898, 0.00010470800000000197, 0.00010427800000000279, 0.00010476400000000025, 0.00010412500000000005, 0.00010416699999999876]</msg>
<status status="PASS" starttime="20201112 12:28:11.509" endtime="20201112 12:28:11.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.504" endtime="20201112 12:28:11.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.515" endtime="20201112 12:28:11.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.518" endtime="20201112 12:28:11.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.517" endtime="20201112 12:28:11.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.513" endtime="20201112 12:28:11.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.140" endtime="20201112 12:28:11.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.139" endtime="20201112 12:28:11.539"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.548" endtime="20201112 12:28:11.569"></status>
</kw>
<msg timestamp="20201112 12:28:11.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.547" endtime="20201112 12:28:11.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.570" endtime="20201112 12:28:11.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.573" endtime="20201112 12:28:11.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.544" endtime="20201112 12:28:11.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.542" endtime="20201112 12:28:11.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.582" endtime="20201112 12:28:11.870"></status>
</kw>
<msg timestamp="20201112 12:28:11.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020573556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.581" endtime="20201112 12:28:11.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020573556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.875" endtime="20201112 12:28:11.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.883" endtime="20201112 12:28:11.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.578" endtime="20201112 12:28:11.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.576" endtime="20201112 12:28:11.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:11.890" level="INFO">${RESULT} = [{'time': 0.020573556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010509800000000138, 'source_diff': 0.00010509800000000138}, {'time': 0.020681569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:11.887" endtime="20201112 12:28:11.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:11.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:11.891" endtime="20201112 12:28:11.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.908" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:28:11.907" endtime="20201112 12:28:11.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.910" level="INFO">VALUE: [0.00010509800000000138, 0.00010501300000000102, 0.00010559700000000241, 0.00010530499999999998, 0.0001055689999999998, 0.0001057499999999982, 0.00010554200000000014, 0.00010579200000000039, 0.0001050559999999992, 0.00010568000000000036, 0.00010552699999999762, 0.00010591599999999757, 0.00010584699999999919, 0.00010498600000000136, 0.00010583299999999962, 0.00010545899999999872, 0.00010552800000000057, 0.00010516699999999976, 0.00010555500000000023, 0.00010566700000000026, 0.00010511100000000148, 0.00010573599999999864, 0.00010545799999999925, 0.00010495799999999875, 0.00010556999999999928, 0.00010549999999999796, 0.00010552800000000057, 0.00010568099999999983, 0.00010586099999999876, 0.00010534699999999869, 0.00010565200000000122, 0.000105514000000001, 0.00010502800000000007, 0.00010541700000000001, 0.00010568099999999983, 0.00010533299999999912, 0.00010570899999999897, 0.00010530599999999946, 0.00010572299999999854, 0.00010547300000000176, 0.00010554100000000066, 0.00010594400000000018, 0.00010551399999999753, 0.00010568000000000036, 0.0001050689999999993, 0.00010523599999999814, 0.00010579200000000039, 0.00010577799999999735, 0.00010516699999999976, 0.00010576400000000125]</msg>
<status status="PASS" starttime="20201112 12:28:11.909" endtime="20201112 12:28:11.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.904" endtime="20201112 12:28:11.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.919" endtime="20201112 12:28:11.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:11.922" endtime="20201112 12:28:11.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.921" endtime="20201112 12:28:11.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.917" endtime="20201112 12:28:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.540" endtime="20201112 12:28:11.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.540" endtime="20201112 12:28:11.943"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.952" endtime="20201112 12:28:11.971"></status>
</kw>
<msg timestamp="20201112 12:28:11.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.951" endtime="20201112 12:28:11.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:11.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:11.973" endtime="20201112 12:28:11.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.976" endtime="20201112 12:28:11.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.948" endtime="20201112 12:28:11.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.946" endtime="20201112 12:28:11.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:11.985" endtime="20201112 12:28:12.272"></status>
</kw>
<msg timestamp="20201112 12:28:12.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021085028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:11.984" endtime="20201112 12:28:12.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021085028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.276" endtime="20201112 12:28:12.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.285" endtime="20201112 12:28:12.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.981" endtime="20201112 12:28:12.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.979" endtime="20201112 12:28:12.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.292" level="INFO">${RESULT} = [{'time': 0.021085028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010647199999999982, 'source_diff': 0.00010647199999999982}, {'time': 0.021196028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:12.288" endtime="20201112 12:28:12.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.305" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:12.293" endtime="20201112 12:28:12.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.310" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.309" endtime="20201112 12:28:12.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.312" level="INFO">VALUE: [0.00010647199999999982, 0.00010657000000000028, 0.00010612500000000205, 0.0001062499999999987, 0.00010623599999999914, 0.0001060690000000003, 0.00010644399999999721, 0.00010622199999999957, 0.00010604200000000064, 0.00010625000000000218, 0.00010684700000000019, 0.0001067499999999992, 0.00010612499999999858, 0.00010647300000000276, 0.0001067080000000005, 0.00010611099999999901, 0.00010599999999999846, 0.00010630500000000098, 0.00010659699999999994, 0.00010598599999999889, 0.00010606999999999978, 0.00010687499999999933, 0.00010612500000000205, 0.00010662500000000255, 0.00010615199999999825, 0.00010604100000000116, 0.00010650000000000243, 0.00010630600000000046, 0.00010637499999999883, 0.00010690299999999847, 0.00010606999999999978, 0.0001066950000000004, 0.00010625000000000218, 0.00010684800000000313, 0.00010667999999999789, 0.00010623599999999914, 0.00010659699999999994, 0.00010631900000000055, 0.000106514000000002, 0.00010641699999999754, 0.00010613899999999815, 0.00010672299999999954, 0.00010641600000000154, 0.0001068750000000028, 0.0001060690000000003, 0.00010602699999999812, 0.00010676399999999878, 0.00010645800000000025, 0.00010693099999999761, 0.00010665300000000169]</msg>
<status status="PASS" starttime="20201112 12:28:12.311" endtime="20201112 12:28:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.306" endtime="20201112 12:28:12.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.316" endtime="20201112 12:28:12.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.320" endtime="20201112 12:28:12.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.318" endtime="20201112 12:28:12.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.314" endtime="20201112 12:28:12.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.944" endtime="20201112 12:28:12.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:11.944" endtime="20201112 12:28:12.341"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.350" endtime="20201112 12:28:12.371"></status>
</kw>
<msg timestamp="20201112 12:28:12.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.348" endtime="20201112 12:28:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.373" endtime="20201112 12:28:12.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.375" endtime="20201112 12:28:12.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.346" endtime="20201112 12:28:12.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.343" endtime="20201112 12:28:12.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.385" endtime="20201112 12:28:12.673"></status>
</kw>
<msg timestamp="20201112 12:28:12.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:12.383" endtime="20201112 12:28:12.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021359403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:12.677" endtime="20201112 12:28:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.686" endtime="20201112 12:28:12.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.380" endtime="20201112 12:28:12.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.378" endtime="20201112 12:28:12.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:12.692" level="INFO">${RESULT} = [{'time': 0.021359403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010790299999999947, 'source_diff': 0.00010790299999999947}, {'time': 0.021472389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:12.689" endtime="20201112 12:28:12.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:12.706" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:12.693" endtime="20201112 12:28:12.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.711" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:28:12.710" endtime="20201112 12:28:12.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.713" level="INFO">VALUE: [0.00010790299999999947, 0.00010723600000000014, 0.00010781899999999858, 0.00010756899999999833, 0.00010734800000000017, 0.00010713800000000315, 0.00010719400000000143, 0.00010755499999999876, 0.00010744399999999821, 0.00010779199999999892, 0.00010743100000000158, 0.00010790299999999947, 0.00010747200000000082, 0.00010761100000000051, 0.00010716699999999829, 0.00010776399999999978, 0.00010762500000000008, 0.00010773600000000064, 0.00010723600000000014, 0.00010729199999999842, 0.00010770799999999803, 0.00010727799999999885, 0.0001077219999999976, 0.00010701399999999903, 0.0001078340000000011, 0.00010731900000000155, 0.0001073750000000033, 0.00010722200000000057, 0.00010782000000000153, 0.0001070279999999986, 0.00010744499999999768, 0.00010738900000000287, 0.00010762500000000008, 0.0001073889999999994, 0.00010793099999999861, 0.00010711100000000001, 0.00010752699999999962, 0.00010732000000000103, 0.0001073889999999994, 0.00010754200000000214, 0.00010736100000000026, 0.00010731999999999756, 0.00010713899999999915, 0.00010745900000000072, 0.00010717999999999839, 0.00010791599999999957, 0.00010715299999999872, 0.00010701399999999903, 0.00010729200000000189, 0.00010729199999999842]</msg>
<status status="PASS" starttime="20201112 12:28:12.712" endtime="20201112 12:28:12.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.707" endtime="20201112 12:28:12.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.717" endtime="20201112 12:28:12.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:12.721" endtime="20201112 12:28:12.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.719" endtime="20201112 12:28:12.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.715" endtime="20201112 12:28:12.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.342" endtime="20201112 12:28:12.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.341" endtime="20201112 12:28:12.742"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.751" endtime="20201112 12:28:12.770"></status>
</kw>
<msg timestamp="20201112 12:28:12.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.749" endtime="20201112 12:28:12.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:12.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:12.771" endtime="20201112 12:28:12.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.774" endtime="20201112 12:28:12.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.746" endtime="20201112 12:28:12.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.744" endtime="20201112 12:28:12.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:12.783" endtime="20201112 12:28:13.070"></status>
</kw>
<msg timestamp="20201112 12:28:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020474167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020582931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:12.782" endtime="20201112 12:28:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020474167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020582931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.074" endtime="20201112 12:28:13.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.083" endtime="20201112 12:28:13.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.779" endtime="20201112 12:28:13.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.777" endtime="20201112 12:28:13.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.089" level="INFO">${RESULT} = [{'time': 0.020582931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010876399999999731, 'source_diff': 0.00010876399999999731}, {'time': 0.020697944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.086" endtime="20201112 12:28:13.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.091" endtime="20201112 12:28:13.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.109" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.108" endtime="20201112 12:28:13.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.112" level="INFO">VALUE: [0.00010876399999999731, 0.00010876299999999783, 0.0001082500000000007, 0.00010805499999999926, 0.00010836100000000126, 0.00010901400000000103, 0.00010798600000000089, 0.00010883300000000262, 0.00010855599999999924, 0.0001083890000000004, 0.00010830599999999899, 0.0001083479999999977, 0.00010869399999999946, 0.00010848600000000139, 0.0001082500000000007, 0.00010844499999999868, 0.00010854199999999967, 0.000108208000000002, 0.0001080560000000022, 0.00010849999999999749, 0.00010863900000000065, 0.00010842999999999964, 0.00010873599999999817, 0.00010849999999999749, 0.0001087080000000025, 0.00010862500000000108, 0.00010866699999999979, 0.00010826400000000028, 0.00010841600000000007, 0.00010840299999999997, 0.00010863900000000065, 0.00010865200000000075, 0.00010824999999999724, 0.00010795800000000175, 0.00010837500000000083, 0.00010859699999999847, 0.00010855599999999924, 0.00010823600000000114, 0.00010801400000000003, 0.00010890300000000047, 0.00010854199999999967, 0.00010866600000000032, 0.00010883300000000262, 0.00010855499999999976, 0.00010861099999999804, 0.00010816699999999929, 0.0001080699999999983, 0.00010858400000000185, 0.00010815299999999972, 0.00010808399999999788]</msg>
<status status="PASS" starttime="20201112 12:28:13.110" endtime="20201112 12:28:13.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.105" endtime="20201112 12:28:13.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.115" endtime="20201112 12:28:13.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.119" endtime="20201112 12:28:13.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.117" endtime="20201112 12:28:13.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.114" endtime="20201112 12:28:13.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.743" endtime="20201112 12:28:13.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:12.742" endtime="20201112 12:28:13.140"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.149" endtime="20201112 12:28:13.170"></status>
</kw>
<msg timestamp="20201112 12:28:13.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.148" endtime="20201112 12:28:13.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.171" endtime="20201112 12:28:13.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.174" endtime="20201112 12:28:13.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.145" endtime="20201112 12:28:13.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.143" endtime="20201112 12:28:13.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.183" endtime="20201112 12:28:13.471"></status>
</kw>
<msg timestamp="20201112 12:28:13.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.182" endtime="20201112 12:28:13.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.476" endtime="20201112 12:28:13.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.484" endtime="20201112 12:28:13.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.179" endtime="20201112 12:28:13.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.177" endtime="20201112 12:28:13.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.491" level="INFO">${RESULT} = [{'time': 0.021252778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010913900000000115, 'source_diff': 0.00010913900000000115}, {'time': 0.021365806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.488" endtime="20201112 12:28:13.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.504" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.492" endtime="20201112 12:28:13.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.508" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.507" endtime="20201112 12:28:13.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.511" level="INFO">VALUE: [0.00010913900000000115, 0.00010913900000000115, 0.00010909800000000192, 0.00010901399999999756, 0.00010918000000000039, 0.0001090829999999994, 0.00010902799999999713, 0.00010974999999999874, 0.00010986100000000276, 0.00010973599999999917, 0.00010959799999999895, 0.0001095280000000011, 0.00010905599999999974, 0.00010987499999999886, 0.00010902700000000112, 0.00010951400000000153, 0.00010912499999999811, 0.00010947199999999935, 0.00010979100000000144, 0.00010965299999999775, 0.00010913899999999768, 0.00010947299999999882, 0.00010947200000000282, 0.00010982000000000006, 0.00010965299999999775, 0.00010965300000000122, 0.00010934699999999922, 0.00010995800000000028, 0.00010912499999999811, 0.00010956900000000033, 0.00010940300000000097, 0.00010981899999999711, 0.00010991600000000157, 0.00010912499999999811, 0.0001097219999999996, 0.00010904200000000017, 0.00010941600000000107, 0.00010895799999999928, 0.00010911099999999854, 0.0001095699999999998, 0.00010926299999999833, 0.00010900000000000146, 0.00010895799999999928, 0.00010994399999999724, 0.00010977800000000135, 0.00010980600000000049, 0.00010956900000000033, 0.00010938899999999793, 0.00010980600000000049, 0.00010925000000000171]</msg>
<status status="PASS" starttime="20201112 12:28:13.510" endtime="20201112 12:28:13.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.505" endtime="20201112 12:28:13.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.514" endtime="20201112 12:28:13.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.518" endtime="20201112 12:28:13.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.517" endtime="20201112 12:28:13.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.513" endtime="20201112 12:28:13.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.141" endtime="20201112 12:28:13.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.141" endtime="20201112 12:28:13.539"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.549" endtime="20201112 12:28:13.569"></status>
</kw>
<msg timestamp="20201112 12:28:13.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.547" endtime="20201112 12:28:13.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.570" endtime="20201112 12:28:13.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.573" endtime="20201112 12:28:13.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.544" endtime="20201112 12:28:13.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.542" endtime="20201112 12:28:13.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.582" endtime="20201112 12:28:13.887"></status>
</kw>
<msg timestamp="20201112 12:28:13.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021291431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.580" endtime="20201112 12:28:13.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021291431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.891" endtime="20201112 12:28:13.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.899" endtime="20201112 12:28:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.578" endtime="20201112 12:28:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.576" endtime="20201112 12:28:13.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:13.906" level="INFO">${RESULT} = [{'time': 0.021291431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011001399999999856, 'source_diff': 0.00011001399999999856}, {'time': 0.021404431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:13.903" endtime="20201112 12:28:13.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:13.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:13.907" endtime="20201112 12:28:13.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.923" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:28:13.922" endtime="20201112 12:28:13.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.926" level="INFO">VALUE: [0.00011001399999999856, 0.00011032000000000056, 0.00011027700000000237, 0.00011024999999999924, 0.00011080499999999854, 0.00011088899999999943, 0.00011091700000000204, 0.00011058299999999743, 0.00011043100000000111, 0.00011038899999999893, 0.00011056900000000133, 0.00010998600000000289, 0.00010997199999999985, 0.00011048599999999992, 0.00011044400000000121, 0.00011073600000000017, 0.00011016700000000129, 0.00011065299999999875, 0.00011048699999999939, 0.00011018000000000139, 0.000110596999999997, 0.00011074999999999974, 0.00011084700000000072, 0.00011006899999999736, 0.00011066700000000179, 0.00011081899999999811, 0.00011026400000000228, 0.00011029200000000142, 0.00011084700000000072, 0.00011012499999999911, 0.00011004100000000169, 0.00011065199999999928, 0.00011080600000000149, 0.00011011099999999954, 0.00011077799999999888, 0.00011079200000000192, 0.00011029199999999795, 0.00011009799999999945, 0.00011079099999999897, 0.00011070799999999756, 0.00011036099999999979, 0.00011044399999999774, 0.00011031900000000108, 0.00011020800000000053, 0.00011033400000000013, 0.00011034700000000022, 0.00011043000000000164, 0.000110902999999999, 0.00011009699999999997, 0.00011079099999999897]</msg>
<status status="PASS" starttime="20201112 12:28:13.924" endtime="20201112 12:28:13.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.920" endtime="20201112 12:28:13.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.929" endtime="20201112 12:28:13.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:13.933" endtime="20201112 12:28:13.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.931" endtime="20201112 12:28:13.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.928" endtime="20201112 12:28:13.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.540" endtime="20201112 12:28:13.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.540" endtime="20201112 12:28:13.954"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.963" endtime="20201112 12:28:13.982"></status>
</kw>
<msg timestamp="20201112 12:28:13.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.961" endtime="20201112 12:28:13.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:13.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:13.984" endtime="20201112 12:28:13.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.986" endtime="20201112 12:28:13.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.959" endtime="20201112 12:28:13.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.957" endtime="20201112 12:28:13.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:13.996" endtime="20201112 12:28:14.283"></status>
</kw>
<msg timestamp="20201112 12:28:14.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:13.994" endtime="20201112 12:28:14.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.287" endtime="20201112 12:28:14.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.295" endtime="20201112 12:28:14.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.991" endtime="20201112 12:28:14.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.990" endtime="20201112 12:28:14.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.302" level="INFO">${RESULT} = [{'time': 0.020115681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001113480000000007, 'source_diff': 0.0001113480000000007}, {'time': 0.020230694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:28:14.299" endtime="20201112 12:28:14.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.315" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:14.303" endtime="20201112 12:28:14.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.320" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.318" endtime="20201112 12:28:14.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.322" level="INFO">VALUE: [0.0001113480000000007, 0.00011130499999999904, 0.00011161100000000104, 0.00011187499999999739, 0.00011184700000000172, 0.00011156899999999886, 0.0001117220000000016, 0.00011180599999999902, 0.00011108400000000088, 0.0001115549999999993, 0.00011109700000000097, 0.00011137500000000036, 0.00011163900000000018, 0.00011181999999999859, 0.00011109700000000097, 0.00011101399999999956, 0.00011102799999999913, 0.00011098600000000042, 0.00011168100000000236, 0.00011165200000000028, 0.00011184700000000172, 0.00011169399999999899, 0.00011170799999999856, 0.00011131900000000208, 0.00011129199999999895, 0.00011125000000000024, 0.00011186100000000129, 0.00011181999999999859, 0.00011113899999999968, 0.00011165200000000028, 0.0001115830000000019, 0.00011147300000000082, 0.00011187499999999739, 0.00011109700000000097, 0.00011180599999999902, 0.00011150000000000049, 0.00011182000000000206, 0.00011133300000000165, 0.00011133300000000165, 0.00011158299999999843, 0.00011187500000000086, 0.0001112220000000011, 0.00011115299999999925, 0.00011144500000000168, 0.00011179199999999945, 0.00011150000000000049, 0.00011162500000000061, 0.00011177799999999988, 0.00011109700000000097, 0.00011106999999999784]</msg>
<status status="PASS" starttime="20201112 12:28:14.321" endtime="20201112 12:28:14.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.316" endtime="20201112 12:28:14.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.325" endtime="20201112 12:28:14.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.329" endtime="20201112 12:28:14.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.327" endtime="20201112 12:28:14.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.324" endtime="20201112 12:28:14.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.955" endtime="20201112 12:28:14.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:13.954" endtime="20201112 12:28:14.350"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.359" endtime="20201112 12:28:14.379"></status>
</kw>
<msg timestamp="20201112 12:28:14.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.357" endtime="20201112 12:28:14.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.380" endtime="20201112 12:28:14.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.383" endtime="20201112 12:28:14.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.354" endtime="20201112 12:28:14.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.352" endtime="20201112 12:28:14.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.392" endtime="20201112 12:28:14.679"></status>
</kw>
<msg timestamp="20201112 12:28:14.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.390" endtime="20201112 12:28:14.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019985069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.683" endtime="20201112 12:28:14.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.692" endtime="20201112 12:28:14.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.388" endtime="20201112 12:28:14.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.386" endtime="20201112 12:28:14.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:14.698" level="INFO">${RESULT} = [{'time': 0.020097069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011199999999999752, 'source_diff': 0.00011199999999999752}, {'time': 0.020214083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:14.695" endtime="20201112 12:28:14.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:14.713" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:14.699" endtime="20201112 12:28:14.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.718" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:28:14.717" endtime="20201112 12:28:14.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.720" level="INFO">VALUE: [0.00011199999999999752, 0.00011268000000000042, 0.00011217999999999992, 0.00011244400000000321, 0.00011197199999999838, 0.00011281999999999959, 0.0001128749999999984, 0.00011255600000000324, 0.00011211200000000102, 0.00011218099999999939, 0.00011266600000000085, 0.0001122359999999982, 0.00011252800000000063, 0.00011250000000000149, 0.00011229199999999995, 0.0001125420000000002, 0.0001127909999999975, 0.00011233400000000213, 0.00011238900000000093, 0.00011252700000000115, 0.00011275000000000174, 0.00011220799999999906, 0.00011220799999999906, 0.00011259700000000247, 0.00011280600000000002, 0.00011270799999999956, 0.00011277799999999741, 0.00011225000000000124, 0.00011279200000000045, 0.00011254100000000072, 0.00011220799999999906, 0.00011217999999999992, 0.00011280600000000002, 0.00011261099999999857, 0.00011284699999999925, 0.00011226400000000081, 0.000112903000000001, 0.00011226400000000081, 0.00011280500000000054, 0.00011201400000000056, 0.00011254100000000072, 0.00011277800000000088, 0.00011268000000000042, 0.00011238899999999746, 0.00011293100000000014, 0.00011258399999999891, 0.00011217999999999992, 0.00011258399999999891, 0.00011243000000000017, 0.00011234699999999875]</msg>
<status status="PASS" starttime="20201112 12:28:14.719" endtime="20201112 12:28:14.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.714" endtime="20201112 12:28:14.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.724" endtime="20201112 12:28:14.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:14.727" endtime="20201112 12:28:14.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.726" endtime="20201112 12:28:14.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.722" endtime="20201112 12:28:14.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.351" endtime="20201112 12:28:14.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.350" endtime="20201112 12:28:14.748"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.757" endtime="20201112 12:28:14.776"></status>
</kw>
<msg timestamp="20201112 12:28:14.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.755" endtime="20201112 12:28:14.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:14.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:14.778" endtime="20201112 12:28:14.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.780" endtime="20201112 12:28:14.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.753" endtime="20201112 12:28:14.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.751" endtime="20201112 12:28:14.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:14.789" endtime="20201112 12:28:15.075"></status>
</kw>
<msg timestamp="20201112 12:28:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:14.788" endtime="20201112 12:28:15.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.079" endtime="20201112 12:28:15.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.087" endtime="20201112 12:28:15.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.785" endtime="20201112 12:28:15.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.783" endtime="20201112 12:28:15.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.094" level="INFO">${RESULT} = [{'time': 0.020107486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011374999999999927, 'source_diff': 0.00011374999999999927}, {'time': 0.020230514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:15.091" endtime="20201112 12:28:15.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:15.095" endtime="20201112 12:28:15.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.111" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.110" endtime="20201112 12:28:15.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.114" level="INFO">VALUE: [0.00011374999999999927, 0.00011334700000000322, 0.00011374999999999927, 0.00011380599999999755, 0.00011334699999999975, 0.00011294499999999971, 0.00011326299999999886, 0.00011366600000000185, 0.00011345799999999684, 0.00011344400000000074, 0.00011344400000000074, 0.00011331900000000061, 0.0001137359999999997, 0.00011358399999999991, 0.00011362499999999914, 0.00011347299999999935, 0.00011372200000000013, 0.00011336099999999932, 0.00011349999999999902, 0.00011315299999999778, 0.00011302800000000113, 0.00011341700000000107, 0.00011379200000000145, 0.00011306900000000036, 0.00011291700000000057, 0.00011338900000000193, 0.00011366599999999838, 0.00011334699999999975, 0.0001133749999999989, 0.00011387500000000286, 0.0001135559999999973, 0.00011334699999999975, 0.00011340299999999803, 0.00011324999999999877, 0.00011352699999999868, 0.00011368000000000142, 0.00011341700000000107, 0.00011338900000000193, 0.0001130420000000007, 0.00011383300000000068, 0.0001130969999999995, 0.00011365299999999828, 0.00011361099999999957, 0.00011333300000000018, 0.00011304099999999775, 0.00011308299999999993, 0.00011331900000000061, 0.00011351400000000206, 0.00011366699999999785, 0.00011355600000000077]</msg>
<status status="PASS" starttime="20201112 12:28:15.112" endtime="20201112 12:28:15.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.108" endtime="20201112 12:28:15.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.117" endtime="20201112 12:28:15.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.121" endtime="20201112 12:28:15.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.119" endtime="20201112 12:28:15.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.116" endtime="20201112 12:28:15.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.749" endtime="20201112 12:28:15.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:14.748" endtime="20201112 12:28:15.142"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.151" endtime="20201112 12:28:15.170"></status>
</kw>
<msg timestamp="20201112 12:28:15.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.149" endtime="20201112 12:28:15.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:15.171" endtime="20201112 12:28:15.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.174" endtime="20201112 12:28:15.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.146" endtime="20201112 12:28:15.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.144" endtime="20201112 12:28:15.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.183" endtime="20201112 12:28:15.469"></status>
</kw>
<msg timestamp="20201112 12:28:15.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.181" endtime="20201112 12:28:15.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:15.473" endtime="20201112 12:28:15.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.481" endtime="20201112 12:28:15.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.179" endtime="20201112 12:28:15.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.177" endtime="20201112 12:28:15.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:15.487" level="INFO">${RESULT} = [{'time': 0.020289625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011434699999999728, 'source_diff': 0.00011434699999999728}, {'time': 0.020410625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:28:15.484" endtime="20201112 12:28:15.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:28:15.501" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:15.488" endtime="20201112 12:28:15.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.505" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:28:15.504" endtime="20201112 12:28:15.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.508" level="INFO">VALUE: [0.00011434699999999728, 0.00011420800000000106, 0.00011427800000000238, 0.00011477799999999941, 0.00011443000000000217, 0.00011470800000000156, 0.00011452799999999916, 0.00011430499999999857, 0.00011431900000000161, 0.00011458300000000143, 0.0001144169999999986, 0.00011398599999999995, 0.00011458300000000143, 0.00011475000000000027, 0.00011426399999999934, 0.00011419399999999802, 0.00011415199999999931, 0.00011443000000000217, 0.0001140970000000005, 0.00011411100000000007, 0.00011416700000000182, 0.00011457000000000134, 0.00011459800000000048, 0.00011473599999999723, 0.0001142230000000001, 0.00011458300000000143, 0.00011476399999999984, 0.00011477799999999941, 0.00011413900000000268, 0.00011433299999999771, 0.00011436100000000032, 0.00011430600000000152, 0.00011483400000000116, 0.00011443099999999817, 0.00011486100000000082, 0.00011465199999999981, 0.00011402799999999866, 0.0001140550000000018, 0.00011436099999999685, 0.00011466699999999885, 0.0001140420000000017, 0.00011486100000000082, 0.00011461200000000005, 0.0001149299999999992, 0.0001144299999999987, 0.0001144169999999986, 0.00011420800000000106, 0.00011411100000000007, 0.0001149169999999991, 0.00011462500000000014]</msg>
<status status="PASS" starttime="20201112 12:28:15.507" endtime="20201112 12:28:15.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.502" endtime="20201112 12:28:15.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:15.512" endtime="20201112 12:28:15.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.516" endtime="20201112 12:28:15.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.514" endtime="20201112 12:28:15.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.510" endtime="20201112 12:28:15.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.143" endtime="20201112 12:28:15.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.142" endtime="20201112 12:28:15.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:27:35.780" endtime="20201112 12:28:15.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:15.541" endtime="20201112 12:28:15.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.540" endtime="20201112 12:28:15.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.538" endtime="20201112 12:28:15.562"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:27:32.685" endtime="20201112 12:28:15.562" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:26:45.469" endtime="20201112 12:28:15.566"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:28:15.622" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:28:15.631" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:28:16.699" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:28:15.621" endtime="20201112 12:28:16.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:28:16.705" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:28:16.702" endtime="20201112 12:28:16.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.620" endtime="20201112 12:28:16.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:16.711" endtime="20201112 12:28:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:16.709" endtime="20201112 12:28:17.012"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:17.024" endtime="20201112 12:28:20.045"></status>
</kw>
<msg timestamp="20201112 12:28:20.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:17.022" endtime="20201112 12:28:20.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.051" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.048" endtime="20201112 12:28:20.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:28:20.057" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:28:20.053" endtime="20201112 12:28:20.058"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:17.020" endtime="20201112 12:28:20.059"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:17.018" endtime="20201112 12:28:20.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.017" endtime="20201112 12:28:20.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:28:20.069" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:28:20.067" endtime="20201112 12:28:20.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.063" endtime="20201112 12:28:20.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.016" endtime="20201112 12:28:20.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.015" endtime="20201112 12:28:20.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.072" endtime="20201112 12:28:20.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.014" endtime="20201112 12:28:20.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.079" endtime="20201112 12:28:20.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:17.012" endtime="20201112 12:28:20.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:15.618" endtime="20201112 12:28:20.083"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:20.098" endtime="20201112 12:28:20.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.093" endtime="20201112 12:28:20.121"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:20.147" endtime="20201112 12:28:23.171"></status>
</kw>
<msg timestamp="20201112 12:28:23.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:20.144" endtime="20201112 12:28:23.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:28:23.174" endtime="20201112 12:28:23.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:28:23.183" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:28:23.179" endtime="20201112 12:28:23.183"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:20.139" endtime="20201112 12:28:23.185"></status>
</kw>
<status status="FAIL" starttime="20201112 12:28:20.134" endtime="20201112 12:28:23.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.131" endtime="20201112 12:28:23.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:28:23.194" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:28:23.193" endtime="20201112 12:28:23.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.189" endtime="20201112 12:28:23.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.129" endtime="20201112 12:28:23.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.128" endtime="20201112 12:28:23.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.198" endtime="20201112 12:28:23.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.125" endtime="20201112 12:28:23.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.122" endtime="20201112 12:28:23.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:20.090" endtime="20201112 12:28:23.203"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:23.214" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:23.233" endtime="20201112 12:28:25.341"></status>
</kw>
<msg timestamp="20201112 12:28:25.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6091409, 'wakeups': [6101417, 6111416, 6121417, 6131416, 6141417, 6151...</msg>
<status status="PASS" starttime="20201112 12:28:23.229" endtime="20201112 12:28:25.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6091409, 'wakeups': [6101417, 6111416, 6121417, 6131416, 6141417, 6151...</msg>
<status status="PASS" starttime="20201112 12:28:25.345" endtime="20201112 12:28:25.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.351" endtime="20201112 12:28:25.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.223" endtime="20201112 12:28:25.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.219" endtime="20201112 12:28:25.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.362" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 6091409, 'wakeups': [6101417, 6111416, 6121417, 6131416, 6141417, 6151416, 6161417, 6171416, 6181417, 6191416, 6201417, 6211416, 6221417, 6231416, 6241417, 6251...</msg>
<status status="PASS" starttime="20201112 12:28:25.358" endtime="20201112 12:28:25.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.371" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:25.369" endtime="20201112 12:28:25.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.375" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:25.373" endtime="20201112 12:28:25.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.364" endtime="20201112 12:28:25.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.385" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.383" endtime="20201112 12:28:25.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.387" level="INFO">VALUE: 6091409</msg>
<status status="PASS" starttime="20201112 12:28:25.386" endtime="20201112 12:28:25.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.378" endtime="20201112 12:28:25.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.392" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.391" endtime="20201112 12:28:25.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.394" level="INFO">VALUE: [6101417, 6111416, 6121417, 6131416, 6141417, 6151416, 6161417, 6171416, 6181417, 6191416, 6201417, 6211416, 6221417, 6231416, 6241417, 6251416, 6261417, 6271416, 6281417, 6291416, 6301417, 6311416, 6321417, 6331416, 6341417, 6351416, 6361417, 6371416, 6381417, 6391416, 6401417, 6411416, 6421417, 6431416, 6441417, 6451416, 6461417, 6471416, 6481417, 6491416, 6501417, 6511416, 6521417, 6531416, 6541417, 6551416, 6561417, 6571416, 6581417, 6591416, 6601417, 6611416, 6621417, 6631416, 6641417, 6651416, 6661417, 6671416, 6681417, 6691416, 6701417, 6711416, 6721417, 6731416, 6741417, 6751416, 6761417, 6771416, 6781417, 6791416, 6801417, 6811416, 6821417, 6831416, 6841417, 6851416, 6861417, 6871416, 6881417, 6891416, 6901417, 6911416, 6921417, 6931416, 6941417, 6951416, 6961417, 6971416, 6981417, 6991416, 7001417, 7011416, 7021417, 7031416, 7041417, 7051416, 7061417, 7071416, 7081417, 7091416]</msg>
<status status="PASS" starttime="20201112 12:28:25.393" endtime="20201112 12:28:25.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.389" endtime="20201112 12:28:25.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.402" endtime="20201112 12:28:25.706"></status>
</kw>
<msg timestamp="20201112 12:28:25.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124077958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.134086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.400" endtime="20201112 12:28:25.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.124077958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.134086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:25.709" endtime="20201112 12:28:25.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.717" endtime="20201112 12:28:25.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.398" endtime="20201112 12:28:25.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.396" endtime="20201112 12:28:25.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:25.744" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:25.720" endtime="20201112 12:28:25.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.749" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:25.748" endtime="20201112 12:28:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.751" level="INFO">VALUE: 3.124077958</msg>
<status status="PASS" starttime="20201112 12:28:25.750" endtime="20201112 12:28:25.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.745" endtime="20201112 12:28:25.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.757" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:25.756" endtime="20201112 12:28:25.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:25.759" level="INFO">VALUE: [3.134086917, 3.144087069, 3.154089194, 3.164089361, 3.174091472, 3.184091639, 3.19409375, 3.204093917, 3.214096042, 3.224096194, 3.234098306, 3.244098486, 3.254100597, 3.26410075, 3.274102889, 3.284103028, 3.294105139, 3.304105319, 3.314107431, 3.324107583, 3.334109708, 3.344109861, 3.354111986, 3.364112153, 3.374114264, 3.384114444, 3.394116542, 3.404116708, 3.414118819, 3.424118986, 3.434121111, 3.444121278, 3.454123389, 3.464123556, 3.474125653, 3.484125819, 3.494127958, 3.504128097, 3.514130222, 3.524130389, 3.534132542, 3.544132667, 3.554134806, 3.564135028, 3.574137056, 3.584137222, 3.594139333, 3.604139514, 3.614141625, 3.624141778, 3.634143944, 3.644144056, 3.654146181, 3.664146347, 3.674148472, 3.684148625, 3.694150736, 3.704150903, 3.714153014, 3.724153194, 3.734155306, 3.744155458, 3.754157569, 3.764157736, 3.774159847, 3.784160014, 3.794162139, 3.804162306, 3.814164417, 3.824164583, 3.834166694, 3.844166875, 3.854168986, 3.864169139, 3.87417125, 3.884171458, 3.894173528, 3.904173694, 3.914175806, 3.924175986, 3.934178083, 3.94417825, 3.954180389, 3.964180528, 3.974182667, 3.984182819, 3.994184944, 4.004185111, 4.014187222, 4.024187389, 4.034189486, 4.044189708, 4.054191764, 4.064191931, 4.074194042, 4.084194208, 4.094196333, 4.1041965, 4.114198611, 4.124198764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:25.758" endtime="20201112 12:28:25.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.753" endtime="20201112 12:28:25.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.762" endtime="20201112 12:28:25.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:25.766" endtime="20201112 12:28:25.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.764" endtime="20201112 12:28:25.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.761" endtime="20201112 12:28:25.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.216" endtime="20201112 12:28:25.787"></status>
</kw>
<msg timestamp="20201112 12:28:25.787" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:25.795" endtime="20201112 12:28:27.902"></status>
</kw>
<msg timestamp="20201112 12:28:27.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8653135, 'wakeups': [8663142, 8673142, 8683143, 8693142, 8703143, 8713...</msg>
<status status="PASS" starttime="20201112 12:28:25.793" endtime="20201112 12:28:27.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.909" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8653135, 'wakeups': [8663142, 8673142, 8683143, 8693142, 8703143, 8713...</msg>
<status status="PASS" starttime="20201112 12:28:27.906" endtime="20201112 12:28:27.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.912" endtime="20201112 12:28:27.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.791" endtime="20201112 12:28:27.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.789" endtime="20201112 12:28:27.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:27.922" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 8653135, 'wakeups': [8663142, 8673142, 8683143, 8693142, 8703143, 8713142, 8723143, 8733142, 8743143, 8753142, 8763143, 8773142, 8783143, 8793142, 8803143, 8813...</msg>
<status status="PASS" starttime="20201112 12:28:27.919" endtime="20201112 12:28:27.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.931" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:27.929" endtime="20201112 12:28:27.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.935" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:27.933" endtime="20201112 12:28:27.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.924" endtime="20201112 12:28:27.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.944" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:27.942" endtime="20201112 12:28:27.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.947" level="INFO">VALUE: 8653135</msg>
<status status="PASS" starttime="20201112 12:28:27.946" endtime="20201112 12:28:27.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.938" endtime="20201112 12:28:27.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.951" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:27.950" endtime="20201112 12:28:27.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:27.953" level="INFO">VALUE: [8663142, 8673142, 8683143, 8693142, 8703143, 8713142, 8723143, 8733142, 8743143, 8753142, 8763143, 8773142, 8783143, 8793142, 8803143, 8813142, 8823143, 8833142, 8843143, 8853142, 8863143, 8873142, 8883143, 8893142, 8903143, 8913142, 8923143, 8933142, 8943143, 8953142, 8963143, 8973142, 8983143, 8993142, 9003143, 9013142, 9023143, 9033142, 9043143, 9053142, 9063143, 9073142, 9083143, 9093142, 9103143, 9113142, 9123143, 9133142, 9143143, 9153142, 9163143, 9173142, 9183143, 9193142, 9203143, 9213142, 9223143, 9233142, 9243143, 9253142, 9263143, 9273142, 9283143, 9293142, 9303143, 9313142, 9323143, 9333142, 9343143, 9353142, 9363143, 9373142, 9383143, 9393142, 9403143, 9413142, 9423143, 9433142, 9443143, 9453142, 9463143, 9473142, 9483143, 9493142, 9503143, 9513142, 9523143, 9533142, 9543143, 9553142, 9563143, 9573142, 9583143, 9593142, 9603143, 9613142, 9623143, 9633142, 9643143, 9653142]</msg>
<status status="PASS" starttime="20201112 12:28:27.952" endtime="20201112 12:28:27.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.948" endtime="20201112 12:28:27.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:27.961" endtime="20201112 12:28:28.251"></status>
</kw>
<msg timestamp="20201112 12:28:28.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018291139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028299306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:27.959" endtime="20201112 12:28:28.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018291139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028299306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:28.255" endtime="20201112 12:28:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.263" endtime="20201112 12:28:28.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.957" endtime="20201112 12:28:28.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:27.955" endtime="20201112 12:28:28.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:28.288" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:28.266" endtime="20201112 12:28:28.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.293" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:28.292" endtime="20201112 12:28:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.295" level="INFO">VALUE: 0.018291139</msg>
<status status="PASS" starttime="20201112 12:28:28.294" endtime="20201112 12:28:28.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.289" endtime="20201112 12:28:28.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.300" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:28.299" endtime="20201112 12:28:28.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:28.303" level="INFO">VALUE: [0.028299306, 0.038300472, 0.048302583, 0.05830275, 0.068304875, 0.078305042, 0.088307167, 0.098307361, 0.108309444, 0.118309597, 0.128311722, 0.138311889, 0.148314014, 0.158314181, 0.168316292, 0.178316458, 0.188318583, 0.198318736, 0.208320847, 0.218321014, 0.228323139, 0.238323361, 0.248325458, 0.258325583, 0.268327708, 0.278327889, 0.28833, 0.298330153, 0.308332278, 0.318332444, 0.328334556, 0.338334722, 0.348336847, 0.358337014, 0.368339139, 0.378339333, 0.388341431, 0.398341583, 0.408343694, 0.418343875, 0.428346, 0.438346153, 0.448348264, 0.458348444, 0.468350556, 0.478350736, 0.488352861, 0.498353014, 0.508355125, 0.518355333, 0.528357431, 0.538357583, 0.548359722, 0.558359875, 0.568361986, 0.578362153, 0.588364264, 0.598364431, 0.608366569, 0.618366736, 0.628368861, 0.638369014, 0.648371125, 0.658371292, 0.668373403, 0.678373569, 0.688375694, 0.698375861, 0.708377986, 0.718378167, 0.728380278, 0.738380431, 0.748382542, 0.758382722, 0.768384833, 0.778385028, 0.788387139, 0.798387292, 0.808389417, 0.818389569, 0.828391708, 0.838391861, 0.848393972, 0.858394139, 0.868396264, 0.878396444, 0.888398542, 0.898398722, 0.908400861, 0.918401, 0.928403111, 0.938403306, 0.948405403, 0.958405611, 0.968407722, 0.978407875, 0.988409986, 0.998410139, 1.008412278, 1.018412431] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:28.301" endtime="20201112 12:28:28.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.296" endtime="20201112 12:28:28.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.306" endtime="20201112 12:28:28.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:28.310" endtime="20201112 12:28:28.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.308" endtime="20201112 12:28:28.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.305" endtime="20201112 12:28:28.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:25.787" endtime="20201112 12:28:28.330"></status>
</kw>
<msg timestamp="20201112 12:28:28.331" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:28.339" endtime="20201112 12:28:30.456"></status>
</kw>
<msg timestamp="20201112 12:28:30.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11197203, 'wakeups': [11207211, 11217210, 11227211, 11237210, 11247211...</msg>
<status status="PASS" starttime="20201112 12:28:28.337" endtime="20201112 12:28:30.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.463" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11197203, 'wakeups': [11207211, 11217210, 11227211, 11237210, 11247211...</msg>
<status status="PASS" starttime="20201112 12:28:30.459" endtime="20201112 12:28:30.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.465" endtime="20201112 12:28:30.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.335" endtime="20201112 12:28:30.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.333" endtime="20201112 12:28:30.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.476" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 11197203, 'wakeups': [11207211, 11217210, 11227211, 11237210, 11247211, 11257210, 11267211, 11277210, 11287211, 11297210, 11307211, 11317210, 11327211, 11337210...</msg>
<status status="PASS" starttime="20201112 12:28:30.472" endtime="20201112 12:28:30.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.484" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:30.482" endtime="20201112 12:28:30.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.488" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:30.486" endtime="20201112 12:28:30.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.478" endtime="20201112 12:28:30.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.497" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.496" endtime="20201112 12:28:30.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.499" level="INFO">VALUE: 11197203</msg>
<status status="PASS" starttime="20201112 12:28:30.498" endtime="20201112 12:28:30.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.491" endtime="20201112 12:28:30.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.504" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.503" endtime="20201112 12:28:30.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.506" level="INFO">VALUE: [11207211, 11217210, 11227211, 11237210, 11247211, 11257210, 11267211, 11277210, 11287211, 11297210, 11307211, 11317210, 11327211, 11337210, 11347211, 11357210, 11367211, 11377210, 11387211, 11397210, 11407211, 11417210, 11427211, 11437210, 11447211, 11457210, 11467211, 11477210, 11487211, 11497210, 11507211, 11517210, 11527211, 11537210, 11547211, 11557210, 11567211, 11577210, 11587211, 11597210, 11607211, 11617210, 11627211, 11637210, 11647211, 11657210, 11667211, 11677210, 11687211, 11697210, 11707211, 11717210, 11727211, 11737210, 11747211, 11757210, 11767211, 11777210, 11787211, 11797210, 11807211, 11817210, 11827211, 11837210, 11847211, 11857210, 11867211, 11877210, 11887211, 11897210, 11907211, 11917210, 11927211, 11937210, 11947211, 11957210, 11967211, 11977210, 11987211, 11997210, 12007211, 12017210, 12027211, 12037210, 12047211, 12057210, 12067211, 12077210, 12087211, 12097210, 12107211, 12117210, 12127211, 12137210, 12147211, 12157210, 12167211, 12177210, 12187211, 12197210]</msg>
<status status="PASS" starttime="20201112 12:28:30.505" endtime="20201112 12:28:30.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.500" endtime="20201112 12:28:30.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.518" endtime="20201112 12:28:30.809"></status>
</kw>
<msg timestamp="20201112 12:28:30.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028407319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.516" endtime="20201112 12:28:30.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018398653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028407319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:30.813" endtime="20201112 12:28:30.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.820" endtime="20201112 12:28:30.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.513" endtime="20201112 12:28:30.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.508" endtime="20201112 12:28:30.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:30.847" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:30.824" endtime="20201112 12:28:30.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.851" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:28:30.850" endtime="20201112 12:28:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.853" level="INFO">VALUE: 0.018398653</msg>
<status status="PASS" starttime="20201112 12:28:30.852" endtime="20201112 12:28:30.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.848" endtime="20201112 12:28:30.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.858" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:30.857" endtime="20201112 12:28:30.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:30.860" level="INFO">VALUE: [0.028407319, 0.038407486, 0.048409611, 0.058409778, 0.068411944, 0.078412056, 0.088414167, 0.098414347, 0.108416458, 0.118416611, 0.128418722, 0.138418889, 0.148421014, 0.15842125, 0.168423306, 0.178423458, 0.188425583, 0.19842575, 0.208427861, 0.218428028, 0.228430153, 0.238430306, 0.248432431, 0.258432625, 0.268434708, 0.278434875, 0.288437042, 0.298437181, 0.308439278, 0.318439444, 0.328441583, 0.338441736, 0.348443861, 0.358444028, 0.368446139, 0.378446319, 0.388448431, 0.398448597, 0.408450708, 0.418450889, 0.428453, 0.438453167, 0.448455278, 0.458455444, 0.468457569, 0.47845775, 0.488459847, 0.498460014, 0.508462194, 0.518462347, 0.528464417, 0.538464583, 0.548466722, 0.558466875, 0.568468986, 0.578469181, 0.588471278, 0.598471458, 0.608473583, 0.618473736, 0.628475847, 0.638476014, 0.648478181, 0.658478333, 0.668480458, 0.678480653, 0.688482708, 0.698482875, 0.708485056, 0.718485181, 0.728487278, 0.7384875, 0.748489556, 0.758489722, 0.768491847, 0.778492069, 0.788494139, 0.798494306, 0.808496431, 0.818496583, 0.828498708, 0.838498889, 0.848500986, 0.858501153, 0.868503306, 0.878503458, 0.888505556, 0.898505736, 0.908507861, 0.918508014, 0.928510153, 0.938510306, 0.948512417, 0.958512597, 0.968514708, 0.978514875, 0.988516986, 0.998517153, 1.008519292, 1.018519444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:30.859" endtime="20201112 12:28:30.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.854" endtime="20201112 12:28:30.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.864" endtime="20201112 12:28:30.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:30.867" endtime="20201112 12:28:30.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.865" endtime="20201112 12:28:30.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.862" endtime="20201112 12:28:30.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:28.331" endtime="20201112 12:28:30.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.212" endtime="20201112 12:28:30.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.210" endtime="20201112 12:28:30.888"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:30.891" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:30.901" endtime="20201112 12:28:33.019"></status>
</kw>
<msg timestamp="20201112 12:28:33.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13759623, 'wakeups': [13769639, 13779638, 13789638, 13799638, 13809638...</msg>
<status status="PASS" starttime="20201112 12:28:30.898" endtime="20201112 12:28:33.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.026" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13759623, 'wakeups': [13769639, 13779638, 13789638, 13799638, 13809638...</msg>
<status status="PASS" starttime="20201112 12:28:33.022" endtime="20201112 12:28:33.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.029" endtime="20201112 12:28:33.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.896" endtime="20201112 12:28:33.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.893" endtime="20201112 12:28:33.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.039" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 13759623, 'wakeups': [13769639, 13779638, 13789638, 13799638, 13809638, 13819638, 13829638, 13839638, 13849638, 13859638, 13869638, 13879638, 13889638, 13899638...</msg>
<status status="PASS" starttime="20201112 12:28:33.035" endtime="20201112 12:28:33.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.048" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:33.046" endtime="20201112 12:28:33.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.051" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:33.050" endtime="20201112 12:28:33.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.041" endtime="20201112 12:28:33.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.056" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.055" endtime="20201112 12:28:33.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.058" level="INFO">VALUE: 13759623</msg>
<status status="PASS" starttime="20201112 12:28:33.057" endtime="20201112 12:28:33.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.053" endtime="20201112 12:28:33.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.063" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.062" endtime="20201112 12:28:33.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.065" level="INFO">VALUE: [13769639, 13779638, 13789638, 13799638, 13809638, 13819638, 13829638, 13839638, 13849638, 13859638, 13869638, 13879638, 13889638, 13899638, 13909638, 13919638, 13929638, 13939638, 13949638, 13959638, 13969638, 13979638, 13989638, 13999638, 14009638, 14019638, 14029638, 14039638, 14049638, 14059638, 14069638, 14079638, 14089638, 14099638, 14109638, 14119638, 14129638, 14139638, 14149638, 14159638, 14169638, 14179638, 14189638, 14199638, 14209638, 14219638, 14229638, 14239638, 14249638, 14259638, 14269638, 14279638, 14289638, 14299638, 14309638, 14319638, 14329638, 14339638, 14349638, 14359638, 14369638, 14379638, 14389638, 14399638, 14409638, 14419638, 14429638, 14439638, 14449638, 14459638, 14469638, 14479638, 14489638, 14499638, 14509638, 14519638, 14529638, 14539638, 14549638, 14559638, 14569638, 14579638, 14589638, 14599638, 14609638, 14619638, 14629638, 14639638, 14649638, 14659638, 14669638, 14679638, 14689638, 14699638, 14709638, 14719638, 14729638, 14739638, 14749638, 14759638]</msg>
<status status="PASS" starttime="20201112 12:28:33.064" endtime="20201112 12:28:33.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.059" endtime="20201112 12:28:33.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.072" endtime="20201112 12:28:33.364"></status>
</kw>
<msg timestamp="20201112 12:28:33.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033691583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.071" endtime="20201112 12:28:33.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033691583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:33.370" endtime="20201112 12:28:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.378" endtime="20201112 12:28:33.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.068" endtime="20201112 12:28:33.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.067" endtime="20201112 12:28:33.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:33.406" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:33.382" endtime="20201112 12:28:33.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.410" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:33.409" endtime="20201112 12:28:33.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.412" level="INFO">VALUE: 0.023674889</msg>
<status status="PASS" starttime="20201112 12:28:33.411" endtime="20201112 12:28:33.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.407" endtime="20201112 12:28:33.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.418" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:33.417" endtime="20201112 12:28:33.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:33.420" level="INFO">VALUE: [0.033691583, 0.04369175, 0.053692861, 0.063694028, 0.073695153, 0.083696333, 0.093697431, 0.103698597, 0.113699722, 0.123700958, 0.133702, 0.143703181, 0.153704278, 0.163705444, 0.173706569, 0.183707792, 0.193708847, 0.203710042, 0.213711139, 0.223712333, 0.233713417, 0.243714583, 0.253715708, 0.263716875, 0.273718, 0.283719153, 0.293720278, 0.303721458, 0.313722556, 0.323723764, 0.333724861, 0.343726042, 0.353727125, 0.363728319, 0.373729472, 0.383730597, 0.393731694, 0.403732861, 0.413733972, 0.423735139, 0.433736264, 0.443737417, 0.453738583, 0.463739681, 0.473740847, 0.483741944, 0.493743056, 0.503744222, 0.513745333, 0.5237465, 0.533747639, 0.543748764, 0.553749889, 0.563751097, 0.573752167, 0.583753319, 0.593754458, 0.603755597, 0.613756736, 0.623757861, 0.633758972, 0.643760139, 0.65376125, 0.663762417, 0.673763528, 0.683764694, 0.693765806, 0.703766972, 0.713768069, 0.723769278, 0.733770347, 0.743771514, 0.753772639, 0.763773833, 0.773774903, 0.783776069, 0.793777181, 0.803778347, 0.813779458, 0.823780611, 0.833781722, 0.843782889, 0.853784014, 0.863785181, 0.873786347, 0.883787444, 0.893788556, 0.903789736, 0.913790833, 0.923791986, 0.933793111, 0.943794264, 0.953795375, 0.963796569, 0.973797653, 0.983798819, 0.993799944, 1.003801097, 1.013802222, 1.023803389] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:33.419" endtime="20201112 12:28:33.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.414" endtime="20201112 12:28:33.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.423" endtime="20201112 12:28:33.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:33.427" endtime="20201112 12:28:33.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.425" endtime="20201112 12:28:33.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.422" endtime="20201112 12:28:33.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.892" endtime="20201112 12:28:33.448"></status>
</kw>
<msg timestamp="20201112 12:28:33.448" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:33.457" endtime="20201112 12:28:35.584"></status>
</kw>
<msg timestamp="20201112 12:28:35.585" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16314921, 'wakeups': [16324936, 16334936, 16344936, 16354936, 16364936...</msg>
<status status="PASS" starttime="20201112 12:28:33.455" endtime="20201112 12:28:35.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.591" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16314921, 'wakeups': [16324936, 16334936, 16344936, 16354936, 16364936...</msg>
<status status="PASS" starttime="20201112 12:28:35.588" endtime="20201112 12:28:35.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.594" endtime="20201112 12:28:35.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.452" endtime="20201112 12:28:35.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.450" endtime="20201112 12:28:35.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.606" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 16314921, 'wakeups': [16324936, 16334936, 16344936, 16354936, 16364936, 16374936, 16384936, 16394936, 16404936, 16414936, 16424936, 16434936, 16444936, 16454936...</msg>
<status status="PASS" starttime="20201112 12:28:35.601" endtime="20201112 12:28:35.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.617" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:35.616" endtime="20201112 12:28:35.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.619" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:35.618" endtime="20201112 12:28:35.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.613" endtime="20201112 12:28:35.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.624" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.623" endtime="20201112 12:28:35.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.627" level="INFO">VALUE: 16314921</msg>
<status status="PASS" starttime="20201112 12:28:35.625" endtime="20201112 12:28:35.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.621" endtime="20201112 12:28:35.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.633" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.632" endtime="20201112 12:28:35.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.635" level="INFO">VALUE: [16324936, 16334936, 16344936, 16354936, 16364936, 16374936, 16384936, 16394936, 16404936, 16414936, 16424936, 16434936, 16444936, 16454936, 16464936, 16474936, 16484936, 16494936, 16504936, 16514936, 16524936, 16534936, 16544936, 16554936, 16564936, 16574936, 16584936, 16594936, 16604936, 16614936, 16624936, 16634936, 16644936, 16654936, 16664936, 16674936, 16684936, 16694936, 16704936, 16714936, 16724936, 16734936, 16744936, 16754936, 16764936, 16774936, 16784936, 16794936, 16804936, 16814936, 16824936, 16834936, 16844936, 16854936, 16864936, 16874936, 16884936, 16894936, 16904936, 16914936, 16924936, 16934936, 16944936, 16954936, 16964936, 16974936, 16984936, 16994936, 17004936, 17014936, 17024936, 17034936, 17044936, 17054936, 17064936, 17074936, 17084936, 17094936, 17104936, 17114936, 17124936, 17134936, 17144936, 17154936, 17164936, 17174936, 17184936, 17194936, 17204936, 17214936, 17224936, 17234936, 17244936, 17254936, 17264936, 17274936, 17284936, 17294936, 17304936, 17314936]</msg>
<status status="PASS" starttime="20201112 12:28:35.634" endtime="20201112 12:28:35.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.629" endtime="20201112 12:28:35.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.643" endtime="20201112 12:28:35.935"></status>
</kw>
<msg timestamp="20201112 12:28:35.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018867194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.641" endtime="20201112 12:28:35.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018867194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:35.939" endtime="20201112 12:28:35.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.947" endtime="20201112 12:28:35.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.638" endtime="20201112 12:28:35.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.636" endtime="20201112 12:28:35.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:35.974" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:35.950" endtime="20201112 12:28:35.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.979" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:35.978" endtime="20201112 12:28:35.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.981" level="INFO">VALUE: 0.018867194</msg>
<status status="PASS" starttime="20201112 12:28:35.980" endtime="20201112 12:28:35.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.975" endtime="20201112 12:28:35.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.986" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:35.985" endtime="20201112 12:28:35.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:35.990" level="INFO">VALUE: [0.028883681, 0.038884847, 0.048885944, 0.058887111, 0.06888825, 0.078889403, 0.088890528, 0.098891681, 0.108892806, 0.118893958, 0.128895125, 0.138896236, 0.148897375, 0.158898528, 0.168899653, 0.178900806, 0.188901944, 0.198903111, 0.208904222, 0.218905389, 0.228906514, 0.238907653, 0.248908792, 0.258909944, 0.268911069, 0.278912222, 0.288913347, 0.298914514, 0.308915625, 0.318916792, 0.328917917, 0.338919083, 0.348920208, 0.358921375, 0.368922486, 0.378923653, 0.388924764, 0.398925931, 0.408927069, 0.418928236, 0.428929389, 0.4389305, 0.448931625, 0.458932792, 0.468933903, 0.478935069, 0.488936208, 0.498937361, 0.508938472, 0.518939653, 0.528940764, 0.538941931, 0.548943056, 0.558944208, 0.568945375, 0.578946486, 0.588947625, 0.598948806, 0.608949861, 0.618951042, 0.628952139, 0.638953319, 0.648954431, 0.658955597, 0.668956694, 0.678957847, 0.688958958, 0.698960125, 0.708961236, 0.718962403, 0.728963514, 0.738964736, 0.748965806, 0.758966958, 0.768968097, 0.778969236, 0.788970361, 0.7989715, 0.808972639, 0.818973847, 0.828974917, 0.838976056, 0.848977181, 0.858978347, 0.868979458, 0.878980667, 0.888981722, 0.898982889, 0.908984, 0.918985167, 0.928986292, 0.938987472, 0.948988556, 0.958989722, 0.968990833, 0.978992, 0.988993111, 0.998994278, 1.008995403, 1.018996556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:35.988" endtime="20201112 12:28:35.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.982" endtime="20201112 12:28:35.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:35.993" endtime="20201112 12:28:35.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:35.997" endtime="20201112 12:28:36.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.995" endtime="20201112 12:28:36.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:35.992" endtime="20201112 12:28:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:33.449" endtime="20201112 12:28:36.018"></status>
</kw>
<msg timestamp="20201112 12:28:36.018" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:36.027" endtime="20201112 12:28:38.155"></status>
</kw>
<msg timestamp="20201112 12:28:38.156" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18885209, 'wakeups': [18895225, 18905224, 18915224, 18925224, 18935224...</msg>
<status status="PASS" starttime="20201112 12:28:36.025" endtime="20201112 12:28:38.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.161" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18885209, 'wakeups': [18895225, 18905224, 18915224, 18925224, 18935224...</msg>
<status status="PASS" starttime="20201112 12:28:38.158" endtime="20201112 12:28:38.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.163" endtime="20201112 12:28:38.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.022" endtime="20201112 12:28:38.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.020" endtime="20201112 12:28:38.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.168" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 18885209, 'wakeups': [18895225, 18905224, 18915224, 18925224, 18935224, 18945224, 18955224, 18965224, 18975224, 18985224, 18995224, 19005224, 19015224, 19025224...</msg>
<status status="PASS" starttime="20201112 12:28:38.166" endtime="20201112 12:28:38.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.172" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:38.171" endtime="20201112 12:28:38.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.175" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:38.174" endtime="20201112 12:28:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.169" endtime="20201112 12:28:38.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.180" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.179" endtime="20201112 12:28:38.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.182" level="INFO">VALUE: 18885209</msg>
<status status="PASS" starttime="20201112 12:28:38.181" endtime="20201112 12:28:38.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.176" endtime="20201112 12:28:38.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.187" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.186" endtime="20201112 12:28:38.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.190" level="INFO">VALUE: [18895225, 18905224, 18915224, 18925224, 18935224, 18945224, 18955224, 18965224, 18975224, 18985224, 18995224, 19005224, 19015224, 19025224, 19035224, 19045224, 19055224, 19065224, 19075224, 19085224, 19095224, 19105224, 19115224, 19125224, 19135224, 19145224, 19155224, 19165224, 19175224, 19185224, 19195224, 19205224, 19215224, 19225224, 19235224, 19245224, 19255224, 19265224, 19275224, 19285224, 19295224, 19305224, 19315224, 19325224, 19335224, 19345224, 19355224, 19365224, 19375224, 19385224, 19395224, 19405224, 19415224, 19425224, 19435224, 19445224, 19455224, 19465224, 19475224, 19485224, 19495224, 19505224, 19515224, 19525224, 19535224, 19545224, 19555224, 19565224, 19575224, 19585224, 19595224, 19605224, 19615224, 19625224, 19635224, 19645224, 19655224, 19665224, 19675224, 19685224, 19695224, 19705224, 19715224, 19725224, 19735224, 19745224, 19755224, 19765224, 19775224, 19785224, 19795224, 19805224, 19815224, 19825224, 19835224, 19845224, 19855224, 19865224, 19875224, 19885224]</msg>
<status status="PASS" starttime="20201112 12:28:38.188" endtime="20201112 12:28:38.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.183" endtime="20201112 12:28:38.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.198" endtime="20201112 12:28:38.489"></status>
</kw>
<msg timestamp="20201112 12:28:38.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.196" endtime="20201112 12:28:38.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:38.493" endtime="20201112 12:28:38.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.501" endtime="20201112 12:28:38.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.193" endtime="20201112 12:28:38.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.191" endtime="20201112 12:28:38.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:38.527" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:38.505" endtime="20201112 12:28:38.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.532" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:28:38.531" endtime="20201112 12:28:38.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.534" level="INFO">VALUE: 0.019286167</msg>
<status status="PASS" starttime="20201112 12:28:38.533" endtime="20201112 12:28:38.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.528" endtime="20201112 12:28:38.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.540" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:38.539" endtime="20201112 12:28:38.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:38.542" level="INFO">VALUE: [0.029303139, 0.039303306, 0.049304417, 0.059305583, 0.069306722, 0.079307875, 0.089308986, 0.099310194, 0.109311264, 0.119312431, 0.129313569, 0.139314722, 0.149315917, 0.159317042, 0.169318125, 0.179319278, 0.189320403, 0.199321569, 0.209322681, 0.219323861, 0.229324972, 0.239326153, 0.249327264, 0.259328417, 0.269329542, 0.279330708, 0.289331833, 0.299332986, 0.309334097, 0.319335278, 0.329336375, 0.339337528, 0.349338639, 0.359339806, 0.369340917, 0.379342083, 0.389343222, 0.399344347, 0.409345458, 0.419346653, 0.42934775, 0.439348903, 0.449350014, 0.459351167, 0.469352278, 0.479353444, 0.489354556, 0.499355722, 0.509356847, 0.519357986, 0.529359097, 0.539360319, 0.549361375, 0.559362556, 0.569363667, 0.579364806, 0.589365931, 0.599367083, 0.609368194, 0.619369361, 0.629370472, 0.639371639, 0.64937275, 0.659373903, 0.669375028, 0.679376194, 0.689377306, 0.699378458, 0.709379583, 0.71938075, 0.729381861, 0.739383014, 0.749384125, 0.759385292, 0.769386417, 0.779387597, 0.789388667, 0.799389847, 0.809390944, 0.819392125, 0.829393278, 0.839394417, 0.849395528, 0.859396667, 0.869397764, 0.879398944, 0.889400097, 0.899401222, 0.909402333, 0.9194035, 0.929404611, 0.939405819, 0.949406875, 0.959408042, 0.969409153, 0.979410347, 0.989411417, 0.999412583, 1.009413694, 1.019414861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:38.541" endtime="20201112 12:28:38.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.536" endtime="20201112 12:28:38.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.545" endtime="20201112 12:28:38.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:38.549" endtime="20201112 12:28:38.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.547" endtime="20201112 12:28:38.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.544" endtime="20201112 12:28:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:36.019" endtime="20201112 12:28:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.889" endtime="20201112 12:28:38.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:30.889" endtime="20201112 12:28:38.571"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:38.573" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:38.583" endtime="20201112 12:28:40.709"></status>
</kw>
<msg timestamp="20201112 12:28:40.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21441415, 'wakeups': [21451439, 21461439, 21471439, 21481439, 21491439...</msg>
<status status="PASS" starttime="20201112 12:28:38.580" endtime="20201112 12:28:40.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.716" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21441415, 'wakeups': [21451439, 21461439, 21471439, 21481439, 21491439...</msg>
<status status="PASS" starttime="20201112 12:28:40.712" endtime="20201112 12:28:40.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.717" endtime="20201112 12:28:40.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.577" endtime="20201112 12:28:40.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.575" endtime="20201112 12:28:40.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:40.723" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 21441415, 'wakeups': [21451439, 21461439, 21471439, 21481439, 21491439, 21501439, 21511439, 21521439, 21531439, 21541439, 21551439, 21561439, 21571439, 21581439...</msg>
<status status="PASS" starttime="20201112 12:28:40.721" endtime="20201112 12:28:40.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.727" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:40.726" endtime="20201112 12:28:40.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.729" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:40.728" endtime="20201112 12:28:40.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.723" endtime="20201112 12:28:40.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.734" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:40.733" endtime="20201112 12:28:40.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.736" level="INFO">VALUE: 21441415</msg>
<status status="PASS" starttime="20201112 12:28:40.735" endtime="20201112 12:28:40.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.731" endtime="20201112 12:28:40.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.741" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:40.740" endtime="20201112 12:28:40.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:40.744" level="INFO">VALUE: [21451439, 21461439, 21471439, 21481439, 21491439, 21501439, 21511439, 21521439, 21531439, 21541439, 21551439, 21561439, 21571439, 21581439, 21591439, 21601439, 21611439, 21621439, 21631439, 21641439, 21651439, 21661439, 21671439, 21681439, 21691439, 21701439, 21711439, 21721439, 21731439, 21741439, 21751439, 21761439, 21771439, 21781439, 21791439, 21801439, 21811439, 21821439, 21831439, 21841439, 21851439, 21861439, 21871439, 21881439, 21891439, 21901439, 21911439, 21921439, 21931439, 21941439, 21951439, 21961439, 21971439, 21981439, 21991439, 22001439, 22011439, 22021439, 22031439, 22041439, 22051439, 22061439, 22071439, 22081439, 22091439, 22101439, 22111439, 22121439, 22131439, 22141439, 22151439, 22161439, 22171439, 22181439, 22191439, 22201439, 22211439, 22221439, 22231439, 22241439, 22251439, 22261439, 22271439, 22281439, 22291439, 22301439, 22311439, 22321439, 22331439, 22341439, 22351439, 22361439, 22371439, 22381439, 22391439, 22401439, 22411439, 22421439, 22431439, 22441439]</msg>
<status status="PASS" starttime="20201112 12:28:40.743" endtime="20201112 12:28:40.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.738" endtime="20201112 12:28:40.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:40.756" endtime="20201112 12:28:41.049"></status>
</kw>
<msg timestamp="20201112 12:28:41.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033622736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:40.750" endtime="20201112 12:28:41.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033622736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:41.053" endtime="20201112 12:28:41.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.061" endtime="20201112 12:28:41.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.747" endtime="20201112 12:28:41.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:40.745" endtime="20201112 12:28:41.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:41.089" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:41.064" endtime="20201112 12:28:41.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.093" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:41.092" endtime="20201112 12:28:41.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.096" level="INFO">VALUE: 0.023596986</msg>
<status status="PASS" starttime="20201112 12:28:41.094" endtime="20201112 12:28:41.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.090" endtime="20201112 12:28:41.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.101" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:41.100" endtime="20201112 12:28:41.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:41.103" level="INFO">VALUE: [0.033622736, 0.043623778, 0.053624903, 0.063626125, 0.073627194, 0.083628361, 0.093629458, 0.103630625, 0.11363175, 0.123632917, 0.133634028, 0.143635194, 0.153636306, 0.163637472, 0.173638625, 0.183639778, 0.193640875, 0.203642056, 0.213643167, 0.223644375, 0.233645444, 0.243646625, 0.253647736, 0.263648903, 0.273650014, 0.283651181, 0.293652319, 0.303653472, 0.313654597, 0.323655764, 0.333656889, 0.343658042, 0.353659167, 0.363660361, 0.373661444, 0.383662611, 0.393663736, 0.403664889, 0.413666, 0.423667167, 0.433668278, 0.443669417, 0.453670542, 0.463671708, 0.473672806, 0.483674042, 0.493675097, 0.50367625, 0.513677347, 0.523678514, 0.533679625, 0.543680792, 0.553681903, 0.563683056, 0.573684167, 0.583685333, 0.5936865, 0.603687611, 0.61368875, 0.623689958, 0.633690986, 0.643692194, 0.653693278, 0.663694431, 0.673695556, 0.683696694, 0.693697806, 0.703698986, 0.713700097, 0.723701264, 0.733702375, 0.743703528, 0.753704653, 0.763705806, 0.773706903, 0.783708069, 0.793709264, 0.803710347, 0.813711458, 0.823712639, 0.833713736, 0.843714917, 0.853716014, 0.863717181, 0.873718278, 0.883719444, 0.893720556, 0.903721722, 0.913722833, 0.923724, 0.933725111, 0.943726278, 0.953727403, 0.963728542, 0.973729667, 0.983730847, 0.993731958, 1.003733097, 1.013734292, 1.023735361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:41.102" endtime="20201112 12:28:41.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.097" endtime="20201112 12:28:41.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.107" endtime="20201112 12:28:41.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:41.110" endtime="20201112 12:28:41.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.109" endtime="20201112 12:28:41.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.105" endtime="20201112 12:28:41.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.574" endtime="20201112 12:28:41.131"></status>
</kw>
<msg timestamp="20201112 12:28:41.131" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:41.140" endtime="20201112 12:28:43.266"></status>
</kw>
<msg timestamp="20201112 12:28:43.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23997860, 'wakeups': [24007885, 24017884, 24027884, 24037884, 24047884...</msg>
<status status="PASS" starttime="20201112 12:28:41.138" endtime="20201112 12:28:43.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.272" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23997860, 'wakeups': [24007885, 24017884, 24027884, 24037884, 24047884...</msg>
<status status="PASS" starttime="20201112 12:28:43.270" endtime="20201112 12:28:43.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.273" endtime="20201112 12:28:43.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.135" endtime="20201112 12:28:43.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.133" endtime="20201112 12:28:43.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.279" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 23997860, 'wakeups': [24007885, 24017884, 24027884, 24037884, 24047884, 24057884, 24067884, 24077884, 24087884, 24097884, 24107884, 24117884, 24127884, 24137884...</msg>
<status status="PASS" starttime="20201112 12:28:43.277" endtime="20201112 12:28:43.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.283" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:43.282" endtime="20201112 12:28:43.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.286" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:43.284" endtime="20201112 12:28:43.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.280" endtime="20201112 12:28:43.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.292" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.291" endtime="20201112 12:28:43.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.294" level="INFO">VALUE: 23997860</msg>
<status status="PASS" starttime="20201112 12:28:43.293" endtime="20201112 12:28:43.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.287" endtime="20201112 12:28:43.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.299" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.298" endtime="20201112 12:28:43.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.301" level="INFO">VALUE: [24007885, 24017884, 24027884, 24037884, 24047884, 24057884, 24067884, 24077884, 24087884, 24097884, 24107884, 24117884, 24127884, 24137884, 24147884, 24157884, 24167884, 24177884, 24187884, 24197884, 24207884, 24217884, 24227884, 24237884, 24247884, 24257884, 24267884, 24277884, 24287884, 24297884, 24307884, 24317884, 24327884, 24337884, 24347884, 24357884, 24367884, 24377884, 24387884, 24397884, 24407884, 24417884, 24427884, 24437884, 24447884, 24457884, 24467884, 24477884, 24487884, 24497884, 24507884, 24517884, 24527884, 24537884, 24547884, 24557884, 24567884, 24577884, 24587884, 24597884, 24607884, 24617884, 24627884, 24637884, 24647884, 24657884, 24667884, 24677884, 24687884, 24697884, 24707884, 24717884, 24727884, 24737884, 24747884, 24757884, 24767884, 24777884, 24787884, 24797884, 24807884, 24817884, 24827884, 24837884, 24847884, 24857884, 24867884, 24877884, 24887884, 24897884, 24907884, 24917884, 24927884, 24937884, 24947884, 24957884, 24967884, 24977884, 24987884, 24997884]</msg>
<status status="PASS" starttime="20201112 12:28:43.300" endtime="20201112 12:28:43.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.296" endtime="20201112 12:28:43.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.309" endtime="20201112 12:28:43.601"></status>
</kw>
<msg timestamp="20201112 12:28:43.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028773569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:43.307" endtime="20201112 12:28:43.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0187475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028773569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:28:43.605" endtime="20201112 12:28:43.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.613" endtime="20201112 12:28:43.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.305" endtime="20201112 12:28:43.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.303" endtime="20201112 12:28:43.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:43.640" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:43.616" endtime="20201112 12:28:43.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.645" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:43.644" endtime="20201112 12:28:43.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.647" level="INFO">VALUE: 0.0187475</msg>
<status status="PASS" starttime="20201112 12:28:43.646" endtime="20201112 12:28:43.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.641" endtime="20201112 12:28:43.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.653" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:43.651" endtime="20201112 12:28:43.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:43.655" level="INFO">VALUE: [0.028773569, 0.038773625, 0.04877475, 0.058775917, 0.068777028, 0.078778208, 0.088779319, 0.098780472, 0.108781611, 0.118782778, 0.128783875, 0.138785042, 0.148786153, 0.158787319, 0.168788458, 0.178789611, 0.188790722, 0.198791903, 0.208793083, 0.218794194, 0.228795375, 0.238796458, 0.248797583, 0.258798736, 0.268799875, 0.278801083, 0.288802153, 0.298803319, 0.308804431, 0.318805597, 0.328806722, 0.338807875, 0.348809014, 0.358810167, 0.368811319, 0.378812458, 0.388813597, 0.398814736, 0.408815847, 0.418817014, 0.428818139, 0.438819306, 0.448820431, 0.458821583, 0.468822708, 0.478823903, 0.488825, 0.498826153, 0.508827278, 0.518828444, 0.528829583, 0.538830792, 0.548831861, 0.558833014, 0.568834139, 0.578835306, 0.588836431, 0.598837625, 0.608838708, 0.618839875, 0.628840986, 0.638842208, 0.648843292, 0.658844444, 0.668845569, 0.678846736, 0.688847861, 0.698849014, 0.708850139, 0.718851306, 0.728852431, 0.738853583, 0.748854708, 0.758855875, 0.768856986, 0.778858153, 0.788859264, 0.798860444, 0.808861569, 0.818862764, 0.828863792, 0.838864958, 0.848866069, 0.85886725, 0.868868361, 0.878869556, 0.888870625, 0.898871806, 0.908872903, 0.918874083, 0.928875194, 0.938876347, 0.948877458, 0.958878625, 0.968879778, 0.978880903, 0.988882056, 0.998883181, 1.008884306, 1.018885472] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:43.654" endtime="20201112 12:28:43.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.648" endtime="20201112 12:28:43.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.659" endtime="20201112 12:28:43.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:43.662" endtime="20201112 12:28:43.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.661" endtime="20201112 12:28:43.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.657" endtime="20201112 12:28:43.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:41.132" endtime="20201112 12:28:43.683"></status>
</kw>
<msg timestamp="20201112 12:28:43.683" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:43.692" endtime="20201112 12:28:45.818"></status>
</kw>
<msg timestamp="20201112 12:28:45.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26549952, 'wakeups': [26559976, 26569976, 26579976, 26589976, 26599976...</msg>
<status status="PASS" starttime="20201112 12:28:43.690" endtime="20201112 12:28:45.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.825" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26549952, 'wakeups': [26559976, 26569976, 26579976, 26589976, 26599976...</msg>
<status status="PASS" starttime="20201112 12:28:45.822" endtime="20201112 12:28:45.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.827" endtime="20201112 12:28:45.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.688" endtime="20201112 12:28:45.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.686" endtime="20201112 12:28:45.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:45.832" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 26549952, 'wakeups': [26559976, 26569976, 26579976, 26589976, 26599976, 26609976, 26619976, 26629976, 26639976, 26649976, 26659976, 26669976, 26679976, 26689976...</msg>
<status status="PASS" starttime="20201112 12:28:45.830" endtime="20201112 12:28:45.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.837" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:45.836" endtime="20201112 12:28:45.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.839" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:45.838" endtime="20201112 12:28:45.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.833" endtime="20201112 12:28:45.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.849" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:45.848" endtime="20201112 12:28:45.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.851" level="INFO">VALUE: 26549952</msg>
<status status="PASS" starttime="20201112 12:28:45.850" endtime="20201112 12:28:45.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.845" endtime="20201112 12:28:45.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.856" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:45.855" endtime="20201112 12:28:45.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:45.858" level="INFO">VALUE: [26559976, 26569976, 26579976, 26589976, 26599976, 26609976, 26619976, 26629976, 26639976, 26649976, 26659976, 26669976, 26679976, 26689976, 26699976, 26709976, 26719976, 26729976, 26739976, 26749976, 26759976, 26769976, 26779976, 26789976, 26799976, 26809976, 26819976, 26829976, 26839976, 26849976, 26859976, 26869976, 26879976, 26889976, 26899976, 26909976, 26919976, 26929976, 26939976, 26949976, 26959976, 26969976, 26979976, 26989976, 26999976, 27009976, 27019976, 27029976, 27039976, 27049976, 27059976, 27069976, 27079976, 27089976, 27099976, 27109976, 27119976, 27129976, 27139976, 27149976, 27159976, 27169976, 27179976, 27189976, 27199976, 27209976, 27219976, 27229976, 27239976, 27249976, 27259976, 27269976, 27279976, 27289976, 27299976, 27309976, 27319976, 27329976, 27339976, 27349976, 27359976, 27369976, 27379976, 27389976, 27399976, 27409976, 27419976, 27429976, 27439976, 27449976, 27459976, 27469976, 27479976, 27489976, 27499976, 27509976, 27519976, 27529976, 27539976, 27549976]</msg>
<status status="PASS" starttime="20201112 12:28:45.857" endtime="20201112 12:28:45.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.852" endtime="20201112 12:28:45.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:45.867" endtime="20201112 12:28:46.159"></status>
</kw>
<msg timestamp="20201112 12:28:46.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028786097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:45.864" endtime="20201112 12:28:46.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028786097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:46.163" endtime="20201112 12:28:46.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.171" endtime="20201112 12:28:46.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.862" endtime="20201112 12:28:46.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:45.860" endtime="20201112 12:28:46.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:46.198" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:46.175" endtime="20201112 12:28:46.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.203" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:28:46.202" endtime="20201112 12:28:46.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.205" level="INFO">VALUE: 0.018760597</msg>
<status status="PASS" starttime="20201112 12:28:46.204" endtime="20201112 12:28:46.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.199" endtime="20201112 12:28:46.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.211" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:46.210" endtime="20201112 12:28:46.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:46.213" level="INFO">VALUE: [0.028786097, 0.038787208, 0.048788278, 0.058789514, 0.068790556, 0.078791736, 0.088792847, 0.098794, 0.108795125, 0.118796292, 0.128797403, 0.138798583, 0.148799708, 0.158800889, 0.168801972, 0.178803139, 0.188804264, 0.198805431, 0.208806542, 0.218807722, 0.228808833, 0.238809986, 0.248811111, 0.258812292, 0.268813403, 0.278814569, 0.288815681, 0.298816833, 0.308817944, 0.318819111, 0.328820222, 0.338821389, 0.348822514, 0.358823667, 0.368824778, 0.378825931, 0.388827069, 0.398828264, 0.408829347, 0.4188305, 0.428831625, 0.438832764, 0.448833903, 0.458835056, 0.468836181, 0.478837319, 0.488838431, 0.498839611, 0.508840708, 0.518841875, 0.528842986, 0.538844139, 0.548845264, 0.558846417, 0.568847528, 0.578848694, 0.588849847, 0.598851028, 0.608852111, 0.61885325, 0.628854361, 0.638855528, 0.648856639, 0.658857875, 0.668858917, 0.678860167, 0.688861208, 0.698862361, 0.708863472, 0.718864639, 0.728865764, 0.738866917, 0.748868028, 0.758869208, 0.768870319, 0.778871472, 0.788872583, 0.798873764, 0.808874861, 0.818876042, 0.828877139, 0.838878319, 0.848879417, 0.858880597, 0.868881694, 0.878882875, 0.888883986, 0.898885139, 0.908886264, 0.918887431, 0.928888542, 0.938889736, 0.948890833, 0.958891972, 0.968893083, 0.978894264, 0.988895361, 0.998896542, 1.008897639, 1.018898819] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:46.212" endtime="20201112 12:28:46.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.207" endtime="20201112 12:28:46.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.217" endtime="20201112 12:28:46.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:46.220" endtime="20201112 12:28:46.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.219" endtime="20201112 12:28:46.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.215" endtime="20201112 12:28:46.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:43.684" endtime="20201112 12:28:46.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.572" endtime="20201112 12:28:46.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:38.571" endtime="20201112 12:28:46.242"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:46.244" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:46.254" endtime="20201112 12:28:48.380"></status>
</kw>
<msg timestamp="20201112 12:28:48.381" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29111703, 'wakeups': [29121739, 29131738, 29141738, 29151738, 29161738...</msg>
<status status="PASS" starttime="20201112 12:28:46.251" endtime="20201112 12:28:48.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.384" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29111703, 'wakeups': [29121739, 29131738, 29141738, 29151738, 29161738...</msg>
<status status="PASS" starttime="20201112 12:28:48.382" endtime="20201112 12:28:48.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.385" endtime="20201112 12:28:48.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.248" endtime="20201112 12:28:48.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.246" endtime="20201112 12:28:48.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.391" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 29111703, 'wakeups': [29121739, 29131738, 29141738, 29151738, 29161738, 29171738, 29181738, 29191738, 29201738, 29211738, 29221738, 29231738, 29241738, 29251738...</msg>
<status status="PASS" starttime="20201112 12:28:48.389" endtime="20201112 12:28:48.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.396" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:48.395" endtime="20201112 12:28:48.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.398" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:48.397" endtime="20201112 12:28:48.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.392" endtime="20201112 12:28:48.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.403" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:48.402" endtime="20201112 12:28:48.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.405" level="INFO">VALUE: 29111703</msg>
<status status="PASS" starttime="20201112 12:28:48.404" endtime="20201112 12:28:48.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.399" endtime="20201112 12:28:48.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.410" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:48.409" endtime="20201112 12:28:48.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.413" level="INFO">VALUE: [29121739, 29131738, 29141738, 29151738, 29161738, 29171738, 29181738, 29191738, 29201738, 29211738, 29221738, 29231738, 29241738, 29251738, 29261738, 29271738, 29281738, 29291738, 29301738, 29311738, 29321738, 29331738, 29341738, 29351738, 29361738, 29371738, 29381738, 29391738, 29401738, 29411738, 29421738, 29431738, 29441738, 29451738, 29461738, 29471738, 29481738, 29491738, 29501738, 29511738, 29521738, 29531738, 29541738, 29551738, 29561738, 29571738, 29581738, 29591738, 29601738, 29611738, 29621738, 29631738, 29641738, 29651738, 29661738, 29671738, 29681738, 29691738, 29701738, 29711738, 29721738, 29731738, 29741738, 29751738, 29761738, 29771738, 29781738, 29791738, 29801738, 29811738, 29821738, 29831738, 29841738, 29851738, 29861738, 29871738, 29881738, 29891738, 29901738, 29911738, 29921738, 29931738, 29941738, 29951738, 29961738, 29971738, 29981738, 29991738, 30001738, 30011738, 30021738, 30031738, 30041738, 30051738, 30061738, 30071738, 30081738, 30091738, 30101738, 30111738]</msg>
<status status="PASS" starttime="20201112 12:28:48.411" endtime="20201112 12:28:48.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.407" endtime="20201112 12:28:48.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.421" endtime="20201112 12:28:48.713"></status>
</kw>
<msg timestamp="20201112 12:28:48.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032703236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.419" endtime="20201112 12:28:48.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032703236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:48.717" endtime="20201112 12:28:48.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.725" endtime="20201112 12:28:48.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.416" endtime="20201112 12:28:48.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.415" endtime="20201112 12:28:48.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:48.752" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:48.728" endtime="20201112 12:28:48.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.757" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:48.756" endtime="20201112 12:28:48.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.759" level="INFO">VALUE: 0.022666306</msg>
<status status="PASS" starttime="20201112 12:28:48.758" endtime="20201112 12:28:48.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.753" endtime="20201112 12:28:48.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.764" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:48.763" endtime="20201112 12:28:48.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:48.767" level="INFO">VALUE: [0.032703236, 0.042703361, 0.052704472, 0.062705708, 0.072706792, 0.082707917, 0.092709069, 0.102710222, 0.112711319, 0.122712514, 0.132713597, 0.142714764, 0.152715903, 0.162717056, 0.172718167, 0.182719347, 0.192720444, 0.202721611, 0.212722736, 0.222723917, 0.232725042, 0.242726208, 0.252727319, 0.262728486, 0.272729583, 0.28273075, 0.292731875, 0.302733042, 0.312734167, 0.322735319, 0.332736444, 0.342737611, 0.352738722, 0.362739903, 0.372741028, 0.382742181, 0.392743347, 0.402744458, 0.412745597, 0.422746764, 0.432747875, 0.442749028, 0.452750153, 0.462751361, 0.472752458, 0.482753597, 0.492754722, 0.502755903, 0.512757, 0.522758181, 0.532759333, 0.542760458, 0.552761569, 0.562762736, 0.572763861, 0.582765028, 0.592766167, 0.602767306, 0.612768417, 0.622769569, 0.632770694, 0.642771847, 0.652772958, 0.662774125, 0.672775236, 0.682776403, 0.692777514, 0.702778694, 0.712779792, 0.722780972, 0.732782069, 0.742783278, 0.752784347, 0.7627855, 0.772786611, 0.782787778, 0.792788903, 0.802790097, 0.812791181, 0.822792333, 0.832793458, 0.842794611, 0.852795736, 0.862796903, 0.872798, 0.882799181, 0.892800333, 0.902801458, 0.912802556, 0.922803722, 0.932804833, 0.942806014, 0.952807111, 0.962808278, 0.972809403, 0.982810556, 0.992811667, 1.002812847, 1.012813944, 1.022815125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:48.766" endtime="20201112 12:28:48.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.760" endtime="20201112 12:28:48.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.770" endtime="20201112 12:28:48.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:48.774" endtime="20201112 12:28:48.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.772" endtime="20201112 12:28:48.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.768" endtime="20201112 12:28:48.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.245" endtime="20201112 12:28:48.794"></status>
</kw>
<msg timestamp="20201112 12:28:48.795" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:48.803" endtime="20201112 12:28:50.931"></status>
</kw>
<msg timestamp="20201112 12:28:50.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31661600, 'wakeups': [31671636, 31681635, 31691635, 31701635, 31711635...</msg>
<status status="PASS" starttime="20201112 12:28:48.802" endtime="20201112 12:28:50.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.936" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31661600, 'wakeups': [31671636, 31681635, 31691635, 31701635, 31711635...</msg>
<status status="PASS" starttime="20201112 12:28:50.934" endtime="20201112 12:28:50.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.938" endtime="20201112 12:28:50.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.799" endtime="20201112 12:28:50.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.797" endtime="20201112 12:28:50.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:50.943" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 31661600, 'wakeups': [31671636, 31681635, 31691635, 31701635, 31711635, 31721635, 31731635, 31741635, 31751635, 31761635, 31771635, 31781635, 31791635, 31801635...</msg>
<status status="PASS" starttime="20201112 12:28:50.941" endtime="20201112 12:28:50.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.948" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:50.946" endtime="20201112 12:28:50.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.950" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:50.949" endtime="20201112 12:28:50.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.944" endtime="20201112 12:28:50.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.955" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:50.954" endtime="20201112 12:28:50.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.958" level="INFO">VALUE: 31661600</msg>
<status status="PASS" starttime="20201112 12:28:50.957" endtime="20201112 12:28:50.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.951" endtime="20201112 12:28:50.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.963" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:50.962" endtime="20201112 12:28:50.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:50.966" level="INFO">VALUE: [31671636, 31681635, 31691635, 31701635, 31711635, 31721635, 31731635, 31741635, 31751635, 31761635, 31771635, 31781635, 31791635, 31801635, 31811635, 31821635, 31831635, 31841635, 31851635, 31861635, 31871635, 31881635, 31891635, 31901635, 31911635, 31921635, 31931635, 31941635, 31951635, 31961635, 31971635, 31981635, 31991635, 32001635, 32011635, 32021635, 32031635, 32041635, 32051635, 32061635, 32071635, 32081635, 32091635, 32101635, 32111635, 32121635, 32131635, 32141635, 32151635, 32161635, 32171635, 32181635, 32191635, 32201635, 32211635, 32221635, 32231635, 32241635, 32251635, 32261635, 32271635, 32281635, 32291635, 32301635, 32311635, 32321635, 32331635, 32341635, 32351635, 32361635, 32371635, 32381635, 32391635, 32401635, 32411635, 32421635, 32431635, 32441635, 32451635, 32461635, 32471635, 32481635, 32491635, 32501635, 32511635, 32521635, 32531635, 32541635, 32551635, 32561635, 32571635, 32581635, 32591635, 32601635, 32611635, 32621635, 32631635, 32641635, 32651635, 32661635]</msg>
<status status="PASS" starttime="20201112 12:28:50.964" endtime="20201112 12:28:50.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.960" endtime="20201112 12:28:50.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:50.973" endtime="20201112 12:28:51.264"></status>
</kw>
<msg timestamp="20201112 12:28:51.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029300653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:50.972" endtime="20201112 12:28:51.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019263889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029300653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:51.268" endtime="20201112 12:28:51.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.276" endtime="20201112 12:28:51.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.969" endtime="20201112 12:28:51.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:50.967" endtime="20201112 12:28:51.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:51.307" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:51.283" endtime="20201112 12:28:51.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.311" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:51.310" endtime="20201112 12:28:51.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.314" level="INFO">VALUE: 0.019263889</msg>
<status status="PASS" starttime="20201112 12:28:51.313" endtime="20201112 12:28:51.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.308" endtime="20201112 12:28:51.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.319" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:51.318" endtime="20201112 12:28:51.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:51.323" level="INFO">VALUE: [0.029300653, 0.039300847, 0.049301958, 0.059303111, 0.069304222, 0.079305403, 0.089306514, 0.099307681, 0.109308792, 0.119309958, 0.129311083, 0.13931225, 0.149313361, 0.159314528, 0.169315639, 0.179316806, 0.189317931, 0.199319097, 0.209320208, 0.219321375, 0.2293225, 0.239323736, 0.249324792, 0.259325944, 0.269327083, 0.279328236, 0.289329361, 0.299330583, 0.309331639, 0.319332819, 0.329333917, 0.339335097, 0.349336222, 0.359337375, 0.369338486, 0.379339667, 0.389340778, 0.399341944, 0.409343056, 0.419344236, 0.429345375, 0.439346486, 0.449347597, 0.459348778, 0.469349917, 0.479351028, 0.489352139, 0.499353306, 0.509354417, 0.519355583, 0.529356694, 0.539357847, 0.549358986, 0.559360125, 0.569361236, 0.579362403, 0.589363514, 0.599364667, 0.609365792, 0.619366958, 0.629368069, 0.639369222, 0.649370361, 0.6593715, 0.669372625, 0.679373792, 0.689374903, 0.699376042, 0.709377153, 0.719378319, 0.729379444, 0.739380681, 0.749381722, 0.759382889, 0.769383986, 0.779385153, 0.789386292, 0.799387417, 0.809388569, 0.819389694, 0.829390833, 0.839391972, 0.849393097, 0.859394264, 0.869395361, 0.879396556, 0.889397639, 0.899398806, 0.909399917, 0.919401069, 0.929402194, 0.939403361, 0.949404472, 0.959405639, 0.969406736, 0.979407944, 0.989409014, 0.999410181, 1.009411292, 1.019412444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:51.322" endtime="20201112 12:28:51.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.315" endtime="20201112 12:28:51.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.326" endtime="20201112 12:28:51.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:51.330" endtime="20201112 12:28:51.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.328" endtime="20201112 12:28:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.325" endtime="20201112 12:28:51.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:48.795" endtime="20201112 12:28:51.351"></status>
</kw>
<msg timestamp="20201112 12:28:51.351" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:51.360" endtime="20201112 12:28:53.486"></status>
</kw>
<msg timestamp="20201112 12:28:53.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34217489, 'wakeups': [34227525, 34237524, 34247524, 34257524, 34267524...</msg>
<status status="PASS" starttime="20201112 12:28:51.358" endtime="20201112 12:28:53.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34217489, 'wakeups': [34227525, 34237524, 34247524, 34257524, 34267524...</msg>
<status status="PASS" starttime="20201112 12:28:53.490" endtime="20201112 12:28:53.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.493" endtime="20201112 12:28:53.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.355" endtime="20201112 12:28:53.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.353" endtime="20201112 12:28:53.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.498" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 34217489, 'wakeups': [34227525, 34237524, 34247524, 34257524, 34267524, 34277524, 34287524, 34297524, 34307524, 34317524, 34327524, 34337524, 34347524, 34357524...</msg>
<status status="PASS" starttime="20201112 12:28:53.496" endtime="20201112 12:28:53.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.503" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:53.502" endtime="20201112 12:28:53.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.506" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:53.505" endtime="20201112 12:28:53.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.499" endtime="20201112 12:28:53.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.511" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.510" endtime="20201112 12:28:53.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.514" level="INFO">VALUE: 34217489</msg>
<status status="PASS" starttime="20201112 12:28:53.513" endtime="20201112 12:28:53.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.507" endtime="20201112 12:28:53.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.519" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.518" endtime="20201112 12:28:53.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.522" level="INFO">VALUE: [34227525, 34237524, 34247524, 34257524, 34267524, 34277524, 34287524, 34297524, 34307524, 34317524, 34327524, 34337524, 34347524, 34357524, 34367524, 34377524, 34387524, 34397524, 34407524, 34417524, 34427524, 34437524, 34447524, 34457524, 34467524, 34477524, 34487524, 34497524, 34507524, 34517524, 34527524, 34537524, 34547524, 34557524, 34567524, 34577524, 34587524, 34597524, 34607524, 34617524, 34627524, 34637524, 34647524, 34657524, 34667524, 34677524, 34687524, 34697524, 34707524, 34717524, 34727524, 34737524, 34747524, 34757524, 34767524, 34777524, 34787524, 34797524, 34807524, 34817524, 34827524, 34837524, 34847524, 34857524, 34867524, 34877524, 34887524, 34897524, 34907524, 34917524, 34927524, 34937524, 34947524, 34957524, 34967524, 34977524, 34987524, 34997524, 35007524, 35017524, 35027524, 35037524, 35047524, 35057524, 35067524, 35077524, 35087524, 35097524, 35107524, 35117524, 35127524, 35137524, 35147524, 35157524, 35167524, 35177524, 35187524, 35197524, 35207524, 35217524]</msg>
<status status="PASS" starttime="20201112 12:28:53.520" endtime="20201112 12:28:53.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.516" endtime="20201112 12:28:53.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.530" endtime="20201112 12:28:53.823"></status>
</kw>
<msg timestamp="20201112 12:28:53.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028930083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.528" endtime="20201112 12:28:53.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018892917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028930083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:53.827" endtime="20201112 12:28:53.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.835" endtime="20201112 12:28:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.525" endtime="20201112 12:28:53.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.523" endtime="20201112 12:28:53.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:53.861" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:53.839" endtime="20201112 12:28:53.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.866" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:28:53.865" endtime="20201112 12:28:53.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.868" level="INFO">VALUE: 0.018892917</msg>
<status status="PASS" starttime="20201112 12:28:53.867" endtime="20201112 12:28:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.862" endtime="20201112 12:28:53.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.874" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:53.873" endtime="20201112 12:28:53.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:53.877" level="INFO">VALUE: [0.028930083, 0.038930319, 0.048931389, 0.058932556, 0.068933708, 0.078934833, 0.088935972, 0.098937111, 0.108938236, 0.118939403, 0.128940514, 0.138941694, 0.148942792, 0.158943972, 0.168945097, 0.178946264, 0.188947361, 0.198948528, 0.208949653, 0.218950861, 0.228951931, 0.238953111, 0.248954222, 0.258955389, 0.268956542, 0.278957681, 0.288958778, 0.298959944, 0.308961083, 0.318962236, 0.328963403, 0.338964514, 0.348965653, 0.358966819, 0.368967944, 0.378969097, 0.388970208, 0.398971375, 0.408972514, 0.418973653, 0.428974778, 0.438975958, 0.448977083, 0.458978222, 0.468979361, 0.478980514, 0.488981625, 0.498982806, 0.508983903, 0.518985083, 0.528986181, 0.538987347, 0.548988472, 0.558989681, 0.568990722, 0.578991903, 0.588993014, 0.598994167, 0.608995278, 0.618996444, 0.628997556, 0.638998722, 0.648999847, 0.659001028, 0.669002111, 0.679003264, 0.689004389, 0.699005542, 0.709006667, 0.719007875, 0.729008931, 0.739010111, 0.749011222, 0.759012375, 0.769013528, 0.779014681, 0.789015764, 0.799016931, 0.809018042, 0.819019208, 0.829020319, 0.839021486, 0.849022639, 0.859023764, 0.869024875, 0.879026042, 0.889027153, 0.899028319, 0.909029431, 0.919030597, 0.929031722, 0.939032917, 0.949033986, 0.959035194, 0.969036319, 0.979037444, 0.989038542, 0.999039708, 1.009040819, 1.019042014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:53.875" endtime="20201112 12:28:53.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.870" endtime="20201112 12:28:53.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.880" endtime="20201112 12:28:53.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:53.883" endtime="20201112 12:28:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.882" endtime="20201112 12:28:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.878" endtime="20201112 12:28:53.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:51.352" endtime="20201112 12:28:53.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.243" endtime="20201112 12:28:53.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:46.242" endtime="20201112 12:28:53.905"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:28:53.907" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:53.917" endtime="20201112 12:28:56.043"></status>
</kw>
<msg timestamp="20201112 12:28:56.044" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36774843, 'wakeups': [36784891, 36794890, 36804890, 36814890, 36824890...</msg>
<status status="PASS" starttime="20201112 12:28:53.914" endtime="20201112 12:28:56.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.047" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36774843, 'wakeups': [36784891, 36794890, 36804890, 36814890, 36824890...</msg>
<status status="PASS" starttime="20201112 12:28:56.046" endtime="20201112 12:28:56.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.049" endtime="20201112 12:28:56.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.911" endtime="20201112 12:28:56.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.910" endtime="20201112 12:28:56.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.054" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 36774843, 'wakeups': [36784891, 36794890, 36804890, 36814890, 36824890, 36834890, 36844890, 36854890, 36864890, 36874890, 36884890, 36894890, 36904890, 36914890...</msg>
<status status="PASS" starttime="20201112 12:28:56.052" endtime="20201112 12:28:56.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.059" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:56.057" endtime="20201112 12:28:56.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.061" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:56.060" endtime="20201112 12:28:56.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.055" endtime="20201112 12:28:56.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.066" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:56.065" endtime="20201112 12:28:56.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.068" level="INFO">VALUE: 36774843</msg>
<status status="PASS" starttime="20201112 12:28:56.067" endtime="20201112 12:28:56.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.062" endtime="20201112 12:28:56.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.073" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:56.072" endtime="20201112 12:28:56.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.076" level="INFO">VALUE: [36784891, 36794890, 36804890, 36814890, 36824890, 36834890, 36844890, 36854890, 36864890, 36874890, 36884890, 36894890, 36904890, 36914890, 36924890, 36934890, 36944890, 36954890, 36964890, 36974890, 36984890, 36994890, 37004890, 37014890, 37024890, 37034890, 37044890, 37054890, 37064890, 37074890, 37084890, 37094890, 37104890, 37114890, 37124890, 37134890, 37144890, 37154890, 37164890, 37174890, 37184890, 37194890, 37204890, 37214890, 37224890, 37234890, 37244890, 37254890, 37264890, 37274890, 37284890, 37294890, 37304890, 37314890, 37324890, 37334890, 37344890, 37354890, 37364890, 37374890, 37384890, 37394890, 37404890, 37414890, 37424890, 37434890, 37444890, 37454890, 37464890, 37474890, 37484890, 37494890, 37504890, 37514890, 37524890, 37534890, 37544890, 37554890, 37564890, 37574890, 37584890, 37594890, 37604890, 37614890, 37624890, 37634890, 37644890, 37654890, 37664890, 37674890, 37684890, 37694890, 37704890, 37714890, 37724890, 37734890, 37744890, 37754890, 37764890, 37774890]</msg>
<status status="PASS" starttime="20201112 12:28:56.074" endtime="20201112 12:28:56.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.069" endtime="20201112 12:28:56.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.083" endtime="20201112 12:28:56.375"></status>
</kw>
<msg timestamp="20201112 12:28:56.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032784486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.082" endtime="20201112 12:28:56.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032784486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:56.379" endtime="20201112 12:28:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.387" endtime="20201112 12:28:56.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.079" endtime="20201112 12:28:56.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.077" endtime="20201112 12:28:56.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:56.414" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:56.390" endtime="20201112 12:28:56.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.419" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:56.418" endtime="20201112 12:28:56.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.421" level="INFO">VALUE: 0.022734917</msg>
<status status="PASS" starttime="20201112 12:28:56.420" endtime="20201112 12:28:56.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.415" endtime="20201112 12:28:56.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.427" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:56.426" endtime="20201112 12:28:56.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:56.429" level="INFO">VALUE: [0.032784486, 0.042784278, 0.052785333, 0.062786514, 0.072787611, 0.082788792, 0.092789903, 0.102791056, 0.112792194, 0.122793347, 0.132794472, 0.142795639, 0.15279675, 0.162797917, 0.172799097, 0.182800194, 0.192801319, 0.2028025, 0.212803597, 0.222804764, 0.232805889, 0.242807056, 0.252808167, 0.262809333, 0.272810444, 0.282811611, 0.292812722, 0.302813903, 0.312815042, 0.322816208, 0.332817306, 0.342818486, 0.352819583, 0.36282075, 0.372821931, 0.382823028, 0.392824153, 0.402825319, 0.412826431, 0.422827597, 0.432828722, 0.442829889, 0.452831, 0.462832181, 0.472833292, 0.482834458, 0.492835569, 0.50283675, 0.512837875, 0.522839028, 0.532840139, 0.542841319, 0.552842431, 0.562843625, 0.572844708, 0.582845875, 0.592847014, 0.602848181, 0.612849292, 0.622850486, 0.632851583, 0.642852736, 0.652853861, 0.662855028, 0.672856153, 0.682857306, 0.692858431, 0.702859611, 0.712860708, 0.722861889, 0.732863014, 0.742864167, 0.752865278, 0.762866444, 0.772867597, 0.78286875, 0.792869847, 0.802871014, 0.812872139, 0.822873347, 0.832874458, 0.842875597, 0.852876694, 0.862877847, 0.872878972, 0.882880139, 0.892881264, 0.902882389, 0.912883528, 0.922884667, 0.932885778, 0.942886944, 0.952888069, 0.962889278, 0.972890333, 0.982891486, 0.992892597, 1.00289375, 1.012894861, 1.022896042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:56.428" endtime="20201112 12:28:56.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.422" endtime="20201112 12:28:56.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.432" endtime="20201112 12:28:56.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:56.448" endtime="20201112 12:28:56.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.446" endtime="20201112 12:28:56.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.430" endtime="20201112 12:28:56.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.908" endtime="20201112 12:28:56.469"></status>
</kw>
<msg timestamp="20201112 12:28:56.469" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:56.477" endtime="20201112 12:28:58.603"></status>
</kw>
<msg timestamp="20201112 12:28:58.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39335172, 'wakeups': [39345219, 39355219, 39365219, 39375219, 39385219...</msg>
<status status="PASS" starttime="20201112 12:28:56.476" endtime="20201112 12:28:58.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.609" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39335172, 'wakeups': [39345219, 39355219, 39365219, 39375219, 39385219...</msg>
<status status="PASS" starttime="20201112 12:28:58.607" endtime="20201112 12:28:58.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.610" endtime="20201112 12:28:58.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.473" endtime="20201112 12:28:58.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.471" endtime="20201112 12:28:58.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.616" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 39335172, 'wakeups': [39345219, 39355219, 39365219, 39375219, 39385219, 39395219, 39405219, 39415219, 39425219, 39435219, 39445219, 39455219, 39465219, 39475219...</msg>
<status status="PASS" starttime="20201112 12:28:58.614" endtime="20201112 12:28:58.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.620" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:28:58.619" endtime="20201112 12:28:58.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.622" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:28:58.621" endtime="20201112 12:28:58.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.617" endtime="20201112 12:28:58.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.629" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.626" endtime="20201112 12:28:58.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.632" level="INFO">VALUE: 39335172</msg>
<status status="PASS" starttime="20201112 12:28:58.631" endtime="20201112 12:28:58.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.624" endtime="20201112 12:28:58.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.638" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.636" endtime="20201112 12:28:58.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.640" level="INFO">VALUE: [39345219, 39355219, 39365219, 39375219, 39385219, 39395219, 39405219, 39415219, 39425219, 39435219, 39445219, 39455219, 39465219, 39475219, 39485219, 39495219, 39505219, 39515219, 39525219, 39535219, 39545219, 39555219, 39565219, 39575219, 39585219, 39595219, 39605219, 39615219, 39625219, 39635219, 39645219, 39655219, 39665219, 39675219, 39685219, 39695219, 39705219, 39715219, 39725219, 39735219, 39745219, 39755219, 39765219, 39775219, 39785219, 39795219, 39805219, 39815219, 39825219, 39835219, 39845219, 39855219, 39865219, 39875219, 39885219, 39895219, 39905219, 39915219, 39925219, 39935219, 39945219, 39955219, 39965219, 39975219, 39985219, 39995219, 40005219, 40015219, 40025219, 40035219, 40045219, 40055219, 40065219, 40075219, 40085219, 40095219, 40105219, 40115219, 40125219, 40135219, 40145219, 40155219, 40165219, 40175219, 40185219, 40195219, 40205219, 40215219, 40225219, 40235219, 40245219, 40255219, 40265219, 40275219, 40285219, 40295219, 40305219, 40315219, 40325219, 40335219]</msg>
<status status="PASS" starttime="20201112 12:28:58.639" endtime="20201112 12:28:58.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.634" endtime="20201112 12:28:58.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.649" endtime="20201112 12:28:58.941"></status>
</kw>
<msg timestamp="20201112 12:28:58.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028857403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.647" endtime="20201112 12:28:58.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028857403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:28:58.945" endtime="20201112 12:28:58.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.953" endtime="20201112 12:28:58.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.644" endtime="20201112 12:28:58.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.642" endtime="20201112 12:28:58.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:28:58.980" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:28:58.957" endtime="20201112 12:28:58.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.984" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:28:58.983" endtime="20201112 12:28:58.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.986" level="INFO">VALUE: 0.018808417</msg>
<status status="PASS" starttime="20201112 12:28:58.985" endtime="20201112 12:28:58.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.981" endtime="20201112 12:28:58.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.993" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:28:58.991" endtime="20201112 12:28:58.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:28:58.995" level="INFO">VALUE: [0.028857403, 0.038858139, 0.048859278, 0.058860458, 0.068861542, 0.078862708, 0.088863833, 0.098864986, 0.108866111, 0.118867278, 0.128868389, 0.138869556, 0.148870681, 0.158871861, 0.168872972, 0.178874139, 0.188875236, 0.198876417, 0.208877542, 0.218878708, 0.228879819, 0.238880986, 0.248882097, 0.258883278, 0.268884375, 0.278885542, 0.288886681, 0.298887833, 0.308888944, 0.318890111, 0.328891236, 0.338892403, 0.348893514, 0.358894681, 0.368895819, 0.378896986, 0.388898083, 0.398899236, 0.408900361, 0.418901528, 0.428902625, 0.438903778, 0.448904931, 0.458906069, 0.468907167, 0.478908333, 0.488909472, 0.498910667, 0.508911708, 0.518912875, 0.528913986, 0.538915139, 0.54891625, 0.558917417, 0.568918542, 0.578919694, 0.588920806, 0.598922014, 0.608923069, 0.61892425, 0.628925375, 0.638926528, 0.648927625, 0.658928819, 0.668929903, 0.678931056, 0.688932167, 0.698933403, 0.708934514, 0.718935611, 0.728936722, 0.738937889, 0.748939014, 0.758940153, 0.768941264, 0.778942431, 0.788943542, 0.798944722, 0.808945833, 0.818946986, 0.828948097, 0.83894925, 0.848950361, 0.858951528, 0.868952653, 0.878953806, 0.888954931, 0.898956097, 0.908957194, 0.918958361, 0.928959472, 0.938960625, 0.948961736, 0.958962917, 0.968964014, 0.978965181, 0.988966333, 0.998967458, 1.008968569, 1.018969722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:28:58.994" endtime="20201112 12:28:58.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.988" endtime="20201112 12:28:58.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:58.998" endtime="20201112 12:28:59.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:28:59.002" endtime="20201112 12:28:59.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.000" endtime="20201112 12:28:59.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:58.997" endtime="20201112 12:28:59.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:56.469" endtime="20201112 12:28:59.023"></status>
</kw>
<msg timestamp="20201112 12:28:59.023" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:28:59.032" endtime="20201112 12:29:01.156"></status>
</kw>
<msg timestamp="20201112 12:29:01.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41889363, 'wakeups': [41899411, 41909410, 41919410, 41929410, 41939410...</msg>
<status status="PASS" starttime="20201112 12:28:59.030" endtime="20201112 12:29:01.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.160" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 41889363, 'wakeups': [41899411, 41909410, 41919410, 41929410, 41939410...</msg>
<status status="PASS" starttime="20201112 12:29:01.158" endtime="20201112 12:29:01.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.161" endtime="20201112 12:29:01.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.027" endtime="20201112 12:29:01.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.025" endtime="20201112 12:29:01.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.167" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 41889363, 'wakeups': [41899411, 41909410, 41919410, 41929410, 41939410, 41949410, 41959410, 41969410, 41979410, 41989410, 41999410, 42009410, 42019410, 42029410...</msg>
<status status="PASS" starttime="20201112 12:29:01.165" endtime="20201112 12:29:01.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:01.170" endtime="20201112 12:29:01.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.173" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:01.172" endtime="20201112 12:29:01.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.168" endtime="20201112 12:29:01.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.178" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:01.177" endtime="20201112 12:29:01.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.181" level="INFO">VALUE: 41889363</msg>
<status status="PASS" starttime="20201112 12:29:01.180" endtime="20201112 12:29:01.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.175" endtime="20201112 12:29:01.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.186" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:01.185" endtime="20201112 12:29:01.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.188" level="INFO">VALUE: [41899411, 41909410, 41919410, 41929410, 41939410, 41949410, 41959410, 41969410, 41979410, 41989410, 41999410, 42009410, 42019410, 42029410, 42039410, 42049410, 42059410, 42069410, 42079410, 42089410, 42099410, 42109410, 42119410, 42129410, 42139410, 42149410, 42159410, 42169410, 42179410, 42189410, 42199410, 42209410, 42219410, 42229410, 42239410, 42249410, 42259410, 42269410, 42279410, 42289410, 42299410, 42309410, 42319410, 42329410, 42339410, 42349410, 42359410, 42369410, 42379410, 42389410, 42399410, 42409410, 42419410, 42429410, 42439410, 42449410, 42459410, 42469410, 42479410, 42489410, 42499410, 42509410, 42519410, 42529410, 42539410, 42549410, 42559410, 42569410, 42579410, 42589410, 42599410, 42609410, 42619410, 42629410, 42639410, 42649410, 42659410, 42669410, 42679410, 42689410, 42699410, 42709410, 42719410, 42729410, 42739410, 42749410, 42759410, 42769410, 42779410, 42789410, 42799410, 42809410, 42819410, 42829410, 42839410, 42849410, 42859410, 42869410, 42879410, 42889410]</msg>
<status status="PASS" starttime="20201112 12:29:01.187" endtime="20201112 12:29:01.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.182" endtime="20201112 12:29:01.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.196" endtime="20201112 12:29:01.489"></status>
</kw>
<msg timestamp="20201112 12:29:01.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028804264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.194" endtime="20201112 12:29:01.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028804264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:01.493" endtime="20201112 12:29:01.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.501" endtime="20201112 12:29:01.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.191" endtime="20201112 12:29:01.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.190" endtime="20201112 12:29:01.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:01.527" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:01.504" endtime="20201112 12:29:01.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.537" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:29:01.536" endtime="20201112 12:29:01.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.539" level="INFO">VALUE: 0.018754722</msg>
<status status="PASS" starttime="20201112 12:29:01.538" endtime="20201112 12:29:01.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.533" endtime="20201112 12:29:01.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.545" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:01.544" endtime="20201112 12:29:01.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:01.547" level="INFO">VALUE: [0.028804264, 0.038804, 0.048805125, 0.058806292, 0.068807389, 0.078808556, 0.088809694, 0.098810847, 0.108811958, 0.118813125, 0.128814264, 0.138815403, 0.148816528, 0.158817708, 0.168818806, 0.178819972, 0.188821097, 0.198822319, 0.208823389, 0.218824542, 0.228825667, 0.238826819, 0.248827944, 0.258829111, 0.268830222, 0.278831403, 0.288832528, 0.298833681, 0.308834806, 0.318835958, 0.328837083, 0.33883825, 0.348839361, 0.358840556, 0.368841653, 0.378842903, 0.388843931, 0.398845097, 0.408846222, 0.418847389, 0.4288485, 0.438849667, 0.448850806, 0.458851958, 0.468853083, 0.478854236, 0.488855375, 0.498856514, 0.508857639, 0.518858833, 0.528859917, 0.538861069, 0.548862181, 0.558863347, 0.568864458, 0.578865639, 0.588866736, 0.598867903, 0.608869014, 0.618870167, 0.628871347, 0.638872444, 0.648873583, 0.658874722, 0.668875903, 0.678877014, 0.688878111, 0.698879278, 0.708880389, 0.718881625, 0.728882681, 0.738883833, 0.748884944, 0.758886097, 0.768887236, 0.778888375, 0.788889514, 0.798890653, 0.808891778, 0.818892931, 0.828894069, 0.838895208, 0.848896333, 0.8588975, 0.868898625, 0.878899778, 0.888900889, 0.898902056, 0.908903181, 0.918904333, 0.928905444, 0.938906597, 0.948907778, 0.958908875, 0.968910014, 0.978911153, 0.988912347, 0.998913431, 1.008914639, 1.018915722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:01.546" endtime="20201112 12:29:01.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.541" endtime="20201112 12:29:01.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.550" endtime="20201112 12:29:01.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:01.554" endtime="20201112 12:29:01.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.552" endtime="20201112 12:29:01.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.548" endtime="20201112 12:29:01.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:59.024" endtime="20201112 12:29:01.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.906" endtime="20201112 12:29:01.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:53.905" endtime="20201112 12:29:01.575"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:01.578" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:01.587" endtime="20201112 12:29:03.714"></status>
</kw>
<msg timestamp="20201112 12:29:03.715" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44445089, 'wakeups': [44455150, 44465150, 44475151, 44485151, 44495151...</msg>
<status status="PASS" starttime="20201112 12:29:01.585" endtime="20201112 12:29:03.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.719" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44445089, 'wakeups': [44455150, 44465150, 44475151, 44485151, 44495151...</msg>
<status status="PASS" starttime="20201112 12:29:03.717" endtime="20201112 12:29:03.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.720" endtime="20201112 12:29:03.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.582" endtime="20201112 12:29:03.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.580" endtime="20201112 12:29:03.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:03.726" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 44445089, 'wakeups': [44455150, 44465150, 44475151, 44485151, 44495151, 44505151, 44515151, 44525151, 44535151, 44545151, 44555151, 44565151, 44575151, 44585151...</msg>
<status status="PASS" starttime="20201112 12:29:03.724" endtime="20201112 12:29:03.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.731" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:03.729" endtime="20201112 12:29:03.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.733" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:03.732" endtime="20201112 12:29:03.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.727" endtime="20201112 12:29:03.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.738" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:03.737" endtime="20201112 12:29:03.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.740" level="INFO">VALUE: 44445089</msg>
<status status="PASS" starttime="20201112 12:29:03.739" endtime="20201112 12:29:03.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.734" endtime="20201112 12:29:03.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.745" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:03.744" endtime="20201112 12:29:03.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:03.747" level="INFO">VALUE: [44455150, 44465150, 44475151, 44485151, 44495151, 44505151, 44515151, 44525151, 44535151, 44545151, 44555151, 44565151, 44575151, 44585151, 44595151, 44605151, 44615151, 44625151, 44635151, 44645151, 44655151, 44665151, 44675151, 44685151, 44695151, 44705151, 44715151, 44725151, 44735151, 44745151, 44755151, 44765151, 44775151, 44785151, 44795151, 44805151, 44815151, 44825151, 44835151, 44845151, 44855151, 44865151, 44875151, 44885151, 44895151, 44905151, 44915151, 44925151, 44935151, 44945151, 44955151, 44965151, 44975151, 44985151, 44995151, 45005151, 45015151, 45025151, 45035151, 45045151, 45055151, 45065151, 45075151, 45085151, 45095151, 45105151, 45115151, 45125151, 45135151, 45145151, 45155151, 45165151, 45175151, 45185151, 45195151, 45205151, 45215151, 45225151, 45235151, 45245151, 45255151, 45265151, 45275151, 45285151, 45295151, 45305151, 45315151, 45325151, 45335151, 45345151, 45355151, 45365151, 45375151, 45385151, 45395151, 45405151, 45415151, 45425151, 45435151, 45445151]</msg>
<status status="PASS" starttime="20201112 12:29:03.746" endtime="20201112 12:29:03.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.741" endtime="20201112 12:29:03.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:03.755" endtime="20201112 12:29:04.047"></status>
</kw>
<msg timestamp="20201112 12:29:04.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032831028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:03.753" endtime="20201112 12:29:04.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032831028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:04.051" endtime="20201112 12:29:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.058" endtime="20201112 12:29:04.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.751" endtime="20201112 12:29:04.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:03.749" endtime="20201112 12:29:04.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:04.086" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:04.062" endtime="20201112 12:29:04.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.091" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:04.090" endtime="20201112 12:29:04.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.093" level="INFO">VALUE: 0.022768625</msg>
<status status="PASS" starttime="20201112 12:29:04.092" endtime="20201112 12:29:04.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.087" endtime="20201112 12:29:04.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.099" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:04.098" endtime="20201112 12:29:04.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:04.101" level="INFO">VALUE: [0.032831028, 0.042831889, 0.052834, 0.062835167, 0.072836278, 0.082837444, 0.092838569, 0.102839736, 0.112840847, 0.122842014, 0.132843139, 0.142844292, 0.152845417, 0.162846583, 0.172847764, 0.182848861, 0.192849972, 0.202851153, 0.212852264, 0.222853458, 0.232854542, 0.242855708, 0.252856833, 0.262858, 0.272859111, 0.282860278, 0.292861417, 0.302862583, 0.312863681, 0.322864847, 0.332865958, 0.342867139, 0.352868264, 0.362869458, 0.372870528, 0.382871694, 0.392872819, 0.402874, 0.412875125, 0.422876264, 0.432877403, 0.442878556, 0.452879681, 0.462880847, 0.472881958, 0.482883139, 0.492884236, 0.502885444, 0.512886528, 0.522887708, 0.532888833, 0.542889986, 0.552891111, 0.562892264, 0.572893403, 0.582894556, 0.592895667, 0.602896847, 0.612897958, 0.622899125, 0.632900236, 0.642901403, 0.652902528, 0.662903694, 0.672904806, 0.682905986, 0.692907097, 0.702908264, 0.712909375, 0.722910556, 0.732911667, 0.742912875, 0.752913944, 0.762915111, 0.772916264, 0.782917403, 0.792918528, 0.802919694, 0.812920806, 0.822921972, 0.832923083, 0.842924264, 0.852925389, 0.862926556, 0.872927653, 0.882928819, 0.892929944, 0.902931111, 0.912932222, 0.922933389, 0.9329345, 0.942935653, 0.952936778, 0.962937986, 0.972939042, 0.982940194, 0.992941306, 1.002942486, 1.012943583, 1.022944764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:04.100" endtime="20201112 12:29:04.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.095" endtime="20201112 12:29:04.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.105" endtime="20201112 12:29:04.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:04.108" endtime="20201112 12:29:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.107" endtime="20201112 12:29:04.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.103" endtime="20201112 12:29:04.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.578" endtime="20201112 12:29:04.129"></status>
</kw>
<msg timestamp="20201112 12:29:04.129" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:04.138" endtime="20201112 12:29:06.240"></status>
</kw>
<msg timestamp="20201112 12:29:06.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46996469, 'wakeups': [47006530, 47016530, 47026531, 47036531, 47046531...</msg>
<status status="PASS" starttime="20201112 12:29:04.136" endtime="20201112 12:29:06.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.244" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 46996469, 'wakeups': [47006530, 47016530, 47026531, 47036531, 47046531...</msg>
<status status="PASS" starttime="20201112 12:29:06.242" endtime="20201112 12:29:06.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.245" endtime="20201112 12:29:06.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.133" endtime="20201112 12:29:06.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.131" endtime="20201112 12:29:06.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.250" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 46996469, 'wakeups': [47006530, 47016530, 47026531, 47036531, 47046531, 47056531, 47066531, 47076531, 47086531, 47096531, 47106531, 47116531, 47126531, 47136531...</msg>
<status status="PASS" starttime="20201112 12:29:06.248" endtime="20201112 12:29:06.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.255" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:06.254" endtime="20201112 12:29:06.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.257" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:06.256" endtime="20201112 12:29:06.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.251" endtime="20201112 12:29:06.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.263" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:06.262" endtime="20201112 12:29:06.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.265" level="INFO">VALUE: 46996469</msg>
<status status="PASS" starttime="20201112 12:29:06.264" endtime="20201112 12:29:06.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.258" endtime="20201112 12:29:06.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.270" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:06.269" endtime="20201112 12:29:06.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.273" level="INFO">VALUE: [47006530, 47016530, 47026531, 47036531, 47046531, 47056531, 47066531, 47076531, 47086531, 47096531, 47106531, 47116531, 47126531, 47136531, 47146531, 47156531, 47166531, 47176531, 47186531, 47196531, 47206531, 47216531, 47226531, 47236531, 47246531, 47256531, 47266531, 47276531, 47286531, 47296531, 47306531, 47316531, 47326531, 47336531, 47346531, 47356531, 47366531, 47376531, 47386531, 47396531, 47406531, 47416531, 47426531, 47436531, 47446531, 47456531, 47466531, 47476531, 47486531, 47496531, 47506531, 47516531, 47526531, 47536531, 47546531, 47556531, 47566531, 47576531, 47586531, 47596531, 47606531, 47616531, 47626531, 47636531, 47646531, 47656531, 47666531, 47676531, 47686531, 47696531, 47706531, 47716531, 47726531, 47736531, 47746531, 47756531, 47766531, 47776531, 47786531, 47796531, 47806531, 47816531, 47826531, 47836531, 47846531, 47856531, 47866531, 47876531, 47886531, 47896531, 47906531, 47916531, 47926531, 47936531, 47946531, 47956531, 47966531, 47976531, 47986531, 47996531]</msg>
<status status="PASS" starttime="20201112 12:29:06.272" endtime="20201112 12:29:06.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.267" endtime="20201112 12:29:06.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.281" endtime="20201112 12:29:06.573"></status>
</kw>
<msg timestamp="20201112 12:29:06.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.279" endtime="20201112 12:29:06.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029721375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:06.577" endtime="20201112 12:29:06.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.585" endtime="20201112 12:29:06.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.277" endtime="20201112 12:29:06.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.274" endtime="20201112 12:29:06.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:06.611" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:06.588" endtime="20201112 12:29:06.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.616" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:06.615" endtime="20201112 12:29:06.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.618" level="INFO">VALUE: 0.019658986</msg>
<status status="PASS" starttime="20201112 12:29:06.617" endtime="20201112 12:29:06.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.612" endtime="20201112 12:29:06.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.625" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:06.624" endtime="20201112 12:29:06.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:06.627" level="INFO">VALUE: [0.029721375, 0.039722208, 0.049724319, 0.059725486, 0.069726611, 0.079727764, 0.089728889, 0.099730042, 0.109731167, 0.119732347, 0.129733486, 0.139734611, 0.149735736, 0.159736931, 0.169738014, 0.179739181, 0.189740292, 0.199741458, 0.209742597, 0.21974375, 0.229744875, 0.239746042, 0.249747139, 0.259748347, 0.269749431, 0.279750597, 0.289751722, 0.299752875, 0.309754, 0.319755181, 0.329756278, 0.339757444, 0.349758583, 0.359759736, 0.369760847, 0.379762014, 0.389763139, 0.399764319, 0.409765417, 0.419766597, 0.42976775, 0.439768875, 0.449769986, 0.459771167, 0.469772278, 0.479773458, 0.489774556, 0.499775722, 0.509776847, 0.519778014, 0.529779125, 0.539780292, 0.549781417, 0.559782597, 0.569783694, 0.579784875, 0.589785986, 0.599787167, 0.609788278, 0.619789431, 0.629790583, 0.639791722, 0.649792833, 0.659794, 0.669795125, 0.679796306, 0.689797417, 0.699798569, 0.709799681, 0.719800861, 0.729801944, 0.739803111, 0.749804236, 0.759805389, 0.7698065, 0.779807667, 0.789808778, 0.799809931, 0.809811042, 0.819812208, 0.829813319, 0.839814486, 0.849815597, 0.859816764, 0.869817889, 0.879819028, 0.889820139, 0.899821333, 0.909822472, 0.919823583, 0.929824694, 0.939825861, 0.949826986, 0.959828153, 0.96982925, 0.979830417, 0.989831583, 0.999832681, 1.009833819, 1.019834972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:06.626" endtime="20201112 12:29:06.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.620" endtime="20201112 12:29:06.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.630" endtime="20201112 12:29:06.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:06.634" endtime="20201112 12:29:06.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.632" endtime="20201112 12:29:06.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.628" endtime="20201112 12:29:06.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:04.130" endtime="20201112 12:29:06.655"></status>
</kw>
<msg timestamp="20201112 12:29:06.655" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:06.663" endtime="20201112 12:29:08.763"></status>
</kw>
<msg timestamp="20201112 12:29:08.764" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49521012, 'wakeups': [49531072, 49541073, 49551074, 49561074, 49571074...</msg>
<status status="PASS" starttime="20201112 12:29:06.662" endtime="20201112 12:29:08.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.767" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49521012, 'wakeups': [49531072, 49541073, 49551074, 49561074, 49571074...</msg>
<status status="PASS" starttime="20201112 12:29:08.765" endtime="20201112 12:29:08.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.768" endtime="20201112 12:29:08.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.659" endtime="20201112 12:29:08.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.657" endtime="20201112 12:29:08.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:08.774" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 49521012, 'wakeups': [49531072, 49541073, 49551074, 49561074, 49571074, 49581074, 49591074, 49601074, 49611074, 49621074, 49631074, 49641074, 49651074, 49661074...</msg>
<status status="PASS" starttime="20201112 12:29:08.772" endtime="20201112 12:29:08.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.778" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:08.777" endtime="20201112 12:29:08.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.780" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:08.779" endtime="20201112 12:29:08.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.775" endtime="20201112 12:29:08.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.786" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:08.784" endtime="20201112 12:29:08.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.788" level="INFO">VALUE: 49521012</msg>
<status status="PASS" starttime="20201112 12:29:08.787" endtime="20201112 12:29:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.782" endtime="20201112 12:29:08.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.793" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:08.792" endtime="20201112 12:29:08.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:08.795" level="INFO">VALUE: [49531072, 49541073, 49551074, 49561074, 49571074, 49581074, 49591074, 49601074, 49611074, 49621074, 49631074, 49641074, 49651074, 49661074, 49671074, 49681074, 49691074, 49701074, 49711074, 49721074, 49731074, 49741074, 49751074, 49761074, 49771074, 49781074, 49791074, 49801074, 49811074, 49821074, 49831074, 49841074, 49851074, 49861074, 49871074, 49881074, 49891074, 49901074, 49911074, 49921074, 49931074, 49941074, 49951074, 49961074, 49971074, 49981074, 49991074, 50001074, 50011074, 50021074, 50031074, 50041074, 50051074, 50061074, 50071074, 50081074, 50091074, 50101074, 50111074, 50121074, 50131074, 50141074, 50151074, 50161074, 50171074, 50181074, 50191074, 50201074, 50211074, 50221074, 50231074, 50241074, 50251074, 50261074, 50271074, 50281074, 50291074, 50301074, 50311074, 50321074, 50331074, 50341074, 50351074, 50361074, 50371074, 50381074, 50391074, 50401074, 50411074, 50421074, 50431074, 50441074, 50451074, 50461074, 50471074, 50481074, 50491074, 50501074, 50511074, 50521074]</msg>
<status status="PASS" starttime="20201112 12:29:08.794" endtime="20201112 12:29:08.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.789" endtime="20201112 12:29:08.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:08.804" endtime="20201112 12:29:09.096"></status>
</kw>
<msg timestamp="20201112 12:29:09.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028826056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:08.802" endtime="20201112 12:29:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018764444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028826056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:09.100" endtime="20201112 12:29:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.107" endtime="20201112 12:29:09.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.798" endtime="20201112 12:29:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:08.797" endtime="20201112 12:29:09.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:09.134" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:09.111" endtime="20201112 12:29:09.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.138" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:29:09.137" endtime="20201112 12:29:09.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.140" level="INFO">VALUE: 0.018764444</msg>
<status status="PASS" starttime="20201112 12:29:09.139" endtime="20201112 12:29:09.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.135" endtime="20201112 12:29:09.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.146" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:09.145" endtime="20201112 12:29:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:09.148" level="INFO">VALUE: [0.028826056, 0.038827778, 0.048829917, 0.058831069, 0.068832181, 0.078833361, 0.088834472, 0.098835694, 0.108836764, 0.118837917, 0.128839028, 0.138840208, 0.148841333, 0.1588425, 0.168843597, 0.178844764, 0.188845972, 0.198847056, 0.208848236, 0.218849333, 0.228850528, 0.238851625, 0.248852764, 0.258853903, 0.268855042, 0.278856194, 0.288857306, 0.298858472, 0.308859597, 0.318860778, 0.328861875, 0.338863056, 0.348864167, 0.358865333, 0.368866472, 0.378867639, 0.388868736, 0.398869903, 0.408871028, 0.418872194, 0.428873319, 0.438874472, 0.448875597, 0.458876806, 0.468877875, 0.478879042, 0.488880153, 0.498881319, 0.508882444, 0.518883611, 0.528884722, 0.538885903, 0.548887014, 0.558888194, 0.568889292, 0.578890458, 0.588891583, 0.598892778, 0.608893861, 0.618895028, 0.628896139, 0.638897306, 0.648898431, 0.658899597, 0.668900764, 0.678901875, 0.688903, 0.698904181, 0.708905278, 0.718906444, 0.728907583, 0.73890875, 0.748909847, 0.758911014, 0.768912139, 0.778913306, 0.788914431, 0.798915639, 0.808916708, 0.818917875, 0.828918986, 0.838920167, 0.848921278, 0.858922458, 0.868923556, 0.878924722, 0.888925847, 0.898927028, 0.908928139, 0.918929292, 0.928930417, 0.938931583, 0.948932708, 0.958933944, 0.968934986, 0.978936153, 0.988937264, 0.998938431, 1.008939556, 1.018940722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:09.147" endtime="20201112 12:29:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.142" endtime="20201112 12:29:09.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.151" endtime="20201112 12:29:09.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:09.154" endtime="20201112 12:29:09.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.153" endtime="20201112 12:29:09.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.149" endtime="20201112 12:29:09.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:06.656" endtime="20201112 12:29:09.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.576" endtime="20201112 12:29:09.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:01.575" endtime="20201112 12:29:09.176"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:09.178" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:09.187" endtime="20201112 12:29:11.305"></status>
</kw>
<msg timestamp="20201112 12:29:11.307" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52044766, 'wakeups': [52054844, 52064842, 52074842, 52084842, 52094842...</msg>
<status status="PASS" starttime="20201112 12:29:09.186" endtime="20201112 12:29:11.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.310" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52044766, 'wakeups': [52054844, 52064842, 52074842, 52084842, 52094842...</msg>
<status status="PASS" starttime="20201112 12:29:11.308" endtime="20201112 12:29:11.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.311" endtime="20201112 12:29:11.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.183" endtime="20201112 12:29:11.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.180" endtime="20201112 12:29:11.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:11.316" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 52044766, 'wakeups': [52054844, 52064842, 52074842, 52084842, 52094842, 52104842, 52114842, 52124842, 52134842, 52144842, 52154842, 52164842, 52174842, 52184842...</msg>
<status status="PASS" starttime="20201112 12:29:11.314" endtime="20201112 12:29:11.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.321" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:11.320" endtime="20201112 12:29:11.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.323" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:11.322" endtime="20201112 12:29:11.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.318" endtime="20201112 12:29:11.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.328" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:11.327" endtime="20201112 12:29:11.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.330" level="INFO">VALUE: 52044766</msg>
<status status="PASS" starttime="20201112 12:29:11.329" endtime="20201112 12:29:11.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.324" endtime="20201112 12:29:11.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.335" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:11.334" endtime="20201112 12:29:11.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.337" level="INFO">VALUE: [52054844, 52064842, 52074842, 52084842, 52094842, 52104842, 52114842, 52124842, 52134842, 52144842, 52154842, 52164842, 52174842, 52184842, 52194842, 52204842, 52214842, 52224842, 52234842, 52244842, 52254842, 52264842, 52274842, 52284842, 52294842, 52304842, 52314842, 52324842, 52334842, 52344842, 52354842, 52364842, 52374842, 52384842, 52394842, 52404842, 52414842, 52424842, 52434842, 52444842, 52454842, 52464842, 52474842, 52484842, 52494842, 52504842, 52514842, 52524842, 52534842, 52544842, 52554842, 52564842, 52574842, 52584842, 52594842, 52604842, 52614842, 52624842, 52634842, 52644842, 52654842, 52664842, 52674842, 52684842, 52694842, 52704842, 52714842, 52724842, 52734842, 52744842, 52754842, 52764842, 52774842, 52784842, 52794842, 52804842, 52814842, 52824842, 52834842, 52844842, 52854842, 52864842, 52874842, 52884842, 52894842, 52904842, 52914842, 52924842, 52934842, 52944842, 52954842, 52964842, 52974842, 52984842, 52994842, 53004842, 53014842, 53024842, 53034842, 53044842]</msg>
<status status="PASS" starttime="20201112 12:29:11.336" endtime="20201112 12:29:11.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.331" endtime="20201112 12:29:11.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.344" endtime="20201112 12:29:11.634"></status>
</kw>
<msg timestamp="20201112 12:29:11.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031951653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.343" endtime="20201112 12:29:11.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031951653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:11.638" endtime="20201112 12:29:11.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.646" endtime="20201112 12:29:11.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.340" endtime="20201112 12:29:11.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.338" endtime="20201112 12:29:11.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:11.672" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:11.649" endtime="20201112 12:29:11.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.677" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:11.676" endtime="20201112 12:29:11.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.679" level="INFO">VALUE: 0.021872708</msg>
<status status="PASS" starttime="20201112 12:29:11.678" endtime="20201112 12:29:11.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.673" endtime="20201112 12:29:11.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.684" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:11.683" endtime="20201112 12:29:11.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:11.687" level="INFO">VALUE: [0.031951653, 0.041951653, 0.051952722, 0.061953889, 0.071955, 0.081956167, 0.091957333, 0.101958444, 0.111959569, 0.121960736, 0.131961847, 0.141963014, 0.151964139, 0.161965306, 0.171966472, 0.181967583, 0.191968694, 0.201969875, 0.211971, 0.221972222, 0.231973292, 0.241974431, 0.251975569, 0.261976722, 0.271977847, 0.281979014, 0.291980139, 0.301981306, 0.311982403, 0.321983569, 0.331984694, 0.341985861, 0.351986986, 0.361988139, 0.371989264, 0.381990431, 0.391991556, 0.401992708, 0.411993833, 0.421995042, 0.431996111, 0.441997278, 0.451998403, 0.461999569, 0.472000681, 0.482001931, 0.492002972, 0.502004153, 0.512005292, 0.522006431, 0.532007542, 0.542008778, 0.552009861, 0.562011, 0.572012167, 0.582013292, 0.592014417, 0.602015597, 0.612016681, 0.622017903, 0.632018972, 0.642020139, 0.65202125, 0.662022417, 0.672023542, 0.682024708, 0.692025833, 0.702027, 0.712028111, 0.722029278, 0.732030403, 0.742031583, 0.752032667, 0.762033833, 0.772034958, 0.782036111, 0.792037222, 0.802038375, 0.812039486, 0.822040653, 0.832041778, 0.842042931, 0.852044028, 0.862045194, 0.872046306, 0.8820475, 0.892048597, 0.902049736, 0.912050861, 0.922052014, 0.932053153, 0.942054306, 0.952055403, 0.962056569, 0.972057722, 0.982058833, 0.992059944, 1.002061111, 1.01206225, 1.022063389] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:11.686" endtime="20201112 12:29:11.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.680" endtime="20201112 12:29:11.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.690" endtime="20201112 12:29:11.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:11.693" endtime="20201112 12:29:11.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.692" endtime="20201112 12:29:11.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.688" endtime="20201112 12:29:11.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.179" endtime="20201112 12:29:11.714"></status>
</kw>
<msg timestamp="20201112 12:29:11.714" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:11.722" endtime="20201112 12:29:13.839"></status>
</kw>
<msg timestamp="20201112 12:29:13.839" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54579809, 'wakeups': [54589887, 54599885, 54609885, 54619885, 54629885...</msg>
<status status="PASS" starttime="20201112 12:29:11.721" endtime="20201112 12:29:13.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.842" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54579809, 'wakeups': [54589887, 54599885, 54609885, 54619885, 54629885...</msg>
<status status="PASS" starttime="20201112 12:29:13.840" endtime="20201112 12:29:13.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.843" endtime="20201112 12:29:13.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.718" endtime="20201112 12:29:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.716" endtime="20201112 12:29:13.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:13.850" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 54579809, 'wakeups': [54589887, 54599885, 54609885, 54619885, 54629885, 54639885, 54649885, 54659885, 54669885, 54679885, 54689885, 54699885, 54709885, 54719885...</msg>
<status status="PASS" starttime="20201112 12:29:13.847" endtime="20201112 12:29:13.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.856" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:13.854" endtime="20201112 12:29:13.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.858" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:13.857" endtime="20201112 12:29:13.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.851" endtime="20201112 12:29:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.866" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:13.863" endtime="20201112 12:29:13.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.868" level="INFO">VALUE: 54579809</msg>
<status status="PASS" starttime="20201112 12:29:13.867" endtime="20201112 12:29:13.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.860" endtime="20201112 12:29:13.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.873" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:13.872" endtime="20201112 12:29:13.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:13.875" level="INFO">VALUE: [54589887, 54599885, 54609885, 54619885, 54629885, 54639885, 54649885, 54659885, 54669885, 54679885, 54689885, 54699885, 54709885, 54719885, 54729885, 54739885, 54749885, 54759885, 54769885, 54779885, 54789885, 54799885, 54809885, 54819885, 54829885, 54839885, 54849885, 54859885, 54869885, 54879885, 54889885, 54899885, 54909885, 54919885, 54929885, 54939885, 54949885, 54959885, 54969885, 54979885, 54989885, 54999885, 55009885, 55019885, 55029885, 55039885, 55049885, 55059885, 55069885, 55079885, 55089885, 55099885, 55109885, 55119885, 55129885, 55139885, 55149885, 55159885, 55169885, 55179885, 55189885, 55199885, 55209885, 55219885, 55229885, 55239885, 55249885, 55259885, 55269885, 55279885, 55289885, 55299885, 55309885, 55319885, 55329885, 55339885, 55349885, 55359885, 55369885, 55379885, 55389885, 55399885, 55409885, 55419885, 55429885, 55439885, 55449885, 55459885, 55469885, 55479885, 55489885, 55499885, 55509885, 55519885, 55529885, 55539885, 55549885, 55559885, 55569885, 55579885]</msg>
<status status="PASS" starttime="20201112 12:29:13.874" endtime="20201112 12:29:13.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.869" endtime="20201112 12:29:13.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:13.883" endtime="20201112 12:29:14.175"></status>
</kw>
<msg timestamp="20201112 12:29:14.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018172444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028251583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:13.881" endtime="20201112 12:29:14.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018172444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028251583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:14.178" endtime="20201112 12:29:14.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.186" endtime="20201112 12:29:14.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.879" endtime="20201112 12:29:14.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:13.877" endtime="20201112 12:29:14.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:14.213" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:14.190" endtime="20201112 12:29:14.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.218" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:14.216" endtime="20201112 12:29:14.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.220" level="INFO">VALUE: 0.018172444</msg>
<status status="PASS" starttime="20201112 12:29:14.219" endtime="20201112 12:29:14.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.214" endtime="20201112 12:29:14.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.225" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:14.224" endtime="20201112 12:29:14.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:14.228" level="INFO">VALUE: [0.028251583, 0.038251556, 0.048252667, 0.058253833, 0.068254944, 0.078256125, 0.088257236, 0.098258403, 0.108259514, 0.118260681, 0.128261806, 0.138262958, 0.148264083, 0.15826525, 0.168266361, 0.178267528, 0.188268667, 0.198269806, 0.208270944, 0.218272097, 0.228273208, 0.238274375, 0.2482755, 0.258276681, 0.268277792, 0.278278944, 0.288280125, 0.298281236, 0.308282361, 0.318283569, 0.328284639, 0.338285806, 0.348286931, 0.358288111, 0.368289208, 0.378290389, 0.388291514, 0.398292653, 0.408293778, 0.418294944, 0.428296056, 0.438297222, 0.448298347, 0.458299514, 0.468300625, 0.478301792, 0.488302917, 0.498304097, 0.508305194, 0.518306417, 0.5283075, 0.538308653, 0.548309778, 0.558310944, 0.568312056, 0.578313222, 0.588314347, 0.5983155, 0.608316625, 0.618317806, 0.628318903, 0.638320069, 0.648321194, 0.658322361, 0.668323486, 0.678324708, 0.688325792, 0.698326931, 0.708328056, 0.718329236, 0.728330333, 0.7383315, 0.748332681, 0.758333833, 0.768334903, 0.778336111, 0.788337181, 0.798338347, 0.8083395, 0.818340597, 0.828341736, 0.838342875, 0.848343986, 0.858345153, 0.868346264, 0.878347417, 0.888348528, 0.898349708, 0.908350819, 0.918351972, 0.928353083, 0.938354236, 0.948355347, 0.958356528, 0.968357625, 0.978358806, 0.988359903, 0.998361056, 1.008362167, 1.018363333] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:14.227" endtime="20201112 12:29:14.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.221" endtime="20201112 12:29:14.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.231" endtime="20201112 12:29:14.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:14.234" endtime="20201112 12:29:14.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.233" endtime="20201112 12:29:14.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.229" endtime="20201112 12:29:14.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:11.715" endtime="20201112 12:29:14.256"></status>
</kw>
<msg timestamp="20201112 12:29:14.256" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:14.264" endtime="20201112 12:29:16.384"></status>
</kw>
<msg timestamp="20201112 12:29:16.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57121949, 'wakeups': [57132027, 57142025, 57152025, 57162025, 57172025...</msg>
<status status="PASS" starttime="20201112 12:29:14.263" endtime="20201112 12:29:16.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57121949, 'wakeups': [57132027, 57142025, 57152025, 57162025, 57172025...</msg>
<status status="PASS" starttime="20201112 12:29:16.388" endtime="20201112 12:29:16.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.393" endtime="20201112 12:29:16.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.260" endtime="20201112 12:29:16.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.258" endtime="20201112 12:29:16.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:16.398" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 57121949, 'wakeups': [57132027, 57142025, 57152025, 57162025, 57172025, 57182025, 57192025, 57202025, 57212025, 57222025, 57232025, 57242025, 57252025, 57262025...</msg>
<status status="PASS" starttime="20201112 12:29:16.396" endtime="20201112 12:29:16.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.402" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:16.401" endtime="20201112 12:29:16.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.404" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:16.403" endtime="20201112 12:29:16.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.399" endtime="20201112 12:29:16.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.409" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:16.408" endtime="20201112 12:29:16.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.411" level="INFO">VALUE: 57121949</msg>
<status status="PASS" starttime="20201112 12:29:16.410" endtime="20201112 12:29:16.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.406" endtime="20201112 12:29:16.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.416" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:16.415" endtime="20201112 12:29:16.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.418" level="INFO">VALUE: [57132027, 57142025, 57152025, 57162025, 57172025, 57182025, 57192025, 57202025, 57212025, 57222025, 57232025, 57242025, 57252025, 57262025, 57272025, 57282025, 57292025, 57302025, 57312025, 57322025, 57332025, 57342025, 57352025, 57362025, 57372025, 57382025, 57392025, 57402025, 57412025, 57422025, 57432025, 57442025, 57452025, 57462025, 57472025, 57482025, 57492025, 57502025, 57512025, 57522025, 57532025, 57542025, 57552025, 57562025, 57572025, 57582025, 57592025, 57602025, 57612025, 57622025, 57632025, 57642025, 57652025, 57662025, 57672025, 57682025, 57692025, 57702025, 57712025, 57722025, 57732025, 57742025, 57752025, 57762025, 57772025, 57782025, 57792025, 57802025, 57812025, 57822025, 57832025, 57842025, 57852025, 57862025, 57872025, 57882025, 57892025, 57902025, 57912025, 57922025, 57932025, 57942025, 57952025, 57962025, 57972025, 57982025, 57992025, 58002025, 58012025, 58022025, 58032025, 58042025, 58052025, 58062025, 58072025, 58082025, 58092025, 58102025, 58112025, 58122025]</msg>
<status status="PASS" starttime="20201112 12:29:16.417" endtime="20201112 12:29:16.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.413" endtime="20201112 12:29:16.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.426" endtime="20201112 12:29:16.718"></status>
</kw>
<msg timestamp="20201112 12:29:16.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019036958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029116056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:16.424" endtime="20201112 12:29:16.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019036958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029116056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:16.722" endtime="20201112 12:29:16.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.730" endtime="20201112 12:29:16.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.422" endtime="20201112 12:29:16.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.420" endtime="20201112 12:29:16.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:16.756" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:16.733" endtime="20201112 12:29:16.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.761" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:29:16.760" endtime="20201112 12:29:16.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.763" level="INFO">VALUE: 0.019036958</msg>
<status status="PASS" starttime="20201112 12:29:16.762" endtime="20201112 12:29:16.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.757" endtime="20201112 12:29:16.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.768" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:16.767" endtime="20201112 12:29:16.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:16.770" level="INFO">VALUE: [0.029116056, 0.039116014, 0.049117139, 0.059118333, 0.069119417, 0.079120583, 0.089121708, 0.099122889, 0.109124, 0.119125153, 0.129126278, 0.139127431, 0.149128569, 0.159129736, 0.169130847, 0.179132, 0.189133139, 0.199134306, 0.209135403, 0.219136569, 0.229137708, 0.239138847, 0.249139972, 0.259141153, 0.26914225, 0.279143472, 0.289144583, 0.299145708, 0.309146819, 0.319148, 0.329149111, 0.339150278, 0.349151417, 0.359152583, 0.369153681, 0.379154861, 0.389155986, 0.399157139, 0.40915825, 0.419159417, 0.429160542, 0.439161708, 0.449162819, 0.459163986, 0.469165153, 0.479166292, 0.489167389, 0.499168583, 0.509169681, 0.519170847, 0.529171958, 0.539173125, 0.54917425, 0.559175417, 0.569176542, 0.579177708, 0.589178833, 0.599180028, 0.609181111, 0.619182278, 0.629183389, 0.639184556, 0.649185681, 0.659186861, 0.669187958, 0.679189125, 0.68919025, 0.699191431, 0.709192542, 0.719193722, 0.729194819, 0.739196, 0.749197111, 0.759198278, 0.769199389, 0.779200556, 0.789201681, 0.799202875, 0.809203958, 0.819205139, 0.82920625, 0.839207431, 0.849208528, 0.859209694, 0.869210819, 0.879211986, 0.889213125, 0.899214278, 0.909215389, 0.919216556, 0.929217694, 0.939218847, 0.949219986, 0.959221125, 0.96922225, 0.979223403, 0.989224569, 0.999225681, 1.009226792, 1.019227944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:16.769" endtime="20201112 12:29:16.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.764" endtime="20201112 12:29:16.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.774" endtime="20201112 12:29:16.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:16.777" endtime="20201112 12:29:16.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.775" endtime="20201112 12:29:16.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.772" endtime="20201112 12:29:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:14.257" endtime="20201112 12:29:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.177" endtime="20201112 12:29:16.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:09.176" endtime="20201112 12:29:16.798"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:16.801" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:16.810" endtime="20201112 12:29:18.930"></status>
</kw>
<msg timestamp="20201112 12:29:18.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59667372, 'wakeups': [59677465, 59687465, 59697465, 59707465, 59717465...</msg>
<status status="PASS" starttime="20201112 12:29:16.808" endtime="20201112 12:29:18.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59667372, 'wakeups': [59677465, 59687465, 59697465, 59707465, 59717465...</msg>
<status status="PASS" starttime="20201112 12:29:18.934" endtime="20201112 12:29:18.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.945" endtime="20201112 12:29:18.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.805" endtime="20201112 12:29:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.803" endtime="20201112 12:29:18.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:18.951" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 59667372, 'wakeups': [59677465, 59687465, 59697465, 59707465, 59717465, 59727465, 59737465, 59747465, 59757465, 59767465, 59777465, 59787465, 59797465, 59807465...</msg>
<status status="PASS" starttime="20201112 12:29:18.949" endtime="20201112 12:29:18.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.955" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:18.954" endtime="20201112 12:29:18.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.957" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:18.956" endtime="20201112 12:29:18.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.952" endtime="20201112 12:29:18.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.962" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:18.961" endtime="20201112 12:29:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.965" level="INFO">VALUE: 59667372</msg>
<status status="PASS" starttime="20201112 12:29:18.964" endtime="20201112 12:29:18.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.959" endtime="20201112 12:29:18.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.969" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:18.968" endtime="20201112 12:29:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:18.972" level="INFO">VALUE: [59677465, 59687465, 59697465, 59707465, 59717465, 59727465, 59737465, 59747465, 59757465, 59767465, 59777465, 59787465, 59797465, 59807465, 59817465, 59827465, 59837465, 59847465, 59857465, 59867465, 59877465, 59887465, 59897465, 59907465, 59917465, 59927465, 59937465, 59947465, 59957465, 59967465, 59977465, 59987465, 59997465, 60007465, 60017465, 60027465, 60037465, 60047465, 60057465, 60067465, 60077465, 60087465, 60097465, 60107465, 60117465, 60127465, 60137465, 60147465, 60157465, 60167465, 60177465, 60187465, 60197465, 60207465, 60217465, 60227465, 60237465, 60247465, 60257465, 60267465, 60277465, 60287465, 60297465, 60307465, 60317465, 60327465, 60337465, 60347465, 60357465, 60367465, 60377465, 60387465, 60397465, 60407465, 60417465, 60427465, 60437465, 60447465, 60457465, 60467465, 60477465, 60487465, 60497465, 60507465, 60517465, 60527465, 60537465, 60547465, 60557465, 60567465, 60577465, 60587465, 60597465, 60607465, 60617465, 60627465, 60637465, 60647465, 60657465, 60667465]</msg>
<status status="PASS" starttime="20201112 12:29:18.971" endtime="20201112 12:29:18.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.966" endtime="20201112 12:29:18.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:18.979" endtime="20201112 12:29:19.269"></status>
</kw>
<msg timestamp="20201112 12:29:19.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032149292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:18.978" endtime="20201112 12:29:19.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032149292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:19.273" endtime="20201112 12:29:19.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:19.281" endtime="20201112 12:29:19.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.975" endtime="20201112 12:29:19.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:18.973" endtime="20201112 12:29:19.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:19.308" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:19.284" endtime="20201112 12:29:19.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.313" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:19.312" endtime="20201112 12:29:19.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.315" level="INFO">VALUE: 0.022055125</msg>
<status status="PASS" starttime="20201112 12:29:19.314" endtime="20201112 12:29:19.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.310" endtime="20201112 12:29:19.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.321" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:19.320" endtime="20201112 12:29:19.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:19.323" level="INFO">VALUE: [0.032149292, 0.042150778, 0.052151917, 0.062153083, 0.072154236, 0.082155347, 0.092156472, 0.102157653, 0.112158764, 0.122159917, 0.132161083, 0.142162222, 0.152163333, 0.162164542, 0.172165597, 0.182166778, 0.192167889, 0.202169056, 0.212170181, 0.222171347, 0.232172458, 0.242173639, 0.25217475, 0.262175917, 0.272177097, 0.282178194, 0.292179319, 0.302180486, 0.312181597, 0.322182764, 0.332183903, 0.342185069, 0.352186181, 0.362187347, 0.372188458, 0.382189625, 0.392190792, 0.402191931, 0.412193042, 0.422194181, 0.432195306, 0.442196458, 0.452197583, 0.462198722, 0.472199861, 0.482201, 0.492202111, 0.502203278, 0.512204403, 0.522205556, 0.532206667, 0.542207819, 0.552208931, 0.562210111, 0.572211208, 0.582212389, 0.592213528, 0.602214639, 0.612215806, 0.622216917, 0.632218028, 0.642219194, 0.652220319, 0.662221514, 0.672222583, 0.68222375, 0.692224847, 0.702226028, 0.712227125, 0.722228306, 0.732229403, 0.742230569, 0.752231681, 0.762232847, 0.772233958, 0.782235125, 0.792236236, 0.802237389, 0.8122385, 0.822239667, 0.832240778, 0.842241944, 0.852243069, 0.862244264, 0.872245347, 0.8822465, 0.892247611, 0.902248792, 0.912249889, 0.922251042, 0.932252167, 0.942253375, 0.952254458, 0.962255597, 0.972256722, 0.982257875, 0.992259, 1.002260153, 1.012261264, 1.022262417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:19.322" endtime="20201112 12:29:19.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.317" endtime="20201112 12:29:19.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:19.326" endtime="20201112 12:29:19.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:19.330" endtime="20201112 12:29:19.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.328" endtime="20201112 12:29:19.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.324" endtime="20201112 12:29:19.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.801" endtime="20201112 12:29:19.350"></status>
</kw>
<msg timestamp="20201112 12:29:19.351" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:19.359" endtime="20201112 12:29:21.478"></status>
</kw>
<msg timestamp="20201112 12:29:21.479" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62216258, 'wakeups': [62226351, 62236351, 62246351, 62256351, 62266351...</msg>
<status status="PASS" starttime="20201112 12:29:19.357" endtime="20201112 12:29:21.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.485" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62216258, 'wakeups': [62226351, 62236351, 62246351, 62256351, 62266351...</msg>
<status status="PASS" starttime="20201112 12:29:21.481" endtime="20201112 12:29:21.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.487" endtime="20201112 12:29:21.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.354" endtime="20201112 12:29:21.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.353" endtime="20201112 12:29:21.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:21.498" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 62216258, 'wakeups': [62226351, 62236351, 62246351, 62256351, 62266351, 62276351, 62286351, 62296351, 62306351, 62316351, 62326351, 62336351, 62346351, 62356351...</msg>
<status status="PASS" starttime="20201112 12:29:21.494" endtime="20201112 12:29:21.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.504" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:21.503" endtime="20201112 12:29:21.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.506" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:21.505" endtime="20201112 12:29:21.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.501" endtime="20201112 12:29:21.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.513" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:21.512" endtime="20201112 12:29:21.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.515" level="INFO">VALUE: 62216258</msg>
<status status="PASS" starttime="20201112 12:29:21.514" endtime="20201112 12:29:21.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.508" endtime="20201112 12:29:21.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.520" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:21.519" endtime="20201112 12:29:21.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.522" level="INFO">VALUE: [62226351, 62236351, 62246351, 62256351, 62266351, 62276351, 62286351, 62296351, 62306351, 62316351, 62326351, 62336351, 62346351, 62356351, 62366351, 62376351, 62386351, 62396351, 62406351, 62416351, 62426351, 62436351, 62446351, 62456351, 62466351, 62476351, 62486351, 62496351, 62506351, 62516351, 62526351, 62536351, 62546351, 62556351, 62566351, 62576351, 62586351, 62596351, 62606351, 62616351, 62626351, 62636351, 62646351, 62656351, 62666351, 62676351, 62686351, 62696351, 62706351, 62716351, 62726351, 62736351, 62746351, 62756351, 62766351, 62776351, 62786351, 62796351, 62806351, 62816351, 62826351, 62836351, 62846351, 62856351, 62866351, 62876351, 62886351, 62896351, 62906351, 62916351, 62926351, 62936351, 62946351, 62956351, 62966351, 62976351, 62986351, 62996351, 63006351, 63016351, 63026351, 63036351, 63046351, 63056351, 63066351, 63076351, 63086351, 63096351, 63106351, 63116351, 63126351, 63136351, 63146351, 63156351, 63166351, 63176351, 63186351, 63196351, 63206351, 63216351]</msg>
<status status="PASS" starttime="20201112 12:29:21.521" endtime="20201112 12:29:21.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.516" endtime="20201112 12:29:21.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.529" endtime="20201112 12:29:21.820"></status>
</kw>
<msg timestamp="20201112 12:29:21.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028529306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:21.528" endtime="20201112 12:29:21.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028529306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:21.824" endtime="20201112 12:29:21.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.831" endtime="20201112 12:29:21.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.525" endtime="20201112 12:29:21.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.523" endtime="20201112 12:29:21.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:21.858" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:21.835" endtime="20201112 12:29:21.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.862" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:21.861" endtime="20201112 12:29:21.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.864" level="INFO">VALUE: 0.018434806</msg>
<status status="PASS" starttime="20201112 12:29:21.863" endtime="20201112 12:29:21.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.859" endtime="20201112 12:29:21.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.870" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:21.869" endtime="20201112 12:29:21.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:21.873" level="INFO">VALUE: [0.028529306, 0.038530792, 0.048531917, 0.058533083, 0.068534194, 0.078535361, 0.088536514, 0.098537667, 0.108538778, 0.118539931, 0.128541069, 0.138542208, 0.148543333, 0.158544514, 0.168545611, 0.178546778, 0.188547903, 0.198549069, 0.208550181, 0.218551347, 0.228552458, 0.238553625, 0.24855475, 0.258555931, 0.268557042, 0.278558208, 0.288559319, 0.2985605, 0.308561597, 0.318562778, 0.328563903, 0.338565056, 0.348566167, 0.358567347, 0.368568458, 0.378569625, 0.388570764, 0.398571917, 0.408573042, 0.418574208, 0.428575319, 0.438576486, 0.448577597, 0.458578764, 0.468579903, 0.478581056, 0.488582167, 0.498583347, 0.508584472, 0.518585625, 0.528586736, 0.538587903, 0.548589042, 0.558590194, 0.568591319, 0.578592472, 0.588593611, 0.598594778, 0.608595875, 0.618597056, 0.628598181, 0.638599333, 0.648600458, 0.658601625, 0.668602778, 0.678603931, 0.688605028, 0.698606194, 0.708607306, 0.718608472, 0.728609625, 0.738610764, 0.748611889, 0.758613028, 0.768614153, 0.778615306, 0.788616431, 0.798617583, 0.808618736, 0.818619847, 0.828620958, 0.838622153, 0.848623264, 0.858624389, 0.868625514, 0.878626681, 0.888627778, 0.898628944, 0.908630083, 0.918631208, 0.928632333, 0.9386335, 0.948634597, 0.958635806, 0.968636917, 0.978638042, 0.988639167, 0.998640306, 1.008641431, 1.018642639] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:21.872" endtime="20201112 12:29:21.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.866" endtime="20201112 12:29:21.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.876" endtime="20201112 12:29:21.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:21.880" endtime="20201112 12:29:21.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.878" endtime="20201112 12:29:21.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.874" endtime="20201112 12:29:21.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:19.351" endtime="20201112 12:29:21.901"></status>
</kw>
<msg timestamp="20201112 12:29:21.901" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:21.909" endtime="20201112 12:29:24.030"></status>
</kw>
<msg timestamp="20201112 12:29:24.031" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64766429, 'wakeups': [64776523, 64786522, 64796522, 64806522, 64816522...</msg>
<status status="PASS" starttime="20201112 12:29:21.907" endtime="20201112 12:29:24.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64766429, 'wakeups': [64776523, 64786522, 64796522, 64806522, 64816522...</msg>
<status status="PASS" starttime="20201112 12:29:24.033" endtime="20201112 12:29:24.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.039" endtime="20201112 12:29:24.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.905" endtime="20201112 12:29:24.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.903" endtime="20201112 12:29:24.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:24.050" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 64766429, 'wakeups': [64776523, 64786522, 64796522, 64806522, 64816522, 64826522, 64836522, 64846522, 64856522, 64866522, 64876522, 64886522, 64896522, 64906522...</msg>
<status status="PASS" starttime="20201112 12:29:24.046" endtime="20201112 12:29:24.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.057" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:24.056" endtime="20201112 12:29:24.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.059" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:24.059" endtime="20201112 12:29:24.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.052" endtime="20201112 12:29:24.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.064" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:24.063" endtime="20201112 12:29:24.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.066" level="INFO">VALUE: 64766429</msg>
<status status="PASS" starttime="20201112 12:29:24.065" endtime="20201112 12:29:24.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.061" endtime="20201112 12:29:24.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.071" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:24.070" endtime="20201112 12:29:24.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.073" level="INFO">VALUE: [64776523, 64786522, 64796522, 64806522, 64816522, 64826522, 64836522, 64846522, 64856522, 64866522, 64876522, 64886522, 64896522, 64906522, 64916522, 64926522, 64936522, 64946522, 64956522, 64966522, 64976522, 64986522, 64996522, 65006522, 65016522, 65026522, 65036522, 65046522, 65056522, 65066522, 65076522, 65086522, 65096522, 65106522, 65116522, 65126522, 65136522, 65146522, 65156522, 65166522, 65176522, 65186522, 65196522, 65206522, 65216522, 65226522, 65236522, 65246522, 65256522, 65266522, 65276522, 65286522, 65296522, 65306522, 65316522, 65326522, 65336522, 65346522, 65356522, 65366522, 65376522, 65386522, 65396522, 65406522, 65416522, 65426522, 65436522, 65446522, 65456522, 65466522, 65476522, 65486522, 65496522, 65506522, 65516522, 65526522, 65536522, 65546522, 65556522, 65566522, 65576522, 65586522, 65596522, 65606522, 65616522, 65626522, 65636522, 65646522, 65656522, 65666522, 65676522, 65686522, 65696522, 65706522, 65716522, 65726522, 65736522, 65746522, 65756522, 65766522]</msg>
<status status="PASS" starttime="20201112 12:29:24.072" endtime="20201112 12:29:24.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.068" endtime="20201112 12:29:24.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.082" endtime="20201112 12:29:24.373"></status>
</kw>
<msg timestamp="20201112 12:29:24.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018481014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028576097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:24.080" endtime="20201112 12:29:24.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018481014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028576097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:24.377" endtime="20201112 12:29:24.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.385" endtime="20201112 12:29:24.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.077" endtime="20201112 12:29:24.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.075" endtime="20201112 12:29:24.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:24.412" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:24.388" endtime="20201112 12:29:24.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.416" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:29:24.415" endtime="20201112 12:29:24.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.418" level="INFO">VALUE: 0.018481014</msg>
<status status="PASS" starttime="20201112 12:29:24.417" endtime="20201112 12:29:24.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.412" endtime="20201112 12:29:24.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.423" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:24.422" endtime="20201112 12:29:24.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:24.426" level="INFO">VALUE: [0.028576097, 0.038576597, 0.048577722, 0.058578875, 0.068579986, 0.078581153, 0.088582278, 0.098583444, 0.108584556, 0.118585736, 0.128586833, 0.138588, 0.148589125, 0.158590292, 0.168591458, 0.178592583, 0.188593694, 0.198594861, 0.208596042, 0.218597153, 0.228598264, 0.238599444, 0.248600542, 0.258601708, 0.268602833, 0.278604028, 0.288605125, 0.298606278, 0.308607403, 0.318608583, 0.328609681, 0.338610847, 0.348611972, 0.358613181, 0.36861425, 0.378615417, 0.388616542, 0.398617708, 0.408618889, 0.418619986, 0.428621125, 0.438622278, 0.448623444, 0.458624556, 0.468625708, 0.478626861, 0.488627972, 0.498629125, 0.508630236, 0.518631417, 0.528632556, 0.538633667, 0.548634806, 0.558635958, 0.568637056, 0.578638222, 0.588639333, 0.598640486, 0.608641597, 0.618642778, 0.628643875, 0.638645056, 0.648646153, 0.658647375, 0.668648417, 0.678649597, 0.688650694, 0.698651861, 0.708652972, 0.718654139, 0.728655264, 0.738656403, 0.748657514, 0.758658681, 0.768659792, 0.778660972, 0.788662153, 0.798663236, 0.808664347, 0.8186655, 0.828666625, 0.838667806, 0.848668917, 0.858670069, 0.868671181, 0.878672403, 0.888673444, 0.898674653, 0.908675722, 0.918676889, 0.928678014, 0.938679153, 0.948680278, 0.958681431, 0.968682542, 0.978683708, 0.988684819, 0.998685986, 1.008687097, 1.018688264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:24.425" endtime="20201112 12:29:24.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.420" endtime="20201112 12:29:24.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.429" endtime="20201112 12:29:24.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:24.432" endtime="20201112 12:29:24.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.431" endtime="20201112 12:29:24.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.427" endtime="20201112 12:29:24.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:21.902" endtime="20201112 12:29:24.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.799" endtime="20201112 12:29:24.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:16.799" endtime="20201112 12:29:24.453"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:24.456" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:24.466" endtime="20201112 12:29:26.586"></status>
</kw>
<msg timestamp="20201112 12:29:26.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67323140, 'wakeups': [67333250, 67343251, 67353251, 67363251, 67373251...</msg>
<status status="PASS" starttime="20201112 12:29:24.463" endtime="20201112 12:29:26.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.594" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67323140, 'wakeups': [67333250, 67343251, 67353251, 67363251, 67373251...</msg>
<status status="PASS" starttime="20201112 12:29:26.590" endtime="20201112 12:29:26.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.596" endtime="20201112 12:29:26.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.460" endtime="20201112 12:29:26.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.458" endtime="20201112 12:29:26.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:26.607" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 67323140, 'wakeups': [67333250, 67343251, 67353251, 67363251, 67373251, 67383251, 67393251, 67403251, 67413251, 67423251, 67433251, 67443251, 67453251, 67463251...</msg>
<status status="PASS" starttime="20201112 12:29:26.603" endtime="20201112 12:29:26.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.613" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:26.612" endtime="20201112 12:29:26.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.615" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:26.614" endtime="20201112 12:29:26.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.609" endtime="20201112 12:29:26.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.620" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:26.619" endtime="20201112 12:29:26.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.622" level="INFO">VALUE: 67323140</msg>
<status status="PASS" starttime="20201112 12:29:26.621" endtime="20201112 12:29:26.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.617" endtime="20201112 12:29:26.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.627" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:26.626" endtime="20201112 12:29:26.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.629" level="INFO">VALUE: [67333250, 67343251, 67353251, 67363251, 67373251, 67383251, 67393251, 67403251, 67413251, 67423251, 67433251, 67443251, 67453251, 67463251, 67473251, 67483251, 67493251, 67503251, 67513251, 67523251, 67533251, 67543251, 67553251, 67563251, 67573251, 67583251, 67593251, 67603251, 67613251, 67623251, 67633251, 67643251, 67653251, 67663251, 67673251, 67683251, 67693251, 67703251, 67713251, 67723251, 67733251, 67743251, 67753251, 67763251, 67773251, 67783251, 67793251, 67803251, 67813251, 67823251, 67833251, 67843251, 67853251, 67863251, 67873251, 67883251, 67893251, 67903251, 67913251, 67923251, 67933251, 67943251, 67953251, 67963251, 67973251, 67983251, 67993251, 68003251, 68013251, 68023251, 68033251, 68043251, 68053251, 68063251, 68073251, 68083251, 68093251, 68103251, 68113251, 68123251, 68133251, 68143251, 68153251, 68163251, 68173251, 68183251, 68193251, 68203251, 68213251, 68223251, 68233251, 68243251, 68253251, 68263251, 68273251, 68283251, 68293251, 68303251, 68313251, 68323251]</msg>
<status status="PASS" starttime="20201112 12:29:26.628" endtime="20201112 12:29:26.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.624" endtime="20201112 12:29:26.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.637" endtime="20201112 12:29:26.927"></status>
</kw>
<msg timestamp="20201112 12:29:26.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022809486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:26.635" endtime="20201112 12:29:26.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022809486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:26.931" endtime="20201112 12:29:26.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.939" endtime="20201112 12:29:26.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.633" endtime="20201112 12:29:26.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.631" endtime="20201112 12:29:26.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:26.966" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:26.942" endtime="20201112 12:29:26.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.970" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:26.969" endtime="20201112 12:29:26.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.972" level="INFO">VALUE: 0.022809486</msg>
<status status="PASS" starttime="20201112 12:29:26.971" endtime="20201112 12:29:26.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.967" endtime="20201112 12:29:26.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.978" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:26.977" endtime="20201112 12:29:26.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:26.980" level="INFO">VALUE: [0.032920319, 0.042922278, 0.052923403, 0.062924569, 0.072925681, 0.082926861, 0.092927958, 0.102929125, 0.11293025, 0.122931417, 0.132932528, 0.142933694, 0.152934819, 0.162935972, 0.172937097, 0.182938278, 0.192939403, 0.202940556, 0.212941667, 0.222942833, 0.232943958, 0.242945125, 0.252946236, 0.262947403, 0.272948569, 0.282949681, 0.292950819, 0.302951972, 0.312953111, 0.322954264, 0.332955375, 0.342956542, 0.352957694, 0.362958861, 0.372959958, 0.382961111, 0.392962236, 0.402963403, 0.412964514, 0.422965694, 0.432966819, 0.442967972, 0.452969083, 0.46297025, 0.472971389, 0.482972556, 0.492973653, 0.502974833, 0.512975944, 0.522977111, 0.532978236, 0.542979403, 0.552980514, 0.562981681, 0.572982819, 0.582983986, 0.592985083, 0.602986236, 0.612987347, 0.622988514, 0.632989625, 0.642990792, 0.652991917, 0.662993056, 0.672994181, 0.682995333, 0.692996458, 0.702997611, 0.712998722, 0.722999889, 0.733001, 0.743002153, 0.753003264, 0.763004444, 0.773005556, 0.783006694, 0.793007806, 0.803008986, 0.813010097, 0.82301125, 0.833012375, 0.843013528, 0.853014694, 0.863015806, 0.873016931, 0.883018139, 0.893019181, 0.903020361, 0.913021458, 0.923022639, 0.933023764, 0.943024903, 0.953026014, 0.963027181, 0.973028292, 0.983029444, 0.993030569, 1.003031722, 1.013032833, 1.023034] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:26.979" endtime="20201112 12:29:26.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.974" endtime="20201112 12:29:26.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:26.983" endtime="20201112 12:29:26.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:26.986" endtime="20201112 12:29:27.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.985" endtime="20201112 12:29:27.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:26.981" endtime="20201112 12:29:27.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.457" endtime="20201112 12:29:27.007"></status>
</kw>
<msg timestamp="20201112 12:29:27.008" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:27.016" endtime="20201112 12:29:29.136"></status>
</kw>
<msg timestamp="20201112 12:29:29.138" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69873338, 'wakeups': [69883447, 69893449, 69903449, 69913449, 69923449...</msg>
<status status="PASS" starttime="20201112 12:29:27.014" endtime="20201112 12:29:29.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.143" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69873338, 'wakeups': [69883447, 69893449, 69903449, 69913449, 69923449...</msg>
<status status="PASS" starttime="20201112 12:29:29.140" endtime="20201112 12:29:29.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.146" endtime="20201112 12:29:29.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.012" endtime="20201112 12:29:29.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.010" endtime="20201112 12:29:29.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:29.157" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 69873338, 'wakeups': [69883447, 69893449, 69903449, 69913449, 69923449, 69933449, 69943449, 69953449, 69963449, 69973449, 69983449, 69993449, 70003449, 70013449...</msg>
<status status="PASS" starttime="20201112 12:29:29.153" endtime="20201112 12:29:29.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.168" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:29.167" endtime="20201112 12:29:29.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.170" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:29.169" endtime="20201112 12:29:29.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.163" endtime="20201112 12:29:29.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.175" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:29.174" endtime="20201112 12:29:29.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.178" level="INFO">VALUE: 69873338</msg>
<status status="PASS" starttime="20201112 12:29:29.177" endtime="20201112 12:29:29.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.171" endtime="20201112 12:29:29.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.183" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:29.182" endtime="20201112 12:29:29.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.185" level="INFO">VALUE: [69883447, 69893449, 69903449, 69913449, 69923449, 69933449, 69943449, 69953449, 69963449, 69973449, 69983449, 69993449, 70003449, 70013449, 70023449, 70033449, 70043449, 70053449, 70063449, 70073449, 70083449, 70093449, 70103449, 70113449, 70123449, 70133449, 70143449, 70153449, 70163449, 70173449, 70183449, 70193449, 70203449, 70213449, 70223449, 70233449, 70243449, 70253449, 70263449, 70273449, 70283449, 70293449, 70303449, 70313449, 70323449, 70333449, 70343449, 70353449, 70363449, 70373449, 70383449, 70393449, 70403449, 70413449, 70423449, 70433449, 70443449, 70453449, 70463449, 70473449, 70483449, 70493449, 70503449, 70513449, 70523449, 70533449, 70543449, 70553449, 70563449, 70573449, 70583449, 70593449, 70603449, 70613449, 70623449, 70633449, 70643449, 70653449, 70663449, 70673449, 70683449, 70693449, 70703449, 70713449, 70723449, 70733449, 70743449, 70753449, 70763449, 70773449, 70783449, 70793449, 70803449, 70813449, 70823449, 70833449, 70843449, 70853449, 70863449, 70873449]</msg>
<status status="PASS" starttime="20201112 12:29:29.184" endtime="20201112 12:29:29.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.180" endtime="20201112 12:29:29.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.193" endtime="20201112 12:29:29.484"></status>
</kw>
<msg timestamp="20201112 12:29:29.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018761097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:29.191" endtime="20201112 12:29:29.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018761097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028871819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:29.488" endtime="20201112 12:29:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.496" endtime="20201112 12:29:29.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.189" endtime="20201112 12:29:29.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.187" endtime="20201112 12:29:29.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:29.523" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:29.499" endtime="20201112 12:29:29.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.527" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:29.526" endtime="20201112 12:29:29.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.529" level="INFO">VALUE: 0.018761097</msg>
<status status="PASS" starttime="20201112 12:29:29.529" endtime="20201112 12:29:29.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.524" endtime="20201112 12:29:29.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.535" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:29.534" endtime="20201112 12:29:29.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:29.538" level="INFO">VALUE: [0.028871819, 0.038874778, 0.048875889, 0.058877056, 0.068878208, 0.078879333, 0.088880472, 0.098881625, 0.108882736, 0.118883917, 0.128885042, 0.138886194, 0.148887347, 0.1588885, 0.168889611, 0.178890764, 0.188891875, 0.198893056, 0.208894153, 0.218895333, 0.228896444, 0.238897611, 0.248898722, 0.258899958, 0.268901014, 0.278902181, 0.288903306, 0.298904486, 0.308905583, 0.318906764, 0.328907917, 0.338909056, 0.348910167, 0.358911319, 0.368912458, 0.378913625, 0.388914722, 0.398915889, 0.408917014, 0.418918181, 0.428919292, 0.438920458, 0.448921597, 0.45892275, 0.468923861, 0.478925028, 0.488926153, 0.498927389, 0.508928458, 0.518929611, 0.528930736, 0.538931931, 0.548933028, 0.558934181, 0.568935306, 0.578936458, 0.588937583, 0.598938764, 0.608939861, 0.618941028, 0.628942236, 0.638943333, 0.6489445, 0.658945639, 0.668946722, 0.678947889, 0.688949028, 0.698950194, 0.708951292, 0.718952458, 0.728953597, 0.738954778, 0.748955861, 0.758957028, 0.768958153, 0.778959361, 0.788960458, 0.798961667, 0.808962722, 0.818963889, 0.828965028, 0.838966181, 0.848967306, 0.858968458, 0.868969583, 0.878970736, 0.888971861, 0.898973014, 0.908974139, 0.918975347, 0.928976389, 0.938977556, 0.948978694, 0.958979833, 0.968980944, 0.978982111, 0.988983236, 0.998984375, 1.0089855, 1.018986694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:29.537" endtime="20201112 12:29:29.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.531" endtime="20201112 12:29:29.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.541" endtime="20201112 12:29:29.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:29.545" endtime="20201112 12:29:29.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.543" endtime="20201112 12:29:29.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.540" endtime="20201112 12:29:29.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:27.008" endtime="20201112 12:29:29.566"></status>
</kw>
<msg timestamp="20201112 12:29:29.566" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:29.574" endtime="20201112 12:29:31.694"></status>
</kw>
<msg timestamp="20201112 12:29:31.695" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72431463, 'wakeups': [72441573, 72451574, 72461574, 72471574, 72481574...</msg>
<status status="PASS" starttime="20201112 12:29:29.573" endtime="20201112 12:29:31.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.701" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72431463, 'wakeups': [72441573, 72451574, 72461574, 72471574, 72481574...</msg>
<status status="PASS" starttime="20201112 12:29:31.697" endtime="20201112 12:29:31.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:31.703" endtime="20201112 12:29:31.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.570" endtime="20201112 12:29:31.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.568" endtime="20201112 12:29:31.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:31.714" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 72431463, 'wakeups': [72441573, 72451574, 72461574, 72471574, 72481574, 72491574, 72501574, 72511574, 72521574, 72531574, 72541574, 72551574, 72561574, 72571574...</msg>
<status status="PASS" starttime="20201112 12:29:31.710" endtime="20201112 12:29:31.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.722" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:31.721" endtime="20201112 12:29:31.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:31.723" endtime="20201112 12:29:31.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.716" endtime="20201112 12:29:31.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.729" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:31.728" endtime="20201112 12:29:31.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.731" level="INFO">VALUE: 72431463</msg>
<status status="PASS" starttime="20201112 12:29:31.730" endtime="20201112 12:29:31.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.725" endtime="20201112 12:29:31.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.736" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:31.735" endtime="20201112 12:29:31.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:31.738" level="INFO">VALUE: [72441573, 72451574, 72461574, 72471574, 72481574, 72491574, 72501574, 72511574, 72521574, 72531574, 72541574, 72551574, 72561574, 72571574, 72581574, 72591574, 72601574, 72611574, 72621574, 72631574, 72641574, 72651574, 72661574, 72671574, 72681574, 72691574, 72701574, 72711574, 72721574, 72731574, 72741574, 72751574, 72761574, 72771574, 72781574, 72791574, 72801574, 72811574, 72821574, 72831574, 72841574, 72851574, 72861574, 72871574, 72881574, 72891574, 72901574, 72911574, 72921574, 72931574, 72941574, 72951574, 72961574, 72971574, 72981574, 72991574, 73001574, 73011574, 73021574, 73031574, 73041574, 73051574, 73061574, 73071574, 73081574, 73091574, 73101574, 73111574, 73121574, 73131574, 73141574, 73151574, 73161574, 73171574, 73181574, 73191574, 73201574, 73211574, 73221574, 73231574, 73241574, 73251574, 73261574, 73271574, 73281574, 73291574, 73301574, 73311574, 73321574, 73331574, 73341574, 73351574, 73361574, 73371574, 73381574, 73391574, 73401574, 73411574, 73421574, 73431574]</msg>
<status status="PASS" starttime="20201112 12:29:31.737" endtime="20201112 12:29:31.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.732" endtime="20201112 12:29:31.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:31.746" endtime="20201112 12:29:32.038"></status>
</kw>
<msg timestamp="20201112 12:29:32.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:31.744" endtime="20201112 12:29:32.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028602875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:32.042" endtime="20201112 12:29:32.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.049" endtime="20201112 12:29:32.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.742" endtime="20201112 12:29:32.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:31.740" endtime="20201112 12:29:32.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:32.075" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:32.053" endtime="20201112 12:29:32.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.080" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:29:32.079" endtime="20201112 12:29:32.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.082" level="INFO">VALUE: 0.018491847</msg>
<status status="PASS" starttime="20201112 12:29:32.081" endtime="20201112 12:29:32.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.076" endtime="20201112 12:29:32.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.087" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:32.086" endtime="20201112 12:29:32.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:32.089" level="INFO">VALUE: [0.028602875, 0.038604833, 0.048605944, 0.058607111, 0.068608292, 0.078609403, 0.088610514, 0.098611681, 0.108612806, 0.118613958, 0.128615083, 0.13861625, 0.148617361, 0.158618542, 0.168619667, 0.178620819, 0.188621944, 0.198623097, 0.208624222, 0.218625403, 0.228626514, 0.238627667, 0.248628792, 0.258629958, 0.268631097, 0.278632236, 0.288633361, 0.298634528, 0.308635708, 0.318636806, 0.328637931, 0.338639097, 0.348640222, 0.358641375, 0.3686425, 0.378643736, 0.388644847, 0.398645944, 0.408647097, 0.418648236, 0.428649347, 0.438650514, 0.448651708, 0.458652806, 0.468653917, 0.478655083, 0.488656222, 0.498657375, 0.508658556, 0.518659681, 0.528660778, 0.538661944, 0.548663069, 0.55866425, 0.568665361, 0.578666514, 0.588667653, 0.598668806, 0.608669917, 0.618671153, 0.628672208, 0.638673403, 0.648674486, 0.658675667, 0.668676819, 0.678677958, 0.688679069, 0.698680222, 0.708681361, 0.718682556, 0.728683639, 0.738684819, 0.748685917, 0.758687083, 0.768688208, 0.778689403, 0.788690486, 0.798691667, 0.808692778, 0.818693944, 0.828695125, 0.838696236, 0.848697361, 0.858698514, 0.868699639, 0.878700806, 0.888701931, 0.898703097, 0.908704222, 0.918705389, 0.9287065, 0.938707653, 0.948708778, 0.958709944, 0.968711111, 0.978712208, 0.988713306, 0.998714472, 1.008715583, 1.01871675] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:32.088" endtime="20201112 12:29:32.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.083" endtime="20201112 12:29:32.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.092" endtime="20201112 12:29:32.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:32.096" endtime="20201112 12:29:32.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.094" endtime="20201112 12:29:32.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.091" endtime="20201112 12:29:32.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:29.567" endtime="20201112 12:29:32.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.454" endtime="20201112 12:29:32.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:24.454" endtime="20201112 12:29:32.117"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:29:32.120" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:32.129" endtime="20201112 12:29:34.252"></status>
</kw>
<msg timestamp="20201112 12:29:34.253" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74986771, 'wakeups': [74996898, 75006898, 75016898, 75026898, 750368...</msg>
<status status="PASS" starttime="20201112 12:29:32.128" endtime="20201112 12:29:34.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74986771, 'wakeups': [74996898, 75006898, 75016898, 75026898, 750368...</msg>
<status status="PASS" starttime="20201112 12:29:34.255" endtime="20201112 12:29:34.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.261" endtime="20201112 12:29:34.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.124" endtime="20201112 12:29:34.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.122" endtime="20201112 12:29:34.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:34.272" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 74986771, 'wakeups': [74996898, 75006898, 75016898, 75026898, 75036898, 75046898, 75056898, 75066898, 75076898, 75086898, 75096898, 75106898, 75116898, 75126898...</msg>
<status status="PASS" starttime="20201112 12:29:34.268" endtime="20201112 12:29:34.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.278" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:34.277" endtime="20201112 12:29:34.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.280" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:34.279" endtime="20201112 12:29:34.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.274" endtime="20201112 12:29:34.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.285" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:34.284" endtime="20201112 12:29:34.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.287" level="INFO">VALUE: 74986771</msg>
<status status="PASS" starttime="20201112 12:29:34.286" endtime="20201112 12:29:34.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.282" endtime="20201112 12:29:34.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.292" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:34.291" endtime="20201112 12:29:34.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.295" level="INFO">VALUE: [74996898, 75006898, 75016898, 75026898, 75036898, 75046898, 75056898, 75066898, 75076898, 75086898, 75096898, 75106898, 75116898, 75126898, 75136898, 75146898, 75156898, 75166898, 75176898, 75186898, 75196898, 75206898, 75216898, 75226898, 75236898, 75246898, 75256898, 75266898, 75276898, 75286898, 75296898, 75306898, 75316898, 75326898, 75336898, 75346898, 75356898, 75366898, 75376898, 75386898, 75396898, 75406898, 75416898, 75426898, 75436898, 75446898, 75456898, 75466898, 75476898, 75486898, 75496898, 75506898, 75516898, 75526898, 75536898, 75546898, 75556898, 75566898, 75576898, 75586898, 75596898, 75606898, 75616898, 75626898, 75636898, 75646898, 75656898, 75666898, 75676898, 75686898, 75696898, 75706898, 75716898, 75726898, 75736898, 75746898, 75756898, 75766898, 75776898, 75786898, 75796898, 75806898, 75816898, 75826898, 75836898, 75846898, 75856898, 75866898, 75876898, 75886898, 75896898, 75906898, 75916898, 75926898, 75936898, 75946898, 75956898, 75966898, 75976898, 75986898]</msg>
<status status="PASS" starttime="20201112 12:29:34.293" endtime="20201112 12:29:34.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.289" endtime="20201112 12:29:34.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.303" endtime="20201112 12:29:34.593"></status>
</kw>
<msg timestamp="20201112 12:29:34.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03294875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:34.300" endtime="20201112 12:29:34.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03294875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:29:34.597" endtime="20201112 12:29:34.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.605" endtime="20201112 12:29:34.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.298" endtime="20201112 12:29:34.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.296" endtime="20201112 12:29:34.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:34.633" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:34.608" endtime="20201112 12:29:34.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.637" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:34.636" endtime="20201112 12:29:34.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.639" level="INFO">VALUE: 0.022820889</msg>
<status status="PASS" starttime="20201112 12:29:34.638" endtime="20201112 12:29:34.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.634" endtime="20201112 12:29:34.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.645" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:34.644" endtime="20201112 12:29:34.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:34.647" level="INFO">VALUE: [0.03294875, 0.042949931, 0.052951069, 0.062952181, 0.072953292, 0.082954472, 0.092955597, 0.102956778, 0.112957861, 0.122959097, 0.132960139, 0.142961306, 0.152962444, 0.162963597, 0.172964722, 0.182965917, 0.192967042, 0.202968167, 0.212969278, 0.222970444, 0.232971653, 0.24297275, 0.252973847, 0.262975014, 0.272976153, 0.282977306, 0.292978417, 0.302979583, 0.312980708, 0.322981875, 0.332983014, 0.342984167, 0.352985278, 0.362986444, 0.372987556, 0.382988722, 0.392989847, 0.402991042, 0.412992125, 0.422993292, 0.432994417, 0.442995611, 0.45299675, 0.462997861, 0.472998972, 0.483000139, 0.49300125, 0.503002403, 0.513003542, 0.523004694, 0.533005847, 0.543006958, 0.553008097, 0.563009222, 0.573010403, 0.583011514, 0.593012611, 0.603013792, 0.613014903, 0.623016056, 0.633017167, 0.643018333, 0.653019444, 0.663020611, 0.673021708, 0.683022861, 0.693023972, 0.703025139, 0.713026264, 0.723027417, 0.733028542, 0.743029708, 0.753030819, 0.763032028, 0.773033069, 0.783034264, 0.793035347, 0.803036528, 0.813037625, 0.823038792, 0.833039917, 0.843041069, 0.853042181, 0.863043361, 0.873044444, 0.883045611, 0.893046722, 0.903047903, 0.913049, 0.923050167, 0.933051278, 0.943052444, 0.953053556, 0.963054722, 0.973055819, 0.983057, 0.993058097, 1.003059264, 1.013060458, 1.023061556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:34.646" endtime="20201112 12:29:34.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.641" endtime="20201112 12:29:34.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.650" endtime="20201112 12:29:34.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:34.653" endtime="20201112 12:29:34.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.652" endtime="20201112 12:29:34.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.648" endtime="20201112 12:29:34.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.121" endtime="20201112 12:29:34.674"></status>
</kw>
<msg timestamp="20201112 12:29:34.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:34.683" endtime="20201112 12:29:36.803"></status>
</kw>
<msg timestamp="20201112 12:29:36.805" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77540208, 'wakeups': [77550335, 77560335, 77570335, 77580335, 775903...</msg>
<status status="PASS" starttime="20201112 12:29:34.681" endtime="20201112 12:29:36.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.811" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77540208, 'wakeups': [77550335, 77560335, 77570335, 77580335, 775903...</msg>
<status status="PASS" starttime="20201112 12:29:36.807" endtime="20201112 12:29:36.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.814" endtime="20201112 12:29:36.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.678" endtime="20201112 12:29:36.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.676" endtime="20201112 12:29:36.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:36.825" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 77540208, 'wakeups': [77550335, 77560335, 77570335, 77580335, 77590335, 77600335, 77610335, 77620335, 77630335, 77640335, 77650335, 77660335, 77670335, 77680335...</msg>
<status status="PASS" starttime="20201112 12:29:36.821" endtime="20201112 12:29:36.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.832" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:36.831" endtime="20201112 12:29:36.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.834" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:36.833" endtime="20201112 12:29:36.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.827" endtime="20201112 12:29:36.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.840" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:36.839" endtime="20201112 12:29:36.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.842" level="INFO">VALUE: 77540208</msg>
<status status="PASS" starttime="20201112 12:29:36.841" endtime="20201112 12:29:36.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.835" endtime="20201112 12:29:36.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.847" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:36.846" endtime="20201112 12:29:36.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:36.849" level="INFO">VALUE: [77550335, 77560335, 77570335, 77580335, 77590335, 77600335, 77610335, 77620335, 77630335, 77640335, 77650335, 77660335, 77670335, 77680335, 77690335, 77700335, 77710335, 77720335, 77730335, 77740335, 77750335, 77760335, 77770335, 77780335, 77790335, 77800335, 77810335, 77820335, 77830335, 77840335, 77850335, 77860335, 77870335, 77880335, 77890335, 77900335, 77910335, 77920335, 77930335, 77940335, 77950335, 77960335, 77970335, 77980335, 77990335, 78000335, 78010335, 78020335, 78030335, 78040335, 78050335, 78060335, 78070335, 78080335, 78090335, 78100335, 78110335, 78120335, 78130335, 78140335, 78150335, 78160335, 78170335, 78180335, 78190335, 78200335, 78210335, 78220335, 78230335, 78240335, 78250335, 78260335, 78270335, 78280335, 78290335, 78300335, 78310335, 78320335, 78330335, 78340335, 78350335, 78360335, 78370335, 78380335, 78390335, 78400335, 78410335, 78420335, 78430335, 78440335, 78450335, 78460335, 78470335, 78480335, 78490335, 78500335, 78510335, 78520335, 78530335, 78540335]</msg>
<status status="PASS" starttime="20201112 12:29:36.848" endtime="20201112 12:29:36.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.843" endtime="20201112 12:29:36.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:36.856" endtime="20201112 12:29:37.148"></status>
</kw>
<msg timestamp="20201112 12:29:37.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029088792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:36.855" endtime="20201112 12:29:37.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029088792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:37.152" endtime="20201112 12:29:37.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:37.160" endtime="20201112 12:29:37.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.852" endtime="20201112 12:29:37.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:36.851" endtime="20201112 12:29:37.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:37.186" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:37.163" endtime="20201112 12:29:37.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.191" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:37.190" endtime="20201112 12:29:37.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.193" level="INFO">VALUE: 0.018961042</msg>
<status status="PASS" starttime="20201112 12:29:37.192" endtime="20201112 12:29:37.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.187" endtime="20201112 12:29:37.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.199" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:37.197" endtime="20201112 12:29:37.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:37.201" level="INFO">VALUE: [0.029088792, 0.039089944, 0.049091069, 0.059092236, 0.069093375, 0.0790945, 0.089095611, 0.099096792, 0.109097917, 0.119099083, 0.129100194, 0.139101347, 0.149102514, 0.159103653, 0.16910475, 0.179105944, 0.189107028, 0.199108194, 0.209109347, 0.219110486, 0.229111597, 0.239112764, 0.249113889, 0.259115069, 0.269116167, 0.279117347, 0.289118486, 0.299119639, 0.30912075, 0.319121903, 0.329123042, 0.339124194, 0.349125375, 0.359126472, 0.369127597, 0.379128764, 0.389129889, 0.399131056, 0.409132167, 0.419133347, 0.429134472, 0.439135625, 0.449136736, 0.459137903, 0.469139042, 0.479140208, 0.489141306, 0.499142472, 0.509143597, 0.519144764, 0.529145889, 0.539147056, 0.549148167, 0.559149333, 0.569150444, 0.579151625, 0.589152736, 0.599153917, 0.609155014, 0.619156194, 0.629157292, 0.639158444, 0.649159556, 0.659160736, 0.669161861, 0.679163028, 0.689164125, 0.699165278, 0.709166375, 0.719167556, 0.729168653, 0.739169806, 0.749170917, 0.759172097, 0.769173194, 0.779174389, 0.789175472, 0.799176639, 0.809177736, 0.819178903, 0.829180014, 0.839181194, 0.849182306, 0.859183458, 0.869184569, 0.879185764, 0.889186847, 0.899188, 0.909189125, 0.919190264, 0.929191403, 0.939192569, 0.949193653, 0.959194833, 0.969195931, 0.979197097, 0.98919825, 0.999199361, 1.0092005, 1.019201653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:37.200" endtime="20201112 12:29:37.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.194" endtime="20201112 12:29:37.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:37.204" endtime="20201112 12:29:37.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:37.208" endtime="20201112 12:29:37.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.206" endtime="20201112 12:29:37.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.203" endtime="20201112 12:29:37.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:34.675" endtime="20201112 12:29:37.229"></status>
</kw>
<msg timestamp="20201112 12:29:37.229" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:37.237" endtime="20201112 12:29:39.357"></status>
</kw>
<msg timestamp="20201112 12:29:39.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80094571, 'wakeups': [80104698, 80114698, 80124698, 80134698, 801446...</msg>
<status status="PASS" starttime="20201112 12:29:37.236" endtime="20201112 12:29:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80094571, 'wakeups': [80104698, 80114698, 80124698, 80134698, 801446...</msg>
<status status="PASS" starttime="20201112 12:29:39.360" endtime="20201112 12:29:39.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.366" endtime="20201112 12:29:39.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.233" endtime="20201112 12:29:39.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.231" endtime="20201112 12:29:39.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:39.377" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 80094571, 'wakeups': [80104698, 80114698, 80124698, 80134698, 80144698, 80154698, 80164698, 80174698, 80184698, 80194698, 80204698, 80214698, 80224698, 80234698...</msg>
<status status="PASS" starttime="20201112 12:29:39.373" endtime="20201112 12:29:39.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.386" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:29:39.384" endtime="20201112 12:29:39.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.388" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:29:39.387" endtime="20201112 12:29:39.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.379" endtime="20201112 12:29:39.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.398" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:39.397" endtime="20201112 12:29:39.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.400" level="INFO">VALUE: 80094571</msg>
<status status="PASS" starttime="20201112 12:29:39.399" endtime="20201112 12:29:39.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.394" endtime="20201112 12:29:39.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.405" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:39.404" endtime="20201112 12:29:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.407" level="INFO">VALUE: [80104698, 80114698, 80124698, 80134698, 80144698, 80154698, 80164698, 80174698, 80184698, 80194698, 80204698, 80214698, 80224698, 80234698, 80244698, 80254698, 80264698, 80274698, 80284698, 80294698, 80304698, 80314698, 80324698, 80334698, 80344698, 80354698, 80364698, 80374698, 80384698, 80394698, 80404698, 80414698, 80424698, 80434698, 80444698, 80454698, 80464698, 80474698, 80484698, 80494698, 80504698, 80514698, 80524698, 80534698, 80544698, 80554698, 80564698, 80574698, 80584698, 80594698, 80604698, 80614698, 80624698, 80634698, 80644698, 80654698, 80664698, 80674698, 80684698, 80694698, 80704698, 80714698, 80724698, 80734698, 80744698, 80754698, 80764698, 80774698, 80784698, 80794698, 80804698, 80814698, 80824698, 80834698, 80844698, 80854698, 80864698, 80874698, 80884698, 80894698, 80904698, 80914698, 80924698, 80934698, 80944698, 80954698, 80964698, 80974698, 80984698, 80994698, 81004698, 81014698, 81024698, 81034698, 81044698, 81054698, 81064698, 81074698, 81084698, 81094698]</msg>
<status status="PASS" starttime="20201112 12:29:39.406" endtime="20201112 12:29:39.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.401" endtime="20201112 12:29:39.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.414" endtime="20201112 12:29:39.707"></status>
</kw>
<msg timestamp="20201112 12:29:39.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028749153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:39.413" endtime="20201112 12:29:39.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028749153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:29:39.711" endtime="20201112 12:29:39.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.719" endtime="20201112 12:29:39.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.410" endtime="20201112 12:29:39.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.409" endtime="20201112 12:29:39.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:29:39.745" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:29:39.723" endtime="20201112 12:29:39.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.750" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:29:39.749" endtime="20201112 12:29:39.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.752" level="INFO">VALUE: 0.018621306</msg>
<status status="PASS" starttime="20201112 12:29:39.751" endtime="20201112 12:29:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.746" endtime="20201112 12:29:39.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.757" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:29:39.756" endtime="20201112 12:29:39.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:29:39.759" level="INFO">VALUE: [0.028749153, 0.038750319, 0.048751417, 0.058752583, 0.068753694, 0.078754861, 0.088755972, 0.098757139, 0.108758264, 0.118759444, 0.128760542, 0.138761722, 0.148762819, 0.158763986, 0.168765111, 0.178766278, 0.188767431, 0.198768569, 0.208769681, 0.218770847, 0.228771972, 0.238773125, 0.24877425, 0.258775431, 0.268776528, 0.278777694, 0.288778833, 0.29878, 0.308781111, 0.318782264, 0.328783375, 0.338784556, 0.348785681, 0.358786833, 0.368787972, 0.378789125, 0.38879025, 0.398791403, 0.408792528, 0.418793694, 0.428794806, 0.438796, 0.448797111, 0.458798292, 0.468799375, 0.478800542, 0.488801681, 0.498802833, 0.508803958, 0.518805111, 0.52880625, 0.538807417, 0.548808514, 0.558809694, 0.568810833, 0.578811972, 0.588813097, 0.59881425, 0.608815375, 0.618816542, 0.628817653, 0.638818819, 0.648819958, 0.658821111, 0.668822222, 0.678823389, 0.688824514, 0.698825694, 0.708826875, 0.718827972, 0.728829083, 0.73883025, 0.748831403, 0.758832569, 0.768833681, 0.778834847, 0.788835958, 0.798837125, 0.808838222, 0.818839389, 0.828840528, 0.838841681, 0.848842847, 0.858843972, 0.868845097, 0.87884625, 0.888847361, 0.898848528, 0.908849653, 0.918850819, 0.928851944, 0.938853097, 0.948854222, 0.958855389, 0.9688565, 0.978857681, 0.988858792, 0.998859958, 1.008861083, 1.018862236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:29:39.758" endtime="20201112 12:29:39.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.753" endtime="20201112 12:29:39.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:29:39.763" endtime="20201112 12:29:39.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:29:39.767" endtime="20201112 12:29:39.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.765" endtime="20201112 12:29:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:39.761" endtime="20201112 12:29:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:37.230" endtime="20201112 12:29:39.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.119" endtime="20201112 12:29:39.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:29:32.118" endtime="20201112 12:29:39.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:28:23.208" endtime="20201112 12:29:39.788"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201112 12:28:20.084" endtime="20201112 12:29:39.789" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:28:15.576" endtime="20201112 12:29:39.792"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:25:45.152" endtime="20201112 12:29:39.811"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_arduino-due</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
